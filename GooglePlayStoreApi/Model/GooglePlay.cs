// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GooglePlay.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GooglePlayStore {

  /// <summary>Holder for reflection information generated from GooglePlay.proto</summary>
  public static partial class GooglePlayReflection {

    #region Descriptor
    /// <summary>File descriptor for GooglePlay.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GooglePlayReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBHb29nbGVQbGF5LnByb3RvEg9Hb29nbGVQbGF5U3RvcmUiuAUKFkFuZHJv",
            "aWRBcHBEZWxpdmVyeURhdGESFAoMZG93bmxvYWRTaXplGAEgASgDEgwKBHNo",
            "YTEYAiABKAkSEwoLZG93bmxvYWRVcmwYAyABKAkSOAoOYWRkaXRpb25hbEZp",
            "bGUYBCADKAsyIC5Hb29nbGVQbGF5U3RvcmUuQXBwRmlsZU1ldGFkYXRhEjcK",
            "EmRvd25sb2FkQXV0aENvb2tpZRgFIAMoCzIbLkdvb2dsZVBsYXlTdG9yZS5I",
            "dHRwQ29va2llEhUKDWZvcndhcmRMb2NrZWQYBiABKAgSFQoNcmVmdW5kVGlt",
            "ZW91dBgHIAEoAxIdCg9zZXJ2ZXJJbml0aWF0ZWQYCCABKAg6BHRydWUSJQod",
            "cG9zdEluc3RhbGxSZWZ1bmRXaW5kb3dNaWxsaXMYCSABKAMSHAoUaW1tZWRp",
            "YXRlU3RhcnROZWVkZWQYCiABKAgSNwoJcGF0Y2hEYXRhGAsgASgLMiQuR29v",
            "Z2xlUGxheVN0b3JlLkFuZHJvaWRBcHBQYXRjaERhdGESOwoQZW5jcnlwdGlv",
            "blBhcmFtcxgMIAEoCzIhLkdvb2dsZVBsYXlTdG9yZS5FbmNyeXB0aW9uUGFy",
            "YW1zEh0KFWNvbXByZXNzZWREb3dubG9hZFVybBgNIAEoCRIWCg5jb21wcmVz",
            "c2VkU2l6ZRgOIAEoAxI9ChFzcGxpdERlbGl2ZXJ5RGF0YRgPIAMoCzIiLkdv",
            "b2dsZVBsYXlTdG9yZS5TcGxpdERlbGl2ZXJ5RGF0YRIXCg9pbnN0YWxsTG9j",
            "YXRpb24YECABKAUSDAoEdHlwZRgRIAEoAxI9ChFjb21wcmVzc2VkQXBwRGF0",
            "YRgSIAEoCzIiLkdvb2dsZVBsYXlTdG9yZS5Db21wcmVzc2VkQXBwRGF0YRIO",
            "CgZzaGEyNTYYEyABKAkimQIKEVNwbGl0RGVsaXZlcnlEYXRhEgwKBG5hbWUY",
            "ASABKAkSFAoMZG93bmxvYWRTaXplGAIgASgDEhYKDmNvbXByZXNzZWRTaXpl",
            "GAMgASgDEgwKBHNoYTEYBCABKAkSEwoLZG93bmxvYWRVcmwYBSABKAkSHQoV",
            "Y29tcHJlc3NlZERvd25sb2FkVXJsGAYgASgJEjcKCXBhdGNoRGF0YRgHIAEo",
            "CzIkLkdvb2dsZVBsYXlTdG9yZS5BbmRyb2lkQXBwUGF0Y2hEYXRhEj0KEWNv",
            "bXByZXNzZWRBcHBEYXRhGAggASgLMiIuR29vZ2xlUGxheVN0b3JlLkNvbXBy",
            "ZXNzZWRBcHBEYXRhEg4KBnNoYTI1NhgJIAEoCSKDAQoTQW5kcm9pZEFwcFBh",
            "dGNoRGF0YRIXCg9iYXNlVmVyc2lvbkNvZGUYASABKAUSEAoIYmFzZVNoYTEY",
            "AiABKAkSEwoLZG93bmxvYWRVcmwYAyABKAkSFgoLcGF0Y2hGb3JtYXQYBCAB",
            "KAU6ATESFAoMbWF4UGF0Y2hTaXplGAUgASgDIkQKEUNvbXByZXNzZWRBcHBE",
            "YXRhEgwKBHR5cGUYASABKAMSDAoEc2l6ZRgCIAEoAxITCgtkb3dubG9hZFVy",
            "bBgDIAEoCSLZAQoPQXBwRmlsZU1ldGFkYXRhEhAKCGZpbGVUeXBlGAEgASgF",
            "EhMKC3ZlcnNpb25Db2RlGAIgASgFEgwKBHNpemUYAyABKAMSEwoLZG93bmxv",
            "YWRVcmwYBCABKAkSNwoJcGF0Y2hEYXRhGAUgASgLMiQuR29vZ2xlUGxheVN0",
            "b3JlLkFuZHJvaWRBcHBQYXRjaERhdGESFgoOY29tcHJlc3NlZFNpemUYBiAB",
            "KAMSHQoVY29tcHJlc3NlZERvd25sb2FkVXJsGAcgASgJEgwKBHNoYTEYCCAB",
            "KAkiSwoQRW5jcnlwdGlvblBhcmFtcxIPCgd2ZXJzaW9uGAEgASgFEhUKDWVu",
            "Y3J5cHRpb25LZXkYAiABKAkSDwoHaE1hY0tleRgDIAEoCSIpCgpIdHRwQ29v",
            "a2llEgwKBG5hbWUYASABKAkSDQoFdmFsdWUYAiABKAkitwIKB0FkZHJlc3MS",
            "DAoEbmFtZRgBIAEoCRIUCgxhZGRyZXNzTGluZTEYAiABKAkSFAoMYWRkcmVz",
            "c0xpbmUyGAMgASgJEgwKBGNpdHkYBCABKAkSDQoFc3RhdGUYBSABKAkSEgoK",
            "cG9zdGFsQ29kZRgGIAEoCRIVCg1wb3N0YWxDb3VudHJ5GAcgASgJEhkKEWRl",
            "cGVuZGVudExvY2FsaXR5GAggASgJEhMKC3NvcnRpbmdDb2RlGAkgASgJEhQK",
            "DGxhbmd1YWdlQ29kZRgKIAEoCRITCgtwaG9uZU51bWJlchgLIAEoCRIbChNk",
            "ZXByZWNhdGVkSXNSZWR1Y2VkGAwgASgIEhEKCWZpcnN0TmFtZRgNIAEoCRIQ",
            "CghsYXN0TmFtZRgOIAEoCRINCgVlbWFpbBgPIAEoCSJrCgpCcm93c2VMaW5r",
            "EgwKBG5hbWUYASABKAkSDwoHZGF0YVVybBgDIAEoCRIYChBzZXJ2ZXJMb2dz",
            "Q29va2llGAQgASgMEiQKBGljb24YBSABKAsyFi5Hb29nbGVQbGF5U3RvcmUu",
            "SW1hZ2UisAMKDkJyb3dzZVJlc3BvbnNlEhMKC2NvbnRlbnRzVXJsGAEgASgJ",
            "EhAKCHByb21vVXJsGAIgASgJEi0KCGNhdGVnb3J5GAMgAygLMhsuR29vZ2xl",
            "UGxheVN0b3JlLkJyb3dzZUxpbmsSLwoKYnJlYWRjcnVtYhgEIAMoCzIbLkdv",
            "b2dsZVBsYXlTdG9yZS5Ccm93c2VMaW5rEi0KCXF1aWNrTGluaxgFIAMoCzIa",
            "Lkdvb2dsZVBsYXlTdG9yZS5RdWlja0xpbmsSGAoQc2VydmVyTG9nc0Nvb2tp",
            "ZRgGIAEoDBINCgV0aXRsZRgHIAEoCRIRCgliYWNrZW5kSWQYCCABKAUSLQoJ",
            "YnJvd3NlVGFiGAkgASgLMhouR29vZ2xlUGxheVN0b3JlLkJyb3dzZVRhYhIX",
            "Cg9sYW5kaW5nVGFiSW5kZXgYCiABKAUSGQoRcXVpY2tMaW5rVGFiSW5kZXgY",
            "CyABKAUSIQoZcXVpY2tMaW5rRmFsbGJhY2tUYWJJbmRleBgMIAEoBRIUCgxp",
            "c0ZhbWlseVNhZmUYDiABKAgSEAoIc2hhcmVVcmwYEiABKAkiaAoORGlyZWN0",
            "UHVyY2hhc2USEgoKZGV0YWlsc1VybBgBIAEoCRIWCg5wdXJjaGFzZUl0ZW1J",
            "ZBgCIAEoCRIUCgxwYXJlbnRJdGVtSWQYAyABKAkSFAoJb2ZmZXJUeXBlGAQg",
            "ASgFOgExIj0KDlJlZGVlbUdpZnRDYXJkEhMKC3ByZWZpbGxDb2RlGAEgASgJ",
            "EhYKDnBhcnRuZXJQYXlsb2FkGAIgASgJIogDCgxSZXNvbHZlZExpbmsSEgoK",
            "ZGV0YWlsc1VybBgBIAEoCRIRCglicm93c2VVcmwYAiABKAkSEQoJc2VhcmNo",
            "VXJsGAMgASgJEjcKDmRpcmVjdFB1cmNoYXNlGAQgASgLMh8uR29vZ2xlUGxh",
            "eVN0b3JlLkRpcmVjdFB1cmNoYXNlEg8KB2hvbWVVcmwYBSABKAkSNwoOcmVk",
            "ZWVtR2lmdENhcmQYBiABKAsyHy5Hb29nbGVQbGF5U3RvcmUuUmVkZWVtR2lm",
            "dENhcmQSGAoQc2VydmVyTG9nc0Nvb2tpZRgHIAEoDBIlCgVEb2NJZBgIIAEo",
            "CzIWLkdvb2dsZVBsYXlTdG9yZS5Eb2NJZBITCgt3aXNobGlzdFVybBgJIAEo",
            "CRIPCgdiYWNrZW5kGAogASgFEg0KBXF1ZXJ5GAsgASgJEhQKDG15QWNjb3Vu",
            "dFVybBgMIAEoCRIvCgpoZWxwQ2VudGVyGA0gASgLMhsuR29vZ2xlUGxheVN0",
            "b3JlLkhlbHBDZW50ZXIiHwoKSGVscENlbnRlchIRCgljb250ZXh0SWQYASAB",
            "KAkixwEKCVF1aWNrTGluaxIMCgRuYW1lGAEgASgJEiUKBWltYWdlGAIgASgL",
            "MhYuR29vZ2xlUGxheVN0b3JlLkltYWdlEisKBGxpbmsYAyABKAsyHS5Hb29n",
            "bGVQbGF5U3RvcmUuUmVzb2x2ZWRMaW5rEhcKD2Rpc3BsYXlSZXF1aXJlZBgE",
            "IAEoCBIYChBzZXJ2ZXJMb2dzQ29va2llGAUgASgMEhEKCWJhY2tlbmRJZBgG",
            "IAEoBRISCgpwcmlzbVN0eWxlGAcgASgIIoYCCglCcm93c2VUYWISDQoFdGl0",
            "bGUYASABKAkSGAoQc2VydmVyTG9nc0Nvb2tpZRgCIAEoDBIPCgdsaXN0VXJs",
            "GAMgASgJEi8KCmJyb3dzZUxpbmsYBCADKAsyGy5Hb29nbGVQbGF5U3RvcmUu",
            "QnJvd3NlTGluaxItCglxdWlja0xpbmsYBSADKAsyGi5Hb29nbGVQbGF5U3Rv",
            "cmUuUXVpY2tMaW5rEhYKDnF1aWNrTGlua1RpdGxlGAYgASgJEhcKD2NhdGVn",
            "b3JpZXNUaXRsZRgHIAEoCRIRCgliYWNrZW5kSWQYCCABKAUSGwoTaGlnaGxp",
            "Z2h0c0Jhbm5lclVybBgJIAEoCSKhDAoLQnV5UmVzcG9uc2USRwoQcHVyY2hh",
            "c2VSZXNwb25zZRgBIAEoCzItLkdvb2dsZVBsYXlTdG9yZS5QdXJjaGFzZU5v",
            "dGlmaWNhdGlvblJlc3BvbnNlEj8KDGNoZWNrb3V0aW5mbxgCIAEoCjIpLkdv",
            "b2dsZVBsYXlTdG9yZS5CdXlSZXNwb25zZS5DaGVja291dEluZm8SFgoOY29u",
            "dGludWVWaWFVcmwYCCABKAkSGQoRcHVyY2hhc2VTdGF0dXNVcmwYCSABKAkS",
            "GQoRY2hlY2tvdXRTZXJ2aWNlSWQYDCABKAkSHQoVY2hlY2tvdXRUb2tlblJl",
            "cXVpcmVkGA0gASgIEhcKD2Jhc2VDaGVja291dFVybBgOIAEoCRIXCg90b3ND",
            "aGVja2JveEh0bWwYJSADKAkSGgoSaWFiUGVybWlzc2lvbkVycm9yGCYgASgF",
            "EkcKFnB1cmNoYXNlU3RhdHVzUmVzcG9uc2UYJyABKAsyJy5Hb29nbGVQbGF5",
            "U3RvcmUuUHVyY2hhc2VTdGF0dXNSZXNwb25zZRIWCg5wdXJjaGFzZUNvb2tp",
            "ZRguIAEoCRItCgljaGFsbGVuZ2UYMSABKAsyGi5Hb29nbGVQbGF5U3RvcmUu",
            "Q2hhbGxlbmdlEh8KF2FkZEluc3RydW1lbnRQcm9tcHRIdG1sGDIgASgJEhkK",
            "EWNvbmZpcm1CdXR0b25UZXh0GDMgASgJEiAKGHBlcm1pc3Npb25FcnJvclRp",
            "dGxlVGV4dBg0IAEoCRIiChpwZXJtaXNzaW9uRXJyb3JNZXNzYWdlVGV4dBg1",
            "IAEoCRIYChBzZXJ2ZXJMb2dzQ29va2llGDYgASgMEhwKFGVuY29kZWREZWxp",
            "dmVyeVRva2VuGDcgASgJEhQKDHVua25vd25Ub2tlbhg4IAEoCRrsBgoMQ2hl",
            "Y2tvdXRJbmZvEicKBGl0ZW0YAyABKAsyGS5Hb29nbGVQbGF5U3RvcmUuTGlu",
            "ZUl0ZW0SKgoHc3ViSXRlbRgEIAMoCzIZLkdvb2dsZVBsYXlTdG9yZS5MaW5l",
            "SXRlbRJQCg5jaGVja291dG9wdGlvbhgFIAMoCjI4Lkdvb2dsZVBsYXlTdG9y",
            "ZS5CdXlSZXNwb25zZS5DaGVja291dEluZm8uQ2hlY2tvdXRPcHRpb24SHQoV",
            "ZGVwcmVjYXRlZENoZWNrb3V0VXJsGAogASgJEhgKEGFkZEluc3RydW1lbnRV",
            "cmwYCyABKAkSEgoKZm9vdGVySHRtbBgUIAMoCRIgChhlbGlnaWJsZUluc3Ry",
            "dW1lbnRGYW1pbHkYHyADKAUSFAoMZm9vdG5vdGVIdG1sGCQgAygJEjcKEmVs",
            "aWdpYmxlSW5zdHJ1bWVudBgsIAMoCzIbLkdvb2dsZVBsYXlTdG9yZS5JbnN0",
            "cnVtZW50GvYDCg5DaGVja291dE9wdGlvbhIVCg1mb3JtT2ZQYXltZW50GAYg",
            "ASgJEhsKE2VuY29kZWRBZGp1c3RlZENhcnQYByABKAkSFAoMaW5zdHJ1bWVu",
            "dElkGA8gASgJEicKBGl0ZW0YECADKAsyGS5Hb29nbGVQbGF5U3RvcmUuTGlu",
            "ZUl0ZW0SKgoHc3ViSXRlbRgRIAMoCzIZLkdvb2dsZVBsYXlTdG9yZS5MaW5l",
            "SXRlbRIoCgV0b3RhbBgSIAEoCzIZLkdvb2dsZVBsYXlTdG9yZS5MaW5lSXRl",
            "bRISCgpmb290ZXJIdG1sGBMgAygJEhgKEGluc3RydW1lbnRGYW1pbHkYHSAB",
            "KAUSLgomZGVwcmVjYXRlZEluc3RydW1lbnRJbmFwcGxpY2FibGVSZWFzb24Y",
            "HiADKAUSGgoSc2VsZWN0ZWRJbnN0cnVtZW50GCAgASgIEioKB3N1bW1hcnkY",
            "ISABKAsyGS5Hb29nbGVQbGF5U3RvcmUuTGluZUl0ZW0SFAoMZm9vdG5vdGVI",
            "dG1sGCMgAygJEi8KCmluc3RydW1lbnQYKyABKAsyGy5Hb29nbGVQbGF5U3Rv",
            "cmUuSW5zdHJ1bWVudBIWCg5wdXJjaGFzZUNvb2tpZRgtIAEoCRIWCg5kaXNh",
            "YmxlZFJlYXNvbhgwIAMoCSJ8CghMaW5lSXRlbRIMCgRuYW1lGAEgASgJEhMK",
            "C2Rlc2NyaXB0aW9uGAIgASgJEiUKBW9mZmVyGAMgASgLMhYuR29vZ2xlUGxh",
            "eVN0b3JlLk9mZmVyEiYKBmFtb3VudBgEIAEoCzIWLkdvb2dsZVBsYXlTdG9y",
            "ZS5Nb25leSJGCgVNb25leRIOCgZtaWNyb3MYASABKAMSFAoMY3VycmVuY3lD",
            "b2RlGAIgASgJEhcKD2Zvcm1hdHRlZEFtb3VudBgDIAEoCSKQAQocUHVyY2hh",
            "c2VOb3RpZmljYXRpb25SZXNwb25zZRIOCgZzdGF0dXMYASABKAUSLQoJZGVi",
            "dWdJbmZvGAIgASgLMhouR29vZ2xlUGxheVN0b3JlLkRlYnVnSW5mbxIdChVs",
            "b2NhbGl6ZWRFcnJvck1lc3NhZ2UYAyABKAkSEgoKcHVyY2hhc2VJZBgEIAEo",
            "CSKpAgoWUHVyY2hhc2VTdGF0dXNSZXNwb25zZRIOCgZzdGF0dXMYASABKAUS",
            "EQoJc3RhdHVzTXNnGAIgASgJEhMKC3N0YXR1c1RpdGxlGAMgASgJEhQKDGJy",
            "aWVmTWVzc2FnZRgEIAEoCRIPCgdpbmZvVXJsGAUgASgJEjUKDWxpYnJhcnlV",
            "cGRhdGUYBiABKAsyHi5Hb29nbGVQbGF5U3RvcmUuTGlicmFyeVVwZGF0ZRI3",
            "ChJyZWplY3RlZEluc3RydW1lbnQYByABKAsyGy5Hb29nbGVQbGF5U3RvcmUu",
            "SW5zdHJ1bWVudBJACg9hcHBEZWxpdmVyeURhdGEYCCABKAsyJy5Hb29nbGVQ",
            "bGF5U3RvcmUuQW5kcm9pZEFwcERlbGl2ZXJ5RGF0YSKBAgoWUHVyY2hhc2VI",
            "aXN0b3J5RGV0YWlscxIfChdwdXJjaGFzZVRpbWVzdGFtcE1pbGxpcxgCIAEo",
            "AxIbChNwdXJjaGFzZURldGFpbHNIdG1sGAMgASgJEiUKBW9mZmVyGAUgASgL",
            "MhYuR29vZ2xlUGxheVN0b3JlLk9mZmVyEhYKDnB1cmNoYXNlU3RhdHVzGAYg",
            "ASgJEhcKD3RpdGxlQnlsaW5lSHRtbBgHIAEoCRIbChNjbGllbnRSZWZ1bmRD",
            "b250ZXh0GAggASgMEjQKFHB1cmNoYXNlRGV0YWlsc0ltYWdlGAkgASgLMhYu",
            "R29vZ2xlUGxheVN0b3JlLkltYWdlInoKFkJpbGxpbmdQcm9maWxlUmVzcG9u",
            "c2USDgoGcmVzdWx0GAEgASgFEjcKDmJpbGxpbmdQcm9maWxlGAIgASgLMh8u",
            "R29vZ2xlUGxheVN0b3JlLkJpbGxpbmdQcm9maWxlEhcKD3VzZXJNZXNzYWdl",
            "SHRtbBgDIAEoCSLCAQoXQ2hlY2tJbnN0cnVtZW50UmVzcG9uc2USHgoWdXNl",
            "ckhhc1ZhbGlkSW5zdHJ1bWVudBgBIAEoCBIdChVjaGVja291dFRva2VuUmVx",
            "dWlyZWQYAiABKAgSLwoKaW5zdHJ1bWVudBgEIAMoCzIbLkdvb2dsZVBsYXlT",
            "dG9yZS5JbnN0cnVtZW50EjcKEmVsaWdpYmxlSW5zdHJ1bWVudBgFIAMoCzIb",
            "Lkdvb2dsZVBsYXlTdG9yZS5JbnN0cnVtZW50InUKG0luc3RydW1lbnRTZXR1",
            "cEluZm9SZXNwb25zZRI3CglzZXR1cEluZm8YASADKAsyJC5Hb29nbGVQbGF5",
            "U3RvcmUuSW5zdHJ1bWVudFNldHVwSW5mbxIdChVjaGVja291dFRva2VuUmVx",
            "dWlyZWQYAiABKAgijwEKFVJlZGVlbUdpZnRDYXJkUmVxdWVzdBITCgtnaWZ0",
            "Q2FyZFBpbhgBIAEoCRIpCgdhZGRyZXNzGAIgASgLMhguR29vZ2xlUGxheVN0",
            "b3JlLkFkZHJlc3MSHwoXYWNjZXB0ZWRMZWdhbERvY3VtZW50SWQYAyADKAkS",
            "FQoNY2hlY2tvdXRUb2tlbhgEIAEoCSKyAQoWUmVkZWVtR2lmdENhcmRSZXNw",
            "b25zZRIOCgZyZXN1bHQYASABKAUSFwoPdXNlck1lc3NhZ2VIdG1sGAIgASgJ",
            "EhMKC2JhbGFuY2VIdG1sGAMgASgJEjsKEGFkZHJlc3NDaGFsbGVuZ2UYBCAB",
            "KAsyIS5Hb29nbGVQbGF5U3RvcmUuQWRkcmVzc0NoYWxsZW5nZRIdChVjaGVj",
            "a291dFRva2VuUmVxdWlyZWQYBSABKAgiYQoXVXBkYXRlSW5zdHJ1bWVudFJl",
            "cXVlc3QSLwoKaW5zdHJ1bWVudBgBIAEoCzIbLkdvb2dsZVBsYXlTdG9yZS5J",
            "bnN0cnVtZW50EhUKDWNoZWNrb3V0VG9rZW4YAiABKAki9AEKGFVwZGF0ZUlu",
            "c3RydW1lbnRSZXNwb25zZRIOCgZyZXN1bHQYASABKAUSFAoMaW5zdHJ1bWVu",
            "dElkGAIgASgJEhcKD3VzZXJNZXNzYWdlSHRtbBgDIAEoCRI+Cg9lcnJvcklu",
            "cHV0RmllbGQYBCADKAsyJS5Hb29nbGVQbGF5U3RvcmUuSW5wdXRWYWxpZGF0",
            "aW9uRXJyb3ISHQoVY2hlY2tvdXRUb2tlblJlcXVpcmVkGAUgASgIEjoKDXJl",
            "ZGVlbWVkT2ZmZXIYBiABKAsyIy5Hb29nbGVQbGF5U3RvcmUuUmVkZWVtZWRQ",
            "cm9tb09mZmVyIjAKG0luaXRpYXRlQXNzb2NpYXRpb25SZXNwb25zZRIRCgl1",
            "c2VyVG9rZW4YASABKAkiqwEKGVZlcmlmeUFzc29jaWF0aW9uUmVzcG9uc2US",
            "DgoGc3RhdHVzGAEgASgFEjAKDmJpbGxpbmdBZGRyZXNzGAIgASgLMhguR29v",
            "Z2xlUGxheVN0b3JlLkFkZHJlc3MSLwoKY2FycmllclRvcxgDIAEoCzIbLkdv",
            "b2dsZVBsYXlTdG9yZS5DYXJyaWVyVG9zEhsKE2NhcnJpZXJFcnJvck1lc3Nh",
            "Z2UYBCABKAki8wIKEEFkZHJlc3NDaGFsbGVuZ2USHAoUcmVzcG9uc2VBZGRy",
            "ZXNzUGFyYW0YASABKAkSHwoXcmVzcG9uc2VDaGVja2JveGVzUGFyYW0YAiAB",
            "KAkSDQoFdGl0bGUYAyABKAkSFwoPZGVzY3JpcHRpb25IdG1sGAQgASgJEi8K",
            "CGNoZWNrYm94GAUgAygLMh0uR29vZ2xlUGxheVN0b3JlLkZvcm1DaGVja2Jv",
            "eBIpCgdhZGRyZXNzGAYgASgLMhguR29vZ2xlUGxheVN0b3JlLkFkZHJlc3MS",
            "PgoPZXJyb3JJbnB1dEZpZWxkGAcgAygLMiUuR29vZ2xlUGxheVN0b3JlLklu",
            "cHV0VmFsaWRhdGlvbkVycm9yEhEKCWVycm9ySHRtbBgIIAEoCRIVCg1yZXF1",
            "aXJlZEZpZWxkGAkgAygFEjIKEHN1cHBvcnRlZENvdW50cnkYCiADKAsyGC5H",
            "b29nbGVQbGF5U3RvcmUuQ291bnRyeSLtAgoXQXV0aGVudGljYXRpb25DaGFs",
            "bGVuZ2USGgoSYXV0aGVudGljYXRpb25UeXBlGAEgASgFEicKH3Jlc3BvbnNl",
            "QXV0aGVudGljYXRpb25UeXBlUGFyYW0YAiABKAkSHwoXcmVzcG9uc2VSZXRy",
            "eUNvdW50UGFyYW0YAyABKAkSFQoNcGluSGVhZGVyVGV4dBgEIAEoCRIeChZw",
            "aW5EZXNjcmlwdGlvblRleHRIdG1sGAUgASgJEhYKDmdhaWFIZWFkZXJUZXh0",
            "GAYgASgJEh8KF2dhaWFEZXNjcmlwdGlvblRleHRIdG1sGAcgASgJEhoKEmdh",
            "aWFGb290ZXJUZXh0SHRtbBgIIAEoCRI5ChJnYWlhT3B0T3V0Q2hlY2tib3gY",
            "CSABKAsyHS5Hb29nbGVQbGF5U3RvcmUuRm9ybUNoZWNrYm94EiUKHWdhaWFP",
            "cHRPdXREZXNjcmlwdGlvblRleHRIdG1sGAogASgJItABCglDaGFsbGVuZ2US",
            "OwoQYWRkcmVzc0NoYWxsZW5nZRgBIAEoCzIhLkdvb2dsZVBsYXlTdG9yZS5B",
            "ZGRyZXNzQ2hhbGxlbmdlEkkKF2F1dGhlbnRpY2F0aW9uQ2hhbGxlbmdlGAIg",
            "ASgLMiguR29vZ2xlUGxheVN0b3JlLkF1dGhlbnRpY2F0aW9uQ2hhbGxlbmdl",
            "EjsKEHdlYlZpZXdDaGFsbGVuZ2UYAyABKAsyIS5Hb29nbGVQbGF5U3RvcmUu",
            "V2ViVmlld0NoYWxsZW5nZSIyCgdDb3VudHJ5EhIKCnJlZ2lvbkNvZGUYASAB",
            "KAkSEwoLZGlzcGxheU5hbWUYAiABKAkiUgoMRm9ybUNoZWNrYm94EhMKC2Rl",
            "c2NyaXB0aW9uGAEgASgJEg8KB2NoZWNrZWQYAiABKAgSEAoIcmVxdWlyZWQY",
            "AyABKAgSCgoCaWQYBCABKAkiQAoUSW5wdXRWYWxpZGF0aW9uRXJyb3ISEgoK",
            "aW5wdXRGaWVsZBgBIAEoBRIUCgxlcnJvck1lc3NhZ2UYAiABKAkipwEKEFdl",
            "YlZpZXdDaGFsbGVuZ2USEAoIc3RhcnRVcmwYASABKAkSFwoPdGFyZ2V0VXJs",
            "UmVnZXhwGAIgASgJEiAKGGNhbmNlbEJ1dHRvbkRpc3BsYXlMYWJlbBgDIAEo",
            "CRIeChZyZXNwb25zZVRhcmdldFVybFBhcmFtGAQgASgJEhcKD2NhbmNlbFVy",
            "bFJlZ2V4cBgFIAEoCRINCgV0aXRsZRgGIAEoCSLcAQoXQWRkQ3JlZGl0Q2Fy",
            "ZFByb21vT2ZmZXISEgoKaGVhZGVyVGV4dBgBIAEoCRIXCg9kZXNjcmlwdGlv",
            "bkh0bWwYAiABKAkSJQoFaW1hZ2UYAyABKAsyFi5Hb29nbGVQbGF5U3RvcmUu",
            "SW1hZ2USHAoUaW50cm9kdWN0b3J5VGV4dEh0bWwYBCABKAkSEgoKb2ZmZXJU",
            "aXRsZRgFIAEoCRIbChNub0FjdGlvbkRlc2NyaXB0aW9uGAYgASgJEh4KFnRl",
            "cm1zQW5kQ29uZGl0aW9uc0h0bWwYByABKAkiWwoTQXZhaWxhYmxlUHJvbW9P",
            "ZmZlchJEChJhZGRDcmVkaXRDYXJkT2ZmZXIYASABKAsyKC5Hb29nbGVQbGF5",
            "U3RvcmUuQWRkQ3JlZGl0Q2FyZFByb21vT2ZmZXIisgEKF0NoZWNrUHJvbW9P",
            "ZmZlclJlc3BvbnNlEjwKDmF2YWlsYWJsZU9mZmVyGAEgAygLMiQuR29vZ2xl",
            "UGxheVN0b3JlLkF2YWlsYWJsZVByb21vT2ZmZXISOgoNcmVkZWVtZWRPZmZl",
            "chgCIAEoCzIjLkdvb2dsZVBsYXlTdG9yZS5SZWRlZW1lZFByb21vT2ZmZXIS",
            "HQoVY2hlY2tvdXRUb2tlblJlcXVpcmVkGAMgASgIImgKElJlZGVlbWVkUHJv",
            "bW9PZmZlchISCgpoZWFkZXJUZXh0GAEgASgJEhcKD2Rlc2NyaXB0aW9uSHRt",
            "bBgCIAEoCRIlCgVpbWFnZRgDIAEoCzIWLkdvb2dsZVBsYXlTdG9yZS5JbWFn",
            "ZSI/CgVEb2NJZBIUCgxiYWNrZW5kRG9jSWQYASABKAkSDwoEdHlwZRgCIAEo",
            "BToBMRIPCgdiYWNrZW5kGAMgASgFImQKB0luc3RhbGwSEQoJYW5kcm9pZElk",
            "GAEgASgGEg8KB3ZlcnNpb24YAiABKAUSDwoHYnVuZGxlZBgDIAEoCBIPCgdw",
            "ZW5kaW5nGAQgASgIEhMKC2xhc3RVcGRhdGVkGAUgASgDIp4BCg9Hcm91cExp",
            "Y2Vuc2VLZXkSGgoSZGFzaGVyX2N1c3RvbWVyX2lkGAEgASgGEiUKBWRvY0lk",
            "GAIgASgLMhYuR29vZ2xlUGxheVN0b3JlLkRvY0lkEh4KE2xpY2Vuc2VkX29m",
            "ZmVyX3R5cGUYAyABKAU6ATESDAoEdHlwZRgEIAEoBRIaChJyZW50YWxfcGVy",
            "aW9kX2RheXMYBSABKAUiSQoMTGljZW5zZVRlcm1zEjkKD2dyb3VwTGljZW5z",
            "ZUtleRgBIAEoCzIgLkdvb2dsZVBsYXlTdG9yZS5Hcm91cExpY2Vuc2VLZXki",
            "xAcKBU9mZmVyEg4KBm1pY3JvcxgBIAEoAxIUCgxjdXJyZW5jeUNvZGUYAiAB",
            "KAkSFwoPZm9ybWF0dGVkQW1vdW50GAMgASgJEi4KDmNvbnZlcnRlZFByaWNl",
            "GAQgAygLMhYuR29vZ2xlUGxheVN0b3JlLk9mZmVyEhwKFGNoZWNrb3V0Rmxv",
            "d1JlcXVpcmVkGAUgASgIEhcKD2Z1bGxQcmljZU1pY3JvcxgGIAEoAxIbChNm",
            "b3JtYXR0ZWRGdWxsQW1vdW50GAcgASgJEhQKCW9mZmVyVHlwZRgIIAEoBToB",
            "MRIxCgtyZW50YWxUZXJtcxgJIAEoCzIcLkdvb2dsZVBsYXlTdG9yZS5SZW50",
            "YWxUZXJtcxISCgpvblNhbGVEYXRlGAogASgDEhYKDnByb21vdGlvbkxhYmVs",
            "GAsgAygJEj0KEXN1YnNjcmlwdGlvblRlcm1zGAwgASgLMiIuR29vZ2xlUGxh",
            "eVN0b3JlLlN1YnNjcmlwdGlvblRlcm1zEhUKDWZvcm1hdHRlZE5hbWUYDSAB",
            "KAkSHAoUZm9ybWF0dGVkRGVzY3JpcHRpb24YDiABKAkSEAoIcHJlb3JkZXIY",
            "DyABKAgSLQolb25TYWxlRGF0ZURpc3BsYXlUaW1lWm9uZU9mZnNldE1pbGxp",
            "cxgQIAEoBRIZChFsaWNlbnNlZE9mZmVyVHlwZRgRIAEoBRJLChhzdWJzY3Jp",
            "cHRpb25Db250ZW50VGVybXMYEiABKAsyKS5Hb29nbGVQbGF5U3RvcmUuU3Vi",
            "c2NyaXB0aW9uQ29udGVudFRlcm1zEg8KB29mZmVySWQYEyABKAkSJgoecHJl",
            "b3JkZXJGdWxmaWxsbWVudERpc3BsYXlEYXRlGBQgASgDEjMKDGxpY2Vuc2VU",
            "ZXJtcxgVIAEoCzIdLkdvb2dsZVBsYXlTdG9yZS5MaWNlbnNlVGVybXMSDAoE",
            "c2FsZRgWIAEoCBIzCgx2b3VjaGVyVGVybXMYFyABKAsyHS5Hb29nbGVQbGF5",
            "U3RvcmUuVm91Y2hlclRlcm1zEjMKDG9mZmVyUGF5bWVudBgYIAMoCzIdLkdv",
            "b2dsZVBsYXlTdG9yZS5PZmZlclBheW1lbnQSGQoRcmVwZWF0TGFzdFBheW1l",
            "bnQYGSABKAgSFgoOYnV5QnV0dG9uTGFiZWwYGiABKAkSHgoWaW5zdGFudFB1",
            "cmNoYXNlRW5hYmxlZBgbIAEoCBIYChBzYWxlRW5kVGltZXN0YW1wGB4gASgD",
            "EhMKC3NhbGVNZXNzYWdlGB8gASgJIikKC01vbnRoQW5kRGF5Eg0KBW1vbnRo",
            "GAEgASgNEgsKA2RheRgCIAEoDSKbAQoST2ZmZXJQYXltZW50UGVyaW9kEi0K",
            "CGR1cmF0aW9uGAEgASgLMhsuR29vZ2xlUGxheVN0b3JlLlRpbWVQZXJpb2QS",
            "KwoFc3RhcnQYAiABKAsyHC5Hb29nbGVQbGF5U3RvcmUuTW9udGhBbmREYXkS",
            "KQoDZW5kGAMgASgLMhwuR29vZ2xlUGxheVN0b3JlLk1vbnRoQW5kRGF5In4K",
            "FE9mZmVyUGF5bWVudE92ZXJyaWRlEg4KBm1pY3JvcxgBIAEoAxIrCgVzdGFy",
            "dBgCIAEoCzIcLkdvb2dsZVBsYXlTdG9yZS5Nb250aEFuZERheRIpCgNlbmQY",
            "AyABKAsyHC5Hb29nbGVQbGF5U3RvcmUuTW9udGhBbmREYXkiugEKDE9mZmVy",
            "UGF5bWVudBIOCgZtaWNyb3MYASABKAMSFAoMY3VycmVuY3lDb2RlGAIgASgJ",
            "Ej8KEm9mZmVyUGF5bWVudFBlcmlvZBgDIAEoCzIjLkdvb2dsZVBsYXlTdG9y",
            "ZS5PZmZlclBheW1lbnRQZXJpb2QSQwoUb2ZmZXJQYXltZW50T3ZlcnJpZGUY",
            "BCADKAsyJS5Hb29nbGVQbGF5U3RvcmUuT2ZmZXJQYXltZW50T3ZlcnJpZGUi",
            "DgoMVm91Y2hlclRlcm1zIsMBCgtSZW50YWxUZXJtcxIkChxkRVBSRUNBVEVE",
            "R3JhbnRQZXJpb2RTZWNvbmRzGAEgASgFEicKH2RFUFJFQ0FURURBY3RpdmF0",
            "ZVBlcmlvZFNlY29uZHMYAiABKAUSMAoLZ3JhbnRQZXJpb2QYAyABKAsyGy5H",
            "b29nbGVQbGF5U3RvcmUuVGltZVBlcmlvZBIzCg5hY3RpdmF0ZVBlcmlvZBgE",
            "IAEoCzIbLkdvb2dsZVBsYXlTdG9yZS5UaW1lUGVyaW9kIjMKClNpZ25lZERh",
            "dGESEgoKc2lnbmVkRGF0YRgBIAEoCRIRCglzaWduYXR1cmUYAiABKAkiUAoY",
            "U3Vic2NyaXB0aW9uQ29udGVudFRlcm1zEjQKFHJlcXVpcmVkU3Vic2NyaXB0",
            "aW9uGAEgASgLMhYuR29vZ2xlUGxheVN0b3JlLkRvY0lkIkIKEEdyb3VwTGlj",
            "ZW5zZUluZm8SGQoRbGljZW5zZWRPZmZlclR5cGUYASABKAUSEwoLZ2FpYUdy",
            "b3VwSWQYAiABKAYiKwoUTGljZW5zZWREb2N1bWVudEluZm8SEwoLZ2FpYUdy",
            "b3VwSWQYASADKAYi8gMKDU93bmVyc2hpcEluZm8SGwoTaW5pdGlhdGlvblRp",
            "bWVzdGFtcBgBIAEoAxIbChN2YWxpZFVudGlsVGltZXN0YW1wGAIgASgDEhQK",
            "DGF1dG9SZW5ld2luZxgDIAEoCBIeChZyZWZ1bmRUaW1lb3V0VGltZXN0YW1w",
            "GAQgASgDEiYKHnBvc3REZWxpdmVyeVJlZnVuZFdpbmRvd01pbGxpcxgFIAEo",
            "AxI6ChVkZXZlbG9wZXJQdXJjaGFzZUluZm8YBiABKAsyGy5Hb29nbGVQbGF5",
            "U3RvcmUuU2lnbmVkRGF0YRISCgpwcmVPcmRlcmVkGAcgASgIEg4KBmhpZGRl",
            "bhgIIAEoCBIxCgtyZW50YWxUZXJtcxgJIAEoCzIcLkdvb2dsZVBsYXlTdG9y",
            "ZS5SZW50YWxUZXJtcxI7ChBncm91cExpY2Vuc2VJbmZvGAogASgLMiEuR29v",
            "Z2xlUGxheVN0b3JlLkdyb3VwTGljZW5zZUluZm8SQwoUbGljZW5zZWREb2N1",
            "bWVudEluZm8YCyABKAsyJS5Hb29nbGVQbGF5U3RvcmUuTGljZW5zZWREb2N1",
            "bWVudEluZm8SEAoIcXVhbnRpdHkYDCABKAUSIgoabGlicmFyeUV4cGlyYXRp",
            "b25UaW1lc3RhbXAYDiABKAMiewoRU3Vic2NyaXB0aW9uVGVybXMSNAoPcmVj",
            "dXJyaW5nUGVyaW9kGAEgASgLMhsuR29vZ2xlUGxheVN0b3JlLlRpbWVQZXJp",
            "b2QSMAoLdHJpYWxQZXJpb2QYAiABKAsyGy5Hb29nbGVQbGF5U3RvcmUuVGlt",
            "ZVBlcmlvZCIpCgpUaW1lUGVyaW9kEgwKBHVuaXQYASABKAUSDQoFY291bnQY",
            "AiABKAUiRwoSQmlsbGluZ0FkZHJlc3NTcGVjEhoKEmJpbGxpbmdBZGRyZXNz",
            "VHlwZRgBIAEoBRIVCg1yZXF1aXJlZEZpZWxkGAIgAygFIqwBCg5CaWxsaW5n",
            "UHJvZmlsZRIvCgppbnN0cnVtZW50GAEgAygLMhsuR29vZ2xlUGxheVN0b3Jl",
            "Lkluc3RydW1lbnQSJAocc2VsZWN0ZWRFeHRlcm5hbEluc3RydW1lbnRJZBgC",
            "IAEoCRJDChRiaWxsaW5nUHJvZmlsZU9wdGlvbhgDIAMoCzIlLkdvb2dsZVBs",
            "YXlTdG9yZS5CaWxsaW5nUHJvZmlsZU9wdGlvbiLgAQoUQmlsbGluZ1Byb2Zp",
            "bGVPcHRpb24SDAoEdHlwZRgBIAEoBRIUCgxkaXNwbGF5VGl0bGUYAiABKAkS",
            "HAoUZXh0ZXJuYWxJbnN0cnVtZW50SWQYAyABKAkSLQoJdG9wdXBJbmZvGAQg",
            "ASgLMhouR29vZ2xlUGxheVN0b3JlLlRvcHVwSW5mbxJXCh5jYXJyaWVyQmls",
            "bGluZ0luc3RydW1lbnRTdGF0dXMYBSABKAsyLy5Hb29nbGVQbGF5U3RvcmUu",
            "Q2FycmllckJpbGxpbmdJbnN0cnVtZW50U3RhdHVzIj4KGUNhcnJpZXJCaWxs",
            "aW5nQ3JlZGVudGlhbHMSDQoFdmFsdWUYASABKAkSEgoKZXhwaXJhdGlvbhgC",
            "IAEoAyLZAgoYQ2FycmllckJpbGxpbmdJbnN0cnVtZW50EhUKDWluc3RydW1l",
            "bnRLZXkYASABKAkSEwoLYWNjb3VudFR5cGUYAiABKAkSFAoMY3VycmVuY3lD",
            "b2RlGAMgASgJEhgKEHRyYW5zYWN0aW9uTGltaXQYBCABKAMSHAoUc3Vic2Ny",
            "aWJlcklkZW50aWZpZXIYBSABKAkSSQoXZW5jcnlwdGVkU3Vic2NyaWJlcklu",
            "Zm8YBiABKAsyKC5Hb29nbGVQbGF5U3RvcmUuRW5jcnlwdGVkU3Vic2NyaWJl",
            "ckluZm8SPwoLY3JlZGVudGlhbHMYByABKAsyKi5Hb29nbGVQbGF5U3RvcmUu",
            "Q2FycmllckJpbGxpbmdDcmVkZW50aWFscxI3ChJhY2NlcHRlZENhcnJpZXJU",
            "b3MYCCABKAsyGy5Hb29nbGVQbGF5U3RvcmUuQ2FycmllclRvcyLMAgoeQ2Fy",
            "cmllckJpbGxpbmdJbnN0cnVtZW50U3RhdHVzEi8KCmNhcnJpZXJUb3MYASAB",
            "KAsyGy5Hb29nbGVQbGF5U3RvcmUuQ2FycmllclRvcxIbChNhc3NvY2lhdGlv",
            "blJlcXVpcmVkGAIgASgIEhgKEHBhc3N3b3JkUmVxdWlyZWQYAyABKAgSPgoV",
            "Y2FycmllclBhc3N3b3JkUHJvbXB0GAQgASgLMh8uR29vZ2xlUGxheVN0b3Jl",
            "LlBhc3N3b3JkUHJvbXB0EhIKCmFwaVZlcnNpb24YBSABKAUSDAoEbmFtZRgG",
            "IAEoCRI9ChFkZXZpY2VBc3NvY2lhdGlvbhgHIAEoCzIiLkdvb2dsZVBsYXlT",
            "dG9yZS5EZXZpY2VBc3NvY2lhdGlvbhIhChljYXJyaWVyU3VwcG9ydFBob25l",
            "TnVtYmVyGAggASgJIq4BCgpDYXJyaWVyVG9zEjAKBmRjYlRvcxgBIAEoCzIg",
            "Lkdvb2dsZVBsYXlTdG9yZS5DYXJyaWVyVG9zRW50cnkSMAoGcGlpVG9zGAIg",
            "ASgLMiAuR29vZ2xlUGxheVN0b3JlLkNhcnJpZXJUb3NFbnRyeRIdChVuZWVk",
            "c0RjYlRvc0FjY2VwdGFuY2UYAyABKAgSHQoVbmVlZHNQaWlUb3NBY2NlcHRh",
            "bmNlGAQgASgIIi8KD0NhcnJpZXJUb3NFbnRyeRILCgN1cmwYASABKAkSDwoH",
            "dmVyc2lvbhgCIAEoCSKyAQoUQ3JlZGl0Q2FyZEluc3RydW1lbnQSDAoEdHlw",
            "ZRgBIAEoBRIUCgxlc2Nyb3dIYW5kbGUYAiABKAkSEgoKbGFzdERpZ2l0cxgD",
            "IAEoCRIXCg9leHBpcmF0aW9uTW9udGgYBCABKAUSFgoOZXhwaXJhdGlvblll",
            "YXIYBSABKAUSMQoOZXNjcm93RWZlUGFyYW0YBiADKAsyGS5Hb29nbGVQbGF5",
            "U3RvcmUuRWZlUGFyYW0iVQoRRGV2aWNlQXNzb2NpYXRpb24SHwoXdXNlclRv",
            "a2VuUmVxdWVzdE1lc3NhZ2UYASABKAkSHwoXdXNlclRva2VuUmVxdWVzdEFk",
            "ZHJlc3MYAiABKAkiWQoMRGlzYWJsZWRJbmZvEhYKDmRpc2FibGVkUmVhc29u",
            "GAEgASgFEhsKE2Rpc2FibGVkTWVzc2FnZUh0bWwYAiABKAkSFAoMZXJyb3JN",
            "ZXNzYWdlGAMgASgJIiYKCEVmZVBhcmFtEgsKA2tleRgBIAEoBRINCgV2YWx1",
            "ZRgCIAEoCSLOBAoKSW5zdHJ1bWVudBIUCgxpbnN0cnVtZW50SWQYASABKAkS",
            "MAoOYmlsbGluZ0FkZHJlc3MYAiABKAsyGC5Hb29nbGVQbGF5U3RvcmUuQWRk",
            "cmVzcxI5CgpjcmVkaXRDYXJkGAMgASgLMiUuR29vZ2xlUGxheVN0b3JlLkNy",
            "ZWRpdENhcmRJbnN0cnVtZW50EkEKDmNhcnJpZXJCaWxsaW5nGAQgASgLMiku",
            "R29vZ2xlUGxheVN0b3JlLkNhcnJpZXJCaWxsaW5nSW5zdHJ1bWVudBI/ChJi",
            "aWxsaW5nQWRkcmVzc1NwZWMYBSABKAsyIy5Hb29nbGVQbGF5U3RvcmUuQmls",
            "bGluZ0FkZHJlc3NTcGVjEhgKEGluc3RydW1lbnRGYW1pbHkYBiABKAUSTQoU",
            "Y2FycmllckJpbGxpbmdTdGF0dXMYByABKAsyLy5Hb29nbGVQbGF5U3RvcmUu",
            "Q2FycmllckJpbGxpbmdJbnN0cnVtZW50U3RhdHVzEhQKDGRpc3BsYXlUaXRs",
            "ZRgIIAEoCRI3ChN0b3B1cEluZm9EZXByZWNhdGVkGAkgASgLMhouR29vZ2xl",
            "UGxheVN0b3JlLlRvcHVwSW5mbxIPCgd2ZXJzaW9uGAogASgFEjsKC3N0b3Jl",
            "ZFZhbHVlGAsgASgLMiYuR29vZ2xlUGxheVN0b3JlLlN0b3JlZFZhbHVlSW5z",
            "dHJ1bWVudBIzCgxkaXNhYmxlZEluZm8YDCADKAsyHS5Hb29nbGVQbGF5U3Rv",
            "cmUuRGlzYWJsZWRJbmZvIrwBChNJbnN0cnVtZW50U2V0dXBJbmZvEhgKEGlu",
            "c3RydW1lbnRGYW1pbHkYASABKAUSEQoJc3VwcG9ydGVkGAIgASgIEjsKEGFk",
            "ZHJlc3NDaGFsbGVuZ2UYAyABKAsyIS5Hb29nbGVQbGF5U3RvcmUuQWRkcmVz",
            "c0NoYWxsZW5nZRInCgdiYWxhbmNlGAQgASgLMhYuR29vZ2xlUGxheVN0b3Jl",
            "Lk1vbmV5EhIKCmZvb3Rlckh0bWwYBSADKAkiOwoOUGFzc3dvcmRQcm9tcHQS",
            "DgoGcHJvbXB0GAEgASgJEhkKEWZvcmdvdFBhc3N3b3JkVXJsGAIgASgJIn0K",
            "FVN0b3JlZFZhbHVlSW5zdHJ1bWVudBIMCgR0eXBlGAEgASgFEicKB2JhbGFu",
            "Y2UYAiABKAsyFi5Hb29nbGVQbGF5U3RvcmUuTW9uZXkSLQoJdG9wdXBJbmZv",
            "GAMgASgLMhouR29vZ2xlUGxheVN0b3JlLlRvcHVwSW5mbyKVAQoJVG9wdXBJ",
            "bmZvEicKH29wdGlvbnNDb250YWluZXJEb2NJZERlcHJlY2F0ZWQYASABKAkS",
            "FgoOb3B0aW9uc0xpc3RVcmwYAiABKAkSEAoIc3VidGl0bGUYAyABKAkSNQoV",
            "b3B0aW9uc0NvbnRhaW5lckRvY0lkGAQgASgLMhYuR29vZ2xlUGxheVN0b3Jl",
            "LkRvY0lkImAKF0NvbnN1bWVQdXJjaGFzZVJlc3BvbnNlEjUKDWxpYnJhcnlV",
            "cGRhdGUYASABKAsyHi5Hb29nbGVQbGF5U3RvcmUuTGlicmFyeVVwZGF0ZRIO",
            "CgZzdGF0dXMYAiABKAUi8wEKEUNvbnRhaW5lck1ldGFkYXRhEhEKCWJyb3dz",
            "ZVVybBgBIAEoCRITCgtuZXh0UGFnZVVybBgCIAEoCRIRCglyZWxldmFuY2UY",
            "AyABKAESGAoQZXN0aW1hdGVkUmVzdWx0cxgEIAEoAxIXCg9hbmFseXRpY3ND",
            "b29raWUYBSABKAkSDwoHb3JkZXJlZBgGIAEoCBI1Cg1jb250YWluZXJWaWV3",
            "GAcgAygLMh4uR29vZ2xlUGxheVN0b3JlLkNvbnRhaW5lclZpZXcSKAoIbGVm",
            "dEljb24YCCABKAsyFi5Hb29nbGVQbGF5U3RvcmUuSW1hZ2UiWwoNQ29udGFp",
            "bmVyVmlldxIQCghzZWxlY3RlZBgBIAEoCBINCgV0aXRsZRgCIAEoCRIPCgds",
            "aXN0VXJsGAMgASgJEhgKEHNlcnZlckxvZ3NDb29raWUYBCABKAwiFQoTRmxh",
            "Z0NvbnRlbnRSZXNwb25zZSLZCAoVQ2xpZW50RG93bmxvYWRSZXF1ZXN0EgsK",
            "A3VybBgBIAEoCRI/CgdkaWdlc3RzGAIgASgLMi4uR29vZ2xlUGxheVN0b3Jl",
            "LkNsaWVudERvd25sb2FkUmVxdWVzdC5EaWdlc3RzEg4KBmxlbmd0aBgDIAEo",
            "AxJCCglyZXNvdXJjZXMYBCADKAsyLy5Hb29nbGVQbGF5U3RvcmUuQ2xpZW50",
            "RG93bmxvYWRSZXF1ZXN0LlJlc291cmNlEkcKCXNpZ25hdHVyZRgFIAEoCzI0",
            "Lkdvb2dsZVBsYXlTdG9yZS5DbGllbnREb3dubG9hZFJlcXVlc3QuU2lnbmF0",
            "dXJlSW5mbxIVCg11c2VySW5pdGlhdGVkGAYgASgIEhEKCWNsaWVudEFzbhgI",
            "IAMoCRIUCgxmaWxlQmFzZW5hbWUYCSABKAkSFAoMZG93bmxvYWRUeXBlGAog",
            "ASgFEg4KBmxvY2FsZRgLIAEoCRI/CgdhcGtJbmZvGAwgASgLMi4uR29vZ2xl",
            "UGxheVN0b3JlLkNsaWVudERvd25sb2FkUmVxdWVzdC5BcGtJbmZvEhEKCWFu",
            "ZHJvaWRJZBgNIAEoBhIbChNvcmlnaW5hdGluZ1BhY2thZ2VzGA8gAygJElIK",
            "FG9yaWdpbmF0aW5nU2lnbmF0dXJlGBEgASgLMjQuR29vZ2xlUGxheVN0b3Jl",
            "LkNsaWVudERvd25sb2FkUmVxdWVzdC5TaWduYXR1cmVJbmZvGjMKB0Fwa0lu",
            "Zm8SEwoLcGFja2FnZU5hbWUYASABKAkSEwoLdmVyc2lvbkNvZGUYAiABKAUa",
            "/gEKEENlcnRpZmljYXRlQ2hhaW4SUAoHZWxlbWVudBgBIAMoCzI/Lkdvb2ds",
            "ZVBsYXlTdG9yZS5DbGllbnREb3dubG9hZFJlcXVlc3QuQ2VydGlmaWNhdGVD",
            "aGFpbi5FbGVtZW50GpcBCgdFbGVtZW50EhMKC2NlcnRpZmljYXRlGAEgASgM",
            "EhoKEnBhcnNlZFN1Y2Nlc3NmdWxseRgCIAEoCBIPCgdzdWJqZWN0GAMgASgM",
            "Eg4KBmlzc3VlchgEIAEoDBITCgtmaW5nZXJwcmludBgFIAEoDBISCgpleHBp",
            "cnlUaW1lGAYgASgDEhEKCXN0YXJ0VGltZRgHIAEoAxo0CgdEaWdlc3RzEg4K",
            "BnNoYTI1NhgBIAEoDBIMCgRzaGExGAIgASgMEgsKA21kNRgDIAEoDBpJCghS",
            "ZXNvdXJjZRILCgN1cmwYASABKAkSDAoEdHlwZRgCIAEoBRIQCghyZW1vdGVJ",
            "cBgDIAEoDBIQCghyZWZlcnJlchgEIAEoCRpzCg1TaWduYXR1cmVJbmZvElEK",
            "EGNlcnRpZmljYXRlQ2hhaW4YASADKAsyNy5Hb29nbGVQbGF5U3RvcmUuQ2xp",
            "ZW50RG93bmxvYWRSZXF1ZXN0LkNlcnRpZmljYXRlQ2hhaW4SDwoHdHJ1c3Rl",
            "ZBgCIAEoCCKqAQoWQ2xpZW50RG93bmxvYWRSZXNwb25zZRIPCgd2ZXJkaWN0",
            "GAEgASgFEkIKCG1vcmVJbmZvGAIgASgLMjAuR29vZ2xlUGxheVN0b3JlLkNs",
            "aWVudERvd25sb2FkUmVzcG9uc2UuTW9yZUluZm8SDQoFdG9rZW4YAyABKAwa",
            "LAoITW9yZUluZm8SEwoLZGVzY3JpcHRpb24YASABKAkSCwoDdXJsGAIgASgJ",
            "IkEKGkNsaWVudERvd25sb2FkU3RhdHNSZXF1ZXN0EhQKDHVzZXJEZWNpc2lv",
            "bhgBIAEoBRINCgV0b2tlbhgCIAEoDCJ5CglEZWJ1Z0luZm8SDwoHbWVzc2Fn",
            "ZRgBIAMoCRIxCgZ0aW1pbmcYAiADKAoyIS5Hb29nbGVQbGF5U3RvcmUuRGVi",
            "dWdJbmZvLlRpbWluZxooCgZUaW1pbmcSDAoEbmFtZRgDIAEoCRIQCgh0aW1l",
            "SW5NcxgEIAEoASJSChVEZWJ1Z1NldHRpbmdzUmVzcG9uc2USGwoTcGxheUNv",
            "dW50cnlPdmVycmlkZRgBIAEoCRIcChRwbGF5Q291bnRyeURlYnVnSW5mbxgC",
            "IAEoCSJnChBEZWxpdmVyeVJlc3BvbnNlEhEKBnN0YXR1cxgBIAEoBToBMRJA",
            "Cg9hcHBEZWxpdmVyeURhdGEYAiABKAsyJy5Hb29nbGVQbGF5U3RvcmUuQW5k",
            "cm9pZEFwcERlbGl2ZXJ5RGF0YSI3ChBCdWxrRGV0YWlsc0VudHJ5EiMKBGl0",
            "ZW0YASABKAsyFS5Hb29nbGVQbGF5U3RvcmUuSXRlbSKUAQoSQnVsa0RldGFp",
            "bHNSZXF1ZXN0Eg0KBURvY0lkGAEgAygJEh4KEGluY2x1ZGVDaGlsZERvY3MY",
            "AiABKAg6BHRydWUSFgoOaW5jbHVkZURldGFpbHMYAyABKAgSGQoRc291cmNl",
            "UGFja2FnZU5hbWUYBCABKAkSHAoUaW5zdGFsbGVkVmVyc2lvbkNvZGUYByAD",
            "KAUiRwoTQnVsa0RldGFpbHNSZXNwb25zZRIwCgVlbnRyeRgBIAMoCzIhLkdv",
            "b2dsZVBsYXlTdG9yZS5CdWxrRGV0YWlsc0VudHJ5IoMDCg9EZXRhaWxzUmVz",
            "cG9uc2USFwoPYW5hbHl0aWNzQ29va2llGAIgASgJEisKCnVzZXJSZXZpZXcY",
            "AyABKAsyFy5Hb29nbGVQbGF5U3RvcmUuUmV2aWV3EiMKBGl0ZW0YBCABKAsy",
            "FS5Hb29nbGVQbGF5U3RvcmUuSXRlbRISCgpmb290ZXJIdG1sGAUgASgJEhgK",
            "EHNlcnZlckxvZ3NDb29raWUYBiABKAwSNwoOZGlzY292ZXJ5QmFkZ2UYByAD",
            "KAsyHy5Hb29nbGVQbGF5U3RvcmUuRGlzY292ZXJ5QmFkZ2USGwoNZW5hYmxl",
            "UmV2aWV3cxgIIAEoCDoEdHJ1ZRIrCghmZWF0dXJlcxgMIAEoCzIZLkdvb2ds",
            "ZVBsYXlTdG9yZS5GZWF0dXJlcxIYChBkZXRhaWxzU3RyZWFtVXJsGA0gASgJ",
            "EhUKDXVzZXJSZXZpZXdVcmwYDiABKAkSIwobcG9zdEFjcXVpcmVEZXRhaWxz",
            "U3RyZWFtVXJsGBEgASgJIrIDCg5EaXNjb3ZlcnlCYWRnZRINCgVsYWJlbBgB",
            "IAEoCRIlCgVpbWFnZRgCIAEoCzIWLkdvb2dsZVBsYXlTdG9yZS5JbWFnZRIX",
            "Cg9iYWNrZ3JvdW5kQ29sb3IYAyABKAUSPAoPYmFkZ2VDb250YWluZXIxGAQg",
            "ASgLMiMuR29vZ2xlUGxheVN0b3JlLkRpc2NvdmVyeUJhZGdlTGluaxIYChBz",
            "ZXJ2ZXJMb2dzQ29va2llGAUgASgMEhEKCWlzUGx1c09uZRgGIAEoCBIXCg9h",
            "Z2dyZWdhdGVSYXRpbmcYByABKAISFgoOdXNlclN0YXJSYXRpbmcYCCABKAUS",
            "FQoNZG93bmxvYWRDb3VudBgJIAEoCRIVCg1kb3dubG9hZFVuaXRzGAogASgJ",
            "EhoKEmNvbnRlbnREZXNjcmlwdGlvbhgLIAEoCRIxCgtwbGF5ZXJCYWRnZRgM",
            "IAEoCzIcLkdvb2dsZVBsYXlTdG9yZS5QbGF5ZXJCYWRnZRIbChNmYW1pbHlB",
            "Z2VSYW5nZUJhZGdlGA0gASgMEhsKE2ZhbWlseUNhdGVnb3J5QmFkZ2UYDiAB",
            "KAwiOgoLUGxheWVyQmFkZ2USKwoLb3ZlcmxheUljb24YASABKAsyFi5Hb29n",
            "bGVQbGF5U3RvcmUuSW1hZ2UiawoSRGlzY292ZXJ5QmFkZ2VMaW5rEiMKBGxp",
            "bmsYASABKAsyFS5Hb29nbGVQbGF5U3RvcmUuTGluaxIWCg51c2VyUmV2aWV3",
            "c1VybBgCIAEoCRIYChBjcml0aWNSZXZpZXdzVXJsGAMgASgJIm4KCEZlYXR1",
            "cmVzEjEKD2ZlYXR1cmVQcmVzZW5jZRgBIAMoCzIYLkdvb2dsZVBsYXlTdG9y",
            "ZS5GZWF0dXJlEi8KDWZlYXR1cmVSYXRpbmcYAiADKAsyGC5Hb29nbGVQbGF5",
            "U3RvcmUuRmVhdHVyZSInCgdGZWF0dXJlEg0KBWxhYmVsGAEgASgJEg0KBXZh",
            "bHVlGAMgASgJIpgFChhEZXZpY2VDb25maWd1cmF0aW9uUHJvdG8SEwoLdG91",
            "Y2hTY3JlZW4YASABKAUSEAoIa2V5Ym9hcmQYAiABKAUSEgoKbmF2aWdhdGlv",
            "bhgDIAEoBRIUCgxzY3JlZW5MYXlvdXQYBCABKAUSFwoPaGFzSGFyZEtleWJv",
            "YXJkGAUgASgIEhwKFGhhc0ZpdmVXYXlOYXZpZ2F0aW9uGAYgASgIEhUKDXNj",
            "cmVlbkRlbnNpdHkYByABKAUSEwoLZ2xFc1ZlcnNpb24YCCABKAUSGwoTc3lz",
            "dGVtU2hhcmVkTGlicmFyeRgJIAMoCRIeChZzeXN0ZW1BdmFpbGFibGVGZWF0",
            "dXJlGAogAygJEhYKDm5hdGl2ZVBsYXRmb3JtGAsgAygJEhMKC3NjcmVlbldp",
            "ZHRoGAwgASgFEhQKDHNjcmVlbkhlaWdodBgNIAEoBRIdChVzeXN0ZW1TdXBw",
            "b3J0ZWRMb2NhbGUYDiADKAkSEwoLZ2xFeHRlbnNpb24YDyADKAkSEwoLZGV2",
            "aWNlQ2xhc3MYECABKAUSIAoUbWF4QXBrRG93bmxvYWRTaXplTWIYESABKAU6",
            "AjUwEh0KFXNtYWxsZXN0U2NyZWVuV2lkdGhEUBgSIAEoBRIXCgxsb3dSYW1E",
            "ZXZpY2UYEyABKAU6ATASJAoQdG90YWxNZW1vcnlCeXRlcxgUIAEoAzoKODM1",
            "NDk3MTY0OBIcChFtYXhOdW1PZl9DUFVDb3JlcxgVIAEoBToBOBI1Cg1kZXZp",
            "Y2VGZWF0dXJlGBogAygLMh4uR29vZ2xlUGxheVN0b3JlLkRldmljZUZlYXR1",
            "cmUSFAoJdW5rbm93bjI4GBwgASgFOgEwEhQKCXVua25vd24zMBgeIAEoBToB",
            "NCIsCg1EZXZpY2VGZWF0dXJlEgwKBG5hbWUYASABKAkSDQoFdmFsdWUYAiAB",
            "KAUilwYKCERvY3VtZW50EiUKBURvY0lkGAEgASgLMhYuR29vZ2xlUGxheVN0",
            "b3JlLkRvY0lkEioKCmZldGNoRG9jSWQYAiABKAsyFi5Hb29nbGVQbGF5U3Rv",
            "cmUuRG9jSWQSKwoLc2FtcGxlRG9jSWQYAyABKAsyFi5Hb29nbGVQbGF5U3Rv",
            "cmUuRG9jSWQSDQoFdGl0bGUYBCABKAkSCwoDdXJsGAUgASgJEg8KB3NuaXBw",
            "ZXQYBiADKAkSLwoPcHJpY2VEZXByZWNhdGVkGAcgASgLMhYuR29vZ2xlUGxh",
            "eVN0b3JlLk9mZmVyEjMKDGF2YWlsYWJpbGl0eRgJIAEoCzIdLkdvb2dsZVBs",
            "YXlTdG9yZS5BdmFpbGFiaWxpdHkSJQoFaW1hZ2UYCiADKAsyFi5Hb29nbGVQ",
            "bGF5U3RvcmUuSW1hZ2USKAoFY2hpbGQYCyADKAsyGS5Hb29nbGVQbGF5U3Rv",
            "cmUuRG9jdW1lbnQSOQoPYWdncmVnYXRlUmF0aW5nGA0gASgLMiAuR29vZ2xl",
            "UGxheVN0b3JlLkFnZ3JlZ2F0ZVJhdGluZxIlCgVvZmZlchgOIAMoCzIWLkdv",
            "b2dsZVBsYXlTdG9yZS5PZmZlchI6ChF0cmFuc2xhdGVkU25pcHBldBgPIAMo",
            "CzIfLkdvb2dsZVBsYXlTdG9yZS5UcmFuc2xhdGVkVGV4dBI5Cg9kb2N1bWVu",
            "dFZhcmlhbnQYECADKAsyIC5Hb29nbGVQbGF5U3RvcmUuRG9jdW1lbnRWYXJp",
            "YW50EhIKCmNhdGVnb3J5SWQYESADKAkSLQoKZGVjb3JhdGlvbhgSIAMoCzIZ",
            "Lkdvb2dsZVBsYXlTdG9yZS5Eb2N1bWVudBIpCgZwYXJlbnQYEyADKAsyGS5H",
            "b29nbGVQbGF5U3RvcmUuRG9jdW1lbnQSGAoQcHJpdmFjeVBvbGljeVVybBgU",
            "IAEoCRIWCg5jb25zdW1wdGlvblVybBgVIAEoCRIcChRlc3RpbWF0ZWROdW1D",
            "aGlsZHJlbhgWIAEoBRIQCghzdWJ0aXRsZRgXIAEoCSKeAwoPRG9jdW1lbnRW",
            "YXJpYW50EhUKDXZhcmlhdGlvblR5cGUYASABKAUSIwoEcnVsZRgCIAEoCzIV",
            "Lkdvb2dsZVBsYXlTdG9yZS5SdWxlEg0KBXRpdGxlGAMgASgJEg8KB3NuaXBw",
            "ZXQYBCADKAkSFQoNcmVjZW50Q2hhbmdlcxgFIAEoCRI4Cg9hdXRvVHJhbnNs",
            "YXRpb24YBiADKAsyHy5Hb29nbGVQbGF5U3RvcmUuVHJhbnNsYXRlZFRleHQS",
            "JQoFb2ZmZXIYByADKAsyFi5Hb29nbGVQbGF5U3RvcmUuT2ZmZXISEQoJY2hh",
            "bm5lbElkGAkgASgDEigKBWNoaWxkGAogAygLMhkuR29vZ2xlUGxheVN0b3Jl",
            "LkRvY3VtZW50Ei0KCmRlY29yYXRpb24YCyADKAsyGS5Hb29nbGVQbGF5U3Rv",
            "cmUuRG9jdW1lbnQSJQoFaW1hZ2UYDCADKAsyFi5Hb29nbGVQbGF5U3RvcmUu",
            "SW1hZ2USEgoKY2F0ZWdvcnlJZBgNIAMoCRIQCghzdWJ0aXRsZRgOIAEoCSJH",
            "CgxTZWN0aW9uSW1hZ2USNwoOaW1hZ2VDb250YWluZXIYASADKAsyHy5Hb29n",
            "bGVQbGF5U3RvcmUuSW1hZ2VDb250YWluZXIiNwoOSW1hZ2VDb250YWluZXIS",
            "JQoFaW1hZ2UYBCABKAsyFi5Hb29nbGVQbGF5U3RvcmUuSW1hZ2Ui/AQKBUlt",
            "YWdlEhEKCWltYWdlVHlwZRgBIAEoBRIzCglkaW1lbnNpb24YAiABKAoyIC5H",
            "b29nbGVQbGF5U3RvcmUuSW1hZ2UuRGltZW5zaW9uEhAKCGltYWdlVXJsGAUg",
            "ASgJEhgKEGFsdFRleHRMb2NhbGl6ZWQYBiABKAkSEQoJc2VjdXJlVXJsGAcg",
            "ASgJEhoKEnBvc2l0aW9uSW5TZXF1ZW5jZRgIIAEoBRIeChZzdXBwb3J0c0Zp",
            "ZmVVcmxPcHRpb25zGAkgASgIEjEKCGNpdGF0aW9uGAogASgKMh8uR29vZ2xl",
            "UGxheVN0b3JlLkltYWdlLkNpdGF0aW9uEhcKD2R1cmF0aW9uU2Vjb25kcxgO",
            "IAEoBRIUCgxmaWxsQ29sb3JSR0IYDyABKAkSDwoHYXV0b2dlbhgQIAEoCBIx",
            "CgthdHRyaWJ1dGlvbhgRIAEoCzIcLkdvb2dsZVBsYXlTdG9yZS5BdHRyaWJ1",
            "dGlvbhIaChJiYWNrZ3JvdW5kQ29sb3JSZ2IYEyABKAkSLgoHcGFsZXR0ZRgU",
            "IAEoCzIdLkdvb2dsZVBsYXlTdG9yZS5JbWFnZVBhbGV0dGUSEwoLZGV2aWNl",
            "Q2xhc3MYFSABKAUSIgoac3VwcG9ydHNGaWZlTW9ub2dyYW1PcHRpb24YFiAB",
            "KAgSEwoLaW1hZ2VVcmxBbHQYHCABKAkaPwoJRGltZW5zaW9uEg0KBXdpZHRo",
            "GAMgASgFEg4KBmhlaWdodBgEIAEoBRITCgthc3BlY3RSYXRpbxgSIAEoBRov",
            "CghDaXRhdGlvbhIWCg50aXRsZUxvY2FsaXplZBgLIAEoCRILCgN1cmwYDCAB",
            "KAkiXwoLQXR0cmlidXRpb24SEwoLc291cmNlVGl0bGUYASABKAkSEQoJc291",
            "cmNlVXJsGAIgASgJEhQKDGxpY2Vuc2VUaXRsZRgDIAEoCRISCgpsaWNlbnNl",
            "VXJsGAQgASgJIpIBCgxJbWFnZVBhbGV0dGUSFwoPbGlnaHRWaWJyYW50UkdC",
            "GAEgASgJEhIKCnZpYnJhbnRSR0IYAiABKAkSFgoOZGFya1ZpYnJhbnRSR0IY",
            "AyABKAkSFQoNbGlnaHRNdXRlZFJHQhgEIAEoCRIQCghtdXRlZFJHQhgFIAEo",
            "CRIUCgxkYXJrTXV0ZWRSR0IYBiABKAkiSgoOVHJhbnNsYXRlZFRleHQSDAoE",
            "dGV4dBgBIAEoCRIUCgxzb3VyY2VMb2NhbGUYAiABKAkSFAoMdGFyZ2V0TG9j",
            "YWxlGAMgASgJInkKC1BsdXNPbmVEYXRhEhEKCXNldEJ5VXNlchgBIAEoCBIN",
            "CgV0b3RhbBgCIAEoAxIUCgxjaXJjbGVzVG90YWwYAyABKAMSMgoNY2lyY2xl",
            "c1Blb3BsZRgEIAMoCzIbLkdvb2dsZVBsYXlTdG9yZS5QbHVzUGVyc29uIjoK",
            "ClBsdXNQZXJzb24SEwoLZGlzcGxheU5hbWUYAiABKAkSFwoPcHJvZmlsZUlt",
            "YWdlVXJsGAQgASgJIpEKCgpBcHBEZXRhaWxzEhUKDWRldmVsb3Blck5hbWUY",
            "ASABKAkSGgoSbWFqb3JWZXJzaW9uTnVtYmVyGAIgASgFEhMKC3ZlcnNpb25D",
            "b2RlGAMgASgFEhUKDXZlcnNpb25TdHJpbmcYBCABKAkSDQoFdGl0bGUYBSAB",
            "KAkSEwoLYXBwQ2F0ZWdvcnkYByADKAkSFQoNY29udGVudFJhdGluZxgIIAEo",
            "BRIYChBpbmZvRG93bmxvYWRTaXplGAkgASgDEhIKCnBlcm1pc3Npb24YCiAD",
            "KAkSFgoOZGV2ZWxvcGVyRW1haWwYCyABKAkSGAoQZGV2ZWxvcGVyV2Vic2l0",
            "ZRgMIAEoCRIUCgxpbmZvRG93bmxvYWQYDSABKAkSEwoLcGFja2FnZU5hbWUY",
            "DiABKAkSGQoRcmVjZW50Q2hhbmdlc0h0bWwYDyABKAkSFQoNaW5mb1VwZGF0",
            "ZWRPbhgQIAEoCRIrCgRmaWxlGBEgAygLMh0uR29vZ2xlUGxheVN0b3JlLkZp",
            "bGVNZXRhZGF0YRIPCgdhcHBUeXBlGBIgASgJEhcKD2NlcnRpZmljYXRlSGFz",
            "aBgTIAMoCRIeChB2YXJpZXNXaXRoRGV2aWNlGBUgASgIOgR0cnVlEjcKDmNl",
            "cnRpZmljYXRlU2V0GBYgAygLMh8uR29vZ2xlUGxheVN0b3JlLkNlcnRpZmlj",
            "YXRlU2V0EjUKLWF1dG9BY3F1aXJlRnJlZUFwcElmSGlnaGVyVmVyc2lvbkF2",
            "YWlsYWJsZVRhZxgXIAMoCRIXCg9oYXNJbnN0YW50TGluazIYGCABKAgSDwoH",
            "c3BsaXRJZBgZIAMoCRIXCg9nYW1lcGFkUmVxdWlyZWQYGiABKAgSGAoQZXh0",
            "ZXJuYWxseUhvc3RlZBgbIAEoCBIcChRldmVyRXh0ZXJuYWxseUhvc3RlZBgc",
            "IAEoCBIUCgxpbnN0YWxsTm90ZXMYHiABKAkSFwoPaW5zdGFsbExvY2F0aW9u",
            "GB8gASgFEhgKEHRhcmdldFNka1ZlcnNpb24YICABKAUSIwobaGFzUHJlcmVn",
            "aXN0cmF0aW9uUHJvbW9Db2RlGCEgASgJEjMKDGRlcGVuZGVuY2llcxgiIAEo",
            "CzIdLkdvb2dsZVBsYXlTdG9yZS5EZXBlbmRlbmNpZXMSPwoSdGVzdGluZ1By",
            "b2dyYW1JbmZvGCMgASgLMiMuR29vZ2xlUGxheVN0b3JlLlRlc3RpbmdQcm9n",
            "cmFtSW5mbxI5Cg9lYXJseUFjY2Vzc0luZm8YJCABKAsyIC5Hb29nbGVQbGF5",
            "U3RvcmUuRWFybHlBY2Nlc3NJbmZvEjMKDGVkaXRvckNob2ljZRgpIAEoCzId",
            "Lkdvb2dsZVBsYXlTdG9yZS5FZGl0b3JDaG9pY2USEwoLaW5zdGFudExpbmsY",
            "KyABKAkSGAoQZGV2ZWxvcGVyQWRkcmVzcxgtIAEoCRItCglwdWJsaXNoZXIY",
            "LiABKAsyGi5Hb29nbGVQbGF5U3RvcmUuUHVibGlzaGVyEhQKDGNhdGVnb3J5",
            "TmFtZRgwIAEoCRIVCg1kb3dubG9hZENvdW50GDUgASgDEhwKFGRvd25sb2Fk",
            "TGFiZWxEaXNwbGF5GD0gASgJEhQKDGluQXBwUHJvZHVjdBhDIAEoCRIgChhk",
            "b3dubG9hZExhYmVsQWJicmV2aWF0ZWQYTSABKAkSFQoNZG93bmxvYWRMYWJl",
            "bBhOIAEoCSJKCg1Nb2RpZnlMaWJyYXJ5EgoKAmlkGAEgASgJEhQKDHBhY2th",
            "Z2VUb0FkZBgCIAEoCRIXCg9wYWNrYWdlVG9SZW1vdmUYAyABKAkiRgoJUHVi",
            "bGlzaGVyEjkKD3B1Ymxpc2hlclN0cmVhbRgCIAEoCzIgLkdvb2dsZVBsYXlT",
            "dG9yZS5QdWJsaXNoZXJTdHJlYW0iMQoPUHVibGlzaGVyU3RyZWFtEg8KB21v",
            "cmVVcmwYAyABKAkSDQoFcXVlcnkYCyABKAkigwEKDEVkaXRvckNob2ljZRIR",
            "CglidWxsZXRpbnMYASADKAkSEwoLZGVzY3JpcHRpb24YAiABKAkSKgoGc3Ry",
            "ZWFtGAMgASgLMhouR29vZ2xlUGxheVN0b3JlLlN1YlN0cmVhbRINCgV0aXRs",
            "ZRgEIAEoCRIQCghzdWJ0aXRsZRgFIAEoCSI5Cg5DZXJ0aWZpY2F0ZVNldBIX",
            "Cg9jZXJ0aWZpY2F0ZUhhc2gYASADKAkSDgoGc2hhMjU2GAIgAygJIpYBCgxE",
            "ZXBlbmRlbmNpZXMSDwoHdW5rbm93bhgBIAEoBRIMCgRzaXplGAIgASgDEi8K",
            "CmRlcGVuZGVuY3kYAyADKAsyGy5Hb29nbGVQbGF5U3RvcmUuRGVwZW5kZW5j",
            "eRIRCgl0YXJnZXRTZGsYBCABKAUSEAoIdW5rbm93bjIYBSABKAUSEQoJc3Bs",
            "aXRBcGtzGAsgAygJIkQKCkRlcGVuZGVuY3kSEwoLcGFja2FnZU5hbWUYASAB",
            "KAkSDwoHdmVyc2lvbhgCIAEoBRIQCgh1bmtub3duNBgEIAEoBSKTAQoSVGVz",
            "dGluZ1Byb2dyYW1JbmZvEhIKCnN1YnNjcmliZWQYAiABKAgSHgoWc3Vic2Ny",
            "aWJlZEFuZEluc3RhbGxlZBgDIAEoCBINCgVlbWFpbBgFIAEoCRITCgtkaXNw",
            "bGF5TmFtZRgHIAEoCRIlCgVpbWFnZRgGIAEoCzIWLkdvb2dsZVBsYXlTdG9y",
            "ZS5JbWFnZSIgCg9FYXJseUFjY2Vzc0luZm8SDQoFZW1haWwYAyABKAkihQEK",
            "D0RvY3VtZW50RGV0YWlscxIvCgphcHBEZXRhaWxzGAEgASgLMhsuR29vZ2xl",
            "UGxheVN0b3JlLkFwcERldGFpbHMSQQoTc3Vic2NyaXB0aW9uRGV0YWlscxgH",
            "IAEoCzIkLkdvb2dsZVBsYXlTdG9yZS5TdWJzY3JpcHRpb25EZXRhaWxzIjUK",
            "DFBhdGNoRGV0YWlscxIXCg9iYXNlVmVyc2lvbkNvZGUYASABKAUSDAoEc2l6",
            "ZRgCIAEoAyKhAQoMRmlsZU1ldGFkYXRhEhAKCGZpbGVUeXBlGAEgASgFEhMK",
            "C3ZlcnNpb25Db2RlGAIgASgFEgwKBHNpemUYAyABKAMSDwoHc3BsaXRJZBgE",
            "IAEoCRIWCg5jb21wcmVzc2VkU2l6ZRgFIAEoAxIzCgxwYXRjaERldGFpbHMY",
            "BiADKAsyHS5Hb29nbGVQbGF5U3RvcmUuUGF0Y2hEZXRhaWxzIjEKE1N1YnNj",
            "cmlwdGlvbkRldGFpbHMSGgoSc3Vic2NyaXB0aW9uUGVyaW9kGAEgASgFIt8B",
            "CgZCdWNrZXQSEwoLbXVsdGlDb3JwdXMYAiABKAgSDQoFdGl0bGUYAyABKAkS",
            "DwoHaWNvblVybBgEIAEoCRIXCg9mdWxsQ29udGVudHNVcmwYBSABKAkSEQoJ",
            "cmVsZXZhbmNlGAYgASgBEhgKEGVzdGltYXRlZFJlc3VsdHMYByABKAMSFwoP",
            "YW5hbHl0aWNzQ29va2llGAggASgJEhsKE2Z1bGxDb250ZW50c0xpc3RVcmwY",
            "CSABKAkSEwoLbmV4dFBhZ2VVcmwYCiABKAkSDwoHb3JkZXJlZBgLIAEoCCJc",
            "CgxMaXN0UmVzcG9uc2USJwoGYnVja2V0GAEgAygLMhcuR29vZ2xlUGxheVN0",
            "b3JlLkJ1Y2tldBIjCgRpdGVtGAIgAygLMhUuR29vZ2xlUGxheVN0b3JlLkl0",
            "ZW0ikggKBEl0ZW0SCgoCaWQYASABKAkSDQoFc3ViSWQYAiABKAkSDAoEdHlw",
            "ZRgDIAEoBRISCgpjYXRlZ29yeUlkGAQgASgFEg0KBXRpdGxlGAUgASgJEg8K",
            "B2NyZWF0b3IYBiABKAkSFwoPZGVzY3JpcHRpb25IdG1sGAcgASgJEiUKBW9m",
            "ZmVyGAggAygLMhYuR29vZ2xlUGxheVN0b3JlLk9mZmVyEjMKDGF2YWlsYWJp",
            "bGl0eRgJIAEoCzIdLkdvb2dsZVBsYXlTdG9yZS5BdmFpbGFiaWxpdHkSJQoF",
            "aW1hZ2UYCiADKAsyFi5Hb29nbGVQbGF5U3RvcmUuSW1hZ2USJgoHc3ViSXRl",
            "bRgLIAMoCzIVLkdvb2dsZVBsYXlTdG9yZS5JdGVtEj0KEWNvbnRhaW5lck1l",
            "dGFkYXRhGAwgASgLMiIuR29vZ2xlUGxheVN0b3JlLkNvbnRhaW5lck1ldGFk",
            "YXRhEjEKB2RldGFpbHMYDSABKAsyIC5Hb29nbGVQbGF5U3RvcmUuRG9jdW1l",
            "bnREZXRhaWxzEjkKD2FnZ3JlZ2F0ZVJhdGluZxgOIAEoCzIgLkdvb2dsZVBs",
            "YXlTdG9yZS5BZ2dyZWdhdGVSYXRpbmcSMQoLYW5ub3RhdGlvbnMYDyABKAsy",
            "HC5Hb29nbGVQbGF5U3RvcmUuQW5ub3RhdGlvbnMSEgoKZGV0YWlsc1VybBgQ",
            "IAEoCRIQCghzaGFyZVVybBgRIAEoCRISCgpyZXZpZXdzVXJsGBIgASgJEhIK",
            "CmJhY2tlbmRVcmwYEyABKAkSGgoScHVyY2hhc2VEZXRhaWxzVXJsGBQgASgJ",
            "EhcKD2RldGFpbHNSZXVzYWJsZRgVIAEoCBIQCghzdWJ0aXRsZRgWIAEoCRIh",
            "Chl0cmFuc2xhdGVkRGVzY3JpcHRpb25IdG1sGBcgASgJEhgKEHNlcnZlckxv",
            "Z3NDb29raWUYGCABKAwSKQoHYXBwSW5mbxgZIAEoCzIYLkdvb2dsZVBsYXlT",
            "dG9yZS5BcHBJbmZvEg4KBm1hdHVyZRgaIAEoCBIeChZwcm9tb3Rpb25hbERl",
            "c2NyaXB0aW9uGBsgASgJEiMKG2F2YWlsYWJsZUZvclByZXJlZ2lzdHJhdGlv",
            "bhgdIAEoCBInCgN0aXAYHiADKAsyGi5Hb29nbGVQbGF5U3RvcmUuUmV2aWV3",
            "VGlwEhkKEXJldmlld1NuaXBwZXRzVXJsGB8gASgJEhkKEWZvcmNlU2hhcmVh",
            "YmlsaXR5GCAgASgIEiIKGnVzZVdpc2hsaXN0QXNQcmltYXJ5QWN0aW9uGCEg",
            "ASgIEhoKEnJldmlld1F1ZXN0aW9uc1VybBgiIAEoCRIYChByZXZpZXdTdW1t",
            "YXJ5VXJsGCcgASgJIkoKB0FwcEluZm8SDQoFdGl0bGUYASABKAkSMAoHc2Vj",
            "dGlvbhgCIAMoCzIfLkdvb2dsZVBsYXlTdG9yZS5BcHBJbmZvU2VjdGlvbiJV",
            "Cg5BcHBJbmZvU2VjdGlvbhINCgVsYWJlbBgBIAEoCRI0Cgljb250YWluZXIY",
            "AyABKAsyIS5Hb29nbGVQbGF5U3RvcmUuQXBwSW5mb0NvbnRhaW5lciJOChBB",
            "cHBJbmZvQ29udGFpbmVyEiUKBWltYWdlGAEgASgLMhYuR29vZ2xlUGxheVN0",
            "b3JlLkltYWdlEhMKC2Rlc2NyaXB0aW9uGAIgASgJIpESCgtBbm5vdGF0aW9u",
            "cxI4Cg5zZWN0aW9uUmVsYXRlZBgBIAEoCzIgLkdvb2dsZVBsYXlTdG9yZS5T",
            "ZWN0aW9uTWV0YURhdGESNwoNc2VjdGlvbk1vcmVCeRgCIAEoCzIgLkdvb2ds",
            "ZVBsYXlTdG9yZS5TZWN0aW9uTWV0YURhdGESKQoHd2FybmluZxgEIAMoCzIY",
            "Lkdvb2dsZVBsYXlTdG9yZS5XYXJuaW5nEjsKEXNlY3Rpb25Cb2R5T2ZXb3Jr",
            "GAUgASgLMiAuR29vZ2xlUGxheVN0b3JlLlNlY3Rpb25NZXRhRGF0YRI8ChJz",
            "ZWN0aW9uQ29yZUNvbnRlbnQYBiABKAsyIC5Hb29nbGVQbGF5U3RvcmUuU2Vj",
            "dGlvbk1ldGFEYXRhEjkKD292ZXJsYXlNZXRhRGF0YRgHIAEoCzIgLkdvb2ds",
            "ZVBsYXlTdG9yZS5PdmVybGF5TWV0YURhdGESLwoPYmFkZ2VGb3JDcmVhdG9y",
            "GAggAygLMhYuR29vZ2xlUGxheVN0b3JlLkJhZGdlEikKCWluZm9CYWRnZRgJ",
            "IAMoCzIWLkdvb2dsZVBsYXlTdG9yZS5CYWRnZRI3Cg5hbm5vdGF0aW9uTGlu",
            "axgKIAEoCzIfLkdvb2dsZVBsYXlTdG9yZS5Bbm5vdGF0aW9uTGluaxI6ChBz",
            "ZWN0aW9uQ3Jvc3NTZWxsGAsgASgLMiAuR29vZ2xlUGxheVN0b3JlLlNlY3Rp",
            "b25NZXRhRGF0YRJAChZzZWN0aW9uUmVsYXRlZEl0ZW1UeXBlGAwgASgLMiAu",
            "R29vZ2xlUGxheVN0b3JlLlNlY3Rpb25NZXRhRGF0YRIxCgtwcm9tb3RlZERv",
            "YxgNIAMoCzIcLkdvb2dsZVBsYXlTdG9yZS5Qcm9tb3RlZERvYxIRCglvZmZl",
            "ck5vdGUYDiABKAkSGAoQcHJpdmFjeVBvbGljeVVybBgSIAEoCRI+ChJzdWdn",
            "ZXN0aW9uX3JlYXNvbnMYEyABKAsyIi5Hb29nbGVQbGF5U3RvcmUuU3VnZ2Vz",
            "dGlvblJlYXNvbnMSOwoZb3B0aW1hbERldmljZUNsYXNzV2FybmluZxgUIAEo",
            "CzIYLkdvb2dsZVBsYXlTdG9yZS5XYXJuaW5nEjcKDmJhZGdlQ29udGFpbmVy",
            "GBUgAygLMh8uR29vZ2xlUGxheVN0b3JlLkJhZGdlQ29udGFpbmVyEkEKF3Nl",
            "Y3Rpb25TdWdnZXN0Rm9yUmF0aW5nGBYgASgLMiAuR29vZ2xlUGxheVN0b3Jl",
            "LlNlY3Rpb25NZXRhRGF0YRJCChhzZWN0aW9uUHVyY2hhc2VDcm9zc1NlbGwY",
            "GCABKAsyIC5Hb29nbGVQbGF5U3RvcmUuU2VjdGlvbk1ldGFEYXRhEjMKDG92",
            "ZXJmbG93TGluaxgZIAMoCzIdLkdvb2dsZVBsYXlTdG9yZS5PdmVyZmxvd0xp",
            "bmsSFwoPYXR0cmlidXRpb25IdG1sGBsgASgJEkcKFnB1cmNoYXNlSGlzdG9y",
            "eURldGFpbHMYHCABKAsyJy5Hb29nbGVQbGF5U3RvcmUuUHVyY2hhc2VIaXN0",
            "b3J5RGV0YWlscxI0ChRiYWRnZUZvckxlZ2FjeVJhdGluZxgdIAEoCzIWLkdv",
            "b2dsZVBsYXlTdG9yZS5CYWRnZRIxCgt2b3VjaGVySW5mbxgeIAMoCzIcLkdv",
            "b2dsZVBsYXlTdG9yZS5Wb3VjaGVySW5mbxI9ChNzZWN0aW9uRmVhdHVyZWRB",
            "cHBzGCAgASgLMiAuR29vZ2xlUGxheVN0b3JlLlNlY3Rpb25NZXRhRGF0YRI8",
            "ChJkZXRhaWxzUGFnZUNsdXN0ZXIYIiADKAsyIC5Hb29nbGVQbGF5U3RvcmUu",
            "U2VjdGlvbk1ldGFEYXRhEjsKEHZpZGVvQW5ub3RhdGlvbnMYIyABKAsyIS5H",
            "b29nbGVQbGF5U3RvcmUuVmlkZW9Bbm5vdGF0aW9ucxJGChxzZWN0aW9uUHVy",
            "Y2hhc2VSZWxhdGVkVG9waWNzGCQgASgLMiAuR29vZ2xlUGxheVN0b3JlLlNl",
            "Y3Rpb25NZXRhRGF0YRJFChVteVN1YnNjcmlwdGlvbkRldGFpbHMYJSABKAsy",
            "Ji5Hb29nbGVQbGF5U3RvcmUuTXlTdWJzY3JpcHRpb25EZXRhaWxzEjkKD215",
            "UmV3YXJkRGV0YWlscxgmIAEoCzIgLkdvb2dsZVBsYXlTdG9yZS5NeVJld2Fy",
            "ZERldGFpbHMSLAoMZmVhdHVyZUJhZGdlGCcgAygLMhYuR29vZ2xlUGxheVN0",
            "b3JlLkJhZGdlEikKB3NuaXBwZXQYKiABKAsyGC5Hb29nbGVQbGF5U3RvcmUu",
            "U25pcHBldBIWCg5kb3dubG9hZHNMYWJlbBgwIAEoCRIuCg5iYWRnZUZvclJh",
            "dGluZxgyIAEoCzIWLkdvb2dsZVBsYXlTdG9yZS5CYWRnZRIzCgxjYXRlZ29y",
            "eUluZm8YNSABKAsyHS5Hb29nbGVQbGF5U3RvcmUuQ2F0ZWdvcnlJbmZvEi4K",
            "B3JlYXNvbnMYPCABKAsyHS5Hb29nbGVQbGF5U3RvcmUuRWRpdG9yUmVhc29u",
            "Ei8KDnRvcENoYXJ0U3RyZWFtGEEgASgLMhcuR29vZ2xlUGxheVN0b3JlLlN0",
            "cmVhbRIUCgxjYXRlZ29yeU5hbWUYQiABKAkSIwoEY2hpcBhHIAMoCzIVLkdv",
            "b2dsZVBsYXlTdG9yZS5DaGlwEiwKDGRpc3BsYXlCYWRnZRhIIAMoCzIWLkdv",
            "b2dsZVBsYXlTdG9yZS5CYWRnZRIVCg1saXZlU3RyZWFtVXJsGFAgASgJEhoK",
            "EnByb21vdGlvblN0cmVhbVVybBhVIAEoCRI+ChRvdmVybGF5TWV0YURhdGFF",
            "eHRyYRhbIAEoCzIgLkdvb2dsZVBsYXlTdG9yZS5PdmVybGF5TWV0YURhdGES",
            "MwoMc2VjdGlvbkltYWdlGF4gASgLMh0uR29vZ2xlUGxheVN0b3JlLlNlY3Rp",
            "b25JbWFnZRIyCg5jYXRlZ29yeVN0cmVhbRhhIAEoCzIaLkdvb2dsZVBsYXlT",
            "dG9yZS5TdWJTdHJlYW0iNQoMRWRpdG9yUmVhc29uEhAKCGJ1bGxldGluGAEg",
            "AygJEhMKC2Rlc2NyaXB0aW9uGAIgASgJIloKD1NlY3Rpb25NZXRhRGF0YRIO",
            "CgZoZWFkZXIYASABKAkSDwoHbGlzdFVybBgCIAEoCRIRCglicm93c2VVcmwY",
            "AyABKAkSEwoLZGVzY3JpcHRpb24YBCABKAkiwAEKD092ZXJsYXlNZXRhRGF0",
            "YRI1Cg1vdmVybGF5SGVhZGVyGAEgASgLMh4uR29vZ2xlUGxheVN0b3JlLk92",
            "ZXJsYXlIZWFkZXISNAoMb3ZlcmxheVRpdGxlGLUBIAEoCzIdLkdvb2dsZVBs",
            "YXlTdG9yZS5PdmVybGF5VGl0bGUSQAoSb3ZlcmxheURlc2NyaXB0aW9uGLYB",
            "IAEoCzIjLkdvb2dsZVBsYXlTdG9yZS5PdmVybGF5RGVzY3JpcHRpb24iDwoN",
            "T3ZlcmxheUhlYWRlciJWCgxPdmVybGF5VGl0bGUSDQoFdGl0bGUYASABKAkS",
            "NwoOY29tcG9zaXRlSW1hZ2UYAyABKAsyHy5Hb29nbGVQbGF5U3RvcmUuQ29t",
            "cG9zaXRlSW1hZ2UiWwoOQ29tcG9zaXRlSW1hZ2USDAoEdHlwZRgBIAEoBRIL",
            "CgN1cmwYBSABKAkSDwoHdHlwZUFsdBgJIAEoBRINCgV0aXRsZRgYIAEoCRIO",
            "CgZ1cmxBbHQYHCABKAkiKQoST3ZlcmxheURlc2NyaXB0aW9uEhMKC2Rlc2Ny",
            "aXB0aW9uGAIgASgJIqkBChFTdWdnZXN0aW9uUmVhc29ucxInCgZyZWFzb24Y",
            "AiADKAsyFy5Hb29nbGVQbGF5U3RvcmUuUmVhc29uEjQKEG5ldXRyYWxEaXNt",
            "aXNzYWwYBCABKAsyGi5Hb29nbGVQbGF5U3RvcmUuRGlzbWlzc2FsEjUKEXBv",
            "c2l0aXZlRGlzbWlzc2FsGAUgASgLMhouR29vZ2xlUGxheVN0b3JlLkRpc21p",
            "c3NhbCL5AQoGUmVhc29uEhcKD2Rlc2NyaXB0aW9uSHRtbBgDIAEoCRI1Cg1y",
            "ZWFzb25QbHVzT25lGAQgASgLMh4uR29vZ2xlUGxheVN0b3JlLlJlYXNvblBs",
            "dXNPbmUSMwoMcmVhc29uUmV2aWV3GAUgASgLMh0uR29vZ2xlUGxheVN0b3Jl",
            "LlJlYXNvblJldmlldxItCglkaXNtaXNzYWwYByABKAsyGi5Hb29nbGVQbGF5",
            "U3RvcmUuRGlzbWlzc2FsEjsKEHJlYXNvblVzZXJBY3Rpb24YCSABKAsyIS5H",
            "b29nbGVQbGF5U3RvcmUuUmVhc29uVXNlckFjdGlvbiJkCg1SZWFzb25QbHVz",
            "T25lEiAKGGxvY2FsaXplZERlc2NyaXB0aW9uSHRtbBgBIAEoCRIxCgt1c2Vy",
            "UHJvZmlsZRgDIAMoCzIcLkdvb2dsZVBsYXlTdG9yZS5Vc2VyUHJvZmlsZSI3",
            "CgxSZWFzb25SZXZpZXcSJwoGcmV2aWV3GAEgASgLMhcuR29vZ2xlUGxheVN0",
            "b3JlLlJldmlldyJnChBSZWFzb25Vc2VyQWN0aW9uEjEKC3VzZXJQcm9maWxl",
            "GAEgASgLMhwuR29vZ2xlUGxheVN0b3JlLlVzZXJQcm9maWxlEiAKGGxvY2Fs",
            "aXplZERlc2NyaXB0aW9uSHRtbBgCIAEoCSIxCglEaXNtaXNzYWwSCwoDdXJs",
            "GAEgASgJEhcKD2Rlc2NyaXB0aW9uSHRtbBgCIAEoCSIeCgdTbmlwcGV0EhMK",
            "C3NuaXBwZXRIdG1sGAEgASgJIo4BCg9NeVJld2FyZERldGFpbHMSHAoUZXhw",
            "aXJhdGlvblRpbWVNaWxsaXMYASABKAMSHQoVZXhwaXJhdGlvbkRlc2NyaXB0",
            "aW9uGAIgASgJEhMKC2J1dHRvbkxhYmVsGAMgASgJEikKCmxpbmtBY3Rpb24Y",
            "BCABKAsyFS5Hb29nbGVQbGF5U3RvcmUuTGluayKxAgoVTXlTdWJzY3JpcHRp",
            "b25EZXRhaWxzEh4KFnN1YnNjcmlwdGlvblN0YXR1c0h0bWwYASABKAkSDQoF",
            "dGl0bGUYAiABKAkSFwoPdGl0bGVCeUxpbmVIdG1sGAMgASgJEhYKDmZvcm1h",
            "dHRlZFByaWNlGAQgASgJEhcKD3ByaWNlQnlMaW5lSHRtbBgFIAEoCRIaChJj",
            "YW5jZWxTdWJzY3JpcHRpb24YBiABKAgSOwoccGF5bWVudERlY2xpbmVkTGVh",
            "cm5Nb3JlTGluaxgHIAEoCzIVLkdvb2dsZVBsYXlTdG9yZS5MaW5rEhUKDWlu",
            "VHJpYWxQZXJpb2QYCCABKAgSLwoPdGl0bGVCeUxpbmVJY29uGAkgASgLMhYu",
            "R29vZ2xlUGxheVN0b3JlLkltYWdlIqsBChBWaWRlb0Fubm90YXRpb25zEg4K",
            "BmJ1bmRsZRgBIAEoCBIcChRidW5kbGVDb250ZW50TGlzdFVybBgCIAEoCRIc",
            "ChRleHRyYXNDb250ZW50TGlzdFVybBgDIAEoCRIeChZhbHNvQXZhaWxhYmxl",
            "SW5MaXN0VXJsGAQgASgJEisKC2J1bmRsZURvY0lkGAUgAygLMhYuR29vZ2xl",
            "UGxheVN0b3JlLkRvY0lkIlkKC1ZvdWNoZXJJbmZvEiMKBGl0ZW0YASABKAsy",
            "FS5Hb29nbGVQbGF5U3RvcmUuSXRlbRIlCgVvZmZlchgCIAMoCzIWLkdvb2ds",
            "ZVBsYXlTdG9yZS5PZmZlciJtCg5CYWRnZUNvbnRhaW5lchINCgV0aXRsZRgB",
            "IAEoCRIlCgVpbWFnZRgCIAMoCzIWLkdvb2dsZVBsYXlTdG9yZS5JbWFnZRIl",
            "CgViYWRnZRgDIAMoCzIWLkdvb2dsZVBsYXlTdG9yZS5CYWRnZSJCCgxPdmVy",
            "Zmxvd0xpbmsSDQoFdGl0bGUYASABKAkSIwoEbGluaxgCIAEoCzIVLkdvb2ds",
            "ZVBsYXlTdG9yZS5MaW5rIn4KC1Byb21vdGVkRG9jEg0KBXRpdGxlGAEgASgJ",
            "EhAKCHN1YnRpdGxlGAIgASgJEiUKBWltYWdlGAMgAygLMhYuR29vZ2xlUGxh",
            "eVN0b3JlLkltYWdlEhMKC2Rlc2NyaXB0aW9uGAQgASgJEhIKCmRldGFpbHNV",
            "cmwYBSABKAkiIwoHV2FybmluZxIYChBsb2NhbGl6ZWRNZXNzYWdlGAEgASgJ",
            "ImYKDkFubm90YXRpb25MaW5rEgsKA3VyaRgBIAEoCRIzCgxyZXNvbHZlZExp",
            "bmsYAiABKAsyHS5Hb29nbGVQbGF5U3RvcmUuUmVzb2x2ZWRMaW5rEhIKCnVy",
            "aUJhY2tlbmQYAyABKAUiWAoFUmF0ZWQSDQoFbGFiZWwYASABKAkSJQoFaW1h",
            "Z2UYAiABKAsyFi5Hb29nbGVQbGF5U3RvcmUuSW1hZ2USGQoRbGVhcm5Nb3Jl",
            "SHRtbExpbmsYBCABKAki+AEKBUJhZGdlEg0KBW1ham9yGAEgASgJEiUKBWlt",
            "YWdlGAIgASgLMhYuR29vZ2xlUGxheVN0b3JlLkltYWdlEg0KBW1pbm9yGAMg",
            "ASgJEhEKCW1pbm9ySHRtbBgEIAEoCRIrCghzdWJCYWRnZRgGIAEoCzIZLkdv",
            "b2dsZVBsYXlTdG9yZS5TdWJCYWRnZRIpCgRsaW5rGAcgASgLMhsuR29vZ2xl",
            "UGxheVN0b3JlLlN0cmVhbUxpbmsSEwoLZGVzY3JpcHRpb24YCCABKAkSKgoG",
            "c3RyZWFtGAwgASgLMhouR29vZ2xlUGxheVN0b3JlLlN1YlN0cmVhbSJxCghT",
            "dWJCYWRnZRIlCgVpbWFnZRgBIAEoCzIWLkdvb2dsZVBsYXlTdG9yZS5JbWFn",
            "ZRITCgtkZXNjcmlwdGlvbhgEIAEoCRIpCgRsaW5rGAUgASgLMhsuR29vZ2xl",
            "UGxheVN0b3JlLlN0cmVhbUxpbmsiVQoGU3RyZWFtEg0KBXRpdGxlGAEgASgJ",
            "EioKBnN0cmVhbRgCIAEoCzIaLkdvb2dsZVBsYXlTdG9yZS5TdWJTdHJlYW0S",
            "EAoIc3VidGl0bGUYAyABKAkiNgoJU3ViU3RyZWFtEikKBGxpbmsYAiABKAsy",
            "Gy5Hb29nbGVQbGF5U3RvcmUuU3RyZWFtTGluayJcCgRMaW5rEgsKA3VyaRgB",
            "IAEoCRIzCgxyZXNvbHZlZExpbmsYAiABKAsyHS5Hb29nbGVQbGF5U3RvcmUu",
            "UmVzb2x2ZWRMaW5rEhIKCnVyaUJhY2tlbmQYAyABKAUibAoKU3RyZWFtTGlu",
            "axILCgN1cmwYASABKAkSEQoJc3RyZWFtVXJsGAIgASgJEhEKCXNlYXJjaFVy",
            "bBgDIAEoCRIWCg5zdWJDYXRlZ29yeVVybBgFIAEoCRITCgtzZWFyY2hRdWVy",
            "eRgLIAEoCSJBCgRDaGlwEg0KBXRpdGxlGAEgASgJEioKBnN0cmVhbRgCIAEo",
            "CzIaLkdvb2dsZVBsYXlTdG9yZS5TdWJTdHJlYW0iNQoMQ2F0ZWdvcnlJbmZv",
            "EhAKCGNhdGVnb3J5GAEgASgJEhMKC2FwcENhdGVnb3J5GAIgASgJIpkBChdF",
            "bmNyeXB0ZWRTdWJzY3JpYmVySW5mbxIMCgRkYXRhGAEgASgJEhQKDGVuY3J5",
            "cHRlZEtleRgCIAEoCRIRCglzaWduYXR1cmUYAyABKAkSEgoKaW5pdFZlY3Rv",
            "chgEIAEoCRIYChBnb29nbGVLZXlWZXJzaW9uGAUgASgFEhkKEWNhcnJpZXJL",
            "ZXlWZXJzaW9uGAYgASgFIvAECgxBdmFpbGFiaWxpdHkSEwoLcmVzdHJpY3Rp",
            "b24YBSABKAUSEQoJb2ZmZXJUeXBlGAYgASgFEiMKBHJ1bGUYByABKAsyFS5H",
            "b29nbGVQbGF5U3RvcmUuUnVsZRJoCiBwZXJkZXZpY2VhdmFpbGFiaWxpdHly",
            "ZXN0cmljdGlvbhgJIAMoCjI+Lkdvb2dsZVBsYXlTdG9yZS5BdmFpbGFiaWxp",
            "dHkuUGVyRGV2aWNlQXZhaWxhYmlsaXR5UmVzdHJpY3Rpb24SGAoQYXZhaWxh",
            "YmxlSWZPd25lZBgNIAEoCBIpCgdpbnN0YWxsGA4gAygLMhguR29vZ2xlUGxh",
            "eVN0b3JlLkluc3RhbGwSOQoKZmlsdGVySW5mbxgQIAEoCzIlLkdvb2dsZVBs",
            "YXlTdG9yZS5GaWx0ZXJFdmFsdWF0aW9uSW5mbxI1Cg1vd25lcnNoaXBJbmZv",
            "GBEgASgLMh4uR29vZ2xlUGxheVN0b3JlLk93bmVyc2hpcEluZm8SQQoTYXZh",
            "aWxhYmlsaXR5UHJvYmxlbRgSIAMoCzIkLkdvb2dsZVBsYXlTdG9yZS5BdmFp",
            "bGFiaWxpdHlQcm9ibGVtEg4KBmhpZGRlbhgVIAEoCBqeAQogUGVyRGV2aWNl",
            "QXZhaWxhYmlsaXR5UmVzdHJpY3Rpb24SEQoJYW5kcm9pZElkGAogASgGEhkK",
            "EWRldmljZVJlc3RyaWN0aW9uGAsgASgFEhEKCWNoYW5uZWxJZBgMIAEoAxI5",
            "CgpmaWx0ZXJJbmZvGA8gASgLMiUuR29vZ2xlUGxheVN0b3JlLkZpbHRlckV2",
            "YWx1YXRpb25JbmZvIkAKE0F2YWlsYWJpbGl0eVByb2JsZW0SEwoLcHJvYmxl",
            "bVR5cGUYASABKAUSFAoMbWlzc2luZ1ZhbHVlGAIgAygJIk8KFEZpbHRlckV2",
            "YWx1YXRpb25JbmZvEjcKDnJ1bGVFdmFsdWF0aW9uGAEgAygLMh8uR29vZ2xl",
            "UGxheVN0b3JlLlJ1bGVFdmFsdWF0aW9uIqMCCgRSdWxlEg4KBm5lZ2F0ZRgB",
            "IAEoCBIQCghvcGVyYXRvchgCIAEoBRILCgNrZXkYAyABKAUSEQoJc3RyaW5n",
            "QXJnGAQgAygJEg8KB2xvbmdBcmcYBSADKAMSEQoJZG91YmxlQXJnGAYgAygB",
            "EiYKB3N1YlJ1bGUYByADKAsyFS5Hb29nbGVQbGF5U3RvcmUuUnVsZRIUCgxy",
            "ZXNwb25zZUNvZGUYCCABKAUSDwoHY29tbWVudBgJIAEoCRIVCg1zdHJpbmdB",
            "cmdIYXNoGAogAygGEhAKCGNvbnN0QXJnGAsgAygFEh8KF2F2YWlsYWJpbGl0",
            "eVByb2JsZW1UeXBlGAwgASgFEhwKFGluY2x1ZGVNaXNzaW5nVmFsdWVzGA0g",
            "ASgIIp0BCg5SdWxlRXZhbHVhdGlvbhIjCgRydWxlGAEgASgLMhUuR29vZ2xl",
            "UGxheVN0b3JlLlJ1bGUSGQoRYWN0dWFsU3RyaW5nVmFsdWUYAiADKAkSFwoP",
            "YWN0dWFsTG9uZ1ZhbHVlGAMgAygDEhcKD2FjdHVhbEJvb2xWYWx1ZRgEIAMo",
            "CBIZChFhY3R1YWxEb3VibGVWYWx1ZRgFIAMoASJ0ChFMaWJyYXJ5QXBwRGV0",
            "YWlscxIXCg9jZXJ0aWZpY2F0ZUhhc2gYAiABKAkSHgoWcmVmdW5kVGltZW91",
            "dFRpbWVzdGFtcBgDIAEoAxImCh5wb3N0RGVsaXZlcnlSZWZ1bmRXaW5kb3dN",
            "aWxsaXMYBCABKAMiRAoTTGlicmFyeUluQXBwRGV0YWlscxIaChJzaWduZWRQ",
            "dXJjaGFzZURhdGEYASABKAkSEQoJc2lnbmF0dXJlGAIgASgJIrACCg9MaWJy",
            "YXJ5TXV0YXRpb24SJQoFRG9jSWQYASABKAsyFi5Hb29nbGVQbGF5U3RvcmUu",
            "RG9jSWQSEQoJb2ZmZXJUeXBlGAIgASgFEhQKDGRvY3VtZW50SGFzaBgDIAEo",
            "AxIPCgdkZWxldGVkGAQgASgIEjYKCmFwcERldGFpbHMYBSABKAsyIi5Hb29n",
            "bGVQbGF5U3RvcmUuTGlicmFyeUFwcERldGFpbHMSSAoTc3Vic2NyaXB0aW9u",
            "RGV0YWlscxgGIAEoCzIrLkdvb2dsZVBsYXlTdG9yZS5MaWJyYXJ5U3Vic2Ny",
            "aXB0aW9uRGV0YWlscxI6CgxpbkFwcERldGFpbHMYByABKAsyJC5Hb29nbGVQ",
            "bGF5U3RvcmUuTGlicmFyeUluQXBwRGV0YWlscyK4AQoaTGlicmFyeVN1YnNj",
            "cmlwdGlvbkRldGFpbHMSGwoTaW5pdGlhdGlvblRpbWVzdGFtcBgBIAEoAxIb",
            "ChN2YWxpZFVudGlsVGltZXN0YW1wGAIgASgDEhQKDGF1dG9SZW5ld2luZxgD",
            "IAEoCBIbChN0cmlhbFVudGlsVGltZXN0YW1wGAQgASgDEhoKEnNpZ25lZFB1",
            "cmNoYXNlRGF0YRgFIAEoCRIRCglzaWduYXR1cmUYBiABKAkinAEKDUxpYnJh",
            "cnlVcGRhdGUSDgoGc3RhdHVzGAEgASgFEg4KBmNvcnB1cxgCIAEoBRITCgtz",
            "ZXJ2ZXJUb2tlbhgDIAEoDBIyCghtdXRhdGlvbhgEIAMoCzIgLkdvb2dsZVBs",
            "YXlTdG9yZS5MaWJyYXJ5TXV0YXRpb24SDwoHaGFzTW9yZRgFIAEoCBIRCgls",
            "aWJyYXJ5SWQYBiABKAkiQgoaQW5kcm9pZEFwcE5vdGlmaWNhdGlvbkRhdGES",
            "EwoLdmVyc2lvbkNvZGUYASABKAUSDwoHYXNzZXRJZBgCIAEoCSJNChVJbkFw",
            "cE5vdGlmaWNhdGlvbkRhdGESFwoPY2hlY2tvdXRPcmRlcklkGAEgASgJEhsK",
            "E2luQXBwTm90aWZpY2F0aW9uSWQYAiABKAkiNgoQTGlicmFyeURpcnR5RGF0",
            "YRIPCgdiYWNrZW5kGAEgASgFEhEKCWxpYnJhcnlJZBgCIAEoCSKnBQoMTm90",
            "aWZpY2F0aW9uEhgKEG5vdGlmaWNhdGlvblR5cGUYASABKAUSEQoJdGltZXN0",
            "YW1wGAMgASgDEiUKBURvY0lkGAQgASgLMhYuR29vZ2xlUGxheVN0b3JlLkRv",
            "Y0lkEhAKCGRvY1RpdGxlGAUgASgJEhEKCXVzZXJFbWFpbBgGIAEoCRI8Cgdh",
            "cHBEYXRhGAcgASgLMisuR29vZ2xlUGxheVN0b3JlLkFuZHJvaWRBcHBOb3Rp",
            "ZmljYXRpb25EYXRhEkAKD2FwcERlbGl2ZXJ5RGF0YRgIIAEoCzInLkdvb2ds",
            "ZVBsYXlTdG9yZS5BbmRyb2lkQXBwRGVsaXZlcnlEYXRhEkEKE3B1cmNoYXNl",
            "UmVtb3ZhbERhdGEYCSABKAsyJC5Hb29nbGVQbGF5U3RvcmUuUHVyY2hhc2VS",
            "ZW1vdmFsRGF0YRJDChR1c2VyTm90aWZpY2F0aW9uRGF0YRgKIAEoCzIlLkdv",
            "b2dsZVBsYXlTdG9yZS5Vc2VyTm90aWZpY2F0aW9uRGF0YRJFChVpbkFwcE5v",
            "dGlmaWNhdGlvbkRhdGEYCyABKAsyJi5Hb29nbGVQbGF5U3RvcmUuSW5BcHBO",
            "b3RpZmljYXRpb25EYXRhEkMKFHB1cmNoYXNlRGVjbGluZWREYXRhGAwgASgL",
            "MiUuR29vZ2xlUGxheVN0b3JlLlB1cmNoYXNlRGVjbGluZWREYXRhEhYKDm5v",
            "dGlmaWNhdGlvbklkGA0gASgJEjUKDWxpYnJhcnlVcGRhdGUYDiABKAsyHi5H",
            "b29nbGVQbGF5U3RvcmUuTGlicmFyeVVwZGF0ZRI7ChBsaWJyYXJ5RGlydHlE",
            "YXRhGA8gASgLMiEuR29vZ2xlUGxheVN0b3JlLkxpYnJhcnlEaXJ0eURhdGEi",
            "QAoUUHVyY2hhc2VEZWNsaW5lZERhdGESDgoGcmVhc29uGAEgASgFEhgKEHNo",
            "b3dOb3RpZmljYXRpb24YAiABKAgiKAoTUHVyY2hhc2VSZW1vdmFsRGF0YRIR",
            "CgltYWxpY2lvdXMYASABKAgiiAEKFFVzZXJOb3RpZmljYXRpb25EYXRhEhkK",
            "EW5vdGlmaWNhdGlvblRpdGxlGAEgASgJEhgKEG5vdGlmaWNhdGlvblRleHQY",
            "AiABKAkSEgoKdGlja2VyVGV4dBgDIAEoCRITCgtkaWFsb2dUaXRsZRgEIAEo",
            "CRISCgpkaWFsb2dUZXh0GAUgASgJIqEDCg9BZ2dyZWdhdGVSYXRpbmcSDwoE",
            "dHlwZRgBIAEoBToBMRISCgpzdGFyUmF0aW5nGAIgASgCEhQKDHJhdGluZ3ND",
            "b3VudBgDIAEoBBIWCg5vbmVTdGFyUmF0aW5ncxgEIAEoBBIWCg50d29TdGFy",
            "UmF0aW5ncxgFIAEoBBIYChB0aHJlZVN0YXJSYXRpbmdzGAYgASgEEhcKD2Zv",
            "dXJTdGFyUmF0aW5ncxgHIAEoBBIXCg9maXZlU3RhclJhdGluZ3MYCCABKAQS",
            "FQoNdGh1bWJzVXBDb3VudBgJIAEoBBIXCg90aHVtYnNEb3duQ291bnQYCiAB",
            "KAQSFAoMY29tbWVudENvdW50GAsgASgEEhoKEmJheWVzaWFuTWVhblJhdGlu",
            "ZxgMIAEoARIhCgN0aXAYDSADKAsyFC5Hb29nbGVQbGF5U3RvcmUuVGlwEhMK",
            "C3JhdGluZ0xhYmVsGBEgASgJEiMKG3JhdGluZ0NvdW50TGFiZWxBYmJyZXZp",
            "YXRlZBgSIAEoCRIYChByYXRpbmdDb3VudExhYmVsGBMgASgJInQKA1RpcBIN",
            "CgV0aXBJZBgBIAEoCRIMCgR0ZXh0GAIgASgJEhAKCHBvbGFyaXR5GAMgASgF",
            "EhMKC3Jldmlld0NvdW50GAQgASgDEhAKCGxhbmd1YWdlGAUgASgJEhcKD3Nu",
            "aXBwZXRSZXZpZXdJZBgGIAMoCSJQCglSZXZpZXdUaXASDgoGdGlwVXJsGAEg",
            "ASgJEgwKBHRleHQYAiABKAkSEAoIcG9sYXJpdHkYAyABKAUSEwoLcmV2aWV3",
            "Q291bnQYBCABKAMiEwoRQWNjZXB0VG9zUmVzcG9uc2Ui6QEKFENhcnJpZXJC",
            "aWxsaW5nQ29uZmlnEgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSEgoKYXBp",
            "VmVyc2lvbhgDIAEoBRIXCg9wcm92aXNpb25pbmdVcmwYBCABKAkSFgoOY3Jl",
            "ZGVudGlhbHNVcmwYBSABKAkSEwoLdG9zUmVxdWlyZWQYBiABKAgSKQohcGVy",
            "VHJhbnNhY3Rpb25DcmVkZW50aWFsc1JlcXVpcmVkGAcgASgIEjIKKnNlbmRT",
            "dWJzY3JpYmVySWRXaXRoQ2FycmllckJpbGxpbmdSZXF1ZXN0cxgIIAEoCCJu",
            "Cg1CaWxsaW5nQ29uZmlnEkMKFGNhcnJpZXJCaWxsaW5nQ29uZmlnGAEgASgL",
            "MiUuR29vZ2xlUGxheVN0b3JlLkNhcnJpZXJCaWxsaW5nQ29uZmlnEhgKEG1h",
            "eElhYkFwaVZlcnNpb24YAiABKAUigQEKDkNvcnB1c01ldGFkYXRhEg8KB2Jh",
            "Y2tlbmQYASABKAUSDAoEbmFtZRgCIAEoCRISCgpsYW5kaW5nVXJsGAMgASgJ",
            "EhMKC2xpYnJhcnlOYW1lGAQgASgJEhUKDXJlY3NXaWRnZXRVcmwYBiABKAkS",
            "EAoIc2hvcE5hbWUYByABKAkiIwoLRXhwZXJpbWVudHMSFAoMZXhwZXJpbWVu",
            "dElkGAEgAygJIjMKEFNlbGZVcGRhdGVDb25maWcSHwoXbGF0ZXN0Q2xpZW50",
            "VmVyc2lvbkNvZGUYASABKAUipgUKC1RvY1Jlc3BvbnNlEi8KBmNvcnB1cxgB",
            "IAMoCzIfLkdvb2dsZVBsYXlTdG9yZS5Db3JwdXNNZXRhZGF0YRIcChR0b3NW",
            "ZXJzaW9uRGVwcmVjYXRlZBgCIAEoBRISCgp0b3NDb250ZW50GAMgASgJEg8K",
            "B2hvbWVVcmwYBCABKAkSMQoLZXhwZXJpbWVudHMYBSABKAsyHC5Hb29nbGVQ",
            "bGF5U3RvcmUuRXhwZXJpbWVudHMSJgoedG9zQ2hlY2tib3hUZXh0TWFya2V0",
            "aW5nRW1haWxzGAYgASgJEhAKCHRvc1Rva2VuGAcgASgJEjMKDHVzZXJTZXR0",
            "aW5ncxgIIAEoCzIdLkdvb2dsZVBsYXlTdG9yZS5Vc2VyU2V0dGluZ3MSFwoP",
            "aWNvbk92ZXJyaWRlVXJsGAkgASgJEjsKEHNlbGZVcGRhdGVDb25maWcYCiAB",
            "KAsyIS5Hb29nbGVQbGF5U3RvcmUuU2VsZlVwZGF0ZUNvbmZpZxIiChpyZXF1",
            "aXJlc1VwbG9hZERldmljZUNvbmZpZxgLIAEoCBI1Cg1iaWxsaW5nQ29uZmln",
            "GAwgASgLMh4uR29vZ2xlUGxheVN0b3JlLkJpbGxpbmdDb25maWcSFQoNcmVj",
            "c1dpZGdldFVybBgNIAEoCRIVCg1zb2NpYWxIb21lVXJsGA8gASgJEh8KF2Fn",
            "ZVZlcmlmaWNhdGlvblJlcXVpcmVkGBAgASgIEhoKEmdQbHVzU2lnbnVwRW5h",
            "YmxlZBgRIAEoCBIVCg1yZWRlZW1FbmFibGVkGBIgASgIEg8KB2hlbHBVcmwY",
            "EyABKAkSDwoHdGhlbWVJZBgUIAEoBRIcChRlbnRlcnRhaW5tZW50SG9tZVVy",
            "bBgVIAEoCRIOCgZjb29raWUYFiABKAkicgoMVXNlclNldHRpbmdzEikKIXRv",
            "c0NoZWNrYm94TWFya2V0aW5nRW1haWxzT3B0ZWRJbhgBIAEoCBI3Cg5wcml2",
            "YWN5U2V0dGluZxgCIAEoCzIfLkdvb2dsZVBsYXlTdG9yZS5Qcml2YWN5U2V0",
            "dGluZyJPCg5Qcml2YWN5U2V0dGluZxIMCgR0eXBlGAEgASgFEhUKDWN1cnJl",
            "bnRTdGF0dXMYAiABKAUSGAoQZW5hYmxlZEJ5RGVmYXVsdBgDIAEoCCKUGQoH",
            "UGF5bG9hZBIzCgxsaXN0UmVzcG9uc2UYASABKAsyHS5Hb29nbGVQbGF5U3Rv",
            "cmUuTGlzdFJlc3BvbnNlEjkKD2RldGFpbHNSZXNwb25zZRgCIAEoCzIgLkdv",
            "b2dsZVBsYXlTdG9yZS5EZXRhaWxzUmVzcG9uc2USNwoOcmV2aWV3UmVzcG9u",
            "c2UYAyABKAsyHy5Hb29nbGVQbGF5U3RvcmUuUmV2aWV3UmVzcG9uc2USMQoL",
            "YnV5UmVzcG9uc2UYBCABKAsyHC5Hb29nbGVQbGF5U3RvcmUuQnV5UmVzcG9u",
            "c2USNwoOc2VhcmNoUmVzcG9uc2UYBSABKAsyHy5Hb29nbGVQbGF5U3RvcmUu",
            "U2VhcmNoUmVzcG9uc2USMQoLdG9jUmVzcG9uc2UYBiABKAsyHC5Hb29nbGVQ",
            "bGF5U3RvcmUuVG9jUmVzcG9uc2USNwoOYnJvd3NlUmVzcG9uc2UYByABKAsy",
            "Hy5Hb29nbGVQbGF5U3RvcmUuQnJvd3NlUmVzcG9uc2USRwoWcHVyY2hhc2VT",
            "dGF0dXNSZXNwb25zZRgIIAEoCzInLkdvb2dsZVBsYXlTdG9yZS5QdXJjaGFz",
            "ZVN0YXR1c1Jlc3BvbnNlEhMKC2xvZ1Jlc3BvbnNlGAogASgJEhsKE2ZsYWdD",
            "b250ZW50UmVzcG9uc2UYDSABKAkSQQoTYnVsa0RldGFpbHNSZXNwb25zZRgT",
            "IAEoCzIkLkdvb2dsZVBsYXlTdG9yZS5CdWxrRGV0YWlsc1Jlc3BvbnNlEjsK",
            "EGRlbGl2ZXJ5UmVzcG9uc2UYFSABKAsyIS5Hb29nbGVQbGF5U3RvcmUuRGVs",
            "aXZlcnlSZXNwb25zZRI9ChFhY2NlcHRUb3NSZXNwb25zZRgWIAEoCzIiLkdv",
            "b2dsZVBsYXlTdG9yZS5BY2NlcHRUb3NSZXNwb25zZRJJChdjaGVja1Byb21v",
            "T2ZmZXJSZXNwb25zZRgYIAEoCzIoLkdvb2dsZVBsYXlTdG9yZS5DaGVja1By",
            "b21vT2ZmZXJSZXNwb25zZRJRChtpbnN0cnVtZW50U2V0dXBJbmZvUmVzcG9u",
            "c2UYGSABKAsyLC5Hb29nbGVQbGF5U3RvcmUuSW5zdHJ1bWVudFNldHVwSW5m",
            "b1Jlc3BvbnNlEkcKFmFuZHJvaWRDaGVja2luUmVzcG9uc2UYGiABKAsyJy5H",
            "b29nbGVQbGF5U3RvcmUuQW5kcm9pZENoZWNraW5SZXNwb25zZRJPChp1cGxv",
            "YWREZXZpY2VDb25maWdSZXNwb25zZRgcIAEoCzIrLkdvb2dsZVBsYXlTdG9y",
            "ZS5VcGxvYWREZXZpY2VDb25maWdSZXNwb25zZRJFChVzZWFyY2hTdWdnZXN0",
            "UmVzcG9uc2UYKCABKAsyJi5Hb29nbGVQbGF5U3RvcmUuU2VhcmNoU3VnZ2Vz",
            "dFJlc3BvbnNlEkkKF2NvbnN1bWVQdXJjaGFzZVJlc3BvbnNlGB4gASgLMigu",
            "R29vZ2xlUGxheVN0b3JlLkNvbnN1bWVQdXJjaGFzZVJlc3BvbnNlEkcKFmJp",
            "bGxpbmdQcm9maWxlUmVzcG9uc2UYHyABKAsyJy5Hb29nbGVQbGF5U3RvcmUu",
            "QmlsbGluZ1Byb2ZpbGVSZXNwb25zZRJFChVkZWJ1Z1NldHRpbmdzUmVzcG9u",
            "c2UYIiABKAsyJi5Hb29nbGVQbGF5U3RvcmUuRGVidWdTZXR0aW5nc1Jlc3Bv",
            "bnNlEkUKFWNoZWNrSWFiUHJvbW9SZXNwb25zZRgjIAEoCzImLkdvb2dsZVBs",
            "YXlTdG9yZS5DaGVja0lhYlByb21vUmVzcG9uc2USUwocdXNlckFjdGl2aXR5",
            "U2V0dGluZ3NSZXNwb25zZRgkIAEoCzItLkdvb2dsZVBsYXlTdG9yZS5Vc2Vy",
            "QWN0aXZpdHlTZXR0aW5nc1Jlc3BvbnNlEk8KGnJlY29yZFVzZXJBY3Rpdml0",
            "eVJlc3BvbnNlGCUgASgLMisuR29vZ2xlUGxheVN0b3JlLlJlY29yZFVzZXJB",
            "Y3Rpdml0eVJlc3BvbnNlEj8KEnJlZGVlbUNvZGVSZXNwb25zZRgmIAEoCzIj",
            "Lkdvb2dsZVBsYXlTdG9yZS5SZWRlZW1Db2RlUmVzcG9uc2USPwoSc2VsZlVw",
            "ZGF0ZVJlc3BvbnNlGCcgASgLMiMuR29vZ2xlUGxheVN0b3JlLlNlbGZVcGRh",
            "dGVSZXNwb25zZRJlCiVnZXRJbml0aWFsSW5zdHJ1bWVudEZsb3dTdGF0ZVJl",
            "c3BvbnNlGCkgASgLMjYuR29vZ2xlUGxheVN0b3JlLkdldEluaXRpYWxJbnN0",
            "cnVtZW50Rmxvd1N0YXRlUmVzcG9uc2USSwoYY3JlYXRlSW5zdHJ1bWVudFJl",
            "c3BvbnNlGCogASgLMikuR29vZ2xlUGxheVN0b3JlLkNyZWF0ZUluc3RydW1l",
            "bnRSZXNwb25zZRI9ChFjaGFsbGVuZ2VSZXNwb25zZRgrIAEoCzIiLkdvb2ds",
            "ZVBsYXlTdG9yZS5DaGFsbGVuZ2VSZXNwb25zZRJPChtiYWNrdXBEZXZpY2VD",
            "aG9pY2VzUmVzcG9uc2UYLCABKAsyKi5Hb29nbGVQbGF5U3RvcmUuQmFja0Rl",
            "dmljZUNob2ljZXNSZXNwb25zZRJVCh1iYWNrdXBEb2N1bWVudENob2ljZXNS",
            "ZXNwb25zZRgtIAEoCzIuLkdvb2dsZVBsYXlTdG9yZS5CYWNrdXBEb2N1bWVu",
            "dENob2ljZXNSZXNwb25zZRJBChNlYXJseVVwZGF0ZVJlc3BvbnNlGC4gASgL",
            "MiQuR29vZ2xlUGxheVN0b3JlLkVhcmx5VXBkYXRlUmVzcG9uc2USOwoQcHJl",
            "bG9hZHNSZXNwb25zZRgvIAEoCzIhLkdvb2dsZVBsYXlTdG9yZS5QcmVsb2Fk",
            "c1Jlc3BvbnNlEj8KEm15QWNjb3VudHNSZXNwb25zZRgwIAEoCzIjLkdvb2ds",
            "ZVBsYXlTdG9yZS5NeUFjY291bnRzUmVzcG9uc2USRQoVY29udGVudEZpbHRl",
            "clJlc3BvbnNlGDEgASgLMiYuR29vZ2xlUGxheVN0b3JlLkNvbnRlbnRGaWx0",
            "ZXJSZXNwb25zZRJBChNleHBlcmltZW50c1Jlc3BvbnNlGDIgASgLMiQuR29v",
            "Z2xlUGxheVN0b3JlLkV4cGVyaW1lbnRzUmVzcG9uc2USNwoOc3VydmV5UmVz",
            "cG9uc2UYMyABKAsyHy5Hb29nbGVQbGF5U3RvcmUuU3VydmV5UmVzcG9uc2US",
            "MwoMcGluZ1Jlc3BvbnNlGDQgASgLMh0uR29vZ2xlUGxheVN0b3JlLlBpbmdS",
            "ZXNwb25zZRJNChl1cGRhdGVVc2VyU2V0dGluZ1Jlc3BvbnNlGDUgASgLMiou",
            "R29vZ2xlUGxheVN0b3JlLlVwZGF0ZVVzZXJTZXR0aW5nUmVzcG9uc2USSQoX",
            "Z2V0VXNlclNldHRpbmdzUmVzcG9uc2UYNiABKAsyKC5Hb29nbGVQbGF5U3Rv",
            "cmUuR2V0VXNlclNldHRpbmdzUmVzcG9uc2USTwoaZ2V0U2hhcmluZ1NldHRp",
            "bmdzUmVzcG9uc2UYOCABKAsyKy5Hb29nbGVQbGF5U3RvcmUuR2V0U2hhcmlu",
            "Z1NldHRpbmdzUmVzcG9uc2USVQoddXBkYXRlU2hhcmluZ1NldHRpbmdzUmVz",
            "cG9uc2UYOSABKAsyLi5Hb29nbGVQbGF5U3RvcmUuVXBkYXRlU2hhcmluZ1Nl",
            "dHRpbmdzUmVzcG9uc2USRwoWcmV2aWV3U25pcHBldHNSZXNwb25zZRg6IAEo",
            "CzInLkdvb2dsZVBsYXlTdG9yZS5SZXZpZXdTbmlwcGV0c1Jlc3BvbnNlElMK",
            "HGRvY3VtZW50U2hhcmluZ1N0YXRlUmVzcG9uc2UYOyABKAsyLS5Hb29nbGVQ",
            "bGF5U3RvcmUuRG9jdW1lbnRTaGFyaW5nU3RhdGVSZXNwb25zZRJHChZtb2R1",
            "bGVEZWxpdmVyeVJlc3BvbnNlGEYgASgLMicuR29vZ2xlUGxheVN0b3JlLk1v",
            "ZHVsZURlbGl2ZXJ5UmVzcG9uc2USRwoWdGVzdGluZ1Byb2dyYW1SZXNwb25z",
            "ZRhQIAEoCzInLkdvb2dsZVBsYXlTdG9yZS5UZXN0aW5nUHJvZ3JhbVJlc3Bv",
            "bnNlEj8KFXJldmlld1N1bW1hcnlSZXNwb25zZRiBASABKAsyHy5Hb29nbGVQ",
            "bGF5U3RvcmUuUmV2aWV3UmVzcG9uc2UiFwoVQ2hlY2tJYWJQcm9tb1Jlc3Bv",
            "bnNlIh4KHFVzZXJBY3Rpdml0eVNldHRpbmdzUmVzcG9uc2UiHAoaUmVjb3Jk",
            "VXNlckFjdGl2aXR5UmVzcG9uc2UiFAoSUmVkZWVtQ29kZVJlc3BvbnNlIhQK",
            "ElNlbGZVcGRhdGVSZXNwb25zZSInCiVHZXRJbml0aWFsSW5zdHJ1bWVudEZs",
            "b3dTdGF0ZVJlc3BvbnNlIhoKGENyZWF0ZUluc3RydW1lbnRSZXNwb25zZSIT",
            "ChFDaGFsbGVuZ2VSZXNwb25zZSIbChlCYWNrRGV2aWNlQ2hvaWNlc1Jlc3Bv",
            "bnNlIh8KHUJhY2t1cERvY3VtZW50Q2hvaWNlc1Jlc3BvbnNlIhUKE0Vhcmx5",
            "VXBkYXRlUmVzcG9uc2UizgIKEFByZWxvYWRzUmVzcG9uc2USQAoNY29uZmln",
            "UHJlbG9hZBgBIAEoCzIpLkdvb2dsZVBsYXlTdG9yZS5QcmVsb2Fkc1Jlc3Bv",
            "bnNlLlByZWxvYWQSPQoKYXBwUHJlbG9hZBgCIAMoCzIpLkdvb2dsZVBsYXlT",
            "dG9yZS5QcmVsb2Fkc1Jlc3BvbnNlLlByZWxvYWQauAEKB1ByZWxvYWQSJQoF",
            "RG9jSWQYASABKAsyFi5Hb29nbGVQbGF5U3RvcmUuRG9jSWQSEwoLdmVyc2lv",
            "bkNvZGUYAiABKAUSDQoFdGl0bGUYAyABKAkSJAoEaWNvbhgEIAEoCzIWLkdv",
            "b2dsZVBsYXlTdG9yZS5JbWFnZRIVCg1kZWxpdmVyeVRva2VuGAUgASgJEhcK",
            "D2luc3RhbGxMb2NhdGlvbhgGIAEoBRIMCgRzaXplGAcgASgDIhQKEk15QWNj",
            "b3VudHNSZXNwb25zZSIXChVDb250ZW50RmlsdGVyUmVzcG9uc2UiFQoTRXhw",
            "ZXJpbWVudHNSZXNwb25zZSIQCg5TdXJ2ZXlSZXNwb25zZSIOCgxQaW5nUmVz",
            "cG9uc2UiGwoZVXBkYXRlVXNlclNldHRpbmdSZXNwb25zZSIZChdHZXRVc2Vy",
            "U2V0dGluZ3NSZXNwb25zZSIcChpHZXRTaGFyaW5nU2V0dGluZ3NSZXNwb25z",
            "ZSIfCh1VcGRhdGVTaGFyaW5nU2V0dGluZ3NSZXNwb25zZSIYChZSZXZpZXdT",
            "bmlwcGV0c1Jlc3BvbnNlIh4KHERvY3VtZW50U2hhcmluZ1N0YXRlUmVzcG9u",
            "c2UiGAoWTW9kdWxlRGVsaXZlcnlSZXNwb25zZSJ3CghQcmVGZXRjaBILCgN1",
            "cmwYASABKAkSMgoIcmVzcG9uc2UYAiABKAsyIC5Hb29nbGVQbGF5U3RvcmUu",
            "UmVzcG9uc2VXcmFwcGVyEgwKBGV0YWcYAyABKAkSCwoDdHRsGAQgASgDEg8K",
            "B3NvZnRUdGwYBSABKAMiJwoOU2VydmVyTWV0YWRhdGESFQoNbGF0ZW5jeU1p",
            "bGxpcxgBIAEoAyIuCgdUYXJnZXRzEhAKCHRhcmdldElkGAEgAygDEhEKCXNp",
            "Z25hdHVyZRgCIAEoDCIrCgxTZXJ2ZXJDb29raWUSDAoEdHlwZRgBIAEoBRIN",
            "CgV0b2tlbhgCIAEoDCJECg1TZXJ2ZXJDb29raWVzEjMKDHNlcnZlckNvb2tp",
            "ZRgBIAMoCzIdLkdvb2dsZVBsYXlTdG9yZS5TZXJ2ZXJDb29raWUihgMKD1Jl",
            "c3BvbnNlV3JhcHBlchIpCgdwYXlsb2FkGAEgASgLMhguR29vZ2xlUGxheVN0",
            "b3JlLlBheWxvYWQSMQoIY29tbWFuZHMYAiABKAsyHy5Hb29nbGVQbGF5U3Rv",
            "cmUuU2VydmVyQ29tbWFuZHMSKwoIcHJlRmV0Y2gYAyADKAsyGS5Hb29nbGVQ",
            "bGF5U3RvcmUuUHJlRmV0Y2gSMwoMbm90aWZpY2F0aW9uGAQgAygLMh0uR29v",
            "Z2xlUGxheVN0b3JlLk5vdGlmaWNhdGlvbhI3Cg5zZXJ2ZXJNZXRhZGF0YRgF",
            "IAEoCzIfLkdvb2dsZVBsYXlTdG9yZS5TZXJ2ZXJNZXRhZGF0YRIpCgd0YXJn",
            "ZXRzGAYgASgLMhguR29vZ2xlUGxheVN0b3JlLlRhcmdldHMSNQoNc2VydmVy",
            "Q29va2llcxgHIAEoCzIeLkdvb2dsZVBsYXlTdG9yZS5TZXJ2ZXJDb29raWVz",
            "EhgKEHNlcnZlckxvZ3NDb29raWUYCSABKAwiQgoSUmVzcG9uc2VXcmFwcGVy",
            "QXBpEiwKB3BheWxvYWQYASABKAsyGy5Hb29nbGVQbGF5U3RvcmUuUGF5bG9h",
            "ZEFwaSJPCgpQYXlsb2FkQXBpEkEKE3VzZXJQcm9maWxlUmVzcG9uc2UYBSAB",
            "KAsyJC5Hb29nbGVQbGF5U3RvcmUuVXNlclByb2ZpbGVSZXNwb25zZSJIChNV",
            "c2VyUHJvZmlsZVJlc3BvbnNlEjEKC3VzZXJQcm9maWxlGAEgASgLMhwuR29v",
            "Z2xlUGxheVN0b3JlLlVzZXJQcm9maWxlIl0KDlNlcnZlckNvbW1hbmRzEhIK",
            "CmNsZWFyQ2FjaGUYASABKAgSGwoTZGlzcGxheUVycm9yTWVzc2FnZRgCIAEo",
            "CRIaChJsb2dFcnJvclN0YWNrdHJhY2UYAyABKAkiVAoSR2V0UmV2aWV3c1Jl",
            "c3BvbnNlEicKBnJldmlldxgBIAMoCzIXLkdvb2dsZVBsYXlTdG9yZS5SZXZp",
            "ZXcSFQoNbWF0Y2hpbmdDb3VudBgCIAEoAyKdAwoGUmV2aWV3EhIKCmF1dGhv",
            "ck5hbWUYASABKAkSCwoDdXJsGAIgASgJEg4KBnNvdXJjZRgDIAEoCRIPCgd2",
            "ZXJzaW9uGAQgASgJEhEKCXRpbWVzdGFtcBgFIAEoAxISCgpzdGFyUmF0aW5n",
            "GAYgASgFEg0KBXRpdGxlGAcgASgJEg8KB2NvbW1lbnQYCCABKAkSEQoJY29t",
            "bWVudElkGAkgASgJEhIKCmRldmljZU5hbWUYEyABKAkSEQoJcmVwbHlUZXh0",
            "GB0gASgJEhYKDnJlcGx5VGltZVN0YW1wGB4gASgDEi0KBmF1dGhvchgfIAEo",
            "CzIdLkdvb2dsZVBsYXlTdG9yZS5SZXZpZXdBdXRob3ISMQoLdXNlclByb2Zp",
            "bGUYISABKAsyHC5Hb29nbGVQbGF5U3RvcmUuVXNlclByb2ZpbGUSKQoJc2Vu",
            "dGltZW50GCIgASgLMhYuR29vZ2xlUGxheVN0b3JlLkltYWdlEhQKDGhlbHBm",
            "dWxDb3VudBgjIAEoBRIVCg10aHVtYnNVcENvdW50GCYgASgDIuQBChVDcml0",
            "aWNSZXZpZXdzUmVzcG9uc2USDQoFdGl0bGUYASABKAkSJQoFaW1hZ2UYAiAB",
            "KAsyFi5Hb29nbGVQbGF5U3RvcmUuSW1hZ2USFwoPdG90YWxOdW1SZXZpZXdz",
            "GAMgASgNEhgKEHBlcmNlbnRGYXZvcmFibGUYBCABKA0SEgoKc291cmNlVGV4",
            "dBgFIAEoCRIlCgZzb3VyY2UYBiABKAsyFS5Hb29nbGVQbGF5U3RvcmUuTGlu",
            "axInCgZyZXZpZXcYByADKAsyFy5Hb29nbGVQbGF5U3RvcmUuUmV2aWV3IkQK",
            "DFJldmlld0F1dGhvchIMCgRuYW1lGAIgASgJEiYKBmF2YXRhchgFIAEoCzIW",
            "Lkdvb2dsZVBsYXlTdG9yZS5JbWFnZSLAAQoLVXNlclByb2ZpbGUSEQoJcHJv",
            "ZmlsZUlkGAEgASgJEhAKCHBlcnNvbklkGAIgASgJEhMKC3Byb2ZpbGVUeXBl",
            "GAMgASgFEhIKCnBlcnNvblR5cGUYBCABKAUSDAoEbmFtZRgFIAEoCRIlCgVp",
            "bWFnZRgKIAMoCzIWLkdvb2dsZVBsYXlTdG9yZS5JbWFnZRISCgpwcm9maWxl",
            "VXJsGBMgASgJEhoKEnByb2ZpbGVEZXNjcmlwdGlvbhgWIAEoCSL3AQoOUmV2",
            "aWV3UmVzcG9uc2USQAoTdXNlclJldmlld3NSZXNwb25zZRgBIAEoCzIjLkdv",
            "b2dsZVBsYXlTdG9yZS5HZXRSZXZpZXdzUmVzcG9uc2USEwoLbmV4dFBhZ2VV",
            "cmwYAiABKAkSKwoKdXNlclJldmlldxgDIAEoCzIXLkdvb2dsZVBsYXlTdG9y",
            "ZS5SZXZpZXcSGgoSc3VnZ2VzdGlvbnNMaXN0VXJsGAQgASgJEkUKFWNyaXRp",
            "Y1Jldmlld3NSZXNwb25zZRgFIAEoCzImLkdvb2dsZVBsYXlTdG9yZS5Dcml0",
            "aWNSZXZpZXdzUmVzcG9uc2UiagoNUmVsYXRlZFNlYXJjaBIRCglzZWFyY2hV",
            "cmwYASABKAkSDgoGaGVhZGVyGAIgASgJEhEKCWJhY2tlbmRJZBgDIAEoBRIS",
            "Cgdkb2NUeXBlGAQgASgFOgExEg8KB2N1cnJlbnQYBSABKAgiuwIKDlNlYXJj",
            "aFJlc3BvbnNlEhUKDW9yaWdpbmFsUXVlcnkYASABKAkSFgoOc3VnZ2VzdGVk",
            "UXVlcnkYAiABKAkSFgoOYWdncmVnYXRlUXVlcnkYAyABKAgSJwoGYnVja2V0",
            "GAQgAygLMhcuR29vZ2xlUGxheVN0b3JlLkJ1Y2tldBIjCgRpdGVtGAUgAygL",
            "MhUuR29vZ2xlUGxheVN0b3JlLkl0ZW0SNQoNcmVsYXRlZFNlYXJjaBgGIAMo",
            "CzIeLkdvb2dsZVBsYXlTdG9yZS5SZWxhdGVkU2VhcmNoEhgKEHNlcnZlckxv",
            "Z3NDb29raWUYByABKAwSGAoQZnVsbFBhZ2VSZXBsYWNlZBgIIAEoCBIUCgxj",
            "b250YWluc1Nub3cYCSABKAgSEwoLbmV4dFBhZ2VVcmwYCiABKAkiSwoVU2Vh",
            "cmNoU3VnZ2VzdFJlc3BvbnNlEjIKBWVudHJ5GAEgAygLMiMuR29vZ2xlUGxh",
            "eVN0b3JlLlNlYXJjaFN1Z2dlc3RFbnRyeSK+AgoSU2VhcmNoU3VnZ2VzdEVu",
            "dHJ5EgwKBHR5cGUYASABKAUSFgoOc3VnZ2VzdGVkUXVlcnkYAiABKAkSSgoO",
            "aW1hZ2VDb250YWluZXIYBSABKAsyMi5Hb29nbGVQbGF5U3RvcmUuU2VhcmNo",
            "U3VnZ2VzdEVudHJ5LkltYWdlQ29udGFpbmVyEg0KBXRpdGxlGAYgASgJElYK",
            "FHBhY2thZ2VOYW1lQ29udGFpbmVyGAggASgLMjguR29vZ2xlUGxheVN0b3Jl",
            "LlNlYXJjaFN1Z2dlc3RFbnRyeS5QYWNrYWdlTmFtZUNvbnRhaW5lchoiCg5J",
            "bWFnZUNvbnRhaW5lchIQCghpbWFnZVVybBgFIAEoCRorChRQYWNrYWdlTmFt",
            "ZUNvbnRhaW5lchITCgtwYWNrYWdlTmFtZRgBIAEoCSJPChZUZXN0aW5nUHJv",
            "Z3JhbVJlc3BvbnNlEjUKBnJlc3VsdBgCIAEoCzIlLkdvb2dsZVBsYXlTdG9y",
            "ZS5UZXN0aW5nUHJvZ3JhbVJlc3VsdCJPChRUZXN0aW5nUHJvZ3JhbVJlc3Vs",
            "dBI3CgdkZXRhaWxzGAQgASgLMiYuR29vZ2xlUGxheVN0b3JlLlRlc3RpbmdQ",
            "cm9ncmFtRGV0YWlscyJNChVUZXN0aW5nUHJvZ3JhbURldGFpbHMSEgoKc3Vi",
            "c2NyaWJlZBgCIAEoCBIKCgJpZBgDIAEoAxIUCgx1bnN1YnNjcmliZWQYBCAB",
            "KAgiQgoKTG9nUmVxdWVzdBIRCgl0aW1lc3RhbXAYASABKAMSIQoZZG93bmxv",
            "YWRDb25maXJtYXRpb25RdWVyeRgCIAEoCSI/ChVUZXN0aW5nUHJvZ3JhbVJl",
            "cXVlc3QSEwoLcGFja2FnZU5hbWUYASABKAkSEQoJc3Vic2NyaWJlGAIgASgI",
            "IpQBChlVcGxvYWREZXZpY2VDb25maWdSZXF1ZXN0EkYKE2RldmljZUNvbmZp",
            "Z3VyYXRpb24YASABKAsyKS5Hb29nbGVQbGF5U3RvcmUuRGV2aWNlQ29uZmln",
            "dXJhdGlvblByb3RvEhQKDG1hbnVmYWN0dXJlchgCIAEoCRIZChFnY21SZWdp",
            "c3RyYXRpb25JZBgDIAEoCSI9ChpVcGxvYWREZXZpY2VDb25maWdSZXNwb25z",
            "ZRIfChd1cGxvYWREZXZpY2VDb25maWdUb2tlbhgBIAEoCSKKBAoVQW5kcm9p",
            "ZENoZWNraW5SZXF1ZXN0EgwKBGltZWkYASABKAkSDQoCaWQYAiABKAM6ATAS",
            "DgoGZGlnZXN0GAMgASgJEjUKB2NoZWNraW4YBCABKAsyJC5Hb29nbGVQbGF5",
            "U3RvcmUuQW5kcm9pZENoZWNraW5Qcm90bxIUCgxkZXNpcmVkQnVpbGQYBSAB",
            "KAkSDgoGbG9jYWxlGAYgASgJEhEKCWxvZ2dpbmdJZBgHIAEoAxIVCg1tYXJr",
            "ZXRDaGVja2luGAggASgJEg8KB21hY0FkZHIYCSADKAkSDAoEbWVpZBgKIAEo",
            "CRIVCg1hY2NvdW50Q29va2llGAsgAygJEhAKCHRpbWVab25lGAwgASgJEhUK",
            "DXNlY3VyaXR5VG9rZW4YDSABKAYSDwoHdmVyc2lvbhgOIAEoBRIPCgdvdGFD",
            "ZXJ0GA8gAygJEhQKDHNlcmlhbE51bWJlchgQIAEoCRILCgNlc24YESABKAkS",
            "RgoTZGV2aWNlQ29uZmlndXJhdGlvbhgSIAEoCzIpLkdvb2dsZVBsYXlTdG9y",
            "ZS5EZXZpY2VDb25maWd1cmF0aW9uUHJvdG8SEwoLbWFjQWRkclR5cGUYEyAD",
            "KAkSEAoIZnJhZ21lbnQYFCABKAUSEAoIdXNlck5hbWUYFSABKAkSGAoQdXNl",
            "clNlcmlhbE51bWJlchgWIAEoBSLEAgoWQW5kcm9pZENoZWNraW5SZXNwb25z",
            "ZRIPCgdzdGF0c09rGAEgASgIEjMKBmludGVudBgCIAMoCzIjLkdvb2dsZVBs",
            "YXlTdG9yZS5BbmRyb2lkSW50ZW50UHJvdG8SEAoIdGltZU1zZWMYAyABKAMS",
            "DgoGZGlnZXN0GAQgASgJEjIKB3NldHRpbmcYBSADKAsyIS5Hb29nbGVQbGF5",
            "U3RvcmUuR3NlcnZpY2VzU2V0dGluZxIQCghtYXJrZXRPaxgGIAEoCBIRCglh",
            "bmRyb2lkSWQYByABKAYSFQoNc2VjdXJpdHlUb2tlbhgIIAEoBhIUCgxzZXR0",
            "aW5nc0RpZmYYCSABKAgSFQoNZGVsZXRlU2V0dGluZxgKIAMoCRIlCh1kZXZp",
            "Y2VDaGVja2luQ29uc2lzdGVuY3lUb2tlbhgMIAEoCSIvChBHc2VydmljZXNT",
            "ZXR0aW5nEgwKBG5hbWUYASABKAwSDQoFdmFsdWUYAiABKAwilAIKEUFuZHJv",
            "aWRCdWlsZFByb3RvEgoKAmlkGAEgASgJEg8KB3Byb2R1Y3QYAiABKAkSDwoH",
            "Y2FycmllchgDIAEoCRINCgVyYWRpbxgEIAEoCRISCgpib290bG9hZGVyGAUg",
            "ASgJEg4KBmNsaWVudBgGIAEoCRIRCgl0aW1lc3RhbXAYByABKAMSFgoOZ29v",
            "Z2xlU2VydmljZXMYCCABKAUSDgoGZGV2aWNlGAkgASgJEhIKCnNka1ZlcnNp",
            "b24YCiABKAUSDQoFbW9kZWwYCyABKAkSFAoMbWFudWZhY3R1cmVyGAwgASgJ",
            "EhQKDGJ1aWxkUHJvZHVjdBgNIAEoCRIUCgxvdGFJbnN0YWxsZWQYDiABKAgi",
            "sgIKE0FuZHJvaWRDaGVja2luUHJvdG8SMQoFYnVpbGQYASABKAsyIi5Hb29n",
            "bGVQbGF5U3RvcmUuQW5kcm9pZEJ1aWxkUHJvdG8SFwoPbGFzdENoZWNraW5N",
            "c2VjGAIgASgDEjEKBWV2ZW50GAMgAygLMiIuR29vZ2xlUGxheVN0b3JlLkFu",
            "ZHJvaWRFdmVudFByb3RvEjQKBHN0YXQYBCADKAsyJi5Hb29nbGVQbGF5U3Rv",
            "cmUuQW5kcm9pZFN0YXRpc3RpY1Byb3RvEhYKDnJlcXVlc3RlZEdyb3VwGAUg",
            "AygJEhQKDGNlbGxPcGVyYXRvchgGIAEoCRITCgtzaW1PcGVyYXRvchgHIAEo",
            "CRIPCgdyb2FtaW5nGAggASgJEhIKCnVzZXJOdW1iZXIYCSABKAUiQQoRQW5k",
            "cm9pZEV2ZW50UHJvdG8SCwoDdGFnGAEgASgJEg0KBXZhbHVlGAIgASgJEhAK",
            "CHRpbWVNc2VjGAMgASgDIroBChJBbmRyb2lkSW50ZW50UHJvdG8SDgoGYWN0",
            "aW9uGAEgASgJEg8KB2RhdGFVcmkYAiABKAkSEAoIbWltZVR5cGUYAyABKAkS",
            "EQoJamF2YUNsYXNzGAQgASgJEjgKBWV4dHJhGAUgAygKMikuR29vZ2xlUGxh",
            "eVN0b3JlLkFuZHJvaWRJbnRlbnRQcm90by5FeHRyYRokCgVFeHRyYRIMCgRu",
            "YW1lGAYgASgJEg0KBXZhbHVlGAcgASgJIkAKFUFuZHJvaWRTdGF0aXN0aWNQ",
            "cm90bxILCgN0YWcYASABKAkSDQoFY291bnQYAiABKAUSCwoDc3VtGAMgASgC",
            "InYKEkNsaWVudExpYnJhcnlTdGF0ZRIOCgZjb3JwdXMYASABKAUSEwoLc2Vy",
            "dmVyVG9rZW4YAiABKAwSEwoLaGFzaENvZGVTdW0YAyABKAMSEwoLbGlicmFy",
            "eVNpemUYBCABKAUSEQoJbGlicmFyeUlkGAUgASgJIpICChVBbmRyb2lkRGF0",
            "YVVzYWdlUHJvdG8SDwoHdmVyc2lvbhgBIAEoBRIZChFjdXJyZW50UmVwb3J0",
            "TXNlYxgCIAEoAxJJChdrZXlUb1BhY2thZ2VOYW1lTWFwcGluZxgDIAMoCzIo",
            "Lkdvb2dsZVBsYXlTdG9yZS5LZXlUb1BhY2thZ2VOYW1lTWFwcGluZxJBChNw",
            "YXlsb2FkTGV2ZWxBcHBTdGF0GAQgAygLMiQuR29vZ2xlUGxheVN0b3JlLlBh",
            "eWxvYWRMZXZlbEFwcFN0YXQSPwoSaXBMYXllck5ldHdvcmtTdGF0GAUgAygL",
            "MiMuR29vZ2xlUGxheVN0b3JlLklwTGF5ZXJOZXR3b3JrU3RhdCJ+ChdBbmRy",
            "b2lkVXNhZ2VTdGF0c1JlcG9ydBIRCglhbmRyb2lkSWQYASABKAMSEQoJbG9n",
            "Z2luZ0lkGAIgASgDEj0KCnVzYWdlU3RhdHMYAyABKAsyKS5Hb29nbGVQbGF5",
            "U3RvcmUuVXNhZ2VTdGF0c0V4dGVuc2lvblByb3RvIo0BCglBcHBCdWNrZXQS",
            "FwoPYnVja2V0U3RhcnRNc2VjGAEgASgDEhoKEmJ1Y2tldER1cmF0aW9uTXNl",
            "YxgCIAEoAxIzCgxzdGF0Q291bnRlcnMYAyADKAsyHS5Hb29nbGVQbGF5U3Rv",
            "cmUuU3RhdENvdW50ZXJzEhYKDm9wZXJhdGlvbkNvdW50GAQgASgDIi0KC0Nv",
            "dW50ZXJEYXRhEg0KBWJ5dGVzGAEgASgDEg8KB3BhY2tldHMYAiABKAMicgoO",
            "SXBMYXllckFwcFN0YXQSEgoKcGFja2FnZUtleRgBIAEoBRIWCg5hcHBsaWNh",
            "dGlvblRhZxgCIAEoBRI0ChBpcExheWVyQXBwQnVja2V0GAMgAygLMhouR29v",
            "Z2xlUGxheVN0b3JlLkFwcEJ1Y2tldCKfAQoUSXBMYXllck5ldHdvcmtCdWNr",
            "ZXQSFwoPYnVja2V0U3RhcnRNc2VjGAEgASgDEhoKEmJ1Y2tldER1cmF0aW9u",
            "TXNlYxgCIAEoAxIzCgxzdGF0Q291bnRlcnMYAyADKAsyHS5Hb29nbGVQbGF5",
            "U3RvcmUuU3RhdENvdW50ZXJzEh0KFW5ldHdvcmtBY3RpdmVEdXJhdGlvbhgE",
            "IAEoAyK4AQoSSXBMYXllck5ldHdvcmtTdGF0EhYKDm5ldHdvcmtEZXRhaWxz",
            "GAEgASgJEgwKBHR5cGUYAiABKAUSQwoUaXBMYXllck5ldHdvcmtCdWNrZXQY",
            "AyADKAsyJS5Hb29nbGVQbGF5U3RvcmUuSXBMYXllck5ldHdvcmtCdWNrZXQS",
            "NwoOaXBMYXllckFwcFN0YXQYBCADKAsyHy5Hb29nbGVQbGF5U3RvcmUuSXBM",
            "YXllckFwcFN0YXQicwoXS2V5VG9QYWNrYWdlTmFtZU1hcHBpbmcSEgoKcGFj",
            "a2FnZUtleRgBIAEoBRIPCgd1aWROYW1lGAIgASgJEjMKDXNoYXJlZFBhY2th",
            "Z2UYAyADKAsyHC5Hb29nbGVQbGF5U3RvcmUuUGFja2FnZUluZm8iMwoLUGFj",
            "a2FnZUluZm8SDwoHcGtnTmFtZRgBIAEoCRITCgt2ZXJzaW9uQ29kZRgCIAEo",
            "BSJ8ChNQYXlsb2FkTGV2ZWxBcHBTdGF0EhIKCnBhY2thZ2VLZXkYASABKAUS",
            "FgoOYXBwbGljYXRpb25UYWcYAiABKAUSOQoVcGF5bG9hZExldmVsQXBwQnVj",
            "a2V0GAMgAygLMhouR29vZ2xlUGxheVN0b3JlLkFwcEJ1Y2tldCJ4CgxTdGF0",
            "Q291bnRlcnMSFAoMbmV0d29ya1Byb3RvGAEgASgFEhEKCWRpcmVjdGlvbhgC",
            "IAEoBRIxCgtjb3VudGVyRGF0YRgDIAEoCzIcLkdvb2dsZVBsYXlTdG9yZS5D",
            "b3VudGVyRGF0YRIMCgRmZ0JnGAQgASgFIlUKGFVzYWdlU3RhdHNFeHRlbnNp",
            "b25Qcm90bxI5CglkYXRhVXNhZ2UYASABKAsyJi5Hb29nbGVQbGF5U3RvcmUu",
            "QW5kcm9pZERhdGFVc2FnZVByb3RvIlwKFE1vZGlmeUxpYnJhcnlSZXF1ZXN0",
            "EhEKCWxpYnJhcnlJZBgBIAEoCRIWCg5hZGRQYWNrYWdlTmFtZRgCIAMoCRIZ",
            "ChFyZW1vdmVQYWNrYWdlTmFtZRgDIAMoCQ=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidAppDeliveryData), global::GooglePlayStore.AndroidAppDeliveryData.Parser, new[]{ "DownloadSize", "Sha1", "DownloadUrl", "AdditionalFile", "DownloadAuthCookie", "ForwardLocked", "RefundTimeout", "ServerInitiated", "PostInstallRefundWindowMillis", "ImmediateStartNeeded", "PatchData", "EncryptionParams", "CompressedDownloadUrl", "CompressedSize", "SplitDeliveryData", "InstallLocation", "Type", "CompressedAppData", "Sha256" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SplitDeliveryData), global::GooglePlayStore.SplitDeliveryData.Parser, new[]{ "Name", "DownloadSize", "CompressedSize", "Sha1", "DownloadUrl", "CompressedDownloadUrl", "PatchData", "CompressedAppData", "Sha256" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidAppPatchData), global::GooglePlayStore.AndroidAppPatchData.Parser, new[]{ "BaseVersionCode", "BaseSha1", "DownloadUrl", "PatchFormat", "MaxPatchSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CompressedAppData), global::GooglePlayStore.CompressedAppData.Parser, new[]{ "Type", "Size", "DownloadUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AppFileMetadata), global::GooglePlayStore.AppFileMetadata.Parser, new[]{ "FileType", "VersionCode", "Size", "DownloadUrl", "PatchData", "CompressedSize", "CompressedDownloadUrl", "Sha1" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.EncryptionParams), global::GooglePlayStore.EncryptionParams.Parser, new[]{ "Version", "EncryptionKey", "HMacKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.HttpCookie), global::GooglePlayStore.HttpCookie.Parser, new[]{ "Name", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Address), global::GooglePlayStore.Address.Parser, new[]{ "Name", "AddressLine1", "AddressLine2", "City", "State", "PostalCode", "PostalCountry", "DependentLocality", "SortingCode", "LanguageCode", "PhoneNumber", "DeprecatedIsReduced", "FirstName", "LastName", "Email" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BrowseLink), global::GooglePlayStore.BrowseLink.Parser, new[]{ "Name", "DataUrl", "ServerLogsCookie", "Icon" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BrowseResponse), global::GooglePlayStore.BrowseResponse.Parser, new[]{ "ContentsUrl", "PromoUrl", "Category", "Breadcrumb", "QuickLink", "ServerLogsCookie", "Title", "BackendId", "BrowseTab", "LandingTabIndex", "QuickLinkTabIndex", "QuickLinkFallbackTabIndex", "IsFamilySafe", "ShareUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DirectPurchase), global::GooglePlayStore.DirectPurchase.Parser, new[]{ "DetailsUrl", "PurchaseItemId", "ParentItemId", "OfferType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.RedeemGiftCard), global::GooglePlayStore.RedeemGiftCard.Parser, new[]{ "PrefillCode", "PartnerPayload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ResolvedLink), global::GooglePlayStore.ResolvedLink.Parser, new[]{ "DetailsUrl", "BrowseUrl", "SearchUrl", "DirectPurchase", "HomeUrl", "RedeemGiftCard", "ServerLogsCookie", "DocId", "WishlistUrl", "Backend", "Query", "MyAccountUrl", "HelpCenter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.HelpCenter), global::GooglePlayStore.HelpCenter.Parser, new[]{ "ContextId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.QuickLink), global::GooglePlayStore.QuickLink.Parser, new[]{ "Name", "Image", "Link", "DisplayRequired", "ServerLogsCookie", "BackendId", "PrismStyle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BrowseTab), global::GooglePlayStore.BrowseTab.Parser, new[]{ "Title", "ServerLogsCookie", "ListUrl", "BrowseLink", "QuickLink", "QuickLinkTitle", "CategoriesTitle", "BackendId", "HighlightsBannerUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BuyResponse), global::GooglePlayStore.BuyResponse.Parser, new[]{ "PurchaseResponse", "CheckoutInfo", "ContinueViaUrl", "PurchaseStatusUrl", "CheckoutServiceId", "CheckoutTokenRequired", "BaseCheckoutUrl", "TosCheckboxHtml", "IabPermissionError", "PurchaseStatusResponse", "PurchaseCookie", "Challenge", "AddInstrumentPromptHtml", "ConfirmButtonText", "PermissionErrorTitleText", "PermissionErrorMessageText", "ServerLogsCookie", "EncodedDeliveryToken", "UnknownToken" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BuyResponse.Types.CheckoutInfo), global::GooglePlayStore.BuyResponse.Types.CheckoutInfo.Parser, new[]{ "Item", "SubItem", "CheckoutOption", "DeprecatedCheckoutUrl", "AddInstrumentUrl", "FooterHtml", "EligibleInstrumentFamily", "FootnoteHtml", "EligibleInstrument" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BuyResponse.Types.CheckoutInfo.Types.CheckoutOption), global::GooglePlayStore.BuyResponse.Types.CheckoutInfo.Types.CheckoutOption.Parser, new[]{ "FormOfPayment", "EncodedAdjustedCart", "InstrumentId", "Item", "SubItem", "Total", "FooterHtml", "InstrumentFamily", "DeprecatedInstrumentInapplicableReason", "SelectedInstrument", "Summary", "FootnoteHtml", "Instrument", "PurchaseCookie", "DisabledReason" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.LineItem), global::GooglePlayStore.LineItem.Parser, new[]{ "Name", "Description", "Offer", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Money), global::GooglePlayStore.Money.Parser, new[]{ "Micros", "CurrencyCode", "FormattedAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PurchaseNotificationResponse), global::GooglePlayStore.PurchaseNotificationResponse.Parser, new[]{ "Status", "DebugInfo", "LocalizedErrorMessage", "PurchaseId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PurchaseStatusResponse), global::GooglePlayStore.PurchaseStatusResponse.Parser, new[]{ "Status", "StatusMsg", "StatusTitle", "BriefMessage", "InfoUrl", "LibraryUpdate", "RejectedInstrument", "AppDeliveryData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PurchaseHistoryDetails), global::GooglePlayStore.PurchaseHistoryDetails.Parser, new[]{ "PurchaseTimestampMillis", "PurchaseDetailsHtml", "Offer", "PurchaseStatus", "TitleBylineHtml", "ClientRefundContext", "PurchaseDetailsImage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BillingProfileResponse), global::GooglePlayStore.BillingProfileResponse.Parser, new[]{ "Result", "BillingProfile", "UserMessageHtml" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CheckInstrumentResponse), global::GooglePlayStore.CheckInstrumentResponse.Parser, new[]{ "UserHasValidInstrument", "CheckoutTokenRequired", "Instrument", "EligibleInstrument" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.InstrumentSetupInfoResponse), global::GooglePlayStore.InstrumentSetupInfoResponse.Parser, new[]{ "SetupInfo", "CheckoutTokenRequired" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.RedeemGiftCardRequest), global::GooglePlayStore.RedeemGiftCardRequest.Parser, new[]{ "GiftCardPin", "Address", "AcceptedLegalDocumentId", "CheckoutToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.RedeemGiftCardResponse), global::GooglePlayStore.RedeemGiftCardResponse.Parser, new[]{ "Result", "UserMessageHtml", "BalanceHtml", "AddressChallenge", "CheckoutTokenRequired" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.UpdateInstrumentRequest), global::GooglePlayStore.UpdateInstrumentRequest.Parser, new[]{ "Instrument", "CheckoutToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.UpdateInstrumentResponse), global::GooglePlayStore.UpdateInstrumentResponse.Parser, new[]{ "Result", "InstrumentId", "UserMessageHtml", "ErrorInputField", "CheckoutTokenRequired", "RedeemedOffer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.InitiateAssociationResponse), global::GooglePlayStore.InitiateAssociationResponse.Parser, new[]{ "UserToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.VerifyAssociationResponse), global::GooglePlayStore.VerifyAssociationResponse.Parser, new[]{ "Status", "BillingAddress", "CarrierTos", "CarrierErrorMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AddressChallenge), global::GooglePlayStore.AddressChallenge.Parser, new[]{ "ResponseAddressParam", "ResponseCheckboxesParam", "Title", "DescriptionHtml", "Checkbox", "Address", "ErrorInputField", "ErrorHtml", "RequiredField", "SupportedCountry" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AuthenticationChallenge), global::GooglePlayStore.AuthenticationChallenge.Parser, new[]{ "AuthenticationType", "ResponseAuthenticationTypeParam", "ResponseRetryCountParam", "PinHeaderText", "PinDescriptionTextHtml", "GaiaHeaderText", "GaiaDescriptionTextHtml", "GaiaFooterTextHtml", "GaiaOptOutCheckbox", "GaiaOptOutDescriptionTextHtml" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Challenge), global::GooglePlayStore.Challenge.Parser, new[]{ "AddressChallenge", "AuthenticationChallenge", "WebViewChallenge" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Country), global::GooglePlayStore.Country.Parser, new[]{ "RegionCode", "DisplayName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.FormCheckbox), global::GooglePlayStore.FormCheckbox.Parser, new[]{ "Description", "Checked", "Required", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.InputValidationError), global::GooglePlayStore.InputValidationError.Parser, new[]{ "InputField", "ErrorMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.WebViewChallenge), global::GooglePlayStore.WebViewChallenge.Parser, new[]{ "StartUrl", "TargetUrlRegexp", "CancelButtonDisplayLabel", "ResponseTargetUrlParam", "CancelUrlRegexp", "Title" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AddCreditCardPromoOffer), global::GooglePlayStore.AddCreditCardPromoOffer.Parser, new[]{ "HeaderText", "DescriptionHtml", "Image", "IntroductoryTextHtml", "OfferTitle", "NoActionDescription", "TermsAndConditionsHtml" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AvailablePromoOffer), global::GooglePlayStore.AvailablePromoOffer.Parser, new[]{ "AddCreditCardOffer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CheckPromoOfferResponse), global::GooglePlayStore.CheckPromoOfferResponse.Parser, new[]{ "AvailableOffer", "RedeemedOffer", "CheckoutTokenRequired" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.RedeemedPromoOffer), global::GooglePlayStore.RedeemedPromoOffer.Parser, new[]{ "HeaderText", "DescriptionHtml", "Image" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DocId), global::GooglePlayStore.DocId.Parser, new[]{ "BackendDocId", "Type", "Backend" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Install), global::GooglePlayStore.Install.Parser, new[]{ "AndroidId", "Version", "Bundled", "Pending", "LastUpdated" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.GroupLicenseKey), global::GooglePlayStore.GroupLicenseKey.Parser, new[]{ "DasherCustomerId", "DocId", "LicensedOfferType", "Type", "RentalPeriodDays" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.LicenseTerms), global::GooglePlayStore.LicenseTerms.Parser, new[]{ "GroupLicenseKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Offer), global::GooglePlayStore.Offer.Parser, new[]{ "Micros", "CurrencyCode", "FormattedAmount", "ConvertedPrice", "CheckoutFlowRequired", "FullPriceMicros", "FormattedFullAmount", "OfferType", "RentalTerms", "OnSaleDate", "PromotionLabel", "SubscriptionTerms", "FormattedName", "FormattedDescription", "Preorder", "OnSaleDateDisplayTimeZoneOffsetMillis", "LicensedOfferType", "SubscriptionContentTerms", "OfferId", "PreorderFulfillmentDisplayDate", "LicenseTerms", "Sale", "VoucherTerms", "OfferPayment", "RepeatLastPayment", "BuyButtonLabel", "InstantPurchaseEnabled", "SaleEndTimestamp", "SaleMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.MonthAndDay), global::GooglePlayStore.MonthAndDay.Parser, new[]{ "Month", "Day" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.OfferPaymentPeriod), global::GooglePlayStore.OfferPaymentPeriod.Parser, new[]{ "Duration", "Start", "End" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.OfferPaymentOverride), global::GooglePlayStore.OfferPaymentOverride.Parser, new[]{ "Micros", "Start", "End" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.OfferPayment), global::GooglePlayStore.OfferPayment.Parser, new[]{ "Micros", "CurrencyCode", "OfferPaymentPeriod", "OfferPaymentOverride" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.VoucherTerms), global::GooglePlayStore.VoucherTerms.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.RentalTerms), global::GooglePlayStore.RentalTerms.Parser, new[]{ "DEPRECATEDGrantPeriodSeconds", "DEPRECATEDActivatePeriodSeconds", "GrantPeriod", "ActivatePeriod" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SignedData), global::GooglePlayStore.SignedData.Parser, new[]{ "SignedData_", "Signature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SubscriptionContentTerms), global::GooglePlayStore.SubscriptionContentTerms.Parser, new[]{ "RequiredSubscription" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.GroupLicenseInfo), global::GooglePlayStore.GroupLicenseInfo.Parser, new[]{ "LicensedOfferType", "GaiaGroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.LicensedDocumentInfo), global::GooglePlayStore.LicensedDocumentInfo.Parser, new[]{ "GaiaGroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.OwnershipInfo), global::GooglePlayStore.OwnershipInfo.Parser, new[]{ "InitiationTimestamp", "ValidUntilTimestamp", "AutoRenewing", "RefundTimeoutTimestamp", "PostDeliveryRefundWindowMillis", "DeveloperPurchaseInfo", "PreOrdered", "Hidden", "RentalTerms", "GroupLicenseInfo", "LicensedDocumentInfo", "Quantity", "LibraryExpirationTimestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SubscriptionTerms), global::GooglePlayStore.SubscriptionTerms.Parser, new[]{ "RecurringPeriod", "TrialPeriod" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.TimePeriod), global::GooglePlayStore.TimePeriod.Parser, new[]{ "Unit", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BillingAddressSpec), global::GooglePlayStore.BillingAddressSpec.Parser, new[]{ "BillingAddressType", "RequiredField" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BillingProfile), global::GooglePlayStore.BillingProfile.Parser, new[]{ "Instrument", "SelectedExternalInstrumentId", "BillingProfileOption" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BillingProfileOption), global::GooglePlayStore.BillingProfileOption.Parser, new[]{ "Type", "DisplayTitle", "ExternalInstrumentId", "TopupInfo", "CarrierBillingInstrumentStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CarrierBillingCredentials), global::GooglePlayStore.CarrierBillingCredentials.Parser, new[]{ "Value", "Expiration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CarrierBillingInstrument), global::GooglePlayStore.CarrierBillingInstrument.Parser, new[]{ "InstrumentKey", "AccountType", "CurrencyCode", "TransactionLimit", "SubscriberIdentifier", "EncryptedSubscriberInfo", "Credentials", "AcceptedCarrierTos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CarrierBillingInstrumentStatus), global::GooglePlayStore.CarrierBillingInstrumentStatus.Parser, new[]{ "CarrierTos", "AssociationRequired", "PasswordRequired", "CarrierPasswordPrompt", "ApiVersion", "Name", "DeviceAssociation", "CarrierSupportPhoneNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CarrierTos), global::GooglePlayStore.CarrierTos.Parser, new[]{ "DcbTos", "PiiTos", "NeedsDcbTosAcceptance", "NeedsPiiTosAcceptance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CarrierTosEntry), global::GooglePlayStore.CarrierTosEntry.Parser, new[]{ "Url", "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CreditCardInstrument), global::GooglePlayStore.CreditCardInstrument.Parser, new[]{ "Type", "EscrowHandle", "LastDigits", "ExpirationMonth", "ExpirationYear", "EscrowEfeParam" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DeviceAssociation), global::GooglePlayStore.DeviceAssociation.Parser, new[]{ "UserTokenRequestMessage", "UserTokenRequestAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DisabledInfo), global::GooglePlayStore.DisabledInfo.Parser, new[]{ "DisabledReason", "DisabledMessageHtml", "ErrorMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.EfeParam), global::GooglePlayStore.EfeParam.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Instrument), global::GooglePlayStore.Instrument.Parser, new[]{ "InstrumentId", "BillingAddress", "CreditCard", "CarrierBilling", "BillingAddressSpec", "InstrumentFamily", "CarrierBillingStatus", "DisplayTitle", "TopupInfoDeprecated", "Version", "StoredValue", "DisabledInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.InstrumentSetupInfo), global::GooglePlayStore.InstrumentSetupInfo.Parser, new[]{ "InstrumentFamily", "Supported", "AddressChallenge", "Balance", "FooterHtml" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PasswordPrompt), global::GooglePlayStore.PasswordPrompt.Parser, new[]{ "Prompt", "ForgotPasswordUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.StoredValueInstrument), global::GooglePlayStore.StoredValueInstrument.Parser, new[]{ "Type", "Balance", "TopupInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.TopupInfo), global::GooglePlayStore.TopupInfo.Parser, new[]{ "OptionsContainerDocIdDeprecated", "OptionsListUrl", "Subtitle", "OptionsContainerDocId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ConsumePurchaseResponse), global::GooglePlayStore.ConsumePurchaseResponse.Parser, new[]{ "LibraryUpdate", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ContainerMetadata), global::GooglePlayStore.ContainerMetadata.Parser, new[]{ "BrowseUrl", "NextPageUrl", "Relevance", "EstimatedResults", "AnalyticsCookie", "Ordered", "ContainerView", "LeftIcon" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ContainerView), global::GooglePlayStore.ContainerView.Parser, new[]{ "Selected", "Title", "ListUrl", "ServerLogsCookie" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.FlagContentResponse), global::GooglePlayStore.FlagContentResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ClientDownloadRequest), global::GooglePlayStore.ClientDownloadRequest.Parser, new[]{ "Url", "Digests", "Length", "Resources", "Signature", "UserInitiated", "ClientAsn", "FileBasename", "DownloadType", "Locale", "ApkInfo", "AndroidId", "OriginatingPackages", "OriginatingSignature" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ClientDownloadRequest.Types.ApkInfo), global::GooglePlayStore.ClientDownloadRequest.Types.ApkInfo.Parser, new[]{ "PackageName", "VersionCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ClientDownloadRequest.Types.CertificateChain), global::GooglePlayStore.ClientDownloadRequest.Types.CertificateChain.Parser, new[]{ "Element" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ClientDownloadRequest.Types.CertificateChain.Types.Element), global::GooglePlayStore.ClientDownloadRequest.Types.CertificateChain.Types.Element.Parser, new[]{ "Certificate", "ParsedSuccessfully", "Subject", "Issuer", "Fingerprint", "ExpiryTime", "StartTime" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ClientDownloadRequest.Types.Digests), global::GooglePlayStore.ClientDownloadRequest.Types.Digests.Parser, new[]{ "Sha256", "Sha1", "Md5" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ClientDownloadRequest.Types.Resource), global::GooglePlayStore.ClientDownloadRequest.Types.Resource.Parser, new[]{ "Url", "Type", "RemoteIp", "Referrer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ClientDownloadRequest.Types.SignatureInfo), global::GooglePlayStore.ClientDownloadRequest.Types.SignatureInfo.Parser, new[]{ "CertificateChain", "Trusted" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ClientDownloadResponse), global::GooglePlayStore.ClientDownloadResponse.Parser, new[]{ "Verdict", "MoreInfo", "Token" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ClientDownloadResponse.Types.MoreInfo), global::GooglePlayStore.ClientDownloadResponse.Types.MoreInfo.Parser, new[]{ "Description", "Url" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ClientDownloadStatsRequest), global::GooglePlayStore.ClientDownloadStatsRequest.Parser, new[]{ "UserDecision", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DebugInfo), global::GooglePlayStore.DebugInfo.Parser, new[]{ "Message", "Timing" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DebugInfo.Types.Timing), global::GooglePlayStore.DebugInfo.Types.Timing.Parser, new[]{ "Name", "TimeInMs" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DebugSettingsResponse), global::GooglePlayStore.DebugSettingsResponse.Parser, new[]{ "PlayCountryOverride", "PlayCountryDebugInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DeliveryResponse), global::GooglePlayStore.DeliveryResponse.Parser, new[]{ "Status", "AppDeliveryData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BulkDetailsEntry), global::GooglePlayStore.BulkDetailsEntry.Parser, new[]{ "Item" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BulkDetailsRequest), global::GooglePlayStore.BulkDetailsRequest.Parser, new[]{ "DocId", "IncludeChildDocs", "IncludeDetails", "SourcePackageName", "InstalledVersionCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BulkDetailsResponse), global::GooglePlayStore.BulkDetailsResponse.Parser, new[]{ "Entry" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DetailsResponse), global::GooglePlayStore.DetailsResponse.Parser, new[]{ "AnalyticsCookie", "UserReview", "Item", "FooterHtml", "ServerLogsCookie", "DiscoveryBadge", "EnableReviews", "Features", "DetailsStreamUrl", "UserReviewUrl", "PostAcquireDetailsStreamUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DiscoveryBadge), global::GooglePlayStore.DiscoveryBadge.Parser, new[]{ "Label", "Image", "BackgroundColor", "BadgeContainer1", "ServerLogsCookie", "IsPlusOne", "AggregateRating", "UserStarRating", "DownloadCount", "DownloadUnits", "ContentDescription", "PlayerBadge", "FamilyAgeRangeBadge", "FamilyCategoryBadge" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PlayerBadge), global::GooglePlayStore.PlayerBadge.Parser, new[]{ "OverlayIcon" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DiscoveryBadgeLink), global::GooglePlayStore.DiscoveryBadgeLink.Parser, new[]{ "Link", "UserReviewsUrl", "CriticReviewsUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Features), global::GooglePlayStore.Features.Parser, new[]{ "FeaturePresence", "FeatureRating" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Feature), global::GooglePlayStore.Feature.Parser, new[]{ "Label", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DeviceConfigurationProto), global::GooglePlayStore.DeviceConfigurationProto.Parser, new[]{ "TouchScreen", "Keyboard", "Navigation", "ScreenLayout", "HasHardKeyboard", "HasFiveWayNavigation", "ScreenDensity", "GlEsVersion", "SystemSharedLibrary", "SystemAvailableFeature", "NativePlatform", "ScreenWidth", "ScreenHeight", "SystemSupportedLocale", "GlExtension", "DeviceClass", "MaxApkDownloadSizeMb", "SmallestScreenWidthDP", "LowRamDevice", "TotalMemoryBytes", "MaxNumOfCPUCores", "DeviceFeature", "Unknown28", "Unknown30" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DeviceFeature), global::GooglePlayStore.DeviceFeature.Parser, new[]{ "Name", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Document), global::GooglePlayStore.Document.Parser, new[]{ "DocId", "FetchDocId", "SampleDocId", "Title", "Url", "Snippet", "PriceDeprecated", "Availability", "Image", "Child", "AggregateRating", "Offer", "TranslatedSnippet", "DocumentVariant", "CategoryId", "Decoration", "Parent", "PrivacyPolicyUrl", "ConsumptionUrl", "EstimatedNumChildren", "Subtitle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DocumentVariant), global::GooglePlayStore.DocumentVariant.Parser, new[]{ "VariationType", "Rule", "Title", "Snippet", "RecentChanges", "AutoTranslation", "Offer", "ChannelId", "Child", "Decoration", "Image", "CategoryId", "Subtitle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SectionImage), global::GooglePlayStore.SectionImage.Parser, new[]{ "ImageContainer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ImageContainer), global::GooglePlayStore.ImageContainer.Parser, new[]{ "Image" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Image), global::GooglePlayStore.Image.Parser, new[]{ "ImageType", "Dimension", "ImageUrl", "AltTextLocalized", "SecureUrl", "PositionInSequence", "SupportsFifeUrlOptions", "Citation", "DurationSeconds", "FillColorRGB", "Autogen", "Attribution", "BackgroundColorRgb", "Palette", "DeviceClass", "SupportsFifeMonogramOption", "ImageUrlAlt" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Image.Types.Dimension), global::GooglePlayStore.Image.Types.Dimension.Parser, new[]{ "Width", "Height", "AspectRatio" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Image.Types.Citation), global::GooglePlayStore.Image.Types.Citation.Parser, new[]{ "TitleLocalized", "Url" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Attribution), global::GooglePlayStore.Attribution.Parser, new[]{ "SourceTitle", "SourceUrl", "LicenseTitle", "LicenseUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ImagePalette), global::GooglePlayStore.ImagePalette.Parser, new[]{ "LightVibrantRGB", "VibrantRGB", "DarkVibrantRGB", "LightMutedRGB", "MutedRGB", "DarkMutedRGB" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.TranslatedText), global::GooglePlayStore.TranslatedText.Parser, new[]{ "Text", "SourceLocale", "TargetLocale" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PlusOneData), global::GooglePlayStore.PlusOneData.Parser, new[]{ "SetByUser", "Total", "CirclesTotal", "CirclesPeople" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PlusPerson), global::GooglePlayStore.PlusPerson.Parser, new[]{ "DisplayName", "ProfileImageUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AppDetails), global::GooglePlayStore.AppDetails.Parser, new[]{ "DeveloperName", "MajorVersionNumber", "VersionCode", "VersionString", "Title", "AppCategory", "ContentRating", "InfoDownloadSize", "Permission", "DeveloperEmail", "DeveloperWebsite", "InfoDownload", "PackageName", "RecentChangesHtml", "InfoUpdatedOn", "File", "AppType", "CertificateHash", "VariesWithDevice", "CertificateSet", "AutoAcquireFreeAppIfHigherVersionAvailableTag", "HasInstantLink2", "SplitId", "GamepadRequired", "ExternallyHosted", "EverExternallyHosted", "InstallNotes", "InstallLocation", "TargetSdkVersion", "HasPreregistrationPromoCode", "Dependencies", "TestingProgramInfo", "EarlyAccessInfo", "EditorChoice", "InstantLink", "DeveloperAddress", "Publisher", "CategoryName", "DownloadCount", "DownloadLabelDisplay", "InAppProduct", "DownloadLabelAbbreviated", "DownloadLabel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ModifyLibrary), global::GooglePlayStore.ModifyLibrary.Parser, new[]{ "Id", "PackageToAdd", "PackageToRemove" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Publisher), global::GooglePlayStore.Publisher.Parser, new[]{ "PublisherStream" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PublisherStream), global::GooglePlayStore.PublisherStream.Parser, new[]{ "MoreUrl", "Query" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.EditorChoice), global::GooglePlayStore.EditorChoice.Parser, new[]{ "Bulletins", "Description", "Stream", "Title", "Subtitle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CertificateSet), global::GooglePlayStore.CertificateSet.Parser, new[]{ "CertificateHash", "Sha256" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Dependencies), global::GooglePlayStore.Dependencies.Parser, new[]{ "Unknown", "Size", "Dependency", "TargetSdk", "Unknown2", "SplitApks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Dependency), global::GooglePlayStore.Dependency.Parser, new[]{ "PackageName", "Version", "Unknown4" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.TestingProgramInfo), global::GooglePlayStore.TestingProgramInfo.Parser, new[]{ "Subscribed", "SubscribedAndInstalled", "Email", "DisplayName", "Image" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.EarlyAccessInfo), global::GooglePlayStore.EarlyAccessInfo.Parser, new[]{ "Email" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DocumentDetails), global::GooglePlayStore.DocumentDetails.Parser, new[]{ "AppDetails", "SubscriptionDetails" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PatchDetails), global::GooglePlayStore.PatchDetails.Parser, new[]{ "BaseVersionCode", "Size" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.FileMetadata), global::GooglePlayStore.FileMetadata.Parser, new[]{ "FileType", "VersionCode", "Size", "SplitId", "CompressedSize", "PatchDetails" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SubscriptionDetails), global::GooglePlayStore.SubscriptionDetails.Parser, new[]{ "SubscriptionPeriod" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Bucket), global::GooglePlayStore.Bucket.Parser, new[]{ "MultiCorpus", "Title", "IconUrl", "FullContentsUrl", "Relevance", "EstimatedResults", "AnalyticsCookie", "FullContentsListUrl", "NextPageUrl", "Ordered" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ListResponse), global::GooglePlayStore.ListResponse.Parser, new[]{ "Bucket", "Item" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Item), global::GooglePlayStore.Item.Parser, new[]{ "Id", "SubId", "Type", "CategoryId", "Title", "Creator", "DescriptionHtml", "Offer", "Availability", "Image", "SubItem", "ContainerMetadata", "Details", "AggregateRating", "Annotations", "DetailsUrl", "ShareUrl", "ReviewsUrl", "BackendUrl", "PurchaseDetailsUrl", "DetailsReusable", "Subtitle", "TranslatedDescriptionHtml", "ServerLogsCookie", "AppInfo", "Mature", "PromotionalDescription", "AvailableForPreregistration", "Tip", "ReviewSnippetsUrl", "ForceShareability", "UseWishlistAsPrimaryAction", "ReviewQuestionsUrl", "ReviewSummaryUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AppInfo), global::GooglePlayStore.AppInfo.Parser, new[]{ "Title", "Section" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AppInfoSection), global::GooglePlayStore.AppInfoSection.Parser, new[]{ "Label", "Container" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AppInfoContainer), global::GooglePlayStore.AppInfoContainer.Parser, new[]{ "Image", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Annotations), global::GooglePlayStore.Annotations.Parser, new[]{ "SectionRelated", "SectionMoreBy", "Warning", "SectionBodyOfWork", "SectionCoreContent", "OverlayMetaData", "BadgeForCreator", "InfoBadge", "AnnotationLink", "SectionCrossSell", "SectionRelatedItemType", "PromotedDoc", "OfferNote", "PrivacyPolicyUrl", "SuggestionReasons", "OptimalDeviceClassWarning", "BadgeContainer", "SectionSuggestForRating", "SectionPurchaseCrossSell", "OverflowLink", "AttributionHtml", "PurchaseHistoryDetails", "BadgeForLegacyRating", "VoucherInfo", "SectionFeaturedApps", "DetailsPageCluster", "VideoAnnotations", "SectionPurchaseRelatedTopics", "MySubscriptionDetails", "MyRewardDetails", "FeatureBadge", "Snippet", "DownloadsLabel", "BadgeForRating", "CategoryInfo", "Reasons", "TopChartStream", "CategoryName", "Chip", "DisplayBadge", "LiveStreamUrl", "PromotionStreamUrl", "OverlayMetaDataExtra", "SectionImage", "CategoryStream" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.EditorReason), global::GooglePlayStore.EditorReason.Parser, new[]{ "Bulletin", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SectionMetaData), global::GooglePlayStore.SectionMetaData.Parser, new[]{ "Header", "ListUrl", "BrowseUrl", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.OverlayMetaData), global::GooglePlayStore.OverlayMetaData.Parser, new[]{ "OverlayHeader", "OverlayTitle", "OverlayDescription" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.OverlayHeader), global::GooglePlayStore.OverlayHeader.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.OverlayTitle), global::GooglePlayStore.OverlayTitle.Parser, new[]{ "Title", "CompositeImage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CompositeImage), global::GooglePlayStore.CompositeImage.Parser, new[]{ "Type", "Url", "TypeAlt", "Title", "UrlAlt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.OverlayDescription), global::GooglePlayStore.OverlayDescription.Parser, new[]{ "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SuggestionReasons), global::GooglePlayStore.SuggestionReasons.Parser, new[]{ "Reason", "NeutralDismissal", "PositiveDismissal" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Reason), global::GooglePlayStore.Reason.Parser, new[]{ "DescriptionHtml", "ReasonPlusOne", "ReasonReview", "Dismissal", "ReasonUserAction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ReasonPlusOne), global::GooglePlayStore.ReasonPlusOne.Parser, new[]{ "LocalizedDescriptionHtml", "UserProfile" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ReasonReview), global::GooglePlayStore.ReasonReview.Parser, new[]{ "Review" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ReasonUserAction), global::GooglePlayStore.ReasonUserAction.Parser, new[]{ "UserProfile", "LocalizedDescriptionHtml" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Dismissal), global::GooglePlayStore.Dismissal.Parser, new[]{ "Url", "DescriptionHtml" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Snippet), global::GooglePlayStore.Snippet.Parser, new[]{ "SnippetHtml" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.MyRewardDetails), global::GooglePlayStore.MyRewardDetails.Parser, new[]{ "ExpirationTimeMillis", "ExpirationDescription", "ButtonLabel", "LinkAction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.MySubscriptionDetails), global::GooglePlayStore.MySubscriptionDetails.Parser, new[]{ "SubscriptionStatusHtml", "Title", "TitleByLineHtml", "FormattedPrice", "PriceByLineHtml", "CancelSubscription", "PaymentDeclinedLearnMoreLink", "InTrialPeriod", "TitleByLineIcon" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.VideoAnnotations), global::GooglePlayStore.VideoAnnotations.Parser, new[]{ "Bundle", "BundleContentListUrl", "ExtrasContentListUrl", "AlsoAvailableInListUrl", "BundleDocId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.VoucherInfo), global::GooglePlayStore.VoucherInfo.Parser, new[]{ "Item", "Offer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BadgeContainer), global::GooglePlayStore.BadgeContainer.Parser, new[]{ "Title", "Image", "Badge" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.OverflowLink), global::GooglePlayStore.OverflowLink.Parser, new[]{ "Title", "Link" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PromotedDoc), global::GooglePlayStore.PromotedDoc.Parser, new[]{ "Title", "Subtitle", "Image", "Description", "DetailsUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Warning), global::GooglePlayStore.Warning.Parser, new[]{ "LocalizedMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AnnotationLink), global::GooglePlayStore.AnnotationLink.Parser, new[]{ "Uri", "ResolvedLink", "UriBackend" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Rated), global::GooglePlayStore.Rated.Parser, new[]{ "Label", "Image", "LearnMoreHtmlLink" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Badge), global::GooglePlayStore.Badge.Parser, new[]{ "Major", "Image", "Minor", "MinorHtml", "SubBadge", "Link", "Description", "Stream" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SubBadge), global::GooglePlayStore.SubBadge.Parser, new[]{ "Image", "Description", "Link" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Stream), global::GooglePlayStore.Stream.Parser, new[]{ "Title", "Stream_", "Subtitle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SubStream), global::GooglePlayStore.SubStream.Parser, new[]{ "Link" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Link), global::GooglePlayStore.Link.Parser, new[]{ "Uri", "ResolvedLink", "UriBackend" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.StreamLink), global::GooglePlayStore.StreamLink.Parser, new[]{ "Url", "StreamUrl", "SearchUrl", "SubCategoryUrl", "SearchQuery" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Chip), global::GooglePlayStore.Chip.Parser, new[]{ "Title", "Stream" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CategoryInfo), global::GooglePlayStore.CategoryInfo.Parser, new[]{ "Category", "AppCategory" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.EncryptedSubscriberInfo), global::GooglePlayStore.EncryptedSubscriberInfo.Parser, new[]{ "Data", "EncryptedKey", "Signature", "InitVector", "GoogleKeyVersion", "CarrierKeyVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Availability), global::GooglePlayStore.Availability.Parser, new[]{ "Restriction", "OfferType", "Rule", "PerDeviceAvailabilityRestriction", "AvailableIfOwned", "Install", "FilterInfo", "OwnershipInfo", "AvailabilityProblem", "Hidden" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Availability.Types.PerDeviceAvailabilityRestriction), global::GooglePlayStore.Availability.Types.PerDeviceAvailabilityRestriction.Parser, new[]{ "AndroidId", "DeviceRestriction", "ChannelId", "FilterInfo" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AvailabilityProblem), global::GooglePlayStore.AvailabilityProblem.Parser, new[]{ "ProblemType", "MissingValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.FilterEvaluationInfo), global::GooglePlayStore.FilterEvaluationInfo.Parser, new[]{ "RuleEvaluation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Rule), global::GooglePlayStore.Rule.Parser, new[]{ "Negate", "Operator", "Key", "StringArg", "LongArg", "DoubleArg", "SubRule", "ResponseCode", "Comment", "StringArgHash", "ConstArg", "AvailabilityProblemType", "IncludeMissingValues" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.RuleEvaluation), global::GooglePlayStore.RuleEvaluation.Parser, new[]{ "Rule", "ActualStringValue", "ActualLongValue", "ActualBoolValue", "ActualDoubleValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.LibraryAppDetails), global::GooglePlayStore.LibraryAppDetails.Parser, new[]{ "CertificateHash", "RefundTimeoutTimestamp", "PostDeliveryRefundWindowMillis" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.LibraryInAppDetails), global::GooglePlayStore.LibraryInAppDetails.Parser, new[]{ "SignedPurchaseData", "Signature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.LibraryMutation), global::GooglePlayStore.LibraryMutation.Parser, new[]{ "DocId", "OfferType", "DocumentHash", "Deleted", "AppDetails", "SubscriptionDetails", "InAppDetails" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.LibrarySubscriptionDetails), global::GooglePlayStore.LibrarySubscriptionDetails.Parser, new[]{ "InitiationTimestamp", "ValidUntilTimestamp", "AutoRenewing", "TrialUntilTimestamp", "SignedPurchaseData", "Signature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.LibraryUpdate), global::GooglePlayStore.LibraryUpdate.Parser, new[]{ "Status", "Corpus", "ServerToken", "Mutation", "HasMore", "LibraryId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidAppNotificationData), global::GooglePlayStore.AndroidAppNotificationData.Parser, new[]{ "VersionCode", "AssetId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.InAppNotificationData), global::GooglePlayStore.InAppNotificationData.Parser, new[]{ "CheckoutOrderId", "InAppNotificationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.LibraryDirtyData), global::GooglePlayStore.LibraryDirtyData.Parser, new[]{ "Backend", "LibraryId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Notification), global::GooglePlayStore.Notification.Parser, new[]{ "NotificationType", "Timestamp", "DocId", "DocTitle", "UserEmail", "AppData", "AppDeliveryData", "PurchaseRemovalData", "UserNotificationData", "InAppNotificationData", "PurchaseDeclinedData", "NotificationId", "LibraryUpdate", "LibraryDirtyData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PurchaseDeclinedData), global::GooglePlayStore.PurchaseDeclinedData.Parser, new[]{ "Reason", "ShowNotification" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PurchaseRemovalData), global::GooglePlayStore.PurchaseRemovalData.Parser, new[]{ "Malicious" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.UserNotificationData), global::GooglePlayStore.UserNotificationData.Parser, new[]{ "NotificationTitle", "NotificationText", "TickerText", "DialogTitle", "DialogText" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AggregateRating), global::GooglePlayStore.AggregateRating.Parser, new[]{ "Type", "StarRating", "RatingsCount", "OneStarRatings", "TwoStarRatings", "ThreeStarRatings", "FourStarRatings", "FiveStarRatings", "ThumbsUpCount", "ThumbsDownCount", "CommentCount", "BayesianMeanRating", "Tip", "RatingLabel", "RatingCountLabelAbbreviated", "RatingCountLabel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Tip), global::GooglePlayStore.Tip.Parser, new[]{ "TipId", "Text", "Polarity", "ReviewCount", "Language", "SnippetReviewId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ReviewTip), global::GooglePlayStore.ReviewTip.Parser, new[]{ "TipUrl", "Text", "Polarity", "ReviewCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AcceptTosResponse), global::GooglePlayStore.AcceptTosResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CarrierBillingConfig), global::GooglePlayStore.CarrierBillingConfig.Parser, new[]{ "Id", "Name", "ApiVersion", "ProvisioningUrl", "CredentialsUrl", "TosRequired", "PerTransactionCredentialsRequired", "SendSubscriberIdWithCarrierBillingRequests" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BillingConfig), global::GooglePlayStore.BillingConfig.Parser, new[]{ "CarrierBillingConfig", "MaxIabApiVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CorpusMetadata), global::GooglePlayStore.CorpusMetadata.Parser, new[]{ "Backend", "Name", "LandingUrl", "LibraryName", "RecsWidgetUrl", "ShopName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Experiments), global::GooglePlayStore.Experiments.Parser, new[]{ "ExperimentId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SelfUpdateConfig), global::GooglePlayStore.SelfUpdateConfig.Parser, new[]{ "LatestClientVersionCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.TocResponse), global::GooglePlayStore.TocResponse.Parser, new[]{ "Corpus", "TosVersionDeprecated", "TosContent", "HomeUrl", "Experiments", "TosCheckboxTextMarketingEmails", "TosToken", "UserSettings", "IconOverrideUrl", "SelfUpdateConfig", "RequiresUploadDeviceConfig", "BillingConfig", "RecsWidgetUrl", "SocialHomeUrl", "AgeVerificationRequired", "GPlusSignupEnabled", "RedeemEnabled", "HelpUrl", "ThemeId", "EntertainmentHomeUrl", "Cookie" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.UserSettings), global::GooglePlayStore.UserSettings.Parser, new[]{ "TosCheckboxMarketingEmailsOptedIn", "PrivacySetting" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PrivacySetting), global::GooglePlayStore.PrivacySetting.Parser, new[]{ "Type", "CurrentStatus", "EnabledByDefault" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Payload), global::GooglePlayStore.Payload.Parser, new[]{ "ListResponse", "DetailsResponse", "ReviewResponse", "BuyResponse", "SearchResponse", "TocResponse", "BrowseResponse", "PurchaseStatusResponse", "LogResponse", "FlagContentResponse", "BulkDetailsResponse", "DeliveryResponse", "AcceptTosResponse", "CheckPromoOfferResponse", "InstrumentSetupInfoResponse", "AndroidCheckinResponse", "UploadDeviceConfigResponse", "SearchSuggestResponse", "ConsumePurchaseResponse", "BillingProfileResponse", "DebugSettingsResponse", "CheckIabPromoResponse", "UserActivitySettingsResponse", "RecordUserActivityResponse", "RedeemCodeResponse", "SelfUpdateResponse", "GetInitialInstrumentFlowStateResponse", "CreateInstrumentResponse", "ChallengeResponse", "BackupDeviceChoicesResponse", "BackupDocumentChoicesResponse", "EarlyUpdateResponse", "PreloadsResponse", "MyAccountsResponse", "ContentFilterResponse", "ExperimentsResponse", "SurveyResponse", "PingResponse", "UpdateUserSettingResponse", "GetUserSettingsResponse", "GetSharingSettingsResponse", "UpdateSharingSettingsResponse", "ReviewSnippetsResponse", "DocumentSharingStateResponse", "ModuleDeliveryResponse", "TestingProgramResponse", "ReviewSummaryResponse" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CheckIabPromoResponse), global::GooglePlayStore.CheckIabPromoResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.UserActivitySettingsResponse), global::GooglePlayStore.UserActivitySettingsResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.RecordUserActivityResponse), global::GooglePlayStore.RecordUserActivityResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.RedeemCodeResponse), global::GooglePlayStore.RedeemCodeResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SelfUpdateResponse), global::GooglePlayStore.SelfUpdateResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.GetInitialInstrumentFlowStateResponse), global::GooglePlayStore.GetInitialInstrumentFlowStateResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CreateInstrumentResponse), global::GooglePlayStore.CreateInstrumentResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ChallengeResponse), global::GooglePlayStore.ChallengeResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BackDeviceChoicesResponse), global::GooglePlayStore.BackDeviceChoicesResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BackupDocumentChoicesResponse), global::GooglePlayStore.BackupDocumentChoicesResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.EarlyUpdateResponse), global::GooglePlayStore.EarlyUpdateResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PreloadsResponse), global::GooglePlayStore.PreloadsResponse.Parser, new[]{ "ConfigPreload", "AppPreload" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PreloadsResponse.Types.Preload), global::GooglePlayStore.PreloadsResponse.Types.Preload.Parser, new[]{ "DocId", "VersionCode", "Title", "Icon", "DeliveryToken", "InstallLocation", "Size" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.MyAccountsResponse), global::GooglePlayStore.MyAccountsResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ContentFilterResponse), global::GooglePlayStore.ContentFilterResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ExperimentsResponse), global::GooglePlayStore.ExperimentsResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SurveyResponse), global::GooglePlayStore.SurveyResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PingResponse), global::GooglePlayStore.PingResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.UpdateUserSettingResponse), global::GooglePlayStore.UpdateUserSettingResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.GetUserSettingsResponse), global::GooglePlayStore.GetUserSettingsResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.GetSharingSettingsResponse), global::GooglePlayStore.GetSharingSettingsResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.UpdateSharingSettingsResponse), global::GooglePlayStore.UpdateSharingSettingsResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ReviewSnippetsResponse), global::GooglePlayStore.ReviewSnippetsResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DocumentSharingStateResponse), global::GooglePlayStore.DocumentSharingStateResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ModuleDeliveryResponse), global::GooglePlayStore.ModuleDeliveryResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PreFetch), global::GooglePlayStore.PreFetch.Parser, new[]{ "Url", "Response", "Etag", "Ttl", "SoftTtl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ServerMetadata), global::GooglePlayStore.ServerMetadata.Parser, new[]{ "LatencyMillis" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Targets), global::GooglePlayStore.Targets.Parser, new[]{ "TargetId", "Signature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ServerCookie), global::GooglePlayStore.ServerCookie.Parser, new[]{ "Type", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ServerCookies), global::GooglePlayStore.ServerCookies.Parser, new[]{ "ServerCookie" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ResponseWrapper), global::GooglePlayStore.ResponseWrapper.Parser, new[]{ "Payload", "Commands", "PreFetch", "Notification", "ServerMetadata", "Targets", "ServerCookies", "ServerLogsCookie" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ResponseWrapperApi), global::GooglePlayStore.ResponseWrapperApi.Parser, new[]{ "Payload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PayloadApi), global::GooglePlayStore.PayloadApi.Parser, new[]{ "UserProfileResponse" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.UserProfileResponse), global::GooglePlayStore.UserProfileResponse.Parser, new[]{ "UserProfile" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ServerCommands), global::GooglePlayStore.ServerCommands.Parser, new[]{ "ClearCache", "DisplayErrorMessage", "LogErrorStacktrace" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.GetReviewsResponse), global::GooglePlayStore.GetReviewsResponse.Parser, new[]{ "Review", "MatchingCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Review), global::GooglePlayStore.Review.Parser, new[]{ "AuthorName", "Url", "Source", "Version", "Timestamp", "StarRating", "Title", "Comment", "CommentId", "DeviceName", "ReplyText", "ReplyTimeStamp", "Author", "UserProfile", "Sentiment", "HelpfulCount", "ThumbsUpCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CriticReviewsResponse), global::GooglePlayStore.CriticReviewsResponse.Parser, new[]{ "Title", "Image", "TotalNumReviews", "PercentFavorable", "SourceText", "Source", "Review" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ReviewAuthor), global::GooglePlayStore.ReviewAuthor.Parser, new[]{ "Name", "Avatar" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.UserProfile), global::GooglePlayStore.UserProfile.Parser, new[]{ "ProfileId", "PersonId", "ProfileType", "PersonType", "Name", "Image", "ProfileUrl", "ProfileDescription" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ReviewResponse), global::GooglePlayStore.ReviewResponse.Parser, new[]{ "UserReviewsResponse", "NextPageUrl", "UserReview", "SuggestionsListUrl", "CriticReviewsResponse" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.RelatedSearch), global::GooglePlayStore.RelatedSearch.Parser, new[]{ "SearchUrl", "Header", "BackendId", "DocType", "Current" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SearchResponse), global::GooglePlayStore.SearchResponse.Parser, new[]{ "OriginalQuery", "SuggestedQuery", "AggregateQuery", "Bucket", "Item", "RelatedSearch", "ServerLogsCookie", "FullPageReplaced", "ContainsSnow", "NextPageUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SearchSuggestResponse), global::GooglePlayStore.SearchSuggestResponse.Parser, new[]{ "Entry" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SearchSuggestEntry), global::GooglePlayStore.SearchSuggestEntry.Parser, new[]{ "Type", "SuggestedQuery", "ImageContainer", "Title", "PackageNameContainer" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SearchSuggestEntry.Types.ImageContainer), global::GooglePlayStore.SearchSuggestEntry.Types.ImageContainer.Parser, new[]{ "ImageUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SearchSuggestEntry.Types.PackageNameContainer), global::GooglePlayStore.SearchSuggestEntry.Types.PackageNameContainer.Parser, new[]{ "PackageName" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.TestingProgramResponse), global::GooglePlayStore.TestingProgramResponse.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.TestingProgramResult), global::GooglePlayStore.TestingProgramResult.Parser, new[]{ "Details" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.TestingProgramDetails), global::GooglePlayStore.TestingProgramDetails.Parser, new[]{ "Subscribed", "Id", "Unsubscribed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.LogRequest), global::GooglePlayStore.LogRequest.Parser, new[]{ "Timestamp", "DownloadConfirmationQuery" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.TestingProgramRequest), global::GooglePlayStore.TestingProgramRequest.Parser, new[]{ "PackageName", "Subscribe" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.UploadDeviceConfigRequest), global::GooglePlayStore.UploadDeviceConfigRequest.Parser, new[]{ "DeviceConfiguration", "Manufacturer", "GcmRegistrationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.UploadDeviceConfigResponse), global::GooglePlayStore.UploadDeviceConfigResponse.Parser, new[]{ "UploadDeviceConfigToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidCheckinRequest), global::GooglePlayStore.AndroidCheckinRequest.Parser, new[]{ "Imei", "Id", "Digest", "Checkin", "DesiredBuild", "Locale", "LoggingId", "MarketCheckin", "MacAddr", "Meid", "AccountCookie", "TimeZone", "SecurityToken", "Version", "OtaCert", "SerialNumber", "Esn", "DeviceConfiguration", "MacAddrType", "Fragment", "UserName", "UserSerialNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidCheckinResponse), global::GooglePlayStore.AndroidCheckinResponse.Parser, new[]{ "StatsOk", "Intent", "TimeMsec", "Digest", "Setting", "MarketOk", "AndroidId", "SecurityToken", "SettingsDiff", "DeleteSetting", "DeviceCheckinConsistencyToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.GservicesSetting), global::GooglePlayStore.GservicesSetting.Parser, new[]{ "Name", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidBuildProto), global::GooglePlayStore.AndroidBuildProto.Parser, new[]{ "Id", "Product", "Carrier", "Radio", "Bootloader", "Client", "Timestamp", "GoogleServices", "Device", "SdkVersion", "Model", "Manufacturer", "BuildProduct", "OtaInstalled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidCheckinProto), global::GooglePlayStore.AndroidCheckinProto.Parser, new[]{ "Build", "LastCheckinMsec", "Event", "Stat", "RequestedGroup", "CellOperator", "SimOperator", "Roaming", "UserNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidEventProto), global::GooglePlayStore.AndroidEventProto.Parser, new[]{ "Tag", "Value", "TimeMsec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidIntentProto), global::GooglePlayStore.AndroidIntentProto.Parser, new[]{ "Action", "DataUri", "MimeType", "JavaClass", "Extra" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidIntentProto.Types.Extra), global::GooglePlayStore.AndroidIntentProto.Types.Extra.Parser, new[]{ "Name", "Value" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidStatisticProto), global::GooglePlayStore.AndroidStatisticProto.Parser, new[]{ "Tag", "Count", "Sum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ClientLibraryState), global::GooglePlayStore.ClientLibraryState.Parser, new[]{ "Corpus", "ServerToken", "HashCodeSum", "LibrarySize", "LibraryId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidDataUsageProto), global::GooglePlayStore.AndroidDataUsageProto.Parser, new[]{ "Version", "CurrentReportMsec", "KeyToPackageNameMapping", "PayloadLevelAppStat", "IpLayerNetworkStat" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidUsageStatsReport), global::GooglePlayStore.AndroidUsageStatsReport.Parser, new[]{ "AndroidId", "LoggingId", "UsageStats" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AppBucket), global::GooglePlayStore.AppBucket.Parser, new[]{ "BucketStartMsec", "BucketDurationMsec", "StatCounters", "OperationCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CounterData), global::GooglePlayStore.CounterData.Parser, new[]{ "Bytes", "Packets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.IpLayerAppStat), global::GooglePlayStore.IpLayerAppStat.Parser, new[]{ "PackageKey", "ApplicationTag", "IpLayerAppBucket" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.IpLayerNetworkBucket), global::GooglePlayStore.IpLayerNetworkBucket.Parser, new[]{ "BucketStartMsec", "BucketDurationMsec", "StatCounters", "NetworkActiveDuration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.IpLayerNetworkStat), global::GooglePlayStore.IpLayerNetworkStat.Parser, new[]{ "NetworkDetails", "Type", "IpLayerNetworkBucket", "IpLayerAppStat" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.KeyToPackageNameMapping), global::GooglePlayStore.KeyToPackageNameMapping.Parser, new[]{ "PackageKey", "UidName", "SharedPackage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PackageInfo), global::GooglePlayStore.PackageInfo.Parser, new[]{ "PkgName", "VersionCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PayloadLevelAppStat), global::GooglePlayStore.PayloadLevelAppStat.Parser, new[]{ "PackageKey", "ApplicationTag", "PayloadLevelAppBucket" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.StatCounters), global::GooglePlayStore.StatCounters.Parser, new[]{ "NetworkProto", "Direction", "CounterData", "FgBg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.UsageStatsExtensionProto), global::GooglePlayStore.UsageStatsExtensionProto.Parser, new[]{ "DataUsage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ModifyLibraryRequest), global::GooglePlayStore.ModifyLibraryRequest.Parser, new[]{ "LibraryId", "AddPackageName", "RemovePackageName" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AndroidAppDeliveryData : pb::IMessage<AndroidAppDeliveryData> {
    private static readonly pb::MessageParser<AndroidAppDeliveryData> _parser = new pb::MessageParser<AndroidAppDeliveryData>(() => new AndroidAppDeliveryData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidAppDeliveryData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidAppDeliveryData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidAppDeliveryData(AndroidAppDeliveryData other) : this() {
      _hasBits0 = other._hasBits0;
      downloadSize_ = other.downloadSize_;
      sha1_ = other.sha1_;
      downloadUrl_ = other.downloadUrl_;
      additionalFile_ = other.additionalFile_.Clone();
      downloadAuthCookie_ = other.downloadAuthCookie_.Clone();
      forwardLocked_ = other.forwardLocked_;
      refundTimeout_ = other.refundTimeout_;
      serverInitiated_ = other.serverInitiated_;
      postInstallRefundWindowMillis_ = other.postInstallRefundWindowMillis_;
      immediateStartNeeded_ = other.immediateStartNeeded_;
      patchData_ = other.patchData_ != null ? other.patchData_.Clone() : null;
      encryptionParams_ = other.encryptionParams_ != null ? other.encryptionParams_.Clone() : null;
      compressedDownloadUrl_ = other.compressedDownloadUrl_;
      compressedSize_ = other.compressedSize_;
      splitDeliveryData_ = other.splitDeliveryData_.Clone();
      installLocation_ = other.installLocation_;
      type_ = other.type_;
      compressedAppData_ = other.compressedAppData_ != null ? other.compressedAppData_.Clone() : null;
      sha256_ = other.sha256_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidAppDeliveryData Clone() {
      return new AndroidAppDeliveryData(this);
    }

    /// <summary>Field number for the "downloadSize" field.</summary>
    public const int DownloadSizeFieldNumber = 1;
    private readonly static long DownloadSizeDefaultValue = 0L;

    private long downloadSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DownloadSize {
      get { if ((_hasBits0 & 1) != 0) { return downloadSize_; } else { return DownloadSizeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        downloadSize_ = value;
      }
    }
    /// <summary>Gets whether the "downloadSize" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDownloadSize {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "downloadSize" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDownloadSize() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "sha1" field.</summary>
    public const int Sha1FieldNumber = 2;
    private readonly static string Sha1DefaultValue = "";

    private string sha1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sha1 {
      get { return sha1_ ?? Sha1DefaultValue; }
      set {
        sha1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sha1" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSha1 {
      get { return sha1_ != null; }
    }
    /// <summary>Clears the value of the "sha1" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSha1() {
      sha1_ = null;
    }

    /// <summary>Field number for the "downloadUrl" field.</summary>
    public const int DownloadUrlFieldNumber = 3;
    private readonly static string DownloadUrlDefaultValue = "";

    private string downloadUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DownloadUrl {
      get { return downloadUrl_ ?? DownloadUrlDefaultValue; }
      set {
        downloadUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "downloadUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDownloadUrl {
      get { return downloadUrl_ != null; }
    }
    /// <summary>Clears the value of the "downloadUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDownloadUrl() {
      downloadUrl_ = null;
    }

    /// <summary>Field number for the "additionalFile" field.</summary>
    public const int AdditionalFileFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.AppFileMetadata> _repeated_additionalFile_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.AppFileMetadata.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.AppFileMetadata> additionalFile_ = new pbc::RepeatedField<global::GooglePlayStore.AppFileMetadata>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.AppFileMetadata> AdditionalFile {
      get { return additionalFile_; }
    }

    /// <summary>Field number for the "downloadAuthCookie" field.</summary>
    public const int DownloadAuthCookieFieldNumber = 5;
    private static readonly pb::FieldCodec<global::GooglePlayStore.HttpCookie> _repeated_downloadAuthCookie_codec
        = pb::FieldCodec.ForMessage(42, global::GooglePlayStore.HttpCookie.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.HttpCookie> downloadAuthCookie_ = new pbc::RepeatedField<global::GooglePlayStore.HttpCookie>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.HttpCookie> DownloadAuthCookie {
      get { return downloadAuthCookie_; }
    }

    /// <summary>Field number for the "forwardLocked" field.</summary>
    public const int ForwardLockedFieldNumber = 6;
    private readonly static bool ForwardLockedDefaultValue = false;

    private bool forwardLocked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ForwardLocked {
      get { if ((_hasBits0 & 2) != 0) { return forwardLocked_; } else { return ForwardLockedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        forwardLocked_ = value;
      }
    }
    /// <summary>Gets whether the "forwardLocked" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasForwardLocked {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "forwardLocked" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearForwardLocked() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "refundTimeout" field.</summary>
    public const int RefundTimeoutFieldNumber = 7;
    private readonly static long RefundTimeoutDefaultValue = 0L;

    private long refundTimeout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RefundTimeout {
      get { if ((_hasBits0 & 4) != 0) { return refundTimeout_; } else { return RefundTimeoutDefaultValue; } }
      set {
        _hasBits0 |= 4;
        refundTimeout_ = value;
      }
    }
    /// <summary>Gets whether the "refundTimeout" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRefundTimeout {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "refundTimeout" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRefundTimeout() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "serverInitiated" field.</summary>
    public const int ServerInitiatedFieldNumber = 8;
    private readonly static bool ServerInitiatedDefaultValue = true;

    private bool serverInitiated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ServerInitiated {
      get { if ((_hasBits0 & 8) != 0) { return serverInitiated_; } else { return ServerInitiatedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        serverInitiated_ = value;
      }
    }
    /// <summary>Gets whether the "serverInitiated" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServerInitiated {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "serverInitiated" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServerInitiated() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "postInstallRefundWindowMillis" field.</summary>
    public const int PostInstallRefundWindowMillisFieldNumber = 9;
    private readonly static long PostInstallRefundWindowMillisDefaultValue = 0L;

    private long postInstallRefundWindowMillis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PostInstallRefundWindowMillis {
      get { if ((_hasBits0 & 16) != 0) { return postInstallRefundWindowMillis_; } else { return PostInstallRefundWindowMillisDefaultValue; } }
      set {
        _hasBits0 |= 16;
        postInstallRefundWindowMillis_ = value;
      }
    }
    /// <summary>Gets whether the "postInstallRefundWindowMillis" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPostInstallRefundWindowMillis {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "postInstallRefundWindowMillis" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPostInstallRefundWindowMillis() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "immediateStartNeeded" field.</summary>
    public const int ImmediateStartNeededFieldNumber = 10;
    private readonly static bool ImmediateStartNeededDefaultValue = false;

    private bool immediateStartNeeded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ImmediateStartNeeded {
      get { if ((_hasBits0 & 32) != 0) { return immediateStartNeeded_; } else { return ImmediateStartNeededDefaultValue; } }
      set {
        _hasBits0 |= 32;
        immediateStartNeeded_ = value;
      }
    }
    /// <summary>Gets whether the "immediateStartNeeded" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasImmediateStartNeeded {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "immediateStartNeeded" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearImmediateStartNeeded() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "patchData" field.</summary>
    public const int PatchDataFieldNumber = 11;
    private global::GooglePlayStore.AndroidAppPatchData patchData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AndroidAppPatchData PatchData {
      get { return patchData_; }
      set {
        patchData_ = value;
      }
    }

    /// <summary>Field number for the "encryptionParams" field.</summary>
    public const int EncryptionParamsFieldNumber = 12;
    private global::GooglePlayStore.EncryptionParams encryptionParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.EncryptionParams EncryptionParams {
      get { return encryptionParams_; }
      set {
        encryptionParams_ = value;
      }
    }

    /// <summary>Field number for the "compressedDownloadUrl" field.</summary>
    public const int CompressedDownloadUrlFieldNumber = 13;
    private readonly static string CompressedDownloadUrlDefaultValue = "";

    private string compressedDownloadUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompressedDownloadUrl {
      get { return compressedDownloadUrl_ ?? CompressedDownloadUrlDefaultValue; }
      set {
        compressedDownloadUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "compressedDownloadUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCompressedDownloadUrl {
      get { return compressedDownloadUrl_ != null; }
    }
    /// <summary>Clears the value of the "compressedDownloadUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCompressedDownloadUrl() {
      compressedDownloadUrl_ = null;
    }

    /// <summary>Field number for the "compressedSize" field.</summary>
    public const int CompressedSizeFieldNumber = 14;
    private readonly static long CompressedSizeDefaultValue = 0L;

    private long compressedSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CompressedSize {
      get { if ((_hasBits0 & 64) != 0) { return compressedSize_; } else { return CompressedSizeDefaultValue; } }
      set {
        _hasBits0 |= 64;
        compressedSize_ = value;
      }
    }
    /// <summary>Gets whether the "compressedSize" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCompressedSize {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "compressedSize" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCompressedSize() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "splitDeliveryData" field.</summary>
    public const int SplitDeliveryDataFieldNumber = 15;
    private static readonly pb::FieldCodec<global::GooglePlayStore.SplitDeliveryData> _repeated_splitDeliveryData_codec
        = pb::FieldCodec.ForMessage(122, global::GooglePlayStore.SplitDeliveryData.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.SplitDeliveryData> splitDeliveryData_ = new pbc::RepeatedField<global::GooglePlayStore.SplitDeliveryData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.SplitDeliveryData> SplitDeliveryData {
      get { return splitDeliveryData_; }
    }

    /// <summary>Field number for the "installLocation" field.</summary>
    public const int InstallLocationFieldNumber = 16;
    private readonly static int InstallLocationDefaultValue = 0;

    private int installLocation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InstallLocation {
      get { if ((_hasBits0 & 128) != 0) { return installLocation_; } else { return InstallLocationDefaultValue; } }
      set {
        _hasBits0 |= 128;
        installLocation_ = value;
      }
    }
    /// <summary>Gets whether the "installLocation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInstallLocation {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "installLocation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInstallLocation() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 17;
    private readonly static long TypeDefaultValue = 0L;

    private long type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Type {
      get { if ((_hasBits0 & 256) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 256;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "compressedAppData" field.</summary>
    public const int CompressedAppDataFieldNumber = 18;
    private global::GooglePlayStore.CompressedAppData compressedAppData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CompressedAppData CompressedAppData {
      get { return compressedAppData_; }
      set {
        compressedAppData_ = value;
      }
    }

    /// <summary>Field number for the "sha256" field.</summary>
    public const int Sha256FieldNumber = 19;
    private readonly static string Sha256DefaultValue = "";

    private string sha256_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sha256 {
      get { return sha256_ ?? Sha256DefaultValue; }
      set {
        sha256_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sha256" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSha256 {
      get { return sha256_ != null; }
    }
    /// <summary>Clears the value of the "sha256" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSha256() {
      sha256_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidAppDeliveryData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidAppDeliveryData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DownloadSize != other.DownloadSize) return false;
      if (Sha1 != other.Sha1) return false;
      if (DownloadUrl != other.DownloadUrl) return false;
      if(!additionalFile_.Equals(other.additionalFile_)) return false;
      if(!downloadAuthCookie_.Equals(other.downloadAuthCookie_)) return false;
      if (ForwardLocked != other.ForwardLocked) return false;
      if (RefundTimeout != other.RefundTimeout) return false;
      if (ServerInitiated != other.ServerInitiated) return false;
      if (PostInstallRefundWindowMillis != other.PostInstallRefundWindowMillis) return false;
      if (ImmediateStartNeeded != other.ImmediateStartNeeded) return false;
      if (!object.Equals(PatchData, other.PatchData)) return false;
      if (!object.Equals(EncryptionParams, other.EncryptionParams)) return false;
      if (CompressedDownloadUrl != other.CompressedDownloadUrl) return false;
      if (CompressedSize != other.CompressedSize) return false;
      if(!splitDeliveryData_.Equals(other.splitDeliveryData_)) return false;
      if (InstallLocation != other.InstallLocation) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(CompressedAppData, other.CompressedAppData)) return false;
      if (Sha256 != other.Sha256) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDownloadSize) hash ^= DownloadSize.GetHashCode();
      if (HasSha1) hash ^= Sha1.GetHashCode();
      if (HasDownloadUrl) hash ^= DownloadUrl.GetHashCode();
      hash ^= additionalFile_.GetHashCode();
      hash ^= downloadAuthCookie_.GetHashCode();
      if (HasForwardLocked) hash ^= ForwardLocked.GetHashCode();
      if (HasRefundTimeout) hash ^= RefundTimeout.GetHashCode();
      if (HasServerInitiated) hash ^= ServerInitiated.GetHashCode();
      if (HasPostInstallRefundWindowMillis) hash ^= PostInstallRefundWindowMillis.GetHashCode();
      if (HasImmediateStartNeeded) hash ^= ImmediateStartNeeded.GetHashCode();
      if (patchData_ != null) hash ^= PatchData.GetHashCode();
      if (encryptionParams_ != null) hash ^= EncryptionParams.GetHashCode();
      if (HasCompressedDownloadUrl) hash ^= CompressedDownloadUrl.GetHashCode();
      if (HasCompressedSize) hash ^= CompressedSize.GetHashCode();
      hash ^= splitDeliveryData_.GetHashCode();
      if (HasInstallLocation) hash ^= InstallLocation.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (compressedAppData_ != null) hash ^= CompressedAppData.GetHashCode();
      if (HasSha256) hash ^= Sha256.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasDownloadSize) {
        output.WriteRawTag(8);
        output.WriteInt64(DownloadSize);
      }
      if (HasSha1) {
        output.WriteRawTag(18);
        output.WriteString(Sha1);
      }
      if (HasDownloadUrl) {
        output.WriteRawTag(26);
        output.WriteString(DownloadUrl);
      }
      additionalFile_.WriteTo(output, _repeated_additionalFile_codec);
      downloadAuthCookie_.WriteTo(output, _repeated_downloadAuthCookie_codec);
      if (HasForwardLocked) {
        output.WriteRawTag(48);
        output.WriteBool(ForwardLocked);
      }
      if (HasRefundTimeout) {
        output.WriteRawTag(56);
        output.WriteInt64(RefundTimeout);
      }
      if (HasServerInitiated) {
        output.WriteRawTag(64);
        output.WriteBool(ServerInitiated);
      }
      if (HasPostInstallRefundWindowMillis) {
        output.WriteRawTag(72);
        output.WriteInt64(PostInstallRefundWindowMillis);
      }
      if (HasImmediateStartNeeded) {
        output.WriteRawTag(80);
        output.WriteBool(ImmediateStartNeeded);
      }
      if (patchData_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(PatchData);
      }
      if (encryptionParams_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(EncryptionParams);
      }
      if (HasCompressedDownloadUrl) {
        output.WriteRawTag(106);
        output.WriteString(CompressedDownloadUrl);
      }
      if (HasCompressedSize) {
        output.WriteRawTag(112);
        output.WriteInt64(CompressedSize);
      }
      splitDeliveryData_.WriteTo(output, _repeated_splitDeliveryData_codec);
      if (HasInstallLocation) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(InstallLocation);
      }
      if (HasType) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(Type);
      }
      if (compressedAppData_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(CompressedAppData);
      }
      if (HasSha256) {
        output.WriteRawTag(154, 1);
        output.WriteString(Sha256);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDownloadSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DownloadSize);
      }
      if (HasSha1) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sha1);
      }
      if (HasDownloadUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DownloadUrl);
      }
      size += additionalFile_.CalculateSize(_repeated_additionalFile_codec);
      size += downloadAuthCookie_.CalculateSize(_repeated_downloadAuthCookie_codec);
      if (HasForwardLocked) {
        size += 1 + 1;
      }
      if (HasRefundTimeout) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RefundTimeout);
      }
      if (HasServerInitiated) {
        size += 1 + 1;
      }
      if (HasPostInstallRefundWindowMillis) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PostInstallRefundWindowMillis);
      }
      if (HasImmediateStartNeeded) {
        size += 1 + 1;
      }
      if (patchData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PatchData);
      }
      if (encryptionParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EncryptionParams);
      }
      if (HasCompressedDownloadUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompressedDownloadUrl);
      }
      if (HasCompressedSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CompressedSize);
      }
      size += splitDeliveryData_.CalculateSize(_repeated_splitDeliveryData_codec);
      if (HasInstallLocation) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(InstallLocation);
      }
      if (HasType) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Type);
      }
      if (compressedAppData_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CompressedAppData);
      }
      if (HasSha256) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Sha256);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidAppDeliveryData other) {
      if (other == null) {
        return;
      }
      if (other.HasDownloadSize) {
        DownloadSize = other.DownloadSize;
      }
      if (other.HasSha1) {
        Sha1 = other.Sha1;
      }
      if (other.HasDownloadUrl) {
        DownloadUrl = other.DownloadUrl;
      }
      additionalFile_.Add(other.additionalFile_);
      downloadAuthCookie_.Add(other.downloadAuthCookie_);
      if (other.HasForwardLocked) {
        ForwardLocked = other.ForwardLocked;
      }
      if (other.HasRefundTimeout) {
        RefundTimeout = other.RefundTimeout;
      }
      if (other.HasServerInitiated) {
        ServerInitiated = other.ServerInitiated;
      }
      if (other.HasPostInstallRefundWindowMillis) {
        PostInstallRefundWindowMillis = other.PostInstallRefundWindowMillis;
      }
      if (other.HasImmediateStartNeeded) {
        ImmediateStartNeeded = other.ImmediateStartNeeded;
      }
      if (other.patchData_ != null) {
        if (patchData_ == null) {
          PatchData = new global::GooglePlayStore.AndroidAppPatchData();
        }
        PatchData.MergeFrom(other.PatchData);
      }
      if (other.encryptionParams_ != null) {
        if (encryptionParams_ == null) {
          EncryptionParams = new global::GooglePlayStore.EncryptionParams();
        }
        EncryptionParams.MergeFrom(other.EncryptionParams);
      }
      if (other.HasCompressedDownloadUrl) {
        CompressedDownloadUrl = other.CompressedDownloadUrl;
      }
      if (other.HasCompressedSize) {
        CompressedSize = other.CompressedSize;
      }
      splitDeliveryData_.Add(other.splitDeliveryData_);
      if (other.HasInstallLocation) {
        InstallLocation = other.InstallLocation;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.compressedAppData_ != null) {
        if (compressedAppData_ == null) {
          CompressedAppData = new global::GooglePlayStore.CompressedAppData();
        }
        CompressedAppData.MergeFrom(other.CompressedAppData);
      }
      if (other.HasSha256) {
        Sha256 = other.Sha256;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DownloadSize = input.ReadInt64();
            break;
          }
          case 18: {
            Sha1 = input.ReadString();
            break;
          }
          case 26: {
            DownloadUrl = input.ReadString();
            break;
          }
          case 34: {
            additionalFile_.AddEntriesFrom(input, _repeated_additionalFile_codec);
            break;
          }
          case 42: {
            downloadAuthCookie_.AddEntriesFrom(input, _repeated_downloadAuthCookie_codec);
            break;
          }
          case 48: {
            ForwardLocked = input.ReadBool();
            break;
          }
          case 56: {
            RefundTimeout = input.ReadInt64();
            break;
          }
          case 64: {
            ServerInitiated = input.ReadBool();
            break;
          }
          case 72: {
            PostInstallRefundWindowMillis = input.ReadInt64();
            break;
          }
          case 80: {
            ImmediateStartNeeded = input.ReadBool();
            break;
          }
          case 90: {
            if (patchData_ == null) {
              PatchData = new global::GooglePlayStore.AndroidAppPatchData();
            }
            input.ReadMessage(PatchData);
            break;
          }
          case 98: {
            if (encryptionParams_ == null) {
              EncryptionParams = new global::GooglePlayStore.EncryptionParams();
            }
            input.ReadMessage(EncryptionParams);
            break;
          }
          case 106: {
            CompressedDownloadUrl = input.ReadString();
            break;
          }
          case 112: {
            CompressedSize = input.ReadInt64();
            break;
          }
          case 122: {
            splitDeliveryData_.AddEntriesFrom(input, _repeated_splitDeliveryData_codec);
            break;
          }
          case 128: {
            InstallLocation = input.ReadInt32();
            break;
          }
          case 136: {
            Type = input.ReadInt64();
            break;
          }
          case 146: {
            if (compressedAppData_ == null) {
              CompressedAppData = new global::GooglePlayStore.CompressedAppData();
            }
            input.ReadMessage(CompressedAppData);
            break;
          }
          case 154: {
            Sha256 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SplitDeliveryData : pb::IMessage<SplitDeliveryData> {
    private static readonly pb::MessageParser<SplitDeliveryData> _parser = new pb::MessageParser<SplitDeliveryData>(() => new SplitDeliveryData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SplitDeliveryData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitDeliveryData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitDeliveryData(SplitDeliveryData other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      downloadSize_ = other.downloadSize_;
      compressedSize_ = other.compressedSize_;
      sha1_ = other.sha1_;
      downloadUrl_ = other.downloadUrl_;
      compressedDownloadUrl_ = other.compressedDownloadUrl_;
      patchData_ = other.patchData_ != null ? other.patchData_.Clone() : null;
      compressedAppData_ = other.compressedAppData_ != null ? other.compressedAppData_.Clone() : null;
      sha256_ = other.sha256_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitDeliveryData Clone() {
      return new SplitDeliveryData(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "downloadSize" field.</summary>
    public const int DownloadSizeFieldNumber = 2;
    private readonly static long DownloadSizeDefaultValue = 0L;

    private long downloadSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DownloadSize {
      get { if ((_hasBits0 & 1) != 0) { return downloadSize_; } else { return DownloadSizeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        downloadSize_ = value;
      }
    }
    /// <summary>Gets whether the "downloadSize" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDownloadSize {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "downloadSize" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDownloadSize() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "compressedSize" field.</summary>
    public const int CompressedSizeFieldNumber = 3;
    private readonly static long CompressedSizeDefaultValue = 0L;

    private long compressedSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CompressedSize {
      get { if ((_hasBits0 & 2) != 0) { return compressedSize_; } else { return CompressedSizeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        compressedSize_ = value;
      }
    }
    /// <summary>Gets whether the "compressedSize" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCompressedSize {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "compressedSize" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCompressedSize() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "sha1" field.</summary>
    public const int Sha1FieldNumber = 4;
    private readonly static string Sha1DefaultValue = "";

    private string sha1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sha1 {
      get { return sha1_ ?? Sha1DefaultValue; }
      set {
        sha1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sha1" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSha1 {
      get { return sha1_ != null; }
    }
    /// <summary>Clears the value of the "sha1" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSha1() {
      sha1_ = null;
    }

    /// <summary>Field number for the "downloadUrl" field.</summary>
    public const int DownloadUrlFieldNumber = 5;
    private readonly static string DownloadUrlDefaultValue = "";

    private string downloadUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DownloadUrl {
      get { return downloadUrl_ ?? DownloadUrlDefaultValue; }
      set {
        downloadUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "downloadUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDownloadUrl {
      get { return downloadUrl_ != null; }
    }
    /// <summary>Clears the value of the "downloadUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDownloadUrl() {
      downloadUrl_ = null;
    }

    /// <summary>Field number for the "compressedDownloadUrl" field.</summary>
    public const int CompressedDownloadUrlFieldNumber = 6;
    private readonly static string CompressedDownloadUrlDefaultValue = "";

    private string compressedDownloadUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompressedDownloadUrl {
      get { return compressedDownloadUrl_ ?? CompressedDownloadUrlDefaultValue; }
      set {
        compressedDownloadUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "compressedDownloadUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCompressedDownloadUrl {
      get { return compressedDownloadUrl_ != null; }
    }
    /// <summary>Clears the value of the "compressedDownloadUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCompressedDownloadUrl() {
      compressedDownloadUrl_ = null;
    }

    /// <summary>Field number for the "patchData" field.</summary>
    public const int PatchDataFieldNumber = 7;
    private global::GooglePlayStore.AndroidAppPatchData patchData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AndroidAppPatchData PatchData {
      get { return patchData_; }
      set {
        patchData_ = value;
      }
    }

    /// <summary>Field number for the "compressedAppData" field.</summary>
    public const int CompressedAppDataFieldNumber = 8;
    private global::GooglePlayStore.CompressedAppData compressedAppData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CompressedAppData CompressedAppData {
      get { return compressedAppData_; }
      set {
        compressedAppData_ = value;
      }
    }

    /// <summary>Field number for the "sha256" field.</summary>
    public const int Sha256FieldNumber = 9;
    private readonly static string Sha256DefaultValue = "";

    private string sha256_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sha256 {
      get { return sha256_ ?? Sha256DefaultValue; }
      set {
        sha256_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sha256" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSha256 {
      get { return sha256_ != null; }
    }
    /// <summary>Clears the value of the "sha256" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSha256() {
      sha256_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SplitDeliveryData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SplitDeliveryData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DownloadSize != other.DownloadSize) return false;
      if (CompressedSize != other.CompressedSize) return false;
      if (Sha1 != other.Sha1) return false;
      if (DownloadUrl != other.DownloadUrl) return false;
      if (CompressedDownloadUrl != other.CompressedDownloadUrl) return false;
      if (!object.Equals(PatchData, other.PatchData)) return false;
      if (!object.Equals(CompressedAppData, other.CompressedAppData)) return false;
      if (Sha256 != other.Sha256) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasDownloadSize) hash ^= DownloadSize.GetHashCode();
      if (HasCompressedSize) hash ^= CompressedSize.GetHashCode();
      if (HasSha1) hash ^= Sha1.GetHashCode();
      if (HasDownloadUrl) hash ^= DownloadUrl.GetHashCode();
      if (HasCompressedDownloadUrl) hash ^= CompressedDownloadUrl.GetHashCode();
      if (patchData_ != null) hash ^= PatchData.GetHashCode();
      if (compressedAppData_ != null) hash ^= CompressedAppData.GetHashCode();
      if (HasSha256) hash ^= Sha256.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasDownloadSize) {
        output.WriteRawTag(16);
        output.WriteInt64(DownloadSize);
      }
      if (HasCompressedSize) {
        output.WriteRawTag(24);
        output.WriteInt64(CompressedSize);
      }
      if (HasSha1) {
        output.WriteRawTag(34);
        output.WriteString(Sha1);
      }
      if (HasDownloadUrl) {
        output.WriteRawTag(42);
        output.WriteString(DownloadUrl);
      }
      if (HasCompressedDownloadUrl) {
        output.WriteRawTag(50);
        output.WriteString(CompressedDownloadUrl);
      }
      if (patchData_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PatchData);
      }
      if (compressedAppData_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(CompressedAppData);
      }
      if (HasSha256) {
        output.WriteRawTag(74);
        output.WriteString(Sha256);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasDownloadSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DownloadSize);
      }
      if (HasCompressedSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CompressedSize);
      }
      if (HasSha1) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sha1);
      }
      if (HasDownloadUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DownloadUrl);
      }
      if (HasCompressedDownloadUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompressedDownloadUrl);
      }
      if (patchData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PatchData);
      }
      if (compressedAppData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompressedAppData);
      }
      if (HasSha256) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sha256);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SplitDeliveryData other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasDownloadSize) {
        DownloadSize = other.DownloadSize;
      }
      if (other.HasCompressedSize) {
        CompressedSize = other.CompressedSize;
      }
      if (other.HasSha1) {
        Sha1 = other.Sha1;
      }
      if (other.HasDownloadUrl) {
        DownloadUrl = other.DownloadUrl;
      }
      if (other.HasCompressedDownloadUrl) {
        CompressedDownloadUrl = other.CompressedDownloadUrl;
      }
      if (other.patchData_ != null) {
        if (patchData_ == null) {
          PatchData = new global::GooglePlayStore.AndroidAppPatchData();
        }
        PatchData.MergeFrom(other.PatchData);
      }
      if (other.compressedAppData_ != null) {
        if (compressedAppData_ == null) {
          CompressedAppData = new global::GooglePlayStore.CompressedAppData();
        }
        CompressedAppData.MergeFrom(other.CompressedAppData);
      }
      if (other.HasSha256) {
        Sha256 = other.Sha256;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            DownloadSize = input.ReadInt64();
            break;
          }
          case 24: {
            CompressedSize = input.ReadInt64();
            break;
          }
          case 34: {
            Sha1 = input.ReadString();
            break;
          }
          case 42: {
            DownloadUrl = input.ReadString();
            break;
          }
          case 50: {
            CompressedDownloadUrl = input.ReadString();
            break;
          }
          case 58: {
            if (patchData_ == null) {
              PatchData = new global::GooglePlayStore.AndroidAppPatchData();
            }
            input.ReadMessage(PatchData);
            break;
          }
          case 66: {
            if (compressedAppData_ == null) {
              CompressedAppData = new global::GooglePlayStore.CompressedAppData();
            }
            input.ReadMessage(CompressedAppData);
            break;
          }
          case 74: {
            Sha256 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AndroidAppPatchData : pb::IMessage<AndroidAppPatchData> {
    private static readonly pb::MessageParser<AndroidAppPatchData> _parser = new pb::MessageParser<AndroidAppPatchData>(() => new AndroidAppPatchData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidAppPatchData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidAppPatchData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidAppPatchData(AndroidAppPatchData other) : this() {
      _hasBits0 = other._hasBits0;
      baseVersionCode_ = other.baseVersionCode_;
      baseSha1_ = other.baseSha1_;
      downloadUrl_ = other.downloadUrl_;
      patchFormat_ = other.patchFormat_;
      maxPatchSize_ = other.maxPatchSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidAppPatchData Clone() {
      return new AndroidAppPatchData(this);
    }

    /// <summary>Field number for the "baseVersionCode" field.</summary>
    public const int BaseVersionCodeFieldNumber = 1;
    private readonly static int BaseVersionCodeDefaultValue = 0;

    private int baseVersionCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BaseVersionCode {
      get { if ((_hasBits0 & 1) != 0) { return baseVersionCode_; } else { return BaseVersionCodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        baseVersionCode_ = value;
      }
    }
    /// <summary>Gets whether the "baseVersionCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBaseVersionCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "baseVersionCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBaseVersionCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "baseSha1" field.</summary>
    public const int BaseSha1FieldNumber = 2;
    private readonly static string BaseSha1DefaultValue = "";

    private string baseSha1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BaseSha1 {
      get { return baseSha1_ ?? BaseSha1DefaultValue; }
      set {
        baseSha1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "baseSha1" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBaseSha1 {
      get { return baseSha1_ != null; }
    }
    /// <summary>Clears the value of the "baseSha1" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBaseSha1() {
      baseSha1_ = null;
    }

    /// <summary>Field number for the "downloadUrl" field.</summary>
    public const int DownloadUrlFieldNumber = 3;
    private readonly static string DownloadUrlDefaultValue = "";

    private string downloadUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DownloadUrl {
      get { return downloadUrl_ ?? DownloadUrlDefaultValue; }
      set {
        downloadUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "downloadUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDownloadUrl {
      get { return downloadUrl_ != null; }
    }
    /// <summary>Clears the value of the "downloadUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDownloadUrl() {
      downloadUrl_ = null;
    }

    /// <summary>Field number for the "patchFormat" field.</summary>
    public const int PatchFormatFieldNumber = 4;
    private readonly static int PatchFormatDefaultValue = 1;

    private int patchFormat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PatchFormat {
      get { if ((_hasBits0 & 2) != 0) { return patchFormat_; } else { return PatchFormatDefaultValue; } }
      set {
        _hasBits0 |= 2;
        patchFormat_ = value;
      }
    }
    /// <summary>Gets whether the "patchFormat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPatchFormat {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "patchFormat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPatchFormat() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "maxPatchSize" field.</summary>
    public const int MaxPatchSizeFieldNumber = 5;
    private readonly static long MaxPatchSizeDefaultValue = 0L;

    private long maxPatchSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxPatchSize {
      get { if ((_hasBits0 & 4) != 0) { return maxPatchSize_; } else { return MaxPatchSizeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        maxPatchSize_ = value;
      }
    }
    /// <summary>Gets whether the "maxPatchSize" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMaxPatchSize {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "maxPatchSize" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMaxPatchSize() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidAppPatchData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidAppPatchData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BaseVersionCode != other.BaseVersionCode) return false;
      if (BaseSha1 != other.BaseSha1) return false;
      if (DownloadUrl != other.DownloadUrl) return false;
      if (PatchFormat != other.PatchFormat) return false;
      if (MaxPatchSize != other.MaxPatchSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBaseVersionCode) hash ^= BaseVersionCode.GetHashCode();
      if (HasBaseSha1) hash ^= BaseSha1.GetHashCode();
      if (HasDownloadUrl) hash ^= DownloadUrl.GetHashCode();
      if (HasPatchFormat) hash ^= PatchFormat.GetHashCode();
      if (HasMaxPatchSize) hash ^= MaxPatchSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasBaseVersionCode) {
        output.WriteRawTag(8);
        output.WriteInt32(BaseVersionCode);
      }
      if (HasBaseSha1) {
        output.WriteRawTag(18);
        output.WriteString(BaseSha1);
      }
      if (HasDownloadUrl) {
        output.WriteRawTag(26);
        output.WriteString(DownloadUrl);
      }
      if (HasPatchFormat) {
        output.WriteRawTag(32);
        output.WriteInt32(PatchFormat);
      }
      if (HasMaxPatchSize) {
        output.WriteRawTag(40);
        output.WriteInt64(MaxPatchSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasBaseVersionCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BaseVersionCode);
      }
      if (HasBaseSha1) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseSha1);
      }
      if (HasDownloadUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DownloadUrl);
      }
      if (HasPatchFormat) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PatchFormat);
      }
      if (HasMaxPatchSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxPatchSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidAppPatchData other) {
      if (other == null) {
        return;
      }
      if (other.HasBaseVersionCode) {
        BaseVersionCode = other.BaseVersionCode;
      }
      if (other.HasBaseSha1) {
        BaseSha1 = other.BaseSha1;
      }
      if (other.HasDownloadUrl) {
        DownloadUrl = other.DownloadUrl;
      }
      if (other.HasPatchFormat) {
        PatchFormat = other.PatchFormat;
      }
      if (other.HasMaxPatchSize) {
        MaxPatchSize = other.MaxPatchSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BaseVersionCode = input.ReadInt32();
            break;
          }
          case 18: {
            BaseSha1 = input.ReadString();
            break;
          }
          case 26: {
            DownloadUrl = input.ReadString();
            break;
          }
          case 32: {
            PatchFormat = input.ReadInt32();
            break;
          }
          case 40: {
            MaxPatchSize = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompressedAppData : pb::IMessage<CompressedAppData> {
    private static readonly pb::MessageParser<CompressedAppData> _parser = new pb::MessageParser<CompressedAppData>(() => new CompressedAppData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompressedAppData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompressedAppData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompressedAppData(CompressedAppData other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      size_ = other.size_;
      downloadUrl_ = other.downloadUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompressedAppData Clone() {
      return new CompressedAppData(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static long TypeDefaultValue = 0L;

    private long type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 2;
    private readonly static long SizeDefaultValue = 0L;

    private long size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Size {
      get { if ((_hasBits0 & 2) != 0) { return size_; } else { return SizeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        size_ = value;
      }
    }
    /// <summary>Gets whether the "size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSize {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSize() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "downloadUrl" field.</summary>
    public const int DownloadUrlFieldNumber = 3;
    private readonly static string DownloadUrlDefaultValue = "";

    private string downloadUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DownloadUrl {
      get { return downloadUrl_ ?? DownloadUrlDefaultValue; }
      set {
        downloadUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "downloadUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDownloadUrl {
      get { return downloadUrl_ != null; }
    }
    /// <summary>Clears the value of the "downloadUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDownloadUrl() {
      downloadUrl_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompressedAppData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompressedAppData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Size != other.Size) return false;
      if (DownloadUrl != other.DownloadUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasSize) hash ^= Size.GetHashCode();
      if (HasDownloadUrl) hash ^= DownloadUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt64(Type);
      }
      if (HasSize) {
        output.WriteRawTag(16);
        output.WriteInt64(Size);
      }
      if (HasDownloadUrl) {
        output.WriteRawTag(26);
        output.WriteString(DownloadUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Type);
      }
      if (HasSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Size);
      }
      if (HasDownloadUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DownloadUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompressedAppData other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasSize) {
        Size = other.Size;
      }
      if (other.HasDownloadUrl) {
        DownloadUrl = other.DownloadUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt64();
            break;
          }
          case 16: {
            Size = input.ReadInt64();
            break;
          }
          case 26: {
            DownloadUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppFileMetadata : pb::IMessage<AppFileMetadata> {
    private static readonly pb::MessageParser<AppFileMetadata> _parser = new pb::MessageParser<AppFileMetadata>(() => new AppFileMetadata());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppFileMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppFileMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppFileMetadata(AppFileMetadata other) : this() {
      _hasBits0 = other._hasBits0;
      fileType_ = other.fileType_;
      versionCode_ = other.versionCode_;
      size_ = other.size_;
      downloadUrl_ = other.downloadUrl_;
      patchData_ = other.patchData_ != null ? other.patchData_.Clone() : null;
      compressedSize_ = other.compressedSize_;
      compressedDownloadUrl_ = other.compressedDownloadUrl_;
      sha1_ = other.sha1_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppFileMetadata Clone() {
      return new AppFileMetadata(this);
    }

    /// <summary>Field number for the "fileType" field.</summary>
    public const int FileTypeFieldNumber = 1;
    private readonly static int FileTypeDefaultValue = 0;

    private int fileType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FileType {
      get { if ((_hasBits0 & 1) != 0) { return fileType_; } else { return FileTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        fileType_ = value;
      }
    }
    /// <summary>Gets whether the "fileType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "fileType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "versionCode" field.</summary>
    public const int VersionCodeFieldNumber = 2;
    private readonly static int VersionCodeDefaultValue = 0;

    private int versionCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VersionCode {
      get { if ((_hasBits0 & 2) != 0) { return versionCode_; } else { return VersionCodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        versionCode_ = value;
      }
    }
    /// <summary>Gets whether the "versionCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "versionCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionCode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 3;
    private readonly static long SizeDefaultValue = 0L;

    private long size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Size {
      get { if ((_hasBits0 & 4) != 0) { return size_; } else { return SizeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        size_ = value;
      }
    }
    /// <summary>Gets whether the "size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSize {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSize() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "downloadUrl" field.</summary>
    public const int DownloadUrlFieldNumber = 4;
    private readonly static string DownloadUrlDefaultValue = "";

    private string downloadUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DownloadUrl {
      get { return downloadUrl_ ?? DownloadUrlDefaultValue; }
      set {
        downloadUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "downloadUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDownloadUrl {
      get { return downloadUrl_ != null; }
    }
    /// <summary>Clears the value of the "downloadUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDownloadUrl() {
      downloadUrl_ = null;
    }

    /// <summary>Field number for the "patchData" field.</summary>
    public const int PatchDataFieldNumber = 5;
    private global::GooglePlayStore.AndroidAppPatchData patchData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AndroidAppPatchData PatchData {
      get { return patchData_; }
      set {
        patchData_ = value;
      }
    }

    /// <summary>Field number for the "compressedSize" field.</summary>
    public const int CompressedSizeFieldNumber = 6;
    private readonly static long CompressedSizeDefaultValue = 0L;

    private long compressedSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CompressedSize {
      get { if ((_hasBits0 & 8) != 0) { return compressedSize_; } else { return CompressedSizeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        compressedSize_ = value;
      }
    }
    /// <summary>Gets whether the "compressedSize" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCompressedSize {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "compressedSize" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCompressedSize() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "compressedDownloadUrl" field.</summary>
    public const int CompressedDownloadUrlFieldNumber = 7;
    private readonly static string CompressedDownloadUrlDefaultValue = "";

    private string compressedDownloadUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompressedDownloadUrl {
      get { return compressedDownloadUrl_ ?? CompressedDownloadUrlDefaultValue; }
      set {
        compressedDownloadUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "compressedDownloadUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCompressedDownloadUrl {
      get { return compressedDownloadUrl_ != null; }
    }
    /// <summary>Clears the value of the "compressedDownloadUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCompressedDownloadUrl() {
      compressedDownloadUrl_ = null;
    }

    /// <summary>Field number for the "sha1" field.</summary>
    public const int Sha1FieldNumber = 8;
    private readonly static string Sha1DefaultValue = "";

    private string sha1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sha1 {
      get { return sha1_ ?? Sha1DefaultValue; }
      set {
        sha1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sha1" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSha1 {
      get { return sha1_ != null; }
    }
    /// <summary>Clears the value of the "sha1" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSha1() {
      sha1_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppFileMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppFileMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileType != other.FileType) return false;
      if (VersionCode != other.VersionCode) return false;
      if (Size != other.Size) return false;
      if (DownloadUrl != other.DownloadUrl) return false;
      if (!object.Equals(PatchData, other.PatchData)) return false;
      if (CompressedSize != other.CompressedSize) return false;
      if (CompressedDownloadUrl != other.CompressedDownloadUrl) return false;
      if (Sha1 != other.Sha1) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFileType) hash ^= FileType.GetHashCode();
      if (HasVersionCode) hash ^= VersionCode.GetHashCode();
      if (HasSize) hash ^= Size.GetHashCode();
      if (HasDownloadUrl) hash ^= DownloadUrl.GetHashCode();
      if (patchData_ != null) hash ^= PatchData.GetHashCode();
      if (HasCompressedSize) hash ^= CompressedSize.GetHashCode();
      if (HasCompressedDownloadUrl) hash ^= CompressedDownloadUrl.GetHashCode();
      if (HasSha1) hash ^= Sha1.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasFileType) {
        output.WriteRawTag(8);
        output.WriteInt32(FileType);
      }
      if (HasVersionCode) {
        output.WriteRawTag(16);
        output.WriteInt32(VersionCode);
      }
      if (HasSize) {
        output.WriteRawTag(24);
        output.WriteInt64(Size);
      }
      if (HasDownloadUrl) {
        output.WriteRawTag(34);
        output.WriteString(DownloadUrl);
      }
      if (patchData_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PatchData);
      }
      if (HasCompressedSize) {
        output.WriteRawTag(48);
        output.WriteInt64(CompressedSize);
      }
      if (HasCompressedDownloadUrl) {
        output.WriteRawTag(58);
        output.WriteString(CompressedDownloadUrl);
      }
      if (HasSha1) {
        output.WriteRawTag(66);
        output.WriteString(Sha1);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasFileType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FileType);
      }
      if (HasVersionCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VersionCode);
      }
      if (HasSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Size);
      }
      if (HasDownloadUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DownloadUrl);
      }
      if (patchData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PatchData);
      }
      if (HasCompressedSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CompressedSize);
      }
      if (HasCompressedDownloadUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompressedDownloadUrl);
      }
      if (HasSha1) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sha1);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppFileMetadata other) {
      if (other == null) {
        return;
      }
      if (other.HasFileType) {
        FileType = other.FileType;
      }
      if (other.HasVersionCode) {
        VersionCode = other.VersionCode;
      }
      if (other.HasSize) {
        Size = other.Size;
      }
      if (other.HasDownloadUrl) {
        DownloadUrl = other.DownloadUrl;
      }
      if (other.patchData_ != null) {
        if (patchData_ == null) {
          PatchData = new global::GooglePlayStore.AndroidAppPatchData();
        }
        PatchData.MergeFrom(other.PatchData);
      }
      if (other.HasCompressedSize) {
        CompressedSize = other.CompressedSize;
      }
      if (other.HasCompressedDownloadUrl) {
        CompressedDownloadUrl = other.CompressedDownloadUrl;
      }
      if (other.HasSha1) {
        Sha1 = other.Sha1;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FileType = input.ReadInt32();
            break;
          }
          case 16: {
            VersionCode = input.ReadInt32();
            break;
          }
          case 24: {
            Size = input.ReadInt64();
            break;
          }
          case 34: {
            DownloadUrl = input.ReadString();
            break;
          }
          case 42: {
            if (patchData_ == null) {
              PatchData = new global::GooglePlayStore.AndroidAppPatchData();
            }
            input.ReadMessage(PatchData);
            break;
          }
          case 48: {
            CompressedSize = input.ReadInt64();
            break;
          }
          case 58: {
            CompressedDownloadUrl = input.ReadString();
            break;
          }
          case 66: {
            Sha1 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EncryptionParams : pb::IMessage<EncryptionParams> {
    private static readonly pb::MessageParser<EncryptionParams> _parser = new pb::MessageParser<EncryptionParams>(() => new EncryptionParams());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EncryptionParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionParams(EncryptionParams other) : this() {
      _hasBits0 = other._hasBits0;
      version_ = other.version_;
      encryptionKey_ = other.encryptionKey_;
      hMacKey_ = other.hMacKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionParams Clone() {
      return new EncryptionParams(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private readonly static int VersionDefaultValue = 0;

    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { if ((_hasBits0 & 1) != 0) { return version_; } else { return VersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        version_ = value;
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "encryptionKey" field.</summary>
    public const int EncryptionKeyFieldNumber = 2;
    private readonly static string EncryptionKeyDefaultValue = "";

    private string encryptionKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EncryptionKey {
      get { return encryptionKey_ ?? EncryptionKeyDefaultValue; }
      set {
        encryptionKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "encryptionKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEncryptionKey {
      get { return encryptionKey_ != null; }
    }
    /// <summary>Clears the value of the "encryptionKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEncryptionKey() {
      encryptionKey_ = null;
    }

    /// <summary>Field number for the "hMacKey" field.</summary>
    public const int HMacKeyFieldNumber = 3;
    private readonly static string HMacKeyDefaultValue = "";

    private string hMacKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HMacKey {
      get { return hMacKey_ ?? HMacKeyDefaultValue; }
      set {
        hMacKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hMacKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHMacKey {
      get { return hMacKey_ != null; }
    }
    /// <summary>Clears the value of the "hMacKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHMacKey() {
      hMacKey_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EncryptionParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EncryptionParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (EncryptionKey != other.EncryptionKey) return false;
      if (HMacKey != other.HMacKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVersion) hash ^= Version.GetHashCode();
      if (HasEncryptionKey) hash ^= EncryptionKey.GetHashCode();
      if (HasHMacKey) hash ^= HMacKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasVersion) {
        output.WriteRawTag(8);
        output.WriteInt32(Version);
      }
      if (HasEncryptionKey) {
        output.WriteRawTag(18);
        output.WriteString(EncryptionKey);
      }
      if (HasHMacKey) {
        output.WriteRawTag(26);
        output.WriteString(HMacKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (HasEncryptionKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EncryptionKey);
      }
      if (HasHMacKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HMacKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EncryptionParams other) {
      if (other == null) {
        return;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.HasEncryptionKey) {
        EncryptionKey = other.EncryptionKey;
      }
      if (other.HasHMacKey) {
        HMacKey = other.HMacKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadInt32();
            break;
          }
          case 18: {
            EncryptionKey = input.ReadString();
            break;
          }
          case 26: {
            HMacKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HttpCookie : pb::IMessage<HttpCookie> {
    private static readonly pb::MessageParser<HttpCookie> _parser = new pb::MessageParser<HttpCookie>(() => new HttpCookie());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HttpCookie> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpCookie() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpCookie(HttpCookie other) : this() {
      name_ = other.name_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpCookie Clone() {
      return new HttpCookie(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private readonly static string ValueDefaultValue = "";

    private string value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_ ?? ValueDefaultValue; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasValue {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HttpCookie);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HttpCookie other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HttpCookie other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Address : pb::IMessage<Address> {
    private static readonly pb::MessageParser<Address> _parser = new pb::MessageParser<Address>(() => new Address());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Address> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address(Address other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      addressLine1_ = other.addressLine1_;
      addressLine2_ = other.addressLine2_;
      city_ = other.city_;
      state_ = other.state_;
      postalCode_ = other.postalCode_;
      postalCountry_ = other.postalCountry_;
      dependentLocality_ = other.dependentLocality_;
      sortingCode_ = other.sortingCode_;
      languageCode_ = other.languageCode_;
      phoneNumber_ = other.phoneNumber_;
      deprecatedIsReduced_ = other.deprecatedIsReduced_;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      email_ = other.email_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address Clone() {
      return new Address(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "addressLine1" field.</summary>
    public const int AddressLine1FieldNumber = 2;
    private readonly static string AddressLine1DefaultValue = "";

    private string addressLine1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AddressLine1 {
      get { return addressLine1_ ?? AddressLine1DefaultValue; }
      set {
        addressLine1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "addressLine1" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAddressLine1 {
      get { return addressLine1_ != null; }
    }
    /// <summary>Clears the value of the "addressLine1" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAddressLine1() {
      addressLine1_ = null;
    }

    /// <summary>Field number for the "addressLine2" field.</summary>
    public const int AddressLine2FieldNumber = 3;
    private readonly static string AddressLine2DefaultValue = "";

    private string addressLine2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AddressLine2 {
      get { return addressLine2_ ?? AddressLine2DefaultValue; }
      set {
        addressLine2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "addressLine2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAddressLine2 {
      get { return addressLine2_ != null; }
    }
    /// <summary>Clears the value of the "addressLine2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAddressLine2() {
      addressLine2_ = null;
    }

    /// <summary>Field number for the "city" field.</summary>
    public const int CityFieldNumber = 4;
    private readonly static string CityDefaultValue = "";

    private string city_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string City {
      get { return city_ ?? CityDefaultValue; }
      set {
        city_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "city" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCity {
      get { return city_ != null; }
    }
    /// <summary>Clears the value of the "city" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCity() {
      city_ = null;
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 5;
    private readonly static string StateDefaultValue = "";

    private string state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string State {
      get { return state_ ?? StateDefaultValue; }
      set {
        state_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasState {
      get { return state_ != null; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearState() {
      state_ = null;
    }

    /// <summary>Field number for the "postalCode" field.</summary>
    public const int PostalCodeFieldNumber = 6;
    private readonly static string PostalCodeDefaultValue = "";

    private string postalCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PostalCode {
      get { return postalCode_ ?? PostalCodeDefaultValue; }
      set {
        postalCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "postalCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPostalCode {
      get { return postalCode_ != null; }
    }
    /// <summary>Clears the value of the "postalCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPostalCode() {
      postalCode_ = null;
    }

    /// <summary>Field number for the "postalCountry" field.</summary>
    public const int PostalCountryFieldNumber = 7;
    private readonly static string PostalCountryDefaultValue = "";

    private string postalCountry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PostalCountry {
      get { return postalCountry_ ?? PostalCountryDefaultValue; }
      set {
        postalCountry_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "postalCountry" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPostalCountry {
      get { return postalCountry_ != null; }
    }
    /// <summary>Clears the value of the "postalCountry" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPostalCountry() {
      postalCountry_ = null;
    }

    /// <summary>Field number for the "dependentLocality" field.</summary>
    public const int DependentLocalityFieldNumber = 8;
    private readonly static string DependentLocalityDefaultValue = "";

    private string dependentLocality_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DependentLocality {
      get { return dependentLocality_ ?? DependentLocalityDefaultValue; }
      set {
        dependentLocality_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "dependentLocality" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDependentLocality {
      get { return dependentLocality_ != null; }
    }
    /// <summary>Clears the value of the "dependentLocality" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDependentLocality() {
      dependentLocality_ = null;
    }

    /// <summary>Field number for the "sortingCode" field.</summary>
    public const int SortingCodeFieldNumber = 9;
    private readonly static string SortingCodeDefaultValue = "";

    private string sortingCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SortingCode {
      get { return sortingCode_ ?? SortingCodeDefaultValue; }
      set {
        sortingCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sortingCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSortingCode {
      get { return sortingCode_ != null; }
    }
    /// <summary>Clears the value of the "sortingCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSortingCode() {
      sortingCode_ = null;
    }

    /// <summary>Field number for the "languageCode" field.</summary>
    public const int LanguageCodeFieldNumber = 10;
    private readonly static string LanguageCodeDefaultValue = "";

    private string languageCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LanguageCode {
      get { return languageCode_ ?? LanguageCodeDefaultValue; }
      set {
        languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "languageCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLanguageCode {
      get { return languageCode_ != null; }
    }
    /// <summary>Clears the value of the "languageCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLanguageCode() {
      languageCode_ = null;
    }

    /// <summary>Field number for the "phoneNumber" field.</summary>
    public const int PhoneNumberFieldNumber = 11;
    private readonly static string PhoneNumberDefaultValue = "";

    private string phoneNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PhoneNumber {
      get { return phoneNumber_ ?? PhoneNumberDefaultValue; }
      set {
        phoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "phoneNumber" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPhoneNumber {
      get { return phoneNumber_ != null; }
    }
    /// <summary>Clears the value of the "phoneNumber" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPhoneNumber() {
      phoneNumber_ = null;
    }

    /// <summary>Field number for the "deprecatedIsReduced" field.</summary>
    public const int DeprecatedIsReducedFieldNumber = 12;
    private readonly static bool DeprecatedIsReducedDefaultValue = false;

    private bool deprecatedIsReduced_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DeprecatedIsReduced {
      get { if ((_hasBits0 & 1) != 0) { return deprecatedIsReduced_; } else { return DeprecatedIsReducedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        deprecatedIsReduced_ = value;
      }
    }
    /// <summary>Gets whether the "deprecatedIsReduced" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeprecatedIsReduced {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "deprecatedIsReduced" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeprecatedIsReduced() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "firstName" field.</summary>
    public const int FirstNameFieldNumber = 13;
    private readonly static string FirstNameDefaultValue = "";

    private string firstName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_ ?? FirstNameDefaultValue; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "firstName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFirstName {
      get { return firstName_ != null; }
    }
    /// <summary>Clears the value of the "firstName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFirstName() {
      firstName_ = null;
    }

    /// <summary>Field number for the "lastName" field.</summary>
    public const int LastNameFieldNumber = 14;
    private readonly static string LastNameDefaultValue = "";

    private string lastName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_ ?? LastNameDefaultValue; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "lastName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLastName {
      get { return lastName_ != null; }
    }
    /// <summary>Clears the value of the "lastName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLastName() {
      lastName_ = null;
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 15;
    private readonly static string EmailDefaultValue = "";

    private string email_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_ ?? EmailDefaultValue; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "email" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEmail {
      get { return email_ != null; }
    }
    /// <summary>Clears the value of the "email" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEmail() {
      email_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Address);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Address other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (AddressLine1 != other.AddressLine1) return false;
      if (AddressLine2 != other.AddressLine2) return false;
      if (City != other.City) return false;
      if (State != other.State) return false;
      if (PostalCode != other.PostalCode) return false;
      if (PostalCountry != other.PostalCountry) return false;
      if (DependentLocality != other.DependentLocality) return false;
      if (SortingCode != other.SortingCode) return false;
      if (LanguageCode != other.LanguageCode) return false;
      if (PhoneNumber != other.PhoneNumber) return false;
      if (DeprecatedIsReduced != other.DeprecatedIsReduced) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (Email != other.Email) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasAddressLine1) hash ^= AddressLine1.GetHashCode();
      if (HasAddressLine2) hash ^= AddressLine2.GetHashCode();
      if (HasCity) hash ^= City.GetHashCode();
      if (HasState) hash ^= State.GetHashCode();
      if (HasPostalCode) hash ^= PostalCode.GetHashCode();
      if (HasPostalCountry) hash ^= PostalCountry.GetHashCode();
      if (HasDependentLocality) hash ^= DependentLocality.GetHashCode();
      if (HasSortingCode) hash ^= SortingCode.GetHashCode();
      if (HasLanguageCode) hash ^= LanguageCode.GetHashCode();
      if (HasPhoneNumber) hash ^= PhoneNumber.GetHashCode();
      if (HasDeprecatedIsReduced) hash ^= DeprecatedIsReduced.GetHashCode();
      if (HasFirstName) hash ^= FirstName.GetHashCode();
      if (HasLastName) hash ^= LastName.GetHashCode();
      if (HasEmail) hash ^= Email.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasAddressLine1) {
        output.WriteRawTag(18);
        output.WriteString(AddressLine1);
      }
      if (HasAddressLine2) {
        output.WriteRawTag(26);
        output.WriteString(AddressLine2);
      }
      if (HasCity) {
        output.WriteRawTag(34);
        output.WriteString(City);
      }
      if (HasState) {
        output.WriteRawTag(42);
        output.WriteString(State);
      }
      if (HasPostalCode) {
        output.WriteRawTag(50);
        output.WriteString(PostalCode);
      }
      if (HasPostalCountry) {
        output.WriteRawTag(58);
        output.WriteString(PostalCountry);
      }
      if (HasDependentLocality) {
        output.WriteRawTag(66);
        output.WriteString(DependentLocality);
      }
      if (HasSortingCode) {
        output.WriteRawTag(74);
        output.WriteString(SortingCode);
      }
      if (HasLanguageCode) {
        output.WriteRawTag(82);
        output.WriteString(LanguageCode);
      }
      if (HasPhoneNumber) {
        output.WriteRawTag(90);
        output.WriteString(PhoneNumber);
      }
      if (HasDeprecatedIsReduced) {
        output.WriteRawTag(96);
        output.WriteBool(DeprecatedIsReduced);
      }
      if (HasFirstName) {
        output.WriteRawTag(106);
        output.WriteString(FirstName);
      }
      if (HasLastName) {
        output.WriteRawTag(114);
        output.WriteString(LastName);
      }
      if (HasEmail) {
        output.WriteRawTag(122);
        output.WriteString(Email);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasAddressLine1) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AddressLine1);
      }
      if (HasAddressLine2) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AddressLine2);
      }
      if (HasCity) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(City);
      }
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(State);
      }
      if (HasPostalCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PostalCode);
      }
      if (HasPostalCountry) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PostalCountry);
      }
      if (HasDependentLocality) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DependentLocality);
      }
      if (HasSortingCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SortingCode);
      }
      if (HasLanguageCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
      }
      if (HasPhoneNumber) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNumber);
      }
      if (HasDeprecatedIsReduced) {
        size += 1 + 1;
      }
      if (HasFirstName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (HasLastName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (HasEmail) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Address other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasAddressLine1) {
        AddressLine1 = other.AddressLine1;
      }
      if (other.HasAddressLine2) {
        AddressLine2 = other.AddressLine2;
      }
      if (other.HasCity) {
        City = other.City;
      }
      if (other.HasState) {
        State = other.State;
      }
      if (other.HasPostalCode) {
        PostalCode = other.PostalCode;
      }
      if (other.HasPostalCountry) {
        PostalCountry = other.PostalCountry;
      }
      if (other.HasDependentLocality) {
        DependentLocality = other.DependentLocality;
      }
      if (other.HasSortingCode) {
        SortingCode = other.SortingCode;
      }
      if (other.HasLanguageCode) {
        LanguageCode = other.LanguageCode;
      }
      if (other.HasPhoneNumber) {
        PhoneNumber = other.PhoneNumber;
      }
      if (other.HasDeprecatedIsReduced) {
        DeprecatedIsReduced = other.DeprecatedIsReduced;
      }
      if (other.HasFirstName) {
        FirstName = other.FirstName;
      }
      if (other.HasLastName) {
        LastName = other.LastName;
      }
      if (other.HasEmail) {
        Email = other.Email;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            AddressLine1 = input.ReadString();
            break;
          }
          case 26: {
            AddressLine2 = input.ReadString();
            break;
          }
          case 34: {
            City = input.ReadString();
            break;
          }
          case 42: {
            State = input.ReadString();
            break;
          }
          case 50: {
            PostalCode = input.ReadString();
            break;
          }
          case 58: {
            PostalCountry = input.ReadString();
            break;
          }
          case 66: {
            DependentLocality = input.ReadString();
            break;
          }
          case 74: {
            SortingCode = input.ReadString();
            break;
          }
          case 82: {
            LanguageCode = input.ReadString();
            break;
          }
          case 90: {
            PhoneNumber = input.ReadString();
            break;
          }
          case 96: {
            DeprecatedIsReduced = input.ReadBool();
            break;
          }
          case 106: {
            FirstName = input.ReadString();
            break;
          }
          case 114: {
            LastName = input.ReadString();
            break;
          }
          case 122: {
            Email = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BrowseLink : pb::IMessage<BrowseLink> {
    private static readonly pb::MessageParser<BrowseLink> _parser = new pb::MessageParser<BrowseLink>(() => new BrowseLink());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BrowseLink> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrowseLink() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrowseLink(BrowseLink other) : this() {
      name_ = other.name_;
      dataUrl_ = other.dataUrl_;
      serverLogsCookie_ = other.serverLogsCookie_;
      icon_ = other.icon_ != null ? other.icon_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrowseLink Clone() {
      return new BrowseLink(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "dataUrl" field.</summary>
    public const int DataUrlFieldNumber = 3;
    private readonly static string DataUrlDefaultValue = "";

    private string dataUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DataUrl {
      get { return dataUrl_ ?? DataUrlDefaultValue; }
      set {
        dataUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "dataUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDataUrl {
      get { return dataUrl_ != null; }
    }
    /// <summary>Clears the value of the "dataUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDataUrl() {
      dataUrl_ = null;
    }

    /// <summary>Field number for the "serverLogsCookie" field.</summary>
    public const int ServerLogsCookieFieldNumber = 4;
    private readonly static pb::ByteString ServerLogsCookieDefaultValue = pb::ByteString.Empty;

    private pb::ByteString serverLogsCookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ServerLogsCookie {
      get { return serverLogsCookie_ ?? ServerLogsCookieDefaultValue; }
      set {
        serverLogsCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serverLogsCookie" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServerLogsCookie {
      get { return serverLogsCookie_ != null; }
    }
    /// <summary>Clears the value of the "serverLogsCookie" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServerLogsCookie() {
      serverLogsCookie_ = null;
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 5;
    private global::GooglePlayStore.Image icon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Image Icon {
      get { return icon_; }
      set {
        icon_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BrowseLink);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BrowseLink other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DataUrl != other.DataUrl) return false;
      if (ServerLogsCookie != other.ServerLogsCookie) return false;
      if (!object.Equals(Icon, other.Icon)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasDataUrl) hash ^= DataUrl.GetHashCode();
      if (HasServerLogsCookie) hash ^= ServerLogsCookie.GetHashCode();
      if (icon_ != null) hash ^= Icon.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasDataUrl) {
        output.WriteRawTag(26);
        output.WriteString(DataUrl);
      }
      if (HasServerLogsCookie) {
        output.WriteRawTag(34);
        output.WriteBytes(ServerLogsCookie);
      }
      if (icon_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Icon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasDataUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DataUrl);
      }
      if (HasServerLogsCookie) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ServerLogsCookie);
      }
      if (icon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Icon);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BrowseLink other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasDataUrl) {
        DataUrl = other.DataUrl;
      }
      if (other.HasServerLogsCookie) {
        ServerLogsCookie = other.ServerLogsCookie;
      }
      if (other.icon_ != null) {
        if (icon_ == null) {
          Icon = new global::GooglePlayStore.Image();
        }
        Icon.MergeFrom(other.Icon);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            DataUrl = input.ReadString();
            break;
          }
          case 34: {
            ServerLogsCookie = input.ReadBytes();
            break;
          }
          case 42: {
            if (icon_ == null) {
              Icon = new global::GooglePlayStore.Image();
            }
            input.ReadMessage(Icon);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BrowseResponse : pb::IMessage<BrowseResponse> {
    private static readonly pb::MessageParser<BrowseResponse> _parser = new pb::MessageParser<BrowseResponse>(() => new BrowseResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BrowseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrowseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrowseResponse(BrowseResponse other) : this() {
      _hasBits0 = other._hasBits0;
      contentsUrl_ = other.contentsUrl_;
      promoUrl_ = other.promoUrl_;
      category_ = other.category_.Clone();
      breadcrumb_ = other.breadcrumb_.Clone();
      quickLink_ = other.quickLink_.Clone();
      serverLogsCookie_ = other.serverLogsCookie_;
      title_ = other.title_;
      backendId_ = other.backendId_;
      browseTab_ = other.browseTab_ != null ? other.browseTab_.Clone() : null;
      landingTabIndex_ = other.landingTabIndex_;
      quickLinkTabIndex_ = other.quickLinkTabIndex_;
      quickLinkFallbackTabIndex_ = other.quickLinkFallbackTabIndex_;
      isFamilySafe_ = other.isFamilySafe_;
      shareUrl_ = other.shareUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrowseResponse Clone() {
      return new BrowseResponse(this);
    }

    /// <summary>Field number for the "contentsUrl" field.</summary>
    public const int ContentsUrlFieldNumber = 1;
    private readonly static string ContentsUrlDefaultValue = "";

    private string contentsUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentsUrl {
      get { return contentsUrl_ ?? ContentsUrlDefaultValue; }
      set {
        contentsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "contentsUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContentsUrl {
      get { return contentsUrl_ != null; }
    }
    /// <summary>Clears the value of the "contentsUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContentsUrl() {
      contentsUrl_ = null;
    }

    /// <summary>Field number for the "promoUrl" field.</summary>
    public const int PromoUrlFieldNumber = 2;
    private readonly static string PromoUrlDefaultValue = "";

    private string promoUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PromoUrl {
      get { return promoUrl_ ?? PromoUrlDefaultValue; }
      set {
        promoUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "promoUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPromoUrl {
      get { return promoUrl_ != null; }
    }
    /// <summary>Clears the value of the "promoUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPromoUrl() {
      promoUrl_ = null;
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.BrowseLink> _repeated_category_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.BrowseLink.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.BrowseLink> category_ = new pbc::RepeatedField<global::GooglePlayStore.BrowseLink>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.BrowseLink> Category {
      get { return category_; }
    }

    /// <summary>Field number for the "breadcrumb" field.</summary>
    public const int BreadcrumbFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.BrowseLink> _repeated_breadcrumb_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.BrowseLink.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.BrowseLink> breadcrumb_ = new pbc::RepeatedField<global::GooglePlayStore.BrowseLink>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.BrowseLink> Breadcrumb {
      get { return breadcrumb_; }
    }

    /// <summary>Field number for the "quickLink" field.</summary>
    public const int QuickLinkFieldNumber = 5;
    private static readonly pb::FieldCodec<global::GooglePlayStore.QuickLink> _repeated_quickLink_codec
        = pb::FieldCodec.ForMessage(42, global::GooglePlayStore.QuickLink.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.QuickLink> quickLink_ = new pbc::RepeatedField<global::GooglePlayStore.QuickLink>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.QuickLink> QuickLink {
      get { return quickLink_; }
    }

    /// <summary>Field number for the "serverLogsCookie" field.</summary>
    public const int ServerLogsCookieFieldNumber = 6;
    private readonly static pb::ByteString ServerLogsCookieDefaultValue = pb::ByteString.Empty;

    private pb::ByteString serverLogsCookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ServerLogsCookie {
      get { return serverLogsCookie_ ?? ServerLogsCookieDefaultValue; }
      set {
        serverLogsCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serverLogsCookie" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServerLogsCookie {
      get { return serverLogsCookie_ != null; }
    }
    /// <summary>Clears the value of the "serverLogsCookie" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServerLogsCookie() {
      serverLogsCookie_ = null;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 7;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "backendId" field.</summary>
    public const int BackendIdFieldNumber = 8;
    private readonly static int BackendIdDefaultValue = 0;

    private int backendId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BackendId {
      get { if ((_hasBits0 & 1) != 0) { return backendId_; } else { return BackendIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        backendId_ = value;
      }
    }
    /// <summary>Gets whether the "backendId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBackendId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "backendId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBackendId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "browseTab" field.</summary>
    public const int BrowseTabFieldNumber = 9;
    private global::GooglePlayStore.BrowseTab browseTab_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.BrowseTab BrowseTab {
      get { return browseTab_; }
      set {
        browseTab_ = value;
      }
    }

    /// <summary>Field number for the "landingTabIndex" field.</summary>
    public const int LandingTabIndexFieldNumber = 10;
    private readonly static int LandingTabIndexDefaultValue = 0;

    private int landingTabIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LandingTabIndex {
      get { if ((_hasBits0 & 2) != 0) { return landingTabIndex_; } else { return LandingTabIndexDefaultValue; } }
      set {
        _hasBits0 |= 2;
        landingTabIndex_ = value;
      }
    }
    /// <summary>Gets whether the "landingTabIndex" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLandingTabIndex {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "landingTabIndex" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLandingTabIndex() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "quickLinkTabIndex" field.</summary>
    public const int QuickLinkTabIndexFieldNumber = 11;
    private readonly static int QuickLinkTabIndexDefaultValue = 0;

    private int quickLinkTabIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QuickLinkTabIndex {
      get { if ((_hasBits0 & 4) != 0) { return quickLinkTabIndex_; } else { return QuickLinkTabIndexDefaultValue; } }
      set {
        _hasBits0 |= 4;
        quickLinkTabIndex_ = value;
      }
    }
    /// <summary>Gets whether the "quickLinkTabIndex" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasQuickLinkTabIndex {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "quickLinkTabIndex" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQuickLinkTabIndex() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "quickLinkFallbackTabIndex" field.</summary>
    public const int QuickLinkFallbackTabIndexFieldNumber = 12;
    private readonly static int QuickLinkFallbackTabIndexDefaultValue = 0;

    private int quickLinkFallbackTabIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QuickLinkFallbackTabIndex {
      get { if ((_hasBits0 & 8) != 0) { return quickLinkFallbackTabIndex_; } else { return QuickLinkFallbackTabIndexDefaultValue; } }
      set {
        _hasBits0 |= 8;
        quickLinkFallbackTabIndex_ = value;
      }
    }
    /// <summary>Gets whether the "quickLinkFallbackTabIndex" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasQuickLinkFallbackTabIndex {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "quickLinkFallbackTabIndex" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQuickLinkFallbackTabIndex() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "isFamilySafe" field.</summary>
    public const int IsFamilySafeFieldNumber = 14;
    private readonly static bool IsFamilySafeDefaultValue = false;

    private bool isFamilySafe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFamilySafe {
      get { if ((_hasBits0 & 16) != 0) { return isFamilySafe_; } else { return IsFamilySafeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        isFamilySafe_ = value;
      }
    }
    /// <summary>Gets whether the "isFamilySafe" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsFamilySafe {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "isFamilySafe" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsFamilySafe() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "shareUrl" field.</summary>
    public const int ShareUrlFieldNumber = 18;
    private readonly static string ShareUrlDefaultValue = "";

    private string shareUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShareUrl {
      get { return shareUrl_ ?? ShareUrlDefaultValue; }
      set {
        shareUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "shareUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasShareUrl {
      get { return shareUrl_ != null; }
    }
    /// <summary>Clears the value of the "shareUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearShareUrl() {
      shareUrl_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BrowseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BrowseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContentsUrl != other.ContentsUrl) return false;
      if (PromoUrl != other.PromoUrl) return false;
      if(!category_.Equals(other.category_)) return false;
      if(!breadcrumb_.Equals(other.breadcrumb_)) return false;
      if(!quickLink_.Equals(other.quickLink_)) return false;
      if (ServerLogsCookie != other.ServerLogsCookie) return false;
      if (Title != other.Title) return false;
      if (BackendId != other.BackendId) return false;
      if (!object.Equals(BrowseTab, other.BrowseTab)) return false;
      if (LandingTabIndex != other.LandingTabIndex) return false;
      if (QuickLinkTabIndex != other.QuickLinkTabIndex) return false;
      if (QuickLinkFallbackTabIndex != other.QuickLinkFallbackTabIndex) return false;
      if (IsFamilySafe != other.IsFamilySafe) return false;
      if (ShareUrl != other.ShareUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasContentsUrl) hash ^= ContentsUrl.GetHashCode();
      if (HasPromoUrl) hash ^= PromoUrl.GetHashCode();
      hash ^= category_.GetHashCode();
      hash ^= breadcrumb_.GetHashCode();
      hash ^= quickLink_.GetHashCode();
      if (HasServerLogsCookie) hash ^= ServerLogsCookie.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasBackendId) hash ^= BackendId.GetHashCode();
      if (browseTab_ != null) hash ^= BrowseTab.GetHashCode();
      if (HasLandingTabIndex) hash ^= LandingTabIndex.GetHashCode();
      if (HasQuickLinkTabIndex) hash ^= QuickLinkTabIndex.GetHashCode();
      if (HasQuickLinkFallbackTabIndex) hash ^= QuickLinkFallbackTabIndex.GetHashCode();
      if (HasIsFamilySafe) hash ^= IsFamilySafe.GetHashCode();
      if (HasShareUrl) hash ^= ShareUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasContentsUrl) {
        output.WriteRawTag(10);
        output.WriteString(ContentsUrl);
      }
      if (HasPromoUrl) {
        output.WriteRawTag(18);
        output.WriteString(PromoUrl);
      }
      category_.WriteTo(output, _repeated_category_codec);
      breadcrumb_.WriteTo(output, _repeated_breadcrumb_codec);
      quickLink_.WriteTo(output, _repeated_quickLink_codec);
      if (HasServerLogsCookie) {
        output.WriteRawTag(50);
        output.WriteBytes(ServerLogsCookie);
      }
      if (HasTitle) {
        output.WriteRawTag(58);
        output.WriteString(Title);
      }
      if (HasBackendId) {
        output.WriteRawTag(64);
        output.WriteInt32(BackendId);
      }
      if (browseTab_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(BrowseTab);
      }
      if (HasLandingTabIndex) {
        output.WriteRawTag(80);
        output.WriteInt32(LandingTabIndex);
      }
      if (HasQuickLinkTabIndex) {
        output.WriteRawTag(88);
        output.WriteInt32(QuickLinkTabIndex);
      }
      if (HasQuickLinkFallbackTabIndex) {
        output.WriteRawTag(96);
        output.WriteInt32(QuickLinkFallbackTabIndex);
      }
      if (HasIsFamilySafe) {
        output.WriteRawTag(112);
        output.WriteBool(IsFamilySafe);
      }
      if (HasShareUrl) {
        output.WriteRawTag(146, 1);
        output.WriteString(ShareUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasContentsUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentsUrl);
      }
      if (HasPromoUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PromoUrl);
      }
      size += category_.CalculateSize(_repeated_category_codec);
      size += breadcrumb_.CalculateSize(_repeated_breadcrumb_codec);
      size += quickLink_.CalculateSize(_repeated_quickLink_codec);
      if (HasServerLogsCookie) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ServerLogsCookie);
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasBackendId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BackendId);
      }
      if (browseTab_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BrowseTab);
      }
      if (HasLandingTabIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LandingTabIndex);
      }
      if (HasQuickLinkTabIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QuickLinkTabIndex);
      }
      if (HasQuickLinkFallbackTabIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QuickLinkFallbackTabIndex);
      }
      if (HasIsFamilySafe) {
        size += 1 + 1;
      }
      if (HasShareUrl) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ShareUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BrowseResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasContentsUrl) {
        ContentsUrl = other.ContentsUrl;
      }
      if (other.HasPromoUrl) {
        PromoUrl = other.PromoUrl;
      }
      category_.Add(other.category_);
      breadcrumb_.Add(other.breadcrumb_);
      quickLink_.Add(other.quickLink_);
      if (other.HasServerLogsCookie) {
        ServerLogsCookie = other.ServerLogsCookie;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasBackendId) {
        BackendId = other.BackendId;
      }
      if (other.browseTab_ != null) {
        if (browseTab_ == null) {
          BrowseTab = new global::GooglePlayStore.BrowseTab();
        }
        BrowseTab.MergeFrom(other.BrowseTab);
      }
      if (other.HasLandingTabIndex) {
        LandingTabIndex = other.LandingTabIndex;
      }
      if (other.HasQuickLinkTabIndex) {
        QuickLinkTabIndex = other.QuickLinkTabIndex;
      }
      if (other.HasQuickLinkFallbackTabIndex) {
        QuickLinkFallbackTabIndex = other.QuickLinkFallbackTabIndex;
      }
      if (other.HasIsFamilySafe) {
        IsFamilySafe = other.IsFamilySafe;
      }
      if (other.HasShareUrl) {
        ShareUrl = other.ShareUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContentsUrl = input.ReadString();
            break;
          }
          case 18: {
            PromoUrl = input.ReadString();
            break;
          }
          case 26: {
            category_.AddEntriesFrom(input, _repeated_category_codec);
            break;
          }
          case 34: {
            breadcrumb_.AddEntriesFrom(input, _repeated_breadcrumb_codec);
            break;
          }
          case 42: {
            quickLink_.AddEntriesFrom(input, _repeated_quickLink_codec);
            break;
          }
          case 50: {
            ServerLogsCookie = input.ReadBytes();
            break;
          }
          case 58: {
            Title = input.ReadString();
            break;
          }
          case 64: {
            BackendId = input.ReadInt32();
            break;
          }
          case 74: {
            if (browseTab_ == null) {
              BrowseTab = new global::GooglePlayStore.BrowseTab();
            }
            input.ReadMessage(BrowseTab);
            break;
          }
          case 80: {
            LandingTabIndex = input.ReadInt32();
            break;
          }
          case 88: {
            QuickLinkTabIndex = input.ReadInt32();
            break;
          }
          case 96: {
            QuickLinkFallbackTabIndex = input.ReadInt32();
            break;
          }
          case 112: {
            IsFamilySafe = input.ReadBool();
            break;
          }
          case 146: {
            ShareUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DirectPurchase : pb::IMessage<DirectPurchase> {
    private static readonly pb::MessageParser<DirectPurchase> _parser = new pb::MessageParser<DirectPurchase>(() => new DirectPurchase());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DirectPurchase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirectPurchase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirectPurchase(DirectPurchase other) : this() {
      _hasBits0 = other._hasBits0;
      detailsUrl_ = other.detailsUrl_;
      purchaseItemId_ = other.purchaseItemId_;
      parentItemId_ = other.parentItemId_;
      offerType_ = other.offerType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirectPurchase Clone() {
      return new DirectPurchase(this);
    }

    /// <summary>Field number for the "detailsUrl" field.</summary>
    public const int DetailsUrlFieldNumber = 1;
    private readonly static string DetailsUrlDefaultValue = "";

    private string detailsUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DetailsUrl {
      get { return detailsUrl_ ?? DetailsUrlDefaultValue; }
      set {
        detailsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "detailsUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDetailsUrl {
      get { return detailsUrl_ != null; }
    }
    /// <summary>Clears the value of the "detailsUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDetailsUrl() {
      detailsUrl_ = null;
    }

    /// <summary>Field number for the "purchaseItemId" field.</summary>
    public const int PurchaseItemIdFieldNumber = 2;
    private readonly static string PurchaseItemIdDefaultValue = "";

    private string purchaseItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PurchaseItemId {
      get { return purchaseItemId_ ?? PurchaseItemIdDefaultValue; }
      set {
        purchaseItemId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "purchaseItemId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPurchaseItemId {
      get { return purchaseItemId_ != null; }
    }
    /// <summary>Clears the value of the "purchaseItemId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPurchaseItemId() {
      purchaseItemId_ = null;
    }

    /// <summary>Field number for the "parentItemId" field.</summary>
    public const int ParentItemIdFieldNumber = 3;
    private readonly static string ParentItemIdDefaultValue = "";

    private string parentItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParentItemId {
      get { return parentItemId_ ?? ParentItemIdDefaultValue; }
      set {
        parentItemId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "parentItemId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasParentItemId {
      get { return parentItemId_ != null; }
    }
    /// <summary>Clears the value of the "parentItemId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearParentItemId() {
      parentItemId_ = null;
    }

    /// <summary>Field number for the "offerType" field.</summary>
    public const int OfferTypeFieldNumber = 4;
    private readonly static int OfferTypeDefaultValue = 1;

    private int offerType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OfferType {
      get { if ((_hasBits0 & 1) != 0) { return offerType_; } else { return OfferTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        offerType_ = value;
      }
    }
    /// <summary>Gets whether the "offerType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOfferType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "offerType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOfferType() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DirectPurchase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DirectPurchase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DetailsUrl != other.DetailsUrl) return false;
      if (PurchaseItemId != other.PurchaseItemId) return false;
      if (ParentItemId != other.ParentItemId) return false;
      if (OfferType != other.OfferType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDetailsUrl) hash ^= DetailsUrl.GetHashCode();
      if (HasPurchaseItemId) hash ^= PurchaseItemId.GetHashCode();
      if (HasParentItemId) hash ^= ParentItemId.GetHashCode();
      if (HasOfferType) hash ^= OfferType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasDetailsUrl) {
        output.WriteRawTag(10);
        output.WriteString(DetailsUrl);
      }
      if (HasPurchaseItemId) {
        output.WriteRawTag(18);
        output.WriteString(PurchaseItemId);
      }
      if (HasParentItemId) {
        output.WriteRawTag(26);
        output.WriteString(ParentItemId);
      }
      if (HasOfferType) {
        output.WriteRawTag(32);
        output.WriteInt32(OfferType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDetailsUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DetailsUrl);
      }
      if (HasPurchaseItemId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PurchaseItemId);
      }
      if (HasParentItemId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentItemId);
      }
      if (HasOfferType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OfferType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DirectPurchase other) {
      if (other == null) {
        return;
      }
      if (other.HasDetailsUrl) {
        DetailsUrl = other.DetailsUrl;
      }
      if (other.HasPurchaseItemId) {
        PurchaseItemId = other.PurchaseItemId;
      }
      if (other.HasParentItemId) {
        ParentItemId = other.ParentItemId;
      }
      if (other.HasOfferType) {
        OfferType = other.OfferType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DetailsUrl = input.ReadString();
            break;
          }
          case 18: {
            PurchaseItemId = input.ReadString();
            break;
          }
          case 26: {
            ParentItemId = input.ReadString();
            break;
          }
          case 32: {
            OfferType = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RedeemGiftCard : pb::IMessage<RedeemGiftCard> {
    private static readonly pb::MessageParser<RedeemGiftCard> _parser = new pb::MessageParser<RedeemGiftCard>(() => new RedeemGiftCard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RedeemGiftCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemGiftCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemGiftCard(RedeemGiftCard other) : this() {
      prefillCode_ = other.prefillCode_;
      partnerPayload_ = other.partnerPayload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemGiftCard Clone() {
      return new RedeemGiftCard(this);
    }

    /// <summary>Field number for the "prefillCode" field.</summary>
    public const int PrefillCodeFieldNumber = 1;
    private readonly static string PrefillCodeDefaultValue = "";

    private string prefillCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrefillCode {
      get { return prefillCode_ ?? PrefillCodeDefaultValue; }
      set {
        prefillCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "prefillCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPrefillCode {
      get { return prefillCode_ != null; }
    }
    /// <summary>Clears the value of the "prefillCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPrefillCode() {
      prefillCode_ = null;
    }

    /// <summary>Field number for the "partnerPayload" field.</summary>
    public const int PartnerPayloadFieldNumber = 2;
    private readonly static string PartnerPayloadDefaultValue = "";

    private string partnerPayload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PartnerPayload {
      get { return partnerPayload_ ?? PartnerPayloadDefaultValue; }
      set {
        partnerPayload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "partnerPayload" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPartnerPayload {
      get { return partnerPayload_ != null; }
    }
    /// <summary>Clears the value of the "partnerPayload" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPartnerPayload() {
      partnerPayload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RedeemGiftCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RedeemGiftCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PrefillCode != other.PrefillCode) return false;
      if (PartnerPayload != other.PartnerPayload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPrefillCode) hash ^= PrefillCode.GetHashCode();
      if (HasPartnerPayload) hash ^= PartnerPayload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasPrefillCode) {
        output.WriteRawTag(10);
        output.WriteString(PrefillCode);
      }
      if (HasPartnerPayload) {
        output.WriteRawTag(18);
        output.WriteString(PartnerPayload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPrefillCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrefillCode);
      }
      if (HasPartnerPayload) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PartnerPayload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RedeemGiftCard other) {
      if (other == null) {
        return;
      }
      if (other.HasPrefillCode) {
        PrefillCode = other.PrefillCode;
      }
      if (other.HasPartnerPayload) {
        PartnerPayload = other.PartnerPayload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PrefillCode = input.ReadString();
            break;
          }
          case 18: {
            PartnerPayload = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResolvedLink : pb::IMessage<ResolvedLink> {
    private static readonly pb::MessageParser<ResolvedLink> _parser = new pb::MessageParser<ResolvedLink>(() => new ResolvedLink());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResolvedLink> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolvedLink() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolvedLink(ResolvedLink other) : this() {
      _hasBits0 = other._hasBits0;
      detailsUrl_ = other.detailsUrl_;
      browseUrl_ = other.browseUrl_;
      searchUrl_ = other.searchUrl_;
      directPurchase_ = other.directPurchase_ != null ? other.directPurchase_.Clone() : null;
      homeUrl_ = other.homeUrl_;
      redeemGiftCard_ = other.redeemGiftCard_ != null ? other.redeemGiftCard_.Clone() : null;
      serverLogsCookie_ = other.serverLogsCookie_;
      docId_ = other.docId_ != null ? other.docId_.Clone() : null;
      wishlistUrl_ = other.wishlistUrl_;
      backend_ = other.backend_;
      query_ = other.query_;
      myAccountUrl_ = other.myAccountUrl_;
      helpCenter_ = other.helpCenter_ != null ? other.helpCenter_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolvedLink Clone() {
      return new ResolvedLink(this);
    }

    /// <summary>Field number for the "detailsUrl" field.</summary>
    public const int DetailsUrlFieldNumber = 1;
    private readonly static string DetailsUrlDefaultValue = "";

    private string detailsUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DetailsUrl {
      get { return detailsUrl_ ?? DetailsUrlDefaultValue; }
      set {
        detailsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "detailsUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDetailsUrl {
      get { return detailsUrl_ != null; }
    }
    /// <summary>Clears the value of the "detailsUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDetailsUrl() {
      detailsUrl_ = null;
    }

    /// <summary>Field number for the "browseUrl" field.</summary>
    public const int BrowseUrlFieldNumber = 2;
    private readonly static string BrowseUrlDefaultValue = "";

    private string browseUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BrowseUrl {
      get { return browseUrl_ ?? BrowseUrlDefaultValue; }
      set {
        browseUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "browseUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBrowseUrl {
      get { return browseUrl_ != null; }
    }
    /// <summary>Clears the value of the "browseUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBrowseUrl() {
      browseUrl_ = null;
    }

    /// <summary>Field number for the "searchUrl" field.</summary>
    public const int SearchUrlFieldNumber = 3;
    private readonly static string SearchUrlDefaultValue = "";

    private string searchUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SearchUrl {
      get { return searchUrl_ ?? SearchUrlDefaultValue; }
      set {
        searchUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "searchUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSearchUrl {
      get { return searchUrl_ != null; }
    }
    /// <summary>Clears the value of the "searchUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSearchUrl() {
      searchUrl_ = null;
    }

    /// <summary>Field number for the "directPurchase" field.</summary>
    public const int DirectPurchaseFieldNumber = 4;
    private global::GooglePlayStore.DirectPurchase directPurchase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DirectPurchase DirectPurchase {
      get { return directPurchase_; }
      set {
        directPurchase_ = value;
      }
    }

    /// <summary>Field number for the "homeUrl" field.</summary>
    public const int HomeUrlFieldNumber = 5;
    private readonly static string HomeUrlDefaultValue = "";

    private string homeUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HomeUrl {
      get { return homeUrl_ ?? HomeUrlDefaultValue; }
      set {
        homeUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "homeUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHomeUrl {
      get { return homeUrl_ != null; }
    }
    /// <summary>Clears the value of the "homeUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHomeUrl() {
      homeUrl_ = null;
    }

    /// <summary>Field number for the "redeemGiftCard" field.</summary>
    public const int RedeemGiftCardFieldNumber = 6;
    private global::GooglePlayStore.RedeemGiftCard redeemGiftCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.RedeemGiftCard RedeemGiftCard {
      get { return redeemGiftCard_; }
      set {
        redeemGiftCard_ = value;
      }
    }

    /// <summary>Field number for the "serverLogsCookie" field.</summary>
    public const int ServerLogsCookieFieldNumber = 7;
    private readonly static pb::ByteString ServerLogsCookieDefaultValue = pb::ByteString.Empty;

    private pb::ByteString serverLogsCookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ServerLogsCookie {
      get { return serverLogsCookie_ ?? ServerLogsCookieDefaultValue; }
      set {
        serverLogsCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serverLogsCookie" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServerLogsCookie {
      get { return serverLogsCookie_ != null; }
    }
    /// <summary>Clears the value of the "serverLogsCookie" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServerLogsCookie() {
      serverLogsCookie_ = null;
    }

    /// <summary>Field number for the "DocId" field.</summary>
    public const int DocIdFieldNumber = 8;
    private global::GooglePlayStore.DocId docId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DocId DocId {
      get { return docId_; }
      set {
        docId_ = value;
      }
    }

    /// <summary>Field number for the "wishlistUrl" field.</summary>
    public const int WishlistUrlFieldNumber = 9;
    private readonly static string WishlistUrlDefaultValue = "";

    private string wishlistUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WishlistUrl {
      get { return wishlistUrl_ ?? WishlistUrlDefaultValue; }
      set {
        wishlistUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "wishlistUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasWishlistUrl {
      get { return wishlistUrl_ != null; }
    }
    /// <summary>Clears the value of the "wishlistUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearWishlistUrl() {
      wishlistUrl_ = null;
    }

    /// <summary>Field number for the "backend" field.</summary>
    public const int BackendFieldNumber = 10;
    private readonly static int BackendDefaultValue = 0;

    private int backend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Backend {
      get { if ((_hasBits0 & 1) != 0) { return backend_; } else { return BackendDefaultValue; } }
      set {
        _hasBits0 |= 1;
        backend_ = value;
      }
    }
    /// <summary>Gets whether the "backend" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBackend {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "backend" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBackend() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 11;
    private readonly static string QueryDefaultValue = "";

    private string query_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_ ?? QueryDefaultValue; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "query" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasQuery {
      get { return query_ != null; }
    }
    /// <summary>Clears the value of the "query" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQuery() {
      query_ = null;
    }

    /// <summary>Field number for the "myAccountUrl" field.</summary>
    public const int MyAccountUrlFieldNumber = 12;
    private readonly static string MyAccountUrlDefaultValue = "";

    private string myAccountUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MyAccountUrl {
      get { return myAccountUrl_ ?? MyAccountUrlDefaultValue; }
      set {
        myAccountUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "myAccountUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMyAccountUrl {
      get { return myAccountUrl_ != null; }
    }
    /// <summary>Clears the value of the "myAccountUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMyAccountUrl() {
      myAccountUrl_ = null;
    }

    /// <summary>Field number for the "helpCenter" field.</summary>
    public const int HelpCenterFieldNumber = 13;
    private global::GooglePlayStore.HelpCenter helpCenter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.HelpCenter HelpCenter {
      get { return helpCenter_; }
      set {
        helpCenter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResolvedLink);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResolvedLink other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DetailsUrl != other.DetailsUrl) return false;
      if (BrowseUrl != other.BrowseUrl) return false;
      if (SearchUrl != other.SearchUrl) return false;
      if (!object.Equals(DirectPurchase, other.DirectPurchase)) return false;
      if (HomeUrl != other.HomeUrl) return false;
      if (!object.Equals(RedeemGiftCard, other.RedeemGiftCard)) return false;
      if (ServerLogsCookie != other.ServerLogsCookie) return false;
      if (!object.Equals(DocId, other.DocId)) return false;
      if (WishlistUrl != other.WishlistUrl) return false;
      if (Backend != other.Backend) return false;
      if (Query != other.Query) return false;
      if (MyAccountUrl != other.MyAccountUrl) return false;
      if (!object.Equals(HelpCenter, other.HelpCenter)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDetailsUrl) hash ^= DetailsUrl.GetHashCode();
      if (HasBrowseUrl) hash ^= BrowseUrl.GetHashCode();
      if (HasSearchUrl) hash ^= SearchUrl.GetHashCode();
      if (directPurchase_ != null) hash ^= DirectPurchase.GetHashCode();
      if (HasHomeUrl) hash ^= HomeUrl.GetHashCode();
      if (redeemGiftCard_ != null) hash ^= RedeemGiftCard.GetHashCode();
      if (HasServerLogsCookie) hash ^= ServerLogsCookie.GetHashCode();
      if (docId_ != null) hash ^= DocId.GetHashCode();
      if (HasWishlistUrl) hash ^= WishlistUrl.GetHashCode();
      if (HasBackend) hash ^= Backend.GetHashCode();
      if (HasQuery) hash ^= Query.GetHashCode();
      if (HasMyAccountUrl) hash ^= MyAccountUrl.GetHashCode();
      if (helpCenter_ != null) hash ^= HelpCenter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasDetailsUrl) {
        output.WriteRawTag(10);
        output.WriteString(DetailsUrl);
      }
      if (HasBrowseUrl) {
        output.WriteRawTag(18);
        output.WriteString(BrowseUrl);
      }
      if (HasSearchUrl) {
        output.WriteRawTag(26);
        output.WriteString(SearchUrl);
      }
      if (directPurchase_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DirectPurchase);
      }
      if (HasHomeUrl) {
        output.WriteRawTag(42);
        output.WriteString(HomeUrl);
      }
      if (redeemGiftCard_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RedeemGiftCard);
      }
      if (HasServerLogsCookie) {
        output.WriteRawTag(58);
        output.WriteBytes(ServerLogsCookie);
      }
      if (docId_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(DocId);
      }
      if (HasWishlistUrl) {
        output.WriteRawTag(74);
        output.WriteString(WishlistUrl);
      }
      if (HasBackend) {
        output.WriteRawTag(80);
        output.WriteInt32(Backend);
      }
      if (HasQuery) {
        output.WriteRawTag(90);
        output.WriteString(Query);
      }
      if (HasMyAccountUrl) {
        output.WriteRawTag(98);
        output.WriteString(MyAccountUrl);
      }
      if (helpCenter_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(HelpCenter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDetailsUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DetailsUrl);
      }
      if (HasBrowseUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BrowseUrl);
      }
      if (HasSearchUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SearchUrl);
      }
      if (directPurchase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DirectPurchase);
      }
      if (HasHomeUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeUrl);
      }
      if (redeemGiftCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RedeemGiftCard);
      }
      if (HasServerLogsCookie) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ServerLogsCookie);
      }
      if (docId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DocId);
      }
      if (HasWishlistUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WishlistUrl);
      }
      if (HasBackend) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Backend);
      }
      if (HasQuery) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (HasMyAccountUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MyAccountUrl);
      }
      if (helpCenter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HelpCenter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResolvedLink other) {
      if (other == null) {
        return;
      }
      if (other.HasDetailsUrl) {
        DetailsUrl = other.DetailsUrl;
      }
      if (other.HasBrowseUrl) {
        BrowseUrl = other.BrowseUrl;
      }
      if (other.HasSearchUrl) {
        SearchUrl = other.SearchUrl;
      }
      if (other.directPurchase_ != null) {
        if (directPurchase_ == null) {
          DirectPurchase = new global::GooglePlayStore.DirectPurchase();
        }
        DirectPurchase.MergeFrom(other.DirectPurchase);
      }
      if (other.HasHomeUrl) {
        HomeUrl = other.HomeUrl;
      }
      if (other.redeemGiftCard_ != null) {
        if (redeemGiftCard_ == null) {
          RedeemGiftCard = new global::GooglePlayStore.RedeemGiftCard();
        }
        RedeemGiftCard.MergeFrom(other.RedeemGiftCard);
      }
      if (other.HasServerLogsCookie) {
        ServerLogsCookie = other.ServerLogsCookie;
      }
      if (other.docId_ != null) {
        if (docId_ == null) {
          DocId = new global::GooglePlayStore.DocId();
        }
        DocId.MergeFrom(other.DocId);
      }
      if (other.HasWishlistUrl) {
        WishlistUrl = other.WishlistUrl;
      }
      if (other.HasBackend) {
        Backend = other.Backend;
      }
      if (other.HasQuery) {
        Query = other.Query;
      }
      if (other.HasMyAccountUrl) {
        MyAccountUrl = other.MyAccountUrl;
      }
      if (other.helpCenter_ != null) {
        if (helpCenter_ == null) {
          HelpCenter = new global::GooglePlayStore.HelpCenter();
        }
        HelpCenter.MergeFrom(other.HelpCenter);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DetailsUrl = input.ReadString();
            break;
          }
          case 18: {
            BrowseUrl = input.ReadString();
            break;
          }
          case 26: {
            SearchUrl = input.ReadString();
            break;
          }
          case 34: {
            if (directPurchase_ == null) {
              DirectPurchase = new global::GooglePlayStore.DirectPurchase();
            }
            input.ReadMessage(DirectPurchase);
            break;
          }
          case 42: {
            HomeUrl = input.ReadString();
            break;
          }
          case 50: {
            if (redeemGiftCard_ == null) {
              RedeemGiftCard = new global::GooglePlayStore.RedeemGiftCard();
            }
            input.ReadMessage(RedeemGiftCard);
            break;
          }
          case 58: {
            ServerLogsCookie = input.ReadBytes();
            break;
          }
          case 66: {
            if (docId_ == null) {
              DocId = new global::GooglePlayStore.DocId();
            }
            input.ReadMessage(DocId);
            break;
          }
          case 74: {
            WishlistUrl = input.ReadString();
            break;
          }
          case 80: {
            Backend = input.ReadInt32();
            break;
          }
          case 90: {
            Query = input.ReadString();
            break;
          }
          case 98: {
            MyAccountUrl = input.ReadString();
            break;
          }
          case 106: {
            if (helpCenter_ == null) {
              HelpCenter = new global::GooglePlayStore.HelpCenter();
            }
            input.ReadMessage(HelpCenter);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HelpCenter : pb::IMessage<HelpCenter> {
    private static readonly pb::MessageParser<HelpCenter> _parser = new pb::MessageParser<HelpCenter>(() => new HelpCenter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HelpCenter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelpCenter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelpCenter(HelpCenter other) : this() {
      contextId_ = other.contextId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelpCenter Clone() {
      return new HelpCenter(this);
    }

    /// <summary>Field number for the "contextId" field.</summary>
    public const int ContextIdFieldNumber = 1;
    private readonly static string ContextIdDefaultValue = "";

    private string contextId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContextId {
      get { return contextId_ ?? ContextIdDefaultValue; }
      set {
        contextId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "contextId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContextId {
      get { return contextId_ != null; }
    }
    /// <summary>Clears the value of the "contextId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContextId() {
      contextId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HelpCenter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HelpCenter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContextId != other.ContextId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasContextId) hash ^= ContextId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasContextId) {
        output.WriteRawTag(10);
        output.WriteString(ContextId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasContextId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContextId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HelpCenter other) {
      if (other == null) {
        return;
      }
      if (other.HasContextId) {
        ContextId = other.ContextId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContextId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QuickLink : pb::IMessage<QuickLink> {
    private static readonly pb::MessageParser<QuickLink> _parser = new pb::MessageParser<QuickLink>(() => new QuickLink());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuickLink> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuickLink() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuickLink(QuickLink other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      image_ = other.image_ != null ? other.image_.Clone() : null;
      link_ = other.link_ != null ? other.link_.Clone() : null;
      displayRequired_ = other.displayRequired_;
      serverLogsCookie_ = other.serverLogsCookie_;
      backendId_ = other.backendId_;
      prismStyle_ = other.prismStyle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuickLink Clone() {
      return new QuickLink(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 2;
    private global::GooglePlayStore.Image image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Image Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    /// <summary>Field number for the "link" field.</summary>
    public const int LinkFieldNumber = 3;
    private global::GooglePlayStore.ResolvedLink link_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ResolvedLink Link {
      get { return link_; }
      set {
        link_ = value;
      }
    }

    /// <summary>Field number for the "displayRequired" field.</summary>
    public const int DisplayRequiredFieldNumber = 4;
    private readonly static bool DisplayRequiredDefaultValue = false;

    private bool displayRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DisplayRequired {
      get { if ((_hasBits0 & 1) != 0) { return displayRequired_; } else { return DisplayRequiredDefaultValue; } }
      set {
        _hasBits0 |= 1;
        displayRequired_ = value;
      }
    }
    /// <summary>Gets whether the "displayRequired" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDisplayRequired {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "displayRequired" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDisplayRequired() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "serverLogsCookie" field.</summary>
    public const int ServerLogsCookieFieldNumber = 5;
    private readonly static pb::ByteString ServerLogsCookieDefaultValue = pb::ByteString.Empty;

    private pb::ByteString serverLogsCookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ServerLogsCookie {
      get { return serverLogsCookie_ ?? ServerLogsCookieDefaultValue; }
      set {
        serverLogsCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serverLogsCookie" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServerLogsCookie {
      get { return serverLogsCookie_ != null; }
    }
    /// <summary>Clears the value of the "serverLogsCookie" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServerLogsCookie() {
      serverLogsCookie_ = null;
    }

    /// <summary>Field number for the "backendId" field.</summary>
    public const int BackendIdFieldNumber = 6;
    private readonly static int BackendIdDefaultValue = 0;

    private int backendId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BackendId {
      get { if ((_hasBits0 & 2) != 0) { return backendId_; } else { return BackendIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        backendId_ = value;
      }
    }
    /// <summary>Gets whether the "backendId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBackendId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "backendId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBackendId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "prismStyle" field.</summary>
    public const int PrismStyleFieldNumber = 7;
    private readonly static bool PrismStyleDefaultValue = false;

    private bool prismStyle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PrismStyle {
      get { if ((_hasBits0 & 4) != 0) { return prismStyle_; } else { return PrismStyleDefaultValue; } }
      set {
        _hasBits0 |= 4;
        prismStyle_ = value;
      }
    }
    /// <summary>Gets whether the "prismStyle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPrismStyle {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "prismStyle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPrismStyle() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuickLink);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuickLink other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Image, other.Image)) return false;
      if (!object.Equals(Link, other.Link)) return false;
      if (DisplayRequired != other.DisplayRequired) return false;
      if (ServerLogsCookie != other.ServerLogsCookie) return false;
      if (BackendId != other.BackendId) return false;
      if (PrismStyle != other.PrismStyle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (image_ != null) hash ^= Image.GetHashCode();
      if (link_ != null) hash ^= Link.GetHashCode();
      if (HasDisplayRequired) hash ^= DisplayRequired.GetHashCode();
      if (HasServerLogsCookie) hash ^= ServerLogsCookie.GetHashCode();
      if (HasBackendId) hash ^= BackendId.GetHashCode();
      if (HasPrismStyle) hash ^= PrismStyle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (image_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Image);
      }
      if (link_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Link);
      }
      if (HasDisplayRequired) {
        output.WriteRawTag(32);
        output.WriteBool(DisplayRequired);
      }
      if (HasServerLogsCookie) {
        output.WriteRawTag(42);
        output.WriteBytes(ServerLogsCookie);
      }
      if (HasBackendId) {
        output.WriteRawTag(48);
        output.WriteInt32(BackendId);
      }
      if (HasPrismStyle) {
        output.WriteRawTag(56);
        output.WriteBool(PrismStyle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (link_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Link);
      }
      if (HasDisplayRequired) {
        size += 1 + 1;
      }
      if (HasServerLogsCookie) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ServerLogsCookie);
      }
      if (HasBackendId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BackendId);
      }
      if (HasPrismStyle) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuickLink other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::GooglePlayStore.Image();
        }
        Image.MergeFrom(other.Image);
      }
      if (other.link_ != null) {
        if (link_ == null) {
          Link = new global::GooglePlayStore.ResolvedLink();
        }
        Link.MergeFrom(other.Link);
      }
      if (other.HasDisplayRequired) {
        DisplayRequired = other.DisplayRequired;
      }
      if (other.HasServerLogsCookie) {
        ServerLogsCookie = other.ServerLogsCookie;
      }
      if (other.HasBackendId) {
        BackendId = other.BackendId;
      }
      if (other.HasPrismStyle) {
        PrismStyle = other.PrismStyle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (image_ == null) {
              Image = new global::GooglePlayStore.Image();
            }
            input.ReadMessage(Image);
            break;
          }
          case 26: {
            if (link_ == null) {
              Link = new global::GooglePlayStore.ResolvedLink();
            }
            input.ReadMessage(Link);
            break;
          }
          case 32: {
            DisplayRequired = input.ReadBool();
            break;
          }
          case 42: {
            ServerLogsCookie = input.ReadBytes();
            break;
          }
          case 48: {
            BackendId = input.ReadInt32();
            break;
          }
          case 56: {
            PrismStyle = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BrowseTab : pb::IMessage<BrowseTab> {
    private static readonly pb::MessageParser<BrowseTab> _parser = new pb::MessageParser<BrowseTab>(() => new BrowseTab());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BrowseTab> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrowseTab() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrowseTab(BrowseTab other) : this() {
      _hasBits0 = other._hasBits0;
      title_ = other.title_;
      serverLogsCookie_ = other.serverLogsCookie_;
      listUrl_ = other.listUrl_;
      browseLink_ = other.browseLink_.Clone();
      quickLink_ = other.quickLink_.Clone();
      quickLinkTitle_ = other.quickLinkTitle_;
      categoriesTitle_ = other.categoriesTitle_;
      backendId_ = other.backendId_;
      highlightsBannerUrl_ = other.highlightsBannerUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrowseTab Clone() {
      return new BrowseTab(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "serverLogsCookie" field.</summary>
    public const int ServerLogsCookieFieldNumber = 2;
    private readonly static pb::ByteString ServerLogsCookieDefaultValue = pb::ByteString.Empty;

    private pb::ByteString serverLogsCookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ServerLogsCookie {
      get { return serverLogsCookie_ ?? ServerLogsCookieDefaultValue; }
      set {
        serverLogsCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serverLogsCookie" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServerLogsCookie {
      get { return serverLogsCookie_ != null; }
    }
    /// <summary>Clears the value of the "serverLogsCookie" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServerLogsCookie() {
      serverLogsCookie_ = null;
    }

    /// <summary>Field number for the "listUrl" field.</summary>
    public const int ListUrlFieldNumber = 3;
    private readonly static string ListUrlDefaultValue = "";

    private string listUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ListUrl {
      get { return listUrl_ ?? ListUrlDefaultValue; }
      set {
        listUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "listUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasListUrl {
      get { return listUrl_ != null; }
    }
    /// <summary>Clears the value of the "listUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearListUrl() {
      listUrl_ = null;
    }

    /// <summary>Field number for the "browseLink" field.</summary>
    public const int BrowseLinkFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.BrowseLink> _repeated_browseLink_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.BrowseLink.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.BrowseLink> browseLink_ = new pbc::RepeatedField<global::GooglePlayStore.BrowseLink>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.BrowseLink> BrowseLink {
      get { return browseLink_; }
    }

    /// <summary>Field number for the "quickLink" field.</summary>
    public const int QuickLinkFieldNumber = 5;
    private static readonly pb::FieldCodec<global::GooglePlayStore.QuickLink> _repeated_quickLink_codec
        = pb::FieldCodec.ForMessage(42, global::GooglePlayStore.QuickLink.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.QuickLink> quickLink_ = new pbc::RepeatedField<global::GooglePlayStore.QuickLink>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.QuickLink> QuickLink {
      get { return quickLink_; }
    }

    /// <summary>Field number for the "quickLinkTitle" field.</summary>
    public const int QuickLinkTitleFieldNumber = 6;
    private readonly static string QuickLinkTitleDefaultValue = "";

    private string quickLinkTitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QuickLinkTitle {
      get { return quickLinkTitle_ ?? QuickLinkTitleDefaultValue; }
      set {
        quickLinkTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "quickLinkTitle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasQuickLinkTitle {
      get { return quickLinkTitle_ != null; }
    }
    /// <summary>Clears the value of the "quickLinkTitle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQuickLinkTitle() {
      quickLinkTitle_ = null;
    }

    /// <summary>Field number for the "categoriesTitle" field.</summary>
    public const int CategoriesTitleFieldNumber = 7;
    private readonly static string CategoriesTitleDefaultValue = "";

    private string categoriesTitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CategoriesTitle {
      get { return categoriesTitle_ ?? CategoriesTitleDefaultValue; }
      set {
        categoriesTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "categoriesTitle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCategoriesTitle {
      get { return categoriesTitle_ != null; }
    }
    /// <summary>Clears the value of the "categoriesTitle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCategoriesTitle() {
      categoriesTitle_ = null;
    }

    /// <summary>Field number for the "backendId" field.</summary>
    public const int BackendIdFieldNumber = 8;
    private readonly static int BackendIdDefaultValue = 0;

    private int backendId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BackendId {
      get { if ((_hasBits0 & 1) != 0) { return backendId_; } else { return BackendIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        backendId_ = value;
      }
    }
    /// <summary>Gets whether the "backendId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBackendId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "backendId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBackendId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "highlightsBannerUrl" field.</summary>
    public const int HighlightsBannerUrlFieldNumber = 9;
    private readonly static string HighlightsBannerUrlDefaultValue = "";

    private string highlightsBannerUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HighlightsBannerUrl {
      get { return highlightsBannerUrl_ ?? HighlightsBannerUrlDefaultValue; }
      set {
        highlightsBannerUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "highlightsBannerUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHighlightsBannerUrl {
      get { return highlightsBannerUrl_ != null; }
    }
    /// <summary>Clears the value of the "highlightsBannerUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHighlightsBannerUrl() {
      highlightsBannerUrl_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BrowseTab);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BrowseTab other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (ServerLogsCookie != other.ServerLogsCookie) return false;
      if (ListUrl != other.ListUrl) return false;
      if(!browseLink_.Equals(other.browseLink_)) return false;
      if(!quickLink_.Equals(other.quickLink_)) return false;
      if (QuickLinkTitle != other.QuickLinkTitle) return false;
      if (CategoriesTitle != other.CategoriesTitle) return false;
      if (BackendId != other.BackendId) return false;
      if (HighlightsBannerUrl != other.HighlightsBannerUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasServerLogsCookie) hash ^= ServerLogsCookie.GetHashCode();
      if (HasListUrl) hash ^= ListUrl.GetHashCode();
      hash ^= browseLink_.GetHashCode();
      hash ^= quickLink_.GetHashCode();
      if (HasQuickLinkTitle) hash ^= QuickLinkTitle.GetHashCode();
      if (HasCategoriesTitle) hash ^= CategoriesTitle.GetHashCode();
      if (HasBackendId) hash ^= BackendId.GetHashCode();
      if (HasHighlightsBannerUrl) hash ^= HighlightsBannerUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTitle) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (HasServerLogsCookie) {
        output.WriteRawTag(18);
        output.WriteBytes(ServerLogsCookie);
      }
      if (HasListUrl) {
        output.WriteRawTag(26);
        output.WriteString(ListUrl);
      }
      browseLink_.WriteTo(output, _repeated_browseLink_codec);
      quickLink_.WriteTo(output, _repeated_quickLink_codec);
      if (HasQuickLinkTitle) {
        output.WriteRawTag(50);
        output.WriteString(QuickLinkTitle);
      }
      if (HasCategoriesTitle) {
        output.WriteRawTag(58);
        output.WriteString(CategoriesTitle);
      }
      if (HasBackendId) {
        output.WriteRawTag(64);
        output.WriteInt32(BackendId);
      }
      if (HasHighlightsBannerUrl) {
        output.WriteRawTag(74);
        output.WriteString(HighlightsBannerUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasServerLogsCookie) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ServerLogsCookie);
      }
      if (HasListUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ListUrl);
      }
      size += browseLink_.CalculateSize(_repeated_browseLink_codec);
      size += quickLink_.CalculateSize(_repeated_quickLink_codec);
      if (HasQuickLinkTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QuickLinkTitle);
      }
      if (HasCategoriesTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CategoriesTitle);
      }
      if (HasBackendId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BackendId);
      }
      if (HasHighlightsBannerUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HighlightsBannerUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BrowseTab other) {
      if (other == null) {
        return;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasServerLogsCookie) {
        ServerLogsCookie = other.ServerLogsCookie;
      }
      if (other.HasListUrl) {
        ListUrl = other.ListUrl;
      }
      browseLink_.Add(other.browseLink_);
      quickLink_.Add(other.quickLink_);
      if (other.HasQuickLinkTitle) {
        QuickLinkTitle = other.QuickLinkTitle;
      }
      if (other.HasCategoriesTitle) {
        CategoriesTitle = other.CategoriesTitle;
      }
      if (other.HasBackendId) {
        BackendId = other.BackendId;
      }
      if (other.HasHighlightsBannerUrl) {
        HighlightsBannerUrl = other.HighlightsBannerUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            ServerLogsCookie = input.ReadBytes();
            break;
          }
          case 26: {
            ListUrl = input.ReadString();
            break;
          }
          case 34: {
            browseLink_.AddEntriesFrom(input, _repeated_browseLink_codec);
            break;
          }
          case 42: {
            quickLink_.AddEntriesFrom(input, _repeated_quickLink_codec);
            break;
          }
          case 50: {
            QuickLinkTitle = input.ReadString();
            break;
          }
          case 58: {
            CategoriesTitle = input.ReadString();
            break;
          }
          case 64: {
            BackendId = input.ReadInt32();
            break;
          }
          case 74: {
            HighlightsBannerUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BuyResponse : pb::IMessage<BuyResponse> {
    private static readonly pb::MessageParser<BuyResponse> _parser = new pb::MessageParser<BuyResponse>(() => new BuyResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyResponse(BuyResponse other) : this() {
      _hasBits0 = other._hasBits0;
      purchaseResponse_ = other.purchaseResponse_ != null ? other.purchaseResponse_.Clone() : null;
      checkoutInfo_ = other.HasCheckoutInfo ? other.checkoutInfo_.Clone() : null;
      continueViaUrl_ = other.continueViaUrl_;
      purchaseStatusUrl_ = other.purchaseStatusUrl_;
      checkoutServiceId_ = other.checkoutServiceId_;
      checkoutTokenRequired_ = other.checkoutTokenRequired_;
      baseCheckoutUrl_ = other.baseCheckoutUrl_;
      tosCheckboxHtml_ = other.tosCheckboxHtml_.Clone();
      iabPermissionError_ = other.iabPermissionError_;
      purchaseStatusResponse_ = other.purchaseStatusResponse_ != null ? other.purchaseStatusResponse_.Clone() : null;
      purchaseCookie_ = other.purchaseCookie_;
      challenge_ = other.challenge_ != null ? other.challenge_.Clone() : null;
      addInstrumentPromptHtml_ = other.addInstrumentPromptHtml_;
      confirmButtonText_ = other.confirmButtonText_;
      permissionErrorTitleText_ = other.permissionErrorTitleText_;
      permissionErrorMessageText_ = other.permissionErrorMessageText_;
      serverLogsCookie_ = other.serverLogsCookie_;
      encodedDeliveryToken_ = other.encodedDeliveryToken_;
      unknownToken_ = other.unknownToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyResponse Clone() {
      return new BuyResponse(this);
    }

    /// <summary>Field number for the "purchaseResponse" field.</summary>
    public const int PurchaseResponseFieldNumber = 1;
    private global::GooglePlayStore.PurchaseNotificationResponse purchaseResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.PurchaseNotificationResponse PurchaseResponse {
      get { return purchaseResponse_; }
      set {
        purchaseResponse_ = value;
      }
    }

    /// <summary>Field number for the "checkoutinfo" field.</summary>
    public const int CheckoutInfoFieldNumber = 2;
    private global::GooglePlayStore.BuyResponse.Types.CheckoutInfo checkoutInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.BuyResponse.Types.CheckoutInfo CheckoutInfo {
      get { return checkoutInfo_; }
      set {
        checkoutInfo_ = value;
      }
    }
    /// <summary>Gets whether the checkoutinfo field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCheckoutInfo {
      get { return checkoutInfo_ != null; }
    }
    /// <summary>Clears the value of the checkoutinfo field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCheckoutInfo() {
      checkoutInfo_ = null;
    }

    /// <summary>Field number for the "continueViaUrl" field.</summary>
    public const int ContinueViaUrlFieldNumber = 8;
    private readonly static string ContinueViaUrlDefaultValue = "";

    private string continueViaUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContinueViaUrl {
      get { return continueViaUrl_ ?? ContinueViaUrlDefaultValue; }
      set {
        continueViaUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "continueViaUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContinueViaUrl {
      get { return continueViaUrl_ != null; }
    }
    /// <summary>Clears the value of the "continueViaUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContinueViaUrl() {
      continueViaUrl_ = null;
    }

    /// <summary>Field number for the "purchaseStatusUrl" field.</summary>
    public const int PurchaseStatusUrlFieldNumber = 9;
    private readonly static string PurchaseStatusUrlDefaultValue = "";

    private string purchaseStatusUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PurchaseStatusUrl {
      get { return purchaseStatusUrl_ ?? PurchaseStatusUrlDefaultValue; }
      set {
        purchaseStatusUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "purchaseStatusUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPurchaseStatusUrl {
      get { return purchaseStatusUrl_ != null; }
    }
    /// <summary>Clears the value of the "purchaseStatusUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPurchaseStatusUrl() {
      purchaseStatusUrl_ = null;
    }

    /// <summary>Field number for the "checkoutServiceId" field.</summary>
    public const int CheckoutServiceIdFieldNumber = 12;
    private readonly static string CheckoutServiceIdDefaultValue = "";

    private string checkoutServiceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CheckoutServiceId {
      get { return checkoutServiceId_ ?? CheckoutServiceIdDefaultValue; }
      set {
        checkoutServiceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "checkoutServiceId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCheckoutServiceId {
      get { return checkoutServiceId_ != null; }
    }
    /// <summary>Clears the value of the "checkoutServiceId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCheckoutServiceId() {
      checkoutServiceId_ = null;
    }

    /// <summary>Field number for the "checkoutTokenRequired" field.</summary>
    public const int CheckoutTokenRequiredFieldNumber = 13;
    private readonly static bool CheckoutTokenRequiredDefaultValue = false;

    private bool checkoutTokenRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CheckoutTokenRequired {
      get { if ((_hasBits0 & 1) != 0) { return checkoutTokenRequired_; } else { return CheckoutTokenRequiredDefaultValue; } }
      set {
        _hasBits0 |= 1;
        checkoutTokenRequired_ = value;
      }
    }
    /// <summary>Gets whether the "checkoutTokenRequired" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCheckoutTokenRequired {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "checkoutTokenRequired" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCheckoutTokenRequired() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "baseCheckoutUrl" field.</summary>
    public const int BaseCheckoutUrlFieldNumber = 14;
    private readonly static string BaseCheckoutUrlDefaultValue = "";

    private string baseCheckoutUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BaseCheckoutUrl {
      get { return baseCheckoutUrl_ ?? BaseCheckoutUrlDefaultValue; }
      set {
        baseCheckoutUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "baseCheckoutUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBaseCheckoutUrl {
      get { return baseCheckoutUrl_ != null; }
    }
    /// <summary>Clears the value of the "baseCheckoutUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBaseCheckoutUrl() {
      baseCheckoutUrl_ = null;
    }

    /// <summary>Field number for the "tosCheckboxHtml" field.</summary>
    public const int TosCheckboxHtmlFieldNumber = 37;
    private static readonly pb::FieldCodec<string> _repeated_tosCheckboxHtml_codec
        = pb::FieldCodec.ForString(298);
    private readonly pbc::RepeatedField<string> tosCheckboxHtml_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TosCheckboxHtml {
      get { return tosCheckboxHtml_; }
    }

    /// <summary>Field number for the "iabPermissionError" field.</summary>
    public const int IabPermissionErrorFieldNumber = 38;
    private readonly static int IabPermissionErrorDefaultValue = 0;

    private int iabPermissionError_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IabPermissionError {
      get { if ((_hasBits0 & 2) != 0) { return iabPermissionError_; } else { return IabPermissionErrorDefaultValue; } }
      set {
        _hasBits0 |= 2;
        iabPermissionError_ = value;
      }
    }
    /// <summary>Gets whether the "iabPermissionError" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIabPermissionError {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "iabPermissionError" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIabPermissionError() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "purchaseStatusResponse" field.</summary>
    public const int PurchaseStatusResponseFieldNumber = 39;
    private global::GooglePlayStore.PurchaseStatusResponse purchaseStatusResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.PurchaseStatusResponse PurchaseStatusResponse {
      get { return purchaseStatusResponse_; }
      set {
        purchaseStatusResponse_ = value;
      }
    }

    /// <summary>Field number for the "purchaseCookie" field.</summary>
    public const int PurchaseCookieFieldNumber = 46;
    private readonly static string PurchaseCookieDefaultValue = "";

    private string purchaseCookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PurchaseCookie {
      get { return purchaseCookie_ ?? PurchaseCookieDefaultValue; }
      set {
        purchaseCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "purchaseCookie" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPurchaseCookie {
      get { return purchaseCookie_ != null; }
    }
    /// <summary>Clears the value of the "purchaseCookie" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPurchaseCookie() {
      purchaseCookie_ = null;
    }

    /// <summary>Field number for the "challenge" field.</summary>
    public const int ChallengeFieldNumber = 49;
    private global::GooglePlayStore.Challenge challenge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Challenge Challenge {
      get { return challenge_; }
      set {
        challenge_ = value;
      }
    }

    /// <summary>Field number for the "addInstrumentPromptHtml" field.</summary>
    public const int AddInstrumentPromptHtmlFieldNumber = 50;
    private readonly static string AddInstrumentPromptHtmlDefaultValue = "";

    private string addInstrumentPromptHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AddInstrumentPromptHtml {
      get { return addInstrumentPromptHtml_ ?? AddInstrumentPromptHtmlDefaultValue; }
      set {
        addInstrumentPromptHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "addInstrumentPromptHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAddInstrumentPromptHtml {
      get { return addInstrumentPromptHtml_ != null; }
    }
    /// <summary>Clears the value of the "addInstrumentPromptHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAddInstrumentPromptHtml() {
      addInstrumentPromptHtml_ = null;
    }

    /// <summary>Field number for the "confirmButtonText" field.</summary>
    public const int ConfirmButtonTextFieldNumber = 51;
    private readonly static string ConfirmButtonTextDefaultValue = "";

    private string confirmButtonText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConfirmButtonText {
      get { return confirmButtonText_ ?? ConfirmButtonTextDefaultValue; }
      set {
        confirmButtonText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "confirmButtonText" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConfirmButtonText {
      get { return confirmButtonText_ != null; }
    }
    /// <summary>Clears the value of the "confirmButtonText" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConfirmButtonText() {
      confirmButtonText_ = null;
    }

    /// <summary>Field number for the "permissionErrorTitleText" field.</summary>
    public const int PermissionErrorTitleTextFieldNumber = 52;
    private readonly static string PermissionErrorTitleTextDefaultValue = "";

    private string permissionErrorTitleText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PermissionErrorTitleText {
      get { return permissionErrorTitleText_ ?? PermissionErrorTitleTextDefaultValue; }
      set {
        permissionErrorTitleText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "permissionErrorTitleText" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPermissionErrorTitleText {
      get { return permissionErrorTitleText_ != null; }
    }
    /// <summary>Clears the value of the "permissionErrorTitleText" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPermissionErrorTitleText() {
      permissionErrorTitleText_ = null;
    }

    /// <summary>Field number for the "permissionErrorMessageText" field.</summary>
    public const int PermissionErrorMessageTextFieldNumber = 53;
    private readonly static string PermissionErrorMessageTextDefaultValue = "";

    private string permissionErrorMessageText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PermissionErrorMessageText {
      get { return permissionErrorMessageText_ ?? PermissionErrorMessageTextDefaultValue; }
      set {
        permissionErrorMessageText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "permissionErrorMessageText" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPermissionErrorMessageText {
      get { return permissionErrorMessageText_ != null; }
    }
    /// <summary>Clears the value of the "permissionErrorMessageText" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPermissionErrorMessageText() {
      permissionErrorMessageText_ = null;
    }

    /// <summary>Field number for the "serverLogsCookie" field.</summary>
    public const int ServerLogsCookieFieldNumber = 54;
    private readonly static pb::ByteString ServerLogsCookieDefaultValue = pb::ByteString.Empty;

    private pb::ByteString serverLogsCookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ServerLogsCookie {
      get { return serverLogsCookie_ ?? ServerLogsCookieDefaultValue; }
      set {
        serverLogsCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serverLogsCookie" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServerLogsCookie {
      get { return serverLogsCookie_ != null; }
    }
    /// <summary>Clears the value of the "serverLogsCookie" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServerLogsCookie() {
      serverLogsCookie_ = null;
    }

    /// <summary>Field number for the "encodedDeliveryToken" field.</summary>
    public const int EncodedDeliveryTokenFieldNumber = 55;
    private readonly static string EncodedDeliveryTokenDefaultValue = "";

    private string encodedDeliveryToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EncodedDeliveryToken {
      get { return encodedDeliveryToken_ ?? EncodedDeliveryTokenDefaultValue; }
      set {
        encodedDeliveryToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "encodedDeliveryToken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEncodedDeliveryToken {
      get { return encodedDeliveryToken_ != null; }
    }
    /// <summary>Clears the value of the "encodedDeliveryToken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEncodedDeliveryToken() {
      encodedDeliveryToken_ = null;
    }

    /// <summary>Field number for the "unknownToken" field.</summary>
    public const int UnknownTokenFieldNumber = 56;
    private readonly static string UnknownTokenDefaultValue = "";

    private string unknownToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnknownToken {
      get { return unknownToken_ ?? UnknownTokenDefaultValue; }
      set {
        unknownToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "unknownToken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUnknownToken {
      get { return unknownToken_ != null; }
    }
    /// <summary>Clears the value of the "unknownToken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUnknownToken() {
      unknownToken_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PurchaseResponse, other.PurchaseResponse)) return false;
      if (!object.Equals(CheckoutInfo, other.CheckoutInfo)) return false;
      if (ContinueViaUrl != other.ContinueViaUrl) return false;
      if (PurchaseStatusUrl != other.PurchaseStatusUrl) return false;
      if (CheckoutServiceId != other.CheckoutServiceId) return false;
      if (CheckoutTokenRequired != other.CheckoutTokenRequired) return false;
      if (BaseCheckoutUrl != other.BaseCheckoutUrl) return false;
      if(!tosCheckboxHtml_.Equals(other.tosCheckboxHtml_)) return false;
      if (IabPermissionError != other.IabPermissionError) return false;
      if (!object.Equals(PurchaseStatusResponse, other.PurchaseStatusResponse)) return false;
      if (PurchaseCookie != other.PurchaseCookie) return false;
      if (!object.Equals(Challenge, other.Challenge)) return false;
      if (AddInstrumentPromptHtml != other.AddInstrumentPromptHtml) return false;
      if (ConfirmButtonText != other.ConfirmButtonText) return false;
      if (PermissionErrorTitleText != other.PermissionErrorTitleText) return false;
      if (PermissionErrorMessageText != other.PermissionErrorMessageText) return false;
      if (ServerLogsCookie != other.ServerLogsCookie) return false;
      if (EncodedDeliveryToken != other.EncodedDeliveryToken) return false;
      if (UnknownToken != other.UnknownToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (purchaseResponse_ != null) hash ^= PurchaseResponse.GetHashCode();
      if (HasCheckoutInfo) hash ^= CheckoutInfo.GetHashCode();
      if (HasContinueViaUrl) hash ^= ContinueViaUrl.GetHashCode();
      if (HasPurchaseStatusUrl) hash ^= PurchaseStatusUrl.GetHashCode();
      if (HasCheckoutServiceId) hash ^= CheckoutServiceId.GetHashCode();
      if (HasCheckoutTokenRequired) hash ^= CheckoutTokenRequired.GetHashCode();
      if (HasBaseCheckoutUrl) hash ^= BaseCheckoutUrl.GetHashCode();
      hash ^= tosCheckboxHtml_.GetHashCode();
      if (HasIabPermissionError) hash ^= IabPermissionError.GetHashCode();
      if (purchaseStatusResponse_ != null) hash ^= PurchaseStatusResponse.GetHashCode();
      if (HasPurchaseCookie) hash ^= PurchaseCookie.GetHashCode();
      if (challenge_ != null) hash ^= Challenge.GetHashCode();
      if (HasAddInstrumentPromptHtml) hash ^= AddInstrumentPromptHtml.GetHashCode();
      if (HasConfirmButtonText) hash ^= ConfirmButtonText.GetHashCode();
      if (HasPermissionErrorTitleText) hash ^= PermissionErrorTitleText.GetHashCode();
      if (HasPermissionErrorMessageText) hash ^= PermissionErrorMessageText.GetHashCode();
      if (HasServerLogsCookie) hash ^= ServerLogsCookie.GetHashCode();
      if (HasEncodedDeliveryToken) hash ^= EncodedDeliveryToken.GetHashCode();
      if (HasUnknownToken) hash ^= UnknownToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (purchaseResponse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PurchaseResponse);
      }
      if (HasCheckoutInfo) {
        output.WriteRawTag(19);
        output.WriteGroup(CheckoutInfo);
        output.WriteRawTag(20);
      }
      if (HasContinueViaUrl) {
        output.WriteRawTag(66);
        output.WriteString(ContinueViaUrl);
      }
      if (HasPurchaseStatusUrl) {
        output.WriteRawTag(74);
        output.WriteString(PurchaseStatusUrl);
      }
      if (HasCheckoutServiceId) {
        output.WriteRawTag(98);
        output.WriteString(CheckoutServiceId);
      }
      if (HasCheckoutTokenRequired) {
        output.WriteRawTag(104);
        output.WriteBool(CheckoutTokenRequired);
      }
      if (HasBaseCheckoutUrl) {
        output.WriteRawTag(114);
        output.WriteString(BaseCheckoutUrl);
      }
      tosCheckboxHtml_.WriteTo(output, _repeated_tosCheckboxHtml_codec);
      if (HasIabPermissionError) {
        output.WriteRawTag(176, 2);
        output.WriteInt32(IabPermissionError);
      }
      if (purchaseStatusResponse_ != null) {
        output.WriteRawTag(186, 2);
        output.WriteMessage(PurchaseStatusResponse);
      }
      if (HasPurchaseCookie) {
        output.WriteRawTag(242, 2);
        output.WriteString(PurchaseCookie);
      }
      if (challenge_ != null) {
        output.WriteRawTag(138, 3);
        output.WriteMessage(Challenge);
      }
      if (HasAddInstrumentPromptHtml) {
        output.WriteRawTag(146, 3);
        output.WriteString(AddInstrumentPromptHtml);
      }
      if (HasConfirmButtonText) {
        output.WriteRawTag(154, 3);
        output.WriteString(ConfirmButtonText);
      }
      if (HasPermissionErrorTitleText) {
        output.WriteRawTag(162, 3);
        output.WriteString(PermissionErrorTitleText);
      }
      if (HasPermissionErrorMessageText) {
        output.WriteRawTag(170, 3);
        output.WriteString(PermissionErrorMessageText);
      }
      if (HasServerLogsCookie) {
        output.WriteRawTag(178, 3);
        output.WriteBytes(ServerLogsCookie);
      }
      if (HasEncodedDeliveryToken) {
        output.WriteRawTag(186, 3);
        output.WriteString(EncodedDeliveryToken);
      }
      if (HasUnknownToken) {
        output.WriteRawTag(194, 3);
        output.WriteString(UnknownToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (purchaseResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PurchaseResponse);
      }
      if (HasCheckoutInfo) {
        size += 2 + pb::CodedOutputStream.ComputeGroupSize(CheckoutInfo);
      }
      if (HasContinueViaUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContinueViaUrl);
      }
      if (HasPurchaseStatusUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PurchaseStatusUrl);
      }
      if (HasCheckoutServiceId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CheckoutServiceId);
      }
      if (HasCheckoutTokenRequired) {
        size += 1 + 1;
      }
      if (HasBaseCheckoutUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseCheckoutUrl);
      }
      size += tosCheckboxHtml_.CalculateSize(_repeated_tosCheckboxHtml_codec);
      if (HasIabPermissionError) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(IabPermissionError);
      }
      if (purchaseStatusResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PurchaseStatusResponse);
      }
      if (HasPurchaseCookie) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PurchaseCookie);
      }
      if (challenge_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Challenge);
      }
      if (HasAddInstrumentPromptHtml) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AddInstrumentPromptHtml);
      }
      if (HasConfirmButtonText) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConfirmButtonText);
      }
      if (HasPermissionErrorTitleText) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PermissionErrorTitleText);
      }
      if (HasPermissionErrorMessageText) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PermissionErrorMessageText);
      }
      if (HasServerLogsCookie) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(ServerLogsCookie);
      }
      if (HasEncodedDeliveryToken) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EncodedDeliveryToken);
      }
      if (HasUnknownToken) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UnknownToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuyResponse other) {
      if (other == null) {
        return;
      }
      if (other.purchaseResponse_ != null) {
        if (purchaseResponse_ == null) {
          PurchaseResponse = new global::GooglePlayStore.PurchaseNotificationResponse();
        }
        PurchaseResponse.MergeFrom(other.PurchaseResponse);
      }
      if (other.HasCheckoutInfo) {
        if (!HasCheckoutInfo) {
          CheckoutInfo = new global::GooglePlayStore.BuyResponse.Types.CheckoutInfo();
        }
        CheckoutInfo.MergeFrom(other.CheckoutInfo);
      }
      if (other.HasContinueViaUrl) {
        ContinueViaUrl = other.ContinueViaUrl;
      }
      if (other.HasPurchaseStatusUrl) {
        PurchaseStatusUrl = other.PurchaseStatusUrl;
      }
      if (other.HasCheckoutServiceId) {
        CheckoutServiceId = other.CheckoutServiceId;
      }
      if (other.HasCheckoutTokenRequired) {
        CheckoutTokenRequired = other.CheckoutTokenRequired;
      }
      if (other.HasBaseCheckoutUrl) {
        BaseCheckoutUrl = other.BaseCheckoutUrl;
      }
      tosCheckboxHtml_.Add(other.tosCheckboxHtml_);
      if (other.HasIabPermissionError) {
        IabPermissionError = other.IabPermissionError;
      }
      if (other.purchaseStatusResponse_ != null) {
        if (purchaseStatusResponse_ == null) {
          PurchaseStatusResponse = new global::GooglePlayStore.PurchaseStatusResponse();
        }
        PurchaseStatusResponse.MergeFrom(other.PurchaseStatusResponse);
      }
      if (other.HasPurchaseCookie) {
        PurchaseCookie = other.PurchaseCookie;
      }
      if (other.challenge_ != null) {
        if (challenge_ == null) {
          Challenge = new global::GooglePlayStore.Challenge();
        }
        Challenge.MergeFrom(other.Challenge);
      }
      if (other.HasAddInstrumentPromptHtml) {
        AddInstrumentPromptHtml = other.AddInstrumentPromptHtml;
      }
      if (other.HasConfirmButtonText) {
        ConfirmButtonText = other.ConfirmButtonText;
      }
      if (other.HasPermissionErrorTitleText) {
        PermissionErrorTitleText = other.PermissionErrorTitleText;
      }
      if (other.HasPermissionErrorMessageText) {
        PermissionErrorMessageText = other.PermissionErrorMessageText;
      }
      if (other.HasServerLogsCookie) {
        ServerLogsCookie = other.ServerLogsCookie;
      }
      if (other.HasEncodedDeliveryToken) {
        EncodedDeliveryToken = other.EncodedDeliveryToken;
      }
      if (other.HasUnknownToken) {
        UnknownToken = other.UnknownToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (purchaseResponse_ == null) {
              PurchaseResponse = new global::GooglePlayStore.PurchaseNotificationResponse();
            }
            input.ReadMessage(PurchaseResponse);
            break;
          }
          case 19: {
            if (!HasCheckoutInfo) {
              CheckoutInfo = new global::GooglePlayStore.BuyResponse.Types.CheckoutInfo();
            }
            input.ReadGroup(CheckoutInfo);
            break;
          }
          case 66: {
            ContinueViaUrl = input.ReadString();
            break;
          }
          case 74: {
            PurchaseStatusUrl = input.ReadString();
            break;
          }
          case 98: {
            CheckoutServiceId = input.ReadString();
            break;
          }
          case 104: {
            CheckoutTokenRequired = input.ReadBool();
            break;
          }
          case 114: {
            BaseCheckoutUrl = input.ReadString();
            break;
          }
          case 298: {
            tosCheckboxHtml_.AddEntriesFrom(input, _repeated_tosCheckboxHtml_codec);
            break;
          }
          case 304: {
            IabPermissionError = input.ReadInt32();
            break;
          }
          case 314: {
            if (purchaseStatusResponse_ == null) {
              PurchaseStatusResponse = new global::GooglePlayStore.PurchaseStatusResponse();
            }
            input.ReadMessage(PurchaseStatusResponse);
            break;
          }
          case 370: {
            PurchaseCookie = input.ReadString();
            break;
          }
          case 394: {
            if (challenge_ == null) {
              Challenge = new global::GooglePlayStore.Challenge();
            }
            input.ReadMessage(Challenge);
            break;
          }
          case 402: {
            AddInstrumentPromptHtml = input.ReadString();
            break;
          }
          case 410: {
            ConfirmButtonText = input.ReadString();
            break;
          }
          case 418: {
            PermissionErrorTitleText = input.ReadString();
            break;
          }
          case 426: {
            PermissionErrorMessageText = input.ReadString();
            break;
          }
          case 434: {
            ServerLogsCookie = input.ReadBytes();
            break;
          }
          case 442: {
            EncodedDeliveryToken = input.ReadString();
            break;
          }
          case 450: {
            UnknownToken = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the BuyResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class CheckoutInfo : pb::IMessage<CheckoutInfo> {
        private static readonly pb::MessageParser<CheckoutInfo> _parser = new pb::MessageParser<CheckoutInfo>(() => new CheckoutInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CheckoutInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GooglePlayStore.BuyResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CheckoutInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CheckoutInfo(CheckoutInfo other) : this() {
          item_ = other.item_ != null ? other.item_.Clone() : null;
          subItem_ = other.subItem_.Clone();
          checkoutOption_ = other.checkoutOption_.Clone();
          deprecatedCheckoutUrl_ = other.deprecatedCheckoutUrl_;
          addInstrumentUrl_ = other.addInstrumentUrl_;
          footerHtml_ = other.footerHtml_.Clone();
          eligibleInstrumentFamily_ = other.eligibleInstrumentFamily_.Clone();
          footnoteHtml_ = other.footnoteHtml_.Clone();
          eligibleInstrument_ = other.eligibleInstrument_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CheckoutInfo Clone() {
          return new CheckoutInfo(this);
        }

        /// <summary>Field number for the "item" field.</summary>
        public const int ItemFieldNumber = 3;
        private global::GooglePlayStore.LineItem item_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GooglePlayStore.LineItem Item {
          get { return item_; }
          set {
            item_ = value;
          }
        }

        /// <summary>Field number for the "subItem" field.</summary>
        public const int SubItemFieldNumber = 4;
        private static readonly pb::FieldCodec<global::GooglePlayStore.LineItem> _repeated_subItem_codec
            = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.LineItem.Parser);
        private readonly pbc::RepeatedField<global::GooglePlayStore.LineItem> subItem_ = new pbc::RepeatedField<global::GooglePlayStore.LineItem>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::GooglePlayStore.LineItem> SubItem {
          get { return subItem_; }
        }

        /// <summary>Field number for the "checkoutoption" field.</summary>
        public const int CheckoutOptionFieldNumber = 5;
        private static readonly pb::FieldCodec<global::GooglePlayStore.BuyResponse.Types.CheckoutInfo.Types.CheckoutOption> _repeated_checkoutOption_codec
            = pb::FieldCodec.ForGroup(43, 44, global::GooglePlayStore.BuyResponse.Types.CheckoutInfo.Types.CheckoutOption.Parser);
        private readonly pbc::RepeatedField<global::GooglePlayStore.BuyResponse.Types.CheckoutInfo.Types.CheckoutOption> checkoutOption_ = new pbc::RepeatedField<global::GooglePlayStore.BuyResponse.Types.CheckoutInfo.Types.CheckoutOption>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::GooglePlayStore.BuyResponse.Types.CheckoutInfo.Types.CheckoutOption> CheckoutOption {
          get { return checkoutOption_; }
        }

        /// <summary>Field number for the "deprecatedCheckoutUrl" field.</summary>
        public const int DeprecatedCheckoutUrlFieldNumber = 10;
        private readonly static string DeprecatedCheckoutUrlDefaultValue = "";

        private string deprecatedCheckoutUrl_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeprecatedCheckoutUrl {
          get { return deprecatedCheckoutUrl_ ?? DeprecatedCheckoutUrlDefaultValue; }
          set {
            deprecatedCheckoutUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "deprecatedCheckoutUrl" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasDeprecatedCheckoutUrl {
          get { return deprecatedCheckoutUrl_ != null; }
        }
        /// <summary>Clears the value of the "deprecatedCheckoutUrl" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearDeprecatedCheckoutUrl() {
          deprecatedCheckoutUrl_ = null;
        }

        /// <summary>Field number for the "addInstrumentUrl" field.</summary>
        public const int AddInstrumentUrlFieldNumber = 11;
        private readonly static string AddInstrumentUrlDefaultValue = "";

        private string addInstrumentUrl_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AddInstrumentUrl {
          get { return addInstrumentUrl_ ?? AddInstrumentUrlDefaultValue; }
          set {
            addInstrumentUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "addInstrumentUrl" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasAddInstrumentUrl {
          get { return addInstrumentUrl_ != null; }
        }
        /// <summary>Clears the value of the "addInstrumentUrl" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearAddInstrumentUrl() {
          addInstrumentUrl_ = null;
        }

        /// <summary>Field number for the "footerHtml" field.</summary>
        public const int FooterHtmlFieldNumber = 20;
        private static readonly pb::FieldCodec<string> _repeated_footerHtml_codec
            = pb::FieldCodec.ForString(162);
        private readonly pbc::RepeatedField<string> footerHtml_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> FooterHtml {
          get { return footerHtml_; }
        }

        /// <summary>Field number for the "eligibleInstrumentFamily" field.</summary>
        public const int EligibleInstrumentFamilyFieldNumber = 31;
        private static readonly pb::FieldCodec<int> _repeated_eligibleInstrumentFamily_codec
            = pb::FieldCodec.ForInt32(248);
        private readonly pbc::RepeatedField<int> eligibleInstrumentFamily_ = new pbc::RepeatedField<int>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> EligibleInstrumentFamily {
          get { return eligibleInstrumentFamily_; }
        }

        /// <summary>Field number for the "footnoteHtml" field.</summary>
        public const int FootnoteHtmlFieldNumber = 36;
        private static readonly pb::FieldCodec<string> _repeated_footnoteHtml_codec
            = pb::FieldCodec.ForString(290);
        private readonly pbc::RepeatedField<string> footnoteHtml_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> FootnoteHtml {
          get { return footnoteHtml_; }
        }

        /// <summary>Field number for the "eligibleInstrument" field.</summary>
        public const int EligibleInstrumentFieldNumber = 44;
        private static readonly pb::FieldCodec<global::GooglePlayStore.Instrument> _repeated_eligibleInstrument_codec
            = pb::FieldCodec.ForMessage(354, global::GooglePlayStore.Instrument.Parser);
        private readonly pbc::RepeatedField<global::GooglePlayStore.Instrument> eligibleInstrument_ = new pbc::RepeatedField<global::GooglePlayStore.Instrument>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::GooglePlayStore.Instrument> EligibleInstrument {
          get { return eligibleInstrument_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CheckoutInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CheckoutInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Item, other.Item)) return false;
          if(!subItem_.Equals(other.subItem_)) return false;
          if(!checkoutOption_.Equals(other.checkoutOption_)) return false;
          if (DeprecatedCheckoutUrl != other.DeprecatedCheckoutUrl) return false;
          if (AddInstrumentUrl != other.AddInstrumentUrl) return false;
          if(!footerHtml_.Equals(other.footerHtml_)) return false;
          if(!eligibleInstrumentFamily_.Equals(other.eligibleInstrumentFamily_)) return false;
          if(!footnoteHtml_.Equals(other.footnoteHtml_)) return false;
          if(!eligibleInstrument_.Equals(other.eligibleInstrument_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (item_ != null) hash ^= Item.GetHashCode();
          hash ^= subItem_.GetHashCode();
          hash ^= checkoutOption_.GetHashCode();
          if (HasDeprecatedCheckoutUrl) hash ^= DeprecatedCheckoutUrl.GetHashCode();
          if (HasAddInstrumentUrl) hash ^= AddInstrumentUrl.GetHashCode();
          hash ^= footerHtml_.GetHashCode();
          hash ^= eligibleInstrumentFamily_.GetHashCode();
          hash ^= footnoteHtml_.GetHashCode();
          hash ^= eligibleInstrument_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (item_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Item);
          }
          subItem_.WriteTo(output, _repeated_subItem_codec);
          checkoutOption_.WriteTo(output, _repeated_checkoutOption_codec);
          if (HasDeprecatedCheckoutUrl) {
            output.WriteRawTag(82);
            output.WriteString(DeprecatedCheckoutUrl);
          }
          if (HasAddInstrumentUrl) {
            output.WriteRawTag(90);
            output.WriteString(AddInstrumentUrl);
          }
          footerHtml_.WriteTo(output, _repeated_footerHtml_codec);
          eligibleInstrumentFamily_.WriteTo(output, _repeated_eligibleInstrumentFamily_codec);
          footnoteHtml_.WriteTo(output, _repeated_footnoteHtml_codec);
          eligibleInstrument_.WriteTo(output, _repeated_eligibleInstrument_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (item_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
          }
          size += subItem_.CalculateSize(_repeated_subItem_codec);
          size += checkoutOption_.CalculateSize(_repeated_checkoutOption_codec);
          if (HasDeprecatedCheckoutUrl) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeprecatedCheckoutUrl);
          }
          if (HasAddInstrumentUrl) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AddInstrumentUrl);
          }
          size += footerHtml_.CalculateSize(_repeated_footerHtml_codec);
          size += eligibleInstrumentFamily_.CalculateSize(_repeated_eligibleInstrumentFamily_codec);
          size += footnoteHtml_.CalculateSize(_repeated_footnoteHtml_codec);
          size += eligibleInstrument_.CalculateSize(_repeated_eligibleInstrument_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CheckoutInfo other) {
          if (other == null) {
            return;
          }
          if (other.item_ != null) {
            if (item_ == null) {
              Item = new global::GooglePlayStore.LineItem();
            }
            Item.MergeFrom(other.Item);
          }
          subItem_.Add(other.subItem_);
          checkoutOption_.Add(other.checkoutOption_);
          if (other.HasDeprecatedCheckoutUrl) {
            DeprecatedCheckoutUrl = other.DeprecatedCheckoutUrl;
          }
          if (other.HasAddInstrumentUrl) {
            AddInstrumentUrl = other.AddInstrumentUrl;
          }
          footerHtml_.Add(other.footerHtml_);
          eligibleInstrumentFamily_.Add(other.eligibleInstrumentFamily_);
          footnoteHtml_.Add(other.footnoteHtml_);
          eligibleInstrument_.Add(other.eligibleInstrument_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              case 20:
                return;
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 26: {
                if (item_ == null) {
                  Item = new global::GooglePlayStore.LineItem();
                }
                input.ReadMessage(Item);
                break;
              }
              case 34: {
                subItem_.AddEntriesFrom(input, _repeated_subItem_codec);
                break;
              }
              case 43: {
                checkoutOption_.AddEntriesFrom(input, _repeated_checkoutOption_codec);
                break;
              }
              case 82: {
                DeprecatedCheckoutUrl = input.ReadString();
                break;
              }
              case 90: {
                AddInstrumentUrl = input.ReadString();
                break;
              }
              case 162: {
                footerHtml_.AddEntriesFrom(input, _repeated_footerHtml_codec);
                break;
              }
              case 250:
              case 248: {
                eligibleInstrumentFamily_.AddEntriesFrom(input, _repeated_eligibleInstrumentFamily_codec);
                break;
              }
              case 290: {
                footnoteHtml_.AddEntriesFrom(input, _repeated_footnoteHtml_codec);
                break;
              }
              case 354: {
                eligibleInstrument_.AddEntriesFrom(input, _repeated_eligibleInstrument_codec);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the CheckoutInfo message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class CheckoutOption : pb::IMessage<CheckoutOption> {
            private static readonly pb::MessageParser<CheckoutOption> _parser = new pb::MessageParser<CheckoutOption>(() => new CheckoutOption());
            private pb::UnknownFieldSet _unknownFields;
            private int _hasBits0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<CheckoutOption> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::GooglePlayStore.BuyResponse.Types.CheckoutInfo.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CheckoutOption() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CheckoutOption(CheckoutOption other) : this() {
              _hasBits0 = other._hasBits0;
              formOfPayment_ = other.formOfPayment_;
              encodedAdjustedCart_ = other.encodedAdjustedCart_;
              instrumentId_ = other.instrumentId_;
              item_ = other.item_.Clone();
              subItem_ = other.subItem_.Clone();
              total_ = other.total_ != null ? other.total_.Clone() : null;
              footerHtml_ = other.footerHtml_.Clone();
              instrumentFamily_ = other.instrumentFamily_;
              deprecatedInstrumentInapplicableReason_ = other.deprecatedInstrumentInapplicableReason_.Clone();
              selectedInstrument_ = other.selectedInstrument_;
              summary_ = other.summary_ != null ? other.summary_.Clone() : null;
              footnoteHtml_ = other.footnoteHtml_.Clone();
              instrument_ = other.instrument_ != null ? other.instrument_.Clone() : null;
              purchaseCookie_ = other.purchaseCookie_;
              disabledReason_ = other.disabledReason_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CheckoutOption Clone() {
              return new CheckoutOption(this);
            }

            /// <summary>Field number for the "formOfPayment" field.</summary>
            public const int FormOfPaymentFieldNumber = 6;
            private readonly static string FormOfPaymentDefaultValue = "";

            private string formOfPayment_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string FormOfPayment {
              get { return formOfPayment_ ?? FormOfPaymentDefaultValue; }
              set {
                formOfPayment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "formOfPayment" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HasFormOfPayment {
              get { return formOfPayment_ != null; }
            }
            /// <summary>Clears the value of the "formOfPayment" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearFormOfPayment() {
              formOfPayment_ = null;
            }

            /// <summary>Field number for the "encodedAdjustedCart" field.</summary>
            public const int EncodedAdjustedCartFieldNumber = 7;
            private readonly static string EncodedAdjustedCartDefaultValue = "";

            private string encodedAdjustedCart_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string EncodedAdjustedCart {
              get { return encodedAdjustedCart_ ?? EncodedAdjustedCartDefaultValue; }
              set {
                encodedAdjustedCart_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "encodedAdjustedCart" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HasEncodedAdjustedCart {
              get { return encodedAdjustedCart_ != null; }
            }
            /// <summary>Clears the value of the "encodedAdjustedCart" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearEncodedAdjustedCart() {
              encodedAdjustedCart_ = null;
            }

            /// <summary>Field number for the "instrumentId" field.</summary>
            public const int InstrumentIdFieldNumber = 15;
            private readonly static string InstrumentIdDefaultValue = "";

            private string instrumentId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string InstrumentId {
              get { return instrumentId_ ?? InstrumentIdDefaultValue; }
              set {
                instrumentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "instrumentId" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HasInstrumentId {
              get { return instrumentId_ != null; }
            }
            /// <summary>Clears the value of the "instrumentId" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearInstrumentId() {
              instrumentId_ = null;
            }

            /// <summary>Field number for the "item" field.</summary>
            public const int ItemFieldNumber = 16;
            private static readonly pb::FieldCodec<global::GooglePlayStore.LineItem> _repeated_item_codec
                = pb::FieldCodec.ForMessage(130, global::GooglePlayStore.LineItem.Parser);
            private readonly pbc::RepeatedField<global::GooglePlayStore.LineItem> item_ = new pbc::RepeatedField<global::GooglePlayStore.LineItem>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::GooglePlayStore.LineItem> Item {
              get { return item_; }
            }

            /// <summary>Field number for the "subItem" field.</summary>
            public const int SubItemFieldNumber = 17;
            private static readonly pb::FieldCodec<global::GooglePlayStore.LineItem> _repeated_subItem_codec
                = pb::FieldCodec.ForMessage(138, global::GooglePlayStore.LineItem.Parser);
            private readonly pbc::RepeatedField<global::GooglePlayStore.LineItem> subItem_ = new pbc::RepeatedField<global::GooglePlayStore.LineItem>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::GooglePlayStore.LineItem> SubItem {
              get { return subItem_; }
            }

            /// <summary>Field number for the "total" field.</summary>
            public const int TotalFieldNumber = 18;
            private global::GooglePlayStore.LineItem total_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::GooglePlayStore.LineItem Total {
              get { return total_; }
              set {
                total_ = value;
              }
            }

            /// <summary>Field number for the "footerHtml" field.</summary>
            public const int FooterHtmlFieldNumber = 19;
            private static readonly pb::FieldCodec<string> _repeated_footerHtml_codec
                = pb::FieldCodec.ForString(154);
            private readonly pbc::RepeatedField<string> footerHtml_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> FooterHtml {
              get { return footerHtml_; }
            }

            /// <summary>Field number for the "instrumentFamily" field.</summary>
            public const int InstrumentFamilyFieldNumber = 29;
            private readonly static int InstrumentFamilyDefaultValue = 0;

            private int instrumentFamily_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int InstrumentFamily {
              get { if ((_hasBits0 & 1) != 0) { return instrumentFamily_; } else { return InstrumentFamilyDefaultValue; } }
              set {
                _hasBits0 |= 1;
                instrumentFamily_ = value;
              }
            }
            /// <summary>Gets whether the "instrumentFamily" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HasInstrumentFamily {
              get { return (_hasBits0 & 1) != 0; }
            }
            /// <summary>Clears the value of the "instrumentFamily" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearInstrumentFamily() {
              _hasBits0 &= ~1;
            }

            /// <summary>Field number for the "deprecatedInstrumentInapplicableReason" field.</summary>
            public const int DeprecatedInstrumentInapplicableReasonFieldNumber = 30;
            private static readonly pb::FieldCodec<int> _repeated_deprecatedInstrumentInapplicableReason_codec
                = pb::FieldCodec.ForInt32(240);
            private readonly pbc::RepeatedField<int> deprecatedInstrumentInapplicableReason_ = new pbc::RepeatedField<int>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<int> DeprecatedInstrumentInapplicableReason {
              get { return deprecatedInstrumentInapplicableReason_; }
            }

            /// <summary>Field number for the "selectedInstrument" field.</summary>
            public const int SelectedInstrumentFieldNumber = 32;
            private readonly static bool SelectedInstrumentDefaultValue = false;

            private bool selectedInstrument_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool SelectedInstrument {
              get { if ((_hasBits0 & 2) != 0) { return selectedInstrument_; } else { return SelectedInstrumentDefaultValue; } }
              set {
                _hasBits0 |= 2;
                selectedInstrument_ = value;
              }
            }
            /// <summary>Gets whether the "selectedInstrument" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HasSelectedInstrument {
              get { return (_hasBits0 & 2) != 0; }
            }
            /// <summary>Clears the value of the "selectedInstrument" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearSelectedInstrument() {
              _hasBits0 &= ~2;
            }

            /// <summary>Field number for the "summary" field.</summary>
            public const int SummaryFieldNumber = 33;
            private global::GooglePlayStore.LineItem summary_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::GooglePlayStore.LineItem Summary {
              get { return summary_; }
              set {
                summary_ = value;
              }
            }

            /// <summary>Field number for the "footnoteHtml" field.</summary>
            public const int FootnoteHtmlFieldNumber = 35;
            private static readonly pb::FieldCodec<string> _repeated_footnoteHtml_codec
                = pb::FieldCodec.ForString(282);
            private readonly pbc::RepeatedField<string> footnoteHtml_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> FootnoteHtml {
              get { return footnoteHtml_; }
            }

            /// <summary>Field number for the "instrument" field.</summary>
            public const int InstrumentFieldNumber = 43;
            private global::GooglePlayStore.Instrument instrument_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::GooglePlayStore.Instrument Instrument {
              get { return instrument_; }
              set {
                instrument_ = value;
              }
            }

            /// <summary>Field number for the "purchaseCookie" field.</summary>
            public const int PurchaseCookieFieldNumber = 45;
            private readonly static string PurchaseCookieDefaultValue = "";

            private string purchaseCookie_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string PurchaseCookie {
              get { return purchaseCookie_ ?? PurchaseCookieDefaultValue; }
              set {
                purchaseCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "purchaseCookie" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HasPurchaseCookie {
              get { return purchaseCookie_ != null; }
            }
            /// <summary>Clears the value of the "purchaseCookie" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearPurchaseCookie() {
              purchaseCookie_ = null;
            }

            /// <summary>Field number for the "disabledReason" field.</summary>
            public const int DisabledReasonFieldNumber = 48;
            private static readonly pb::FieldCodec<string> _repeated_disabledReason_codec
                = pb::FieldCodec.ForString(386);
            private readonly pbc::RepeatedField<string> disabledReason_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> DisabledReason {
              get { return disabledReason_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as CheckoutOption);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(CheckoutOption other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (FormOfPayment != other.FormOfPayment) return false;
              if (EncodedAdjustedCart != other.EncodedAdjustedCart) return false;
              if (InstrumentId != other.InstrumentId) return false;
              if(!item_.Equals(other.item_)) return false;
              if(!subItem_.Equals(other.subItem_)) return false;
              if (!object.Equals(Total, other.Total)) return false;
              if(!footerHtml_.Equals(other.footerHtml_)) return false;
              if (InstrumentFamily != other.InstrumentFamily) return false;
              if(!deprecatedInstrumentInapplicableReason_.Equals(other.deprecatedInstrumentInapplicableReason_)) return false;
              if (SelectedInstrument != other.SelectedInstrument) return false;
              if (!object.Equals(Summary, other.Summary)) return false;
              if(!footnoteHtml_.Equals(other.footnoteHtml_)) return false;
              if (!object.Equals(Instrument, other.Instrument)) return false;
              if (PurchaseCookie != other.PurchaseCookie) return false;
              if(!disabledReason_.Equals(other.disabledReason_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (HasFormOfPayment) hash ^= FormOfPayment.GetHashCode();
              if (HasEncodedAdjustedCart) hash ^= EncodedAdjustedCart.GetHashCode();
              if (HasInstrumentId) hash ^= InstrumentId.GetHashCode();
              hash ^= item_.GetHashCode();
              hash ^= subItem_.GetHashCode();
              if (total_ != null) hash ^= Total.GetHashCode();
              hash ^= footerHtml_.GetHashCode();
              if (HasInstrumentFamily) hash ^= InstrumentFamily.GetHashCode();
              hash ^= deprecatedInstrumentInapplicableReason_.GetHashCode();
              if (HasSelectedInstrument) hash ^= SelectedInstrument.GetHashCode();
              if (summary_ != null) hash ^= Summary.GetHashCode();
              hash ^= footnoteHtml_.GetHashCode();
              if (instrument_ != null) hash ^= Instrument.GetHashCode();
              if (HasPurchaseCookie) hash ^= PurchaseCookie.GetHashCode();
              hash ^= disabledReason_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (HasFormOfPayment) {
                output.WriteRawTag(50);
                output.WriteString(FormOfPayment);
              }
              if (HasEncodedAdjustedCart) {
                output.WriteRawTag(58);
                output.WriteString(EncodedAdjustedCart);
              }
              if (HasInstrumentId) {
                output.WriteRawTag(122);
                output.WriteString(InstrumentId);
              }
              item_.WriteTo(output, _repeated_item_codec);
              subItem_.WriteTo(output, _repeated_subItem_codec);
              if (total_ != null) {
                output.WriteRawTag(146, 1);
                output.WriteMessage(Total);
              }
              footerHtml_.WriteTo(output, _repeated_footerHtml_codec);
              if (HasInstrumentFamily) {
                output.WriteRawTag(232, 1);
                output.WriteInt32(InstrumentFamily);
              }
              deprecatedInstrumentInapplicableReason_.WriteTo(output, _repeated_deprecatedInstrumentInapplicableReason_codec);
              if (HasSelectedInstrument) {
                output.WriteRawTag(128, 2);
                output.WriteBool(SelectedInstrument);
              }
              if (summary_ != null) {
                output.WriteRawTag(138, 2);
                output.WriteMessage(Summary);
              }
              footnoteHtml_.WriteTo(output, _repeated_footnoteHtml_codec);
              if (instrument_ != null) {
                output.WriteRawTag(218, 2);
                output.WriteMessage(Instrument);
              }
              if (HasPurchaseCookie) {
                output.WriteRawTag(234, 2);
                output.WriteString(PurchaseCookie);
              }
              disabledReason_.WriteTo(output, _repeated_disabledReason_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (HasFormOfPayment) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(FormOfPayment);
              }
              if (HasEncodedAdjustedCart) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(EncodedAdjustedCart);
              }
              if (HasInstrumentId) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentId);
              }
              size += item_.CalculateSize(_repeated_item_codec);
              size += subItem_.CalculateSize(_repeated_subItem_codec);
              if (total_ != null) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(Total);
              }
              size += footerHtml_.CalculateSize(_repeated_footerHtml_codec);
              if (HasInstrumentFamily) {
                size += 2 + pb::CodedOutputStream.ComputeInt32Size(InstrumentFamily);
              }
              size += deprecatedInstrumentInapplicableReason_.CalculateSize(_repeated_deprecatedInstrumentInapplicableReason_codec);
              if (HasSelectedInstrument) {
                size += 2 + 1;
              }
              if (summary_ != null) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(Summary);
              }
              size += footnoteHtml_.CalculateSize(_repeated_footnoteHtml_codec);
              if (instrument_ != null) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(Instrument);
              }
              if (HasPurchaseCookie) {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(PurchaseCookie);
              }
              size += disabledReason_.CalculateSize(_repeated_disabledReason_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(CheckoutOption other) {
              if (other == null) {
                return;
              }
              if (other.HasFormOfPayment) {
                FormOfPayment = other.FormOfPayment;
              }
              if (other.HasEncodedAdjustedCart) {
                EncodedAdjustedCart = other.EncodedAdjustedCart;
              }
              if (other.HasInstrumentId) {
                InstrumentId = other.InstrumentId;
              }
              item_.Add(other.item_);
              subItem_.Add(other.subItem_);
              if (other.total_ != null) {
                if (total_ == null) {
                  Total = new global::GooglePlayStore.LineItem();
                }
                Total.MergeFrom(other.Total);
              }
              footerHtml_.Add(other.footerHtml_);
              if (other.HasInstrumentFamily) {
                InstrumentFamily = other.InstrumentFamily;
              }
              deprecatedInstrumentInapplicableReason_.Add(other.deprecatedInstrumentInapplicableReason_);
              if (other.HasSelectedInstrument) {
                SelectedInstrument = other.SelectedInstrument;
              }
              if (other.summary_ != null) {
                if (summary_ == null) {
                  Summary = new global::GooglePlayStore.LineItem();
                }
                Summary.MergeFrom(other.Summary);
              }
              footnoteHtml_.Add(other.footnoteHtml_);
              if (other.instrument_ != null) {
                if (instrument_ == null) {
                  Instrument = new global::GooglePlayStore.Instrument();
                }
                Instrument.MergeFrom(other.Instrument);
              }
              if (other.HasPurchaseCookie) {
                PurchaseCookie = other.PurchaseCookie;
              }
              disabledReason_.Add(other.disabledReason_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  case 44:
                    return;
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 50: {
                    FormOfPayment = input.ReadString();
                    break;
                  }
                  case 58: {
                    EncodedAdjustedCart = input.ReadString();
                    break;
                  }
                  case 122: {
                    InstrumentId = input.ReadString();
                    break;
                  }
                  case 130: {
                    item_.AddEntriesFrom(input, _repeated_item_codec);
                    break;
                  }
                  case 138: {
                    subItem_.AddEntriesFrom(input, _repeated_subItem_codec);
                    break;
                  }
                  case 146: {
                    if (total_ == null) {
                      Total = new global::GooglePlayStore.LineItem();
                    }
                    input.ReadMessage(Total);
                    break;
                  }
                  case 154: {
                    footerHtml_.AddEntriesFrom(input, _repeated_footerHtml_codec);
                    break;
                  }
                  case 232: {
                    InstrumentFamily = input.ReadInt32();
                    break;
                  }
                  case 242:
                  case 240: {
                    deprecatedInstrumentInapplicableReason_.AddEntriesFrom(input, _repeated_deprecatedInstrumentInapplicableReason_codec);
                    break;
                  }
                  case 256: {
                    SelectedInstrument = input.ReadBool();
                    break;
                  }
                  case 266: {
                    if (summary_ == null) {
                      Summary = new global::GooglePlayStore.LineItem();
                    }
                    input.ReadMessage(Summary);
                    break;
                  }
                  case 282: {
                    footnoteHtml_.AddEntriesFrom(input, _repeated_footnoteHtml_codec);
                    break;
                  }
                  case 346: {
                    if (instrument_ == null) {
                      Instrument = new global::GooglePlayStore.Instrument();
                    }
                    input.ReadMessage(Instrument);
                    break;
                  }
                  case 362: {
                    PurchaseCookie = input.ReadString();
                    break;
                  }
                  case 386: {
                    disabledReason_.AddEntriesFrom(input, _repeated_disabledReason_codec);
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class LineItem : pb::IMessage<LineItem> {
    private static readonly pb::MessageParser<LineItem> _parser = new pb::MessageParser<LineItem>(() => new LineItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LineItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LineItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LineItem(LineItem other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      offer_ = other.offer_ != null ? other.offer_.Clone() : null;
      amount_ = other.amount_ != null ? other.amount_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LineItem Clone() {
      return new LineItem(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "offer" field.</summary>
    public const int OfferFieldNumber = 3;
    private global::GooglePlayStore.Offer offer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Offer Offer {
      get { return offer_; }
      set {
        offer_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private global::GooglePlayStore.Money amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Money Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LineItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LineItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(Offer, other.Offer)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (offer_ != null) hash ^= Offer.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (offer_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Offer);
      }
      if (amount_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (offer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Offer);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LineItem other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.offer_ != null) {
        if (offer_ == null) {
          Offer = new global::GooglePlayStore.Offer();
        }
        Offer.MergeFrom(other.Offer);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          Amount = new global::GooglePlayStore.Money();
        }
        Amount.MergeFrom(other.Amount);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (offer_ == null) {
              Offer = new global::GooglePlayStore.Offer();
            }
            input.ReadMessage(Offer);
            break;
          }
          case 34: {
            if (amount_ == null) {
              Amount = new global::GooglePlayStore.Money();
            }
            input.ReadMessage(Amount);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Money : pb::IMessage<Money> {
    private static readonly pb::MessageParser<Money> _parser = new pb::MessageParser<Money>(() => new Money());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Money> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Money() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Money(Money other) : this() {
      _hasBits0 = other._hasBits0;
      micros_ = other.micros_;
      currencyCode_ = other.currencyCode_;
      formattedAmount_ = other.formattedAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Money Clone() {
      return new Money(this);
    }

    /// <summary>Field number for the "micros" field.</summary>
    public const int MicrosFieldNumber = 1;
    private readonly static long MicrosDefaultValue = 0L;

    private long micros_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Micros {
      get { if ((_hasBits0 & 1) != 0) { return micros_; } else { return MicrosDefaultValue; } }
      set {
        _hasBits0 |= 1;
        micros_ = value;
      }
    }
    /// <summary>Gets whether the "micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMicros {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMicros() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "currencyCode" field.</summary>
    public const int CurrencyCodeFieldNumber = 2;
    private readonly static string CurrencyCodeDefaultValue = "";

    private string currencyCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_ ?? CurrencyCodeDefaultValue; }
      set {
        currencyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "currencyCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCurrencyCode {
      get { return currencyCode_ != null; }
    }
    /// <summary>Clears the value of the "currencyCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCurrencyCode() {
      currencyCode_ = null;
    }

    /// <summary>Field number for the "formattedAmount" field.</summary>
    public const int FormattedAmountFieldNumber = 3;
    private readonly static string FormattedAmountDefaultValue = "";

    private string formattedAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FormattedAmount {
      get { return formattedAmount_ ?? FormattedAmountDefaultValue; }
      set {
        formattedAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "formattedAmount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFormattedAmount {
      get { return formattedAmount_ != null; }
    }
    /// <summary>Clears the value of the "formattedAmount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFormattedAmount() {
      formattedAmount_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Money);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Money other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Micros != other.Micros) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      if (FormattedAmount != other.FormattedAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMicros) hash ^= Micros.GetHashCode();
      if (HasCurrencyCode) hash ^= CurrencyCode.GetHashCode();
      if (HasFormattedAmount) hash ^= FormattedAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasMicros) {
        output.WriteRawTag(8);
        output.WriteInt64(Micros);
      }
      if (HasCurrencyCode) {
        output.WriteRawTag(18);
        output.WriteString(CurrencyCode);
      }
      if (HasFormattedAmount) {
        output.WriteRawTag(26);
        output.WriteString(FormattedAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMicros) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Micros);
      }
      if (HasCurrencyCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyCode);
      }
      if (HasFormattedAmount) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormattedAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Money other) {
      if (other == null) {
        return;
      }
      if (other.HasMicros) {
        Micros = other.Micros;
      }
      if (other.HasCurrencyCode) {
        CurrencyCode = other.CurrencyCode;
      }
      if (other.HasFormattedAmount) {
        FormattedAmount = other.FormattedAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Micros = input.ReadInt64();
            break;
          }
          case 18: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 26: {
            FormattedAmount = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PurchaseNotificationResponse : pb::IMessage<PurchaseNotificationResponse> {
    private static readonly pb::MessageParser<PurchaseNotificationResponse> _parser = new pb::MessageParser<PurchaseNotificationResponse>(() => new PurchaseNotificationResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PurchaseNotificationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseNotificationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseNotificationResponse(PurchaseNotificationResponse other) : this() {
      _hasBits0 = other._hasBits0;
      status_ = other.status_;
      debugInfo_ = other.debugInfo_ != null ? other.debugInfo_.Clone() : null;
      localizedErrorMessage_ = other.localizedErrorMessage_;
      purchaseId_ = other.purchaseId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseNotificationResponse Clone() {
      return new PurchaseNotificationResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private readonly static int StatusDefaultValue = 0;

    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { if ((_hasBits0 & 1) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 1;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "debugInfo" field.</summary>
    public const int DebugInfoFieldNumber = 2;
    private global::GooglePlayStore.DebugInfo debugInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DebugInfo DebugInfo {
      get { return debugInfo_; }
      set {
        debugInfo_ = value;
      }
    }

    /// <summary>Field number for the "localizedErrorMessage" field.</summary>
    public const int LocalizedErrorMessageFieldNumber = 3;
    private readonly static string LocalizedErrorMessageDefaultValue = "";

    private string localizedErrorMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocalizedErrorMessage {
      get { return localizedErrorMessage_ ?? LocalizedErrorMessageDefaultValue; }
      set {
        localizedErrorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "localizedErrorMessage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLocalizedErrorMessage {
      get { return localizedErrorMessage_ != null; }
    }
    /// <summary>Clears the value of the "localizedErrorMessage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLocalizedErrorMessage() {
      localizedErrorMessage_ = null;
    }

    /// <summary>Field number for the "purchaseId" field.</summary>
    public const int PurchaseIdFieldNumber = 4;
    private readonly static string PurchaseIdDefaultValue = "";

    private string purchaseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PurchaseId {
      get { return purchaseId_ ?? PurchaseIdDefaultValue; }
      set {
        purchaseId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "purchaseId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPurchaseId {
      get { return purchaseId_ != null; }
    }
    /// <summary>Clears the value of the "purchaseId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPurchaseId() {
      purchaseId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PurchaseNotificationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PurchaseNotificationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (!object.Equals(DebugInfo, other.DebugInfo)) return false;
      if (LocalizedErrorMessage != other.LocalizedErrorMessage) return false;
      if (PurchaseId != other.PurchaseId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStatus) hash ^= Status.GetHashCode();
      if (debugInfo_ != null) hash ^= DebugInfo.GetHashCode();
      if (HasLocalizedErrorMessage) hash ^= LocalizedErrorMessage.GetHashCode();
      if (HasPurchaseId) hash ^= PurchaseId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasStatus) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (debugInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DebugInfo);
      }
      if (HasLocalizedErrorMessage) {
        output.WriteRawTag(26);
        output.WriteString(LocalizedErrorMessage);
      }
      if (HasPurchaseId) {
        output.WriteRawTag(34);
        output.WriteString(PurchaseId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (debugInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DebugInfo);
      }
      if (HasLocalizedErrorMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocalizedErrorMessage);
      }
      if (HasPurchaseId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PurchaseId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PurchaseNotificationResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.debugInfo_ != null) {
        if (debugInfo_ == null) {
          DebugInfo = new global::GooglePlayStore.DebugInfo();
        }
        DebugInfo.MergeFrom(other.DebugInfo);
      }
      if (other.HasLocalizedErrorMessage) {
        LocalizedErrorMessage = other.LocalizedErrorMessage;
      }
      if (other.HasPurchaseId) {
        PurchaseId = other.PurchaseId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            if (debugInfo_ == null) {
              DebugInfo = new global::GooglePlayStore.DebugInfo();
            }
            input.ReadMessage(DebugInfo);
            break;
          }
          case 26: {
            LocalizedErrorMessage = input.ReadString();
            break;
          }
          case 34: {
            PurchaseId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PurchaseStatusResponse : pb::IMessage<PurchaseStatusResponse> {
    private static readonly pb::MessageParser<PurchaseStatusResponse> _parser = new pb::MessageParser<PurchaseStatusResponse>(() => new PurchaseStatusResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PurchaseStatusResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseStatusResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseStatusResponse(PurchaseStatusResponse other) : this() {
      _hasBits0 = other._hasBits0;
      status_ = other.status_;
      statusMsg_ = other.statusMsg_;
      statusTitle_ = other.statusTitle_;
      briefMessage_ = other.briefMessage_;
      infoUrl_ = other.infoUrl_;
      libraryUpdate_ = other.libraryUpdate_ != null ? other.libraryUpdate_.Clone() : null;
      rejectedInstrument_ = other.rejectedInstrument_ != null ? other.rejectedInstrument_.Clone() : null;
      appDeliveryData_ = other.appDeliveryData_ != null ? other.appDeliveryData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseStatusResponse Clone() {
      return new PurchaseStatusResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private readonly static int StatusDefaultValue = 0;

    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { if ((_hasBits0 & 1) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 1;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "statusMsg" field.</summary>
    public const int StatusMsgFieldNumber = 2;
    private readonly static string StatusMsgDefaultValue = "";

    private string statusMsg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusMsg {
      get { return statusMsg_ ?? StatusMsgDefaultValue; }
      set {
        statusMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "statusMsg" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatusMsg {
      get { return statusMsg_ != null; }
    }
    /// <summary>Clears the value of the "statusMsg" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatusMsg() {
      statusMsg_ = null;
    }

    /// <summary>Field number for the "statusTitle" field.</summary>
    public const int StatusTitleFieldNumber = 3;
    private readonly static string StatusTitleDefaultValue = "";

    private string statusTitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusTitle {
      get { return statusTitle_ ?? StatusTitleDefaultValue; }
      set {
        statusTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "statusTitle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatusTitle {
      get { return statusTitle_ != null; }
    }
    /// <summary>Clears the value of the "statusTitle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatusTitle() {
      statusTitle_ = null;
    }

    /// <summary>Field number for the "briefMessage" field.</summary>
    public const int BriefMessageFieldNumber = 4;
    private readonly static string BriefMessageDefaultValue = "";

    private string briefMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BriefMessage {
      get { return briefMessage_ ?? BriefMessageDefaultValue; }
      set {
        briefMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "briefMessage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBriefMessage {
      get { return briefMessage_ != null; }
    }
    /// <summary>Clears the value of the "briefMessage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBriefMessage() {
      briefMessage_ = null;
    }

    /// <summary>Field number for the "infoUrl" field.</summary>
    public const int InfoUrlFieldNumber = 5;
    private readonly static string InfoUrlDefaultValue = "";

    private string infoUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InfoUrl {
      get { return infoUrl_ ?? InfoUrlDefaultValue; }
      set {
        infoUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "infoUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInfoUrl {
      get { return infoUrl_ != null; }
    }
    /// <summary>Clears the value of the "infoUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInfoUrl() {
      infoUrl_ = null;
    }

    /// <summary>Field number for the "libraryUpdate" field.</summary>
    public const int LibraryUpdateFieldNumber = 6;
    private global::GooglePlayStore.LibraryUpdate libraryUpdate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.LibraryUpdate LibraryUpdate {
      get { return libraryUpdate_; }
      set {
        libraryUpdate_ = value;
      }
    }

    /// <summary>Field number for the "rejectedInstrument" field.</summary>
    public const int RejectedInstrumentFieldNumber = 7;
    private global::GooglePlayStore.Instrument rejectedInstrument_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Instrument RejectedInstrument {
      get { return rejectedInstrument_; }
      set {
        rejectedInstrument_ = value;
      }
    }

    /// <summary>Field number for the "appDeliveryData" field.</summary>
    public const int AppDeliveryDataFieldNumber = 8;
    private global::GooglePlayStore.AndroidAppDeliveryData appDeliveryData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AndroidAppDeliveryData AppDeliveryData {
      get { return appDeliveryData_; }
      set {
        appDeliveryData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PurchaseStatusResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PurchaseStatusResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (StatusMsg != other.StatusMsg) return false;
      if (StatusTitle != other.StatusTitle) return false;
      if (BriefMessage != other.BriefMessage) return false;
      if (InfoUrl != other.InfoUrl) return false;
      if (!object.Equals(LibraryUpdate, other.LibraryUpdate)) return false;
      if (!object.Equals(RejectedInstrument, other.RejectedInstrument)) return false;
      if (!object.Equals(AppDeliveryData, other.AppDeliveryData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStatus) hash ^= Status.GetHashCode();
      if (HasStatusMsg) hash ^= StatusMsg.GetHashCode();
      if (HasStatusTitle) hash ^= StatusTitle.GetHashCode();
      if (HasBriefMessage) hash ^= BriefMessage.GetHashCode();
      if (HasInfoUrl) hash ^= InfoUrl.GetHashCode();
      if (libraryUpdate_ != null) hash ^= LibraryUpdate.GetHashCode();
      if (rejectedInstrument_ != null) hash ^= RejectedInstrument.GetHashCode();
      if (appDeliveryData_ != null) hash ^= AppDeliveryData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasStatus) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (HasStatusMsg) {
        output.WriteRawTag(18);
        output.WriteString(StatusMsg);
      }
      if (HasStatusTitle) {
        output.WriteRawTag(26);
        output.WriteString(StatusTitle);
      }
      if (HasBriefMessage) {
        output.WriteRawTag(34);
        output.WriteString(BriefMessage);
      }
      if (HasInfoUrl) {
        output.WriteRawTag(42);
        output.WriteString(InfoUrl);
      }
      if (libraryUpdate_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LibraryUpdate);
      }
      if (rejectedInstrument_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RejectedInstrument);
      }
      if (appDeliveryData_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(AppDeliveryData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (HasStatusMsg) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusMsg);
      }
      if (HasStatusTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusTitle);
      }
      if (HasBriefMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BriefMessage);
      }
      if (HasInfoUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InfoUrl);
      }
      if (libraryUpdate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LibraryUpdate);
      }
      if (rejectedInstrument_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RejectedInstrument);
      }
      if (appDeliveryData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppDeliveryData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PurchaseStatusResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.HasStatusMsg) {
        StatusMsg = other.StatusMsg;
      }
      if (other.HasStatusTitle) {
        StatusTitle = other.StatusTitle;
      }
      if (other.HasBriefMessage) {
        BriefMessage = other.BriefMessage;
      }
      if (other.HasInfoUrl) {
        InfoUrl = other.InfoUrl;
      }
      if (other.libraryUpdate_ != null) {
        if (libraryUpdate_ == null) {
          LibraryUpdate = new global::GooglePlayStore.LibraryUpdate();
        }
        LibraryUpdate.MergeFrom(other.LibraryUpdate);
      }
      if (other.rejectedInstrument_ != null) {
        if (rejectedInstrument_ == null) {
          RejectedInstrument = new global::GooglePlayStore.Instrument();
        }
        RejectedInstrument.MergeFrom(other.RejectedInstrument);
      }
      if (other.appDeliveryData_ != null) {
        if (appDeliveryData_ == null) {
          AppDeliveryData = new global::GooglePlayStore.AndroidAppDeliveryData();
        }
        AppDeliveryData.MergeFrom(other.AppDeliveryData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            StatusMsg = input.ReadString();
            break;
          }
          case 26: {
            StatusTitle = input.ReadString();
            break;
          }
          case 34: {
            BriefMessage = input.ReadString();
            break;
          }
          case 42: {
            InfoUrl = input.ReadString();
            break;
          }
          case 50: {
            if (libraryUpdate_ == null) {
              LibraryUpdate = new global::GooglePlayStore.LibraryUpdate();
            }
            input.ReadMessage(LibraryUpdate);
            break;
          }
          case 58: {
            if (rejectedInstrument_ == null) {
              RejectedInstrument = new global::GooglePlayStore.Instrument();
            }
            input.ReadMessage(RejectedInstrument);
            break;
          }
          case 66: {
            if (appDeliveryData_ == null) {
              AppDeliveryData = new global::GooglePlayStore.AndroidAppDeliveryData();
            }
            input.ReadMessage(AppDeliveryData);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PurchaseHistoryDetails : pb::IMessage<PurchaseHistoryDetails> {
    private static readonly pb::MessageParser<PurchaseHistoryDetails> _parser = new pb::MessageParser<PurchaseHistoryDetails>(() => new PurchaseHistoryDetails());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PurchaseHistoryDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseHistoryDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseHistoryDetails(PurchaseHistoryDetails other) : this() {
      _hasBits0 = other._hasBits0;
      purchaseTimestampMillis_ = other.purchaseTimestampMillis_;
      purchaseDetailsHtml_ = other.purchaseDetailsHtml_;
      offer_ = other.offer_ != null ? other.offer_.Clone() : null;
      purchaseStatus_ = other.purchaseStatus_;
      titleBylineHtml_ = other.titleBylineHtml_;
      clientRefundContext_ = other.clientRefundContext_;
      purchaseDetailsImage_ = other.purchaseDetailsImage_ != null ? other.purchaseDetailsImage_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseHistoryDetails Clone() {
      return new PurchaseHistoryDetails(this);
    }

    /// <summary>Field number for the "purchaseTimestampMillis" field.</summary>
    public const int PurchaseTimestampMillisFieldNumber = 2;
    private readonly static long PurchaseTimestampMillisDefaultValue = 0L;

    private long purchaseTimestampMillis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PurchaseTimestampMillis {
      get { if ((_hasBits0 & 1) != 0) { return purchaseTimestampMillis_; } else { return PurchaseTimestampMillisDefaultValue; } }
      set {
        _hasBits0 |= 1;
        purchaseTimestampMillis_ = value;
      }
    }
    /// <summary>Gets whether the "purchaseTimestampMillis" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPurchaseTimestampMillis {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "purchaseTimestampMillis" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPurchaseTimestampMillis() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "purchaseDetailsHtml" field.</summary>
    public const int PurchaseDetailsHtmlFieldNumber = 3;
    private readonly static string PurchaseDetailsHtmlDefaultValue = "";

    private string purchaseDetailsHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PurchaseDetailsHtml {
      get { return purchaseDetailsHtml_ ?? PurchaseDetailsHtmlDefaultValue; }
      set {
        purchaseDetailsHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "purchaseDetailsHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPurchaseDetailsHtml {
      get { return purchaseDetailsHtml_ != null; }
    }
    /// <summary>Clears the value of the "purchaseDetailsHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPurchaseDetailsHtml() {
      purchaseDetailsHtml_ = null;
    }

    /// <summary>Field number for the "offer" field.</summary>
    public const int OfferFieldNumber = 5;
    private global::GooglePlayStore.Offer offer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Offer Offer {
      get { return offer_; }
      set {
        offer_ = value;
      }
    }

    /// <summary>Field number for the "purchaseStatus" field.</summary>
    public const int PurchaseStatusFieldNumber = 6;
    private readonly static string PurchaseStatusDefaultValue = "";

    private string purchaseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PurchaseStatus {
      get { return purchaseStatus_ ?? PurchaseStatusDefaultValue; }
      set {
        purchaseStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "purchaseStatus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPurchaseStatus {
      get { return purchaseStatus_ != null; }
    }
    /// <summary>Clears the value of the "purchaseStatus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPurchaseStatus() {
      purchaseStatus_ = null;
    }

    /// <summary>Field number for the "titleBylineHtml" field.</summary>
    public const int TitleBylineHtmlFieldNumber = 7;
    private readonly static string TitleBylineHtmlDefaultValue = "";

    private string titleBylineHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TitleBylineHtml {
      get { return titleBylineHtml_ ?? TitleBylineHtmlDefaultValue; }
      set {
        titleBylineHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "titleBylineHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitleBylineHtml {
      get { return titleBylineHtml_ != null; }
    }
    /// <summary>Clears the value of the "titleBylineHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitleBylineHtml() {
      titleBylineHtml_ = null;
    }

    /// <summary>Field number for the "clientRefundContext" field.</summary>
    public const int ClientRefundContextFieldNumber = 8;
    private readonly static pb::ByteString ClientRefundContextDefaultValue = pb::ByteString.Empty;

    private pb::ByteString clientRefundContext_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ClientRefundContext {
      get { return clientRefundContext_ ?? ClientRefundContextDefaultValue; }
      set {
        clientRefundContext_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clientRefundContext" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClientRefundContext {
      get { return clientRefundContext_ != null; }
    }
    /// <summary>Clears the value of the "clientRefundContext" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClientRefundContext() {
      clientRefundContext_ = null;
    }

    /// <summary>Field number for the "purchaseDetailsImage" field.</summary>
    public const int PurchaseDetailsImageFieldNumber = 9;
    private global::GooglePlayStore.Image purchaseDetailsImage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Image PurchaseDetailsImage {
      get { return purchaseDetailsImage_; }
      set {
        purchaseDetailsImage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PurchaseHistoryDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PurchaseHistoryDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PurchaseTimestampMillis != other.PurchaseTimestampMillis) return false;
      if (PurchaseDetailsHtml != other.PurchaseDetailsHtml) return false;
      if (!object.Equals(Offer, other.Offer)) return false;
      if (PurchaseStatus != other.PurchaseStatus) return false;
      if (TitleBylineHtml != other.TitleBylineHtml) return false;
      if (ClientRefundContext != other.ClientRefundContext) return false;
      if (!object.Equals(PurchaseDetailsImage, other.PurchaseDetailsImage)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPurchaseTimestampMillis) hash ^= PurchaseTimestampMillis.GetHashCode();
      if (HasPurchaseDetailsHtml) hash ^= PurchaseDetailsHtml.GetHashCode();
      if (offer_ != null) hash ^= Offer.GetHashCode();
      if (HasPurchaseStatus) hash ^= PurchaseStatus.GetHashCode();
      if (HasTitleBylineHtml) hash ^= TitleBylineHtml.GetHashCode();
      if (HasClientRefundContext) hash ^= ClientRefundContext.GetHashCode();
      if (purchaseDetailsImage_ != null) hash ^= PurchaseDetailsImage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasPurchaseTimestampMillis) {
        output.WriteRawTag(16);
        output.WriteInt64(PurchaseTimestampMillis);
      }
      if (HasPurchaseDetailsHtml) {
        output.WriteRawTag(26);
        output.WriteString(PurchaseDetailsHtml);
      }
      if (offer_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Offer);
      }
      if (HasPurchaseStatus) {
        output.WriteRawTag(50);
        output.WriteString(PurchaseStatus);
      }
      if (HasTitleBylineHtml) {
        output.WriteRawTag(58);
        output.WriteString(TitleBylineHtml);
      }
      if (HasClientRefundContext) {
        output.WriteRawTag(66);
        output.WriteBytes(ClientRefundContext);
      }
      if (purchaseDetailsImage_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PurchaseDetailsImage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPurchaseTimestampMillis) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PurchaseTimestampMillis);
      }
      if (HasPurchaseDetailsHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PurchaseDetailsHtml);
      }
      if (offer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Offer);
      }
      if (HasPurchaseStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PurchaseStatus);
      }
      if (HasTitleBylineHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TitleBylineHtml);
      }
      if (HasClientRefundContext) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ClientRefundContext);
      }
      if (purchaseDetailsImage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PurchaseDetailsImage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PurchaseHistoryDetails other) {
      if (other == null) {
        return;
      }
      if (other.HasPurchaseTimestampMillis) {
        PurchaseTimestampMillis = other.PurchaseTimestampMillis;
      }
      if (other.HasPurchaseDetailsHtml) {
        PurchaseDetailsHtml = other.PurchaseDetailsHtml;
      }
      if (other.offer_ != null) {
        if (offer_ == null) {
          Offer = new global::GooglePlayStore.Offer();
        }
        Offer.MergeFrom(other.Offer);
      }
      if (other.HasPurchaseStatus) {
        PurchaseStatus = other.PurchaseStatus;
      }
      if (other.HasTitleBylineHtml) {
        TitleBylineHtml = other.TitleBylineHtml;
      }
      if (other.HasClientRefundContext) {
        ClientRefundContext = other.ClientRefundContext;
      }
      if (other.purchaseDetailsImage_ != null) {
        if (purchaseDetailsImage_ == null) {
          PurchaseDetailsImage = new global::GooglePlayStore.Image();
        }
        PurchaseDetailsImage.MergeFrom(other.PurchaseDetailsImage);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            PurchaseTimestampMillis = input.ReadInt64();
            break;
          }
          case 26: {
            PurchaseDetailsHtml = input.ReadString();
            break;
          }
          case 42: {
            if (offer_ == null) {
              Offer = new global::GooglePlayStore.Offer();
            }
            input.ReadMessage(Offer);
            break;
          }
          case 50: {
            PurchaseStatus = input.ReadString();
            break;
          }
          case 58: {
            TitleBylineHtml = input.ReadString();
            break;
          }
          case 66: {
            ClientRefundContext = input.ReadBytes();
            break;
          }
          case 74: {
            if (purchaseDetailsImage_ == null) {
              PurchaseDetailsImage = new global::GooglePlayStore.Image();
            }
            input.ReadMessage(PurchaseDetailsImage);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BillingProfileResponse : pb::IMessage<BillingProfileResponse> {
    private static readonly pb::MessageParser<BillingProfileResponse> _parser = new pb::MessageParser<BillingProfileResponse>(() => new BillingProfileResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BillingProfileResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingProfileResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingProfileResponse(BillingProfileResponse other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      billingProfile_ = other.billingProfile_ != null ? other.billingProfile_.Clone() : null;
      userMessageHtml_ = other.userMessageHtml_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingProfileResponse Clone() {
      return new BillingProfileResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static int ResultDefaultValue = 0;

    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "billingProfile" field.</summary>
    public const int BillingProfileFieldNumber = 2;
    private global::GooglePlayStore.BillingProfile billingProfile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.BillingProfile BillingProfile {
      get { return billingProfile_; }
      set {
        billingProfile_ = value;
      }
    }

    /// <summary>Field number for the "userMessageHtml" field.</summary>
    public const int UserMessageHtmlFieldNumber = 3;
    private readonly static string UserMessageHtmlDefaultValue = "";

    private string userMessageHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserMessageHtml {
      get { return userMessageHtml_ ?? UserMessageHtmlDefaultValue; }
      set {
        userMessageHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userMessageHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserMessageHtml {
      get { return userMessageHtml_ != null; }
    }
    /// <summary>Clears the value of the "userMessageHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserMessageHtml() {
      userMessageHtml_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BillingProfileResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BillingProfileResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(BillingProfile, other.BillingProfile)) return false;
      if (UserMessageHtml != other.UserMessageHtml) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (billingProfile_ != null) hash ^= BillingProfile.GetHashCode();
      if (HasUserMessageHtml) hash ^= UserMessageHtml.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (billingProfile_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BillingProfile);
      }
      if (HasUserMessageHtml) {
        output.WriteRawTag(26);
        output.WriteString(UserMessageHtml);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (billingProfile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BillingProfile);
      }
      if (HasUserMessageHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserMessageHtml);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BillingProfileResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.billingProfile_ != null) {
        if (billingProfile_ == null) {
          BillingProfile = new global::GooglePlayStore.BillingProfile();
        }
        BillingProfile.MergeFrom(other.BillingProfile);
      }
      if (other.HasUserMessageHtml) {
        UserMessageHtml = other.UserMessageHtml;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 18: {
            if (billingProfile_ == null) {
              BillingProfile = new global::GooglePlayStore.BillingProfile();
            }
            input.ReadMessage(BillingProfile);
            break;
          }
          case 26: {
            UserMessageHtml = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CheckInstrumentResponse : pb::IMessage<CheckInstrumentResponse> {
    private static readonly pb::MessageParser<CheckInstrumentResponse> _parser = new pb::MessageParser<CheckInstrumentResponse>(() => new CheckInstrumentResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckInstrumentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckInstrumentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckInstrumentResponse(CheckInstrumentResponse other) : this() {
      _hasBits0 = other._hasBits0;
      userHasValidInstrument_ = other.userHasValidInstrument_;
      checkoutTokenRequired_ = other.checkoutTokenRequired_;
      instrument_ = other.instrument_.Clone();
      eligibleInstrument_ = other.eligibleInstrument_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckInstrumentResponse Clone() {
      return new CheckInstrumentResponse(this);
    }

    /// <summary>Field number for the "userHasValidInstrument" field.</summary>
    public const int UserHasValidInstrumentFieldNumber = 1;
    private readonly static bool UserHasValidInstrumentDefaultValue = false;

    private bool userHasValidInstrument_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UserHasValidInstrument {
      get { if ((_hasBits0 & 1) != 0) { return userHasValidInstrument_; } else { return UserHasValidInstrumentDefaultValue; } }
      set {
        _hasBits0 |= 1;
        userHasValidInstrument_ = value;
      }
    }
    /// <summary>Gets whether the "userHasValidInstrument" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserHasValidInstrument {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "userHasValidInstrument" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserHasValidInstrument() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "checkoutTokenRequired" field.</summary>
    public const int CheckoutTokenRequiredFieldNumber = 2;
    private readonly static bool CheckoutTokenRequiredDefaultValue = false;

    private bool checkoutTokenRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CheckoutTokenRequired {
      get { if ((_hasBits0 & 2) != 0) { return checkoutTokenRequired_; } else { return CheckoutTokenRequiredDefaultValue; } }
      set {
        _hasBits0 |= 2;
        checkoutTokenRequired_ = value;
      }
    }
    /// <summary>Gets whether the "checkoutTokenRequired" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCheckoutTokenRequired {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "checkoutTokenRequired" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCheckoutTokenRequired() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "instrument" field.</summary>
    public const int InstrumentFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Instrument> _repeated_instrument_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.Instrument.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Instrument> instrument_ = new pbc::RepeatedField<global::GooglePlayStore.Instrument>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Instrument> Instrument {
      get { return instrument_; }
    }

    /// <summary>Field number for the "eligibleInstrument" field.</summary>
    public const int EligibleInstrumentFieldNumber = 5;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Instrument> _repeated_eligibleInstrument_codec
        = pb::FieldCodec.ForMessage(42, global::GooglePlayStore.Instrument.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Instrument> eligibleInstrument_ = new pbc::RepeatedField<global::GooglePlayStore.Instrument>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Instrument> EligibleInstrument {
      get { return eligibleInstrument_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckInstrumentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckInstrumentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserHasValidInstrument != other.UserHasValidInstrument) return false;
      if (CheckoutTokenRequired != other.CheckoutTokenRequired) return false;
      if(!instrument_.Equals(other.instrument_)) return false;
      if(!eligibleInstrument_.Equals(other.eligibleInstrument_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUserHasValidInstrument) hash ^= UserHasValidInstrument.GetHashCode();
      if (HasCheckoutTokenRequired) hash ^= CheckoutTokenRequired.GetHashCode();
      hash ^= instrument_.GetHashCode();
      hash ^= eligibleInstrument_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasUserHasValidInstrument) {
        output.WriteRawTag(8);
        output.WriteBool(UserHasValidInstrument);
      }
      if (HasCheckoutTokenRequired) {
        output.WriteRawTag(16);
        output.WriteBool(CheckoutTokenRequired);
      }
      instrument_.WriteTo(output, _repeated_instrument_codec);
      eligibleInstrument_.WriteTo(output, _repeated_eligibleInstrument_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUserHasValidInstrument) {
        size += 1 + 1;
      }
      if (HasCheckoutTokenRequired) {
        size += 1 + 1;
      }
      size += instrument_.CalculateSize(_repeated_instrument_codec);
      size += eligibleInstrument_.CalculateSize(_repeated_eligibleInstrument_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckInstrumentResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasUserHasValidInstrument) {
        UserHasValidInstrument = other.UserHasValidInstrument;
      }
      if (other.HasCheckoutTokenRequired) {
        CheckoutTokenRequired = other.CheckoutTokenRequired;
      }
      instrument_.Add(other.instrument_);
      eligibleInstrument_.Add(other.eligibleInstrument_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserHasValidInstrument = input.ReadBool();
            break;
          }
          case 16: {
            CheckoutTokenRequired = input.ReadBool();
            break;
          }
          case 34: {
            instrument_.AddEntriesFrom(input, _repeated_instrument_codec);
            break;
          }
          case 42: {
            eligibleInstrument_.AddEntriesFrom(input, _repeated_eligibleInstrument_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InstrumentSetupInfoResponse : pb::IMessage<InstrumentSetupInfoResponse> {
    private static readonly pb::MessageParser<InstrumentSetupInfoResponse> _parser = new pb::MessageParser<InstrumentSetupInfoResponse>(() => new InstrumentSetupInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InstrumentSetupInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstrumentSetupInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstrumentSetupInfoResponse(InstrumentSetupInfoResponse other) : this() {
      _hasBits0 = other._hasBits0;
      setupInfo_ = other.setupInfo_.Clone();
      checkoutTokenRequired_ = other.checkoutTokenRequired_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstrumentSetupInfoResponse Clone() {
      return new InstrumentSetupInfoResponse(this);
    }

    /// <summary>Field number for the "setupInfo" field.</summary>
    public const int SetupInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GooglePlayStore.InstrumentSetupInfo> _repeated_setupInfo_codec
        = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.InstrumentSetupInfo.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.InstrumentSetupInfo> setupInfo_ = new pbc::RepeatedField<global::GooglePlayStore.InstrumentSetupInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.InstrumentSetupInfo> SetupInfo {
      get { return setupInfo_; }
    }

    /// <summary>Field number for the "checkoutTokenRequired" field.</summary>
    public const int CheckoutTokenRequiredFieldNumber = 2;
    private readonly static bool CheckoutTokenRequiredDefaultValue = false;

    private bool checkoutTokenRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CheckoutTokenRequired {
      get { if ((_hasBits0 & 1) != 0) { return checkoutTokenRequired_; } else { return CheckoutTokenRequiredDefaultValue; } }
      set {
        _hasBits0 |= 1;
        checkoutTokenRequired_ = value;
      }
    }
    /// <summary>Gets whether the "checkoutTokenRequired" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCheckoutTokenRequired {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "checkoutTokenRequired" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCheckoutTokenRequired() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InstrumentSetupInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InstrumentSetupInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!setupInfo_.Equals(other.setupInfo_)) return false;
      if (CheckoutTokenRequired != other.CheckoutTokenRequired) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= setupInfo_.GetHashCode();
      if (HasCheckoutTokenRequired) hash ^= CheckoutTokenRequired.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      setupInfo_.WriteTo(output, _repeated_setupInfo_codec);
      if (HasCheckoutTokenRequired) {
        output.WriteRawTag(16);
        output.WriteBool(CheckoutTokenRequired);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += setupInfo_.CalculateSize(_repeated_setupInfo_codec);
      if (HasCheckoutTokenRequired) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InstrumentSetupInfoResponse other) {
      if (other == null) {
        return;
      }
      setupInfo_.Add(other.setupInfo_);
      if (other.HasCheckoutTokenRequired) {
        CheckoutTokenRequired = other.CheckoutTokenRequired;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            setupInfo_.AddEntriesFrom(input, _repeated_setupInfo_codec);
            break;
          }
          case 16: {
            CheckoutTokenRequired = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RedeemGiftCardRequest : pb::IMessage<RedeemGiftCardRequest> {
    private static readonly pb::MessageParser<RedeemGiftCardRequest> _parser = new pb::MessageParser<RedeemGiftCardRequest>(() => new RedeemGiftCardRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RedeemGiftCardRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemGiftCardRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemGiftCardRequest(RedeemGiftCardRequest other) : this() {
      giftCardPin_ = other.giftCardPin_;
      address_ = other.address_ != null ? other.address_.Clone() : null;
      acceptedLegalDocumentId_ = other.acceptedLegalDocumentId_.Clone();
      checkoutToken_ = other.checkoutToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemGiftCardRequest Clone() {
      return new RedeemGiftCardRequest(this);
    }

    /// <summary>Field number for the "giftCardPin" field.</summary>
    public const int GiftCardPinFieldNumber = 1;
    private readonly static string GiftCardPinDefaultValue = "";

    private string giftCardPin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GiftCardPin {
      get { return giftCardPin_ ?? GiftCardPinDefaultValue; }
      set {
        giftCardPin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "giftCardPin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGiftCardPin {
      get { return giftCardPin_ != null; }
    }
    /// <summary>Clears the value of the "giftCardPin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGiftCardPin() {
      giftCardPin_ = null;
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 2;
    private global::GooglePlayStore.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "acceptedLegalDocumentId" field.</summary>
    public const int AcceptedLegalDocumentIdFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_acceptedLegalDocumentId_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> acceptedLegalDocumentId_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AcceptedLegalDocumentId {
      get { return acceptedLegalDocumentId_; }
    }

    /// <summary>Field number for the "checkoutToken" field.</summary>
    public const int CheckoutTokenFieldNumber = 4;
    private readonly static string CheckoutTokenDefaultValue = "";

    private string checkoutToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CheckoutToken {
      get { return checkoutToken_ ?? CheckoutTokenDefaultValue; }
      set {
        checkoutToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "checkoutToken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCheckoutToken {
      get { return checkoutToken_ != null; }
    }
    /// <summary>Clears the value of the "checkoutToken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCheckoutToken() {
      checkoutToken_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RedeemGiftCardRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RedeemGiftCardRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GiftCardPin != other.GiftCardPin) return false;
      if (!object.Equals(Address, other.Address)) return false;
      if(!acceptedLegalDocumentId_.Equals(other.acceptedLegalDocumentId_)) return false;
      if (CheckoutToken != other.CheckoutToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGiftCardPin) hash ^= GiftCardPin.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      hash ^= acceptedLegalDocumentId_.GetHashCode();
      if (HasCheckoutToken) hash ^= CheckoutToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasGiftCardPin) {
        output.WriteRawTag(10);
        output.WriteString(GiftCardPin);
      }
      if (address_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Address);
      }
      acceptedLegalDocumentId_.WriteTo(output, _repeated_acceptedLegalDocumentId_codec);
      if (HasCheckoutToken) {
        output.WriteRawTag(34);
        output.WriteString(CheckoutToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasGiftCardPin) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GiftCardPin);
      }
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      size += acceptedLegalDocumentId_.CalculateSize(_repeated_acceptedLegalDocumentId_codec);
      if (HasCheckoutToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CheckoutToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RedeemGiftCardRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasGiftCardPin) {
        GiftCardPin = other.GiftCardPin;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::GooglePlayStore.Address();
        }
        Address.MergeFrom(other.Address);
      }
      acceptedLegalDocumentId_.Add(other.acceptedLegalDocumentId_);
      if (other.HasCheckoutToken) {
        CheckoutToken = other.CheckoutToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GiftCardPin = input.ReadString();
            break;
          }
          case 18: {
            if (address_ == null) {
              Address = new global::GooglePlayStore.Address();
            }
            input.ReadMessage(Address);
            break;
          }
          case 26: {
            acceptedLegalDocumentId_.AddEntriesFrom(input, _repeated_acceptedLegalDocumentId_codec);
            break;
          }
          case 34: {
            CheckoutToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RedeemGiftCardResponse : pb::IMessage<RedeemGiftCardResponse> {
    private static readonly pb::MessageParser<RedeemGiftCardResponse> _parser = new pb::MessageParser<RedeemGiftCardResponse>(() => new RedeemGiftCardResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RedeemGiftCardResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemGiftCardResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemGiftCardResponse(RedeemGiftCardResponse other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      userMessageHtml_ = other.userMessageHtml_;
      balanceHtml_ = other.balanceHtml_;
      addressChallenge_ = other.addressChallenge_ != null ? other.addressChallenge_.Clone() : null;
      checkoutTokenRequired_ = other.checkoutTokenRequired_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemGiftCardResponse Clone() {
      return new RedeemGiftCardResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static int ResultDefaultValue = 0;

    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "userMessageHtml" field.</summary>
    public const int UserMessageHtmlFieldNumber = 2;
    private readonly static string UserMessageHtmlDefaultValue = "";

    private string userMessageHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserMessageHtml {
      get { return userMessageHtml_ ?? UserMessageHtmlDefaultValue; }
      set {
        userMessageHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userMessageHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserMessageHtml {
      get { return userMessageHtml_ != null; }
    }
    /// <summary>Clears the value of the "userMessageHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserMessageHtml() {
      userMessageHtml_ = null;
    }

    /// <summary>Field number for the "balanceHtml" field.</summary>
    public const int BalanceHtmlFieldNumber = 3;
    private readonly static string BalanceHtmlDefaultValue = "";

    private string balanceHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BalanceHtml {
      get { return balanceHtml_ ?? BalanceHtmlDefaultValue; }
      set {
        balanceHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "balanceHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBalanceHtml {
      get { return balanceHtml_ != null; }
    }
    /// <summary>Clears the value of the "balanceHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBalanceHtml() {
      balanceHtml_ = null;
    }

    /// <summary>Field number for the "addressChallenge" field.</summary>
    public const int AddressChallengeFieldNumber = 4;
    private global::GooglePlayStore.AddressChallenge addressChallenge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AddressChallenge AddressChallenge {
      get { return addressChallenge_; }
      set {
        addressChallenge_ = value;
      }
    }

    /// <summary>Field number for the "checkoutTokenRequired" field.</summary>
    public const int CheckoutTokenRequiredFieldNumber = 5;
    private readonly static bool CheckoutTokenRequiredDefaultValue = false;

    private bool checkoutTokenRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CheckoutTokenRequired {
      get { if ((_hasBits0 & 2) != 0) { return checkoutTokenRequired_; } else { return CheckoutTokenRequiredDefaultValue; } }
      set {
        _hasBits0 |= 2;
        checkoutTokenRequired_ = value;
      }
    }
    /// <summary>Gets whether the "checkoutTokenRequired" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCheckoutTokenRequired {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "checkoutTokenRequired" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCheckoutTokenRequired() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RedeemGiftCardResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RedeemGiftCardResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (UserMessageHtml != other.UserMessageHtml) return false;
      if (BalanceHtml != other.BalanceHtml) return false;
      if (!object.Equals(AddressChallenge, other.AddressChallenge)) return false;
      if (CheckoutTokenRequired != other.CheckoutTokenRequired) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (HasUserMessageHtml) hash ^= UserMessageHtml.GetHashCode();
      if (HasBalanceHtml) hash ^= BalanceHtml.GetHashCode();
      if (addressChallenge_ != null) hash ^= AddressChallenge.GetHashCode();
      if (HasCheckoutTokenRequired) hash ^= CheckoutTokenRequired.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (HasUserMessageHtml) {
        output.WriteRawTag(18);
        output.WriteString(UserMessageHtml);
      }
      if (HasBalanceHtml) {
        output.WriteRawTag(26);
        output.WriteString(BalanceHtml);
      }
      if (addressChallenge_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AddressChallenge);
      }
      if (HasCheckoutTokenRequired) {
        output.WriteRawTag(40);
        output.WriteBool(CheckoutTokenRequired);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (HasUserMessageHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserMessageHtml);
      }
      if (HasBalanceHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BalanceHtml);
      }
      if (addressChallenge_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddressChallenge);
      }
      if (HasCheckoutTokenRequired) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RedeemGiftCardResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasUserMessageHtml) {
        UserMessageHtml = other.UserMessageHtml;
      }
      if (other.HasBalanceHtml) {
        BalanceHtml = other.BalanceHtml;
      }
      if (other.addressChallenge_ != null) {
        if (addressChallenge_ == null) {
          AddressChallenge = new global::GooglePlayStore.AddressChallenge();
        }
        AddressChallenge.MergeFrom(other.AddressChallenge);
      }
      if (other.HasCheckoutTokenRequired) {
        CheckoutTokenRequired = other.CheckoutTokenRequired;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 18: {
            UserMessageHtml = input.ReadString();
            break;
          }
          case 26: {
            BalanceHtml = input.ReadString();
            break;
          }
          case 34: {
            if (addressChallenge_ == null) {
              AddressChallenge = new global::GooglePlayStore.AddressChallenge();
            }
            input.ReadMessage(AddressChallenge);
            break;
          }
          case 40: {
            CheckoutTokenRequired = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateInstrumentRequest : pb::IMessage<UpdateInstrumentRequest> {
    private static readonly pb::MessageParser<UpdateInstrumentRequest> _parser = new pb::MessageParser<UpdateInstrumentRequest>(() => new UpdateInstrumentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateInstrumentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInstrumentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInstrumentRequest(UpdateInstrumentRequest other) : this() {
      instrument_ = other.instrument_ != null ? other.instrument_.Clone() : null;
      checkoutToken_ = other.checkoutToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInstrumentRequest Clone() {
      return new UpdateInstrumentRequest(this);
    }

    /// <summary>Field number for the "instrument" field.</summary>
    public const int InstrumentFieldNumber = 1;
    private global::GooglePlayStore.Instrument instrument_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Instrument Instrument {
      get { return instrument_; }
      set {
        instrument_ = value;
      }
    }

    /// <summary>Field number for the "checkoutToken" field.</summary>
    public const int CheckoutTokenFieldNumber = 2;
    private readonly static string CheckoutTokenDefaultValue = "";

    private string checkoutToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CheckoutToken {
      get { return checkoutToken_ ?? CheckoutTokenDefaultValue; }
      set {
        checkoutToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "checkoutToken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCheckoutToken {
      get { return checkoutToken_ != null; }
    }
    /// <summary>Clears the value of the "checkoutToken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCheckoutToken() {
      checkoutToken_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateInstrumentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateInstrumentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Instrument, other.Instrument)) return false;
      if (CheckoutToken != other.CheckoutToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (instrument_ != null) hash ^= Instrument.GetHashCode();
      if (HasCheckoutToken) hash ^= CheckoutToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (instrument_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Instrument);
      }
      if (HasCheckoutToken) {
        output.WriteRawTag(18);
        output.WriteString(CheckoutToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (instrument_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Instrument);
      }
      if (HasCheckoutToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CheckoutToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateInstrumentRequest other) {
      if (other == null) {
        return;
      }
      if (other.instrument_ != null) {
        if (instrument_ == null) {
          Instrument = new global::GooglePlayStore.Instrument();
        }
        Instrument.MergeFrom(other.Instrument);
      }
      if (other.HasCheckoutToken) {
        CheckoutToken = other.CheckoutToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (instrument_ == null) {
              Instrument = new global::GooglePlayStore.Instrument();
            }
            input.ReadMessage(Instrument);
            break;
          }
          case 18: {
            CheckoutToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateInstrumentResponse : pb::IMessage<UpdateInstrumentResponse> {
    private static readonly pb::MessageParser<UpdateInstrumentResponse> _parser = new pb::MessageParser<UpdateInstrumentResponse>(() => new UpdateInstrumentResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateInstrumentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInstrumentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInstrumentResponse(UpdateInstrumentResponse other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      instrumentId_ = other.instrumentId_;
      userMessageHtml_ = other.userMessageHtml_;
      errorInputField_ = other.errorInputField_.Clone();
      checkoutTokenRequired_ = other.checkoutTokenRequired_;
      redeemedOffer_ = other.redeemedOffer_ != null ? other.redeemedOffer_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInstrumentResponse Clone() {
      return new UpdateInstrumentResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static int ResultDefaultValue = 0;

    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "instrumentId" field.</summary>
    public const int InstrumentIdFieldNumber = 2;
    private readonly static string InstrumentIdDefaultValue = "";

    private string instrumentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstrumentId {
      get { return instrumentId_ ?? InstrumentIdDefaultValue; }
      set {
        instrumentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "instrumentId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInstrumentId {
      get { return instrumentId_ != null; }
    }
    /// <summary>Clears the value of the "instrumentId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInstrumentId() {
      instrumentId_ = null;
    }

    /// <summary>Field number for the "userMessageHtml" field.</summary>
    public const int UserMessageHtmlFieldNumber = 3;
    private readonly static string UserMessageHtmlDefaultValue = "";

    private string userMessageHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserMessageHtml {
      get { return userMessageHtml_ ?? UserMessageHtmlDefaultValue; }
      set {
        userMessageHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userMessageHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserMessageHtml {
      get { return userMessageHtml_ != null; }
    }
    /// <summary>Clears the value of the "userMessageHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserMessageHtml() {
      userMessageHtml_ = null;
    }

    /// <summary>Field number for the "errorInputField" field.</summary>
    public const int ErrorInputFieldFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.InputValidationError> _repeated_errorInputField_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.InputValidationError.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.InputValidationError> errorInputField_ = new pbc::RepeatedField<global::GooglePlayStore.InputValidationError>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.InputValidationError> ErrorInputField {
      get { return errorInputField_; }
    }

    /// <summary>Field number for the "checkoutTokenRequired" field.</summary>
    public const int CheckoutTokenRequiredFieldNumber = 5;
    private readonly static bool CheckoutTokenRequiredDefaultValue = false;

    private bool checkoutTokenRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CheckoutTokenRequired {
      get { if ((_hasBits0 & 2) != 0) { return checkoutTokenRequired_; } else { return CheckoutTokenRequiredDefaultValue; } }
      set {
        _hasBits0 |= 2;
        checkoutTokenRequired_ = value;
      }
    }
    /// <summary>Gets whether the "checkoutTokenRequired" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCheckoutTokenRequired {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "checkoutTokenRequired" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCheckoutTokenRequired() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "redeemedOffer" field.</summary>
    public const int RedeemedOfferFieldNumber = 6;
    private global::GooglePlayStore.RedeemedPromoOffer redeemedOffer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.RedeemedPromoOffer RedeemedOffer {
      get { return redeemedOffer_; }
      set {
        redeemedOffer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateInstrumentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateInstrumentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (InstrumentId != other.InstrumentId) return false;
      if (UserMessageHtml != other.UserMessageHtml) return false;
      if(!errorInputField_.Equals(other.errorInputField_)) return false;
      if (CheckoutTokenRequired != other.CheckoutTokenRequired) return false;
      if (!object.Equals(RedeemedOffer, other.RedeemedOffer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (HasInstrumentId) hash ^= InstrumentId.GetHashCode();
      if (HasUserMessageHtml) hash ^= UserMessageHtml.GetHashCode();
      hash ^= errorInputField_.GetHashCode();
      if (HasCheckoutTokenRequired) hash ^= CheckoutTokenRequired.GetHashCode();
      if (redeemedOffer_ != null) hash ^= RedeemedOffer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (HasInstrumentId) {
        output.WriteRawTag(18);
        output.WriteString(InstrumentId);
      }
      if (HasUserMessageHtml) {
        output.WriteRawTag(26);
        output.WriteString(UserMessageHtml);
      }
      errorInputField_.WriteTo(output, _repeated_errorInputField_codec);
      if (HasCheckoutTokenRequired) {
        output.WriteRawTag(40);
        output.WriteBool(CheckoutTokenRequired);
      }
      if (redeemedOffer_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RedeemedOffer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (HasInstrumentId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentId);
      }
      if (HasUserMessageHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserMessageHtml);
      }
      size += errorInputField_.CalculateSize(_repeated_errorInputField_codec);
      if (HasCheckoutTokenRequired) {
        size += 1 + 1;
      }
      if (redeemedOffer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RedeemedOffer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateInstrumentResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasInstrumentId) {
        InstrumentId = other.InstrumentId;
      }
      if (other.HasUserMessageHtml) {
        UserMessageHtml = other.UserMessageHtml;
      }
      errorInputField_.Add(other.errorInputField_);
      if (other.HasCheckoutTokenRequired) {
        CheckoutTokenRequired = other.CheckoutTokenRequired;
      }
      if (other.redeemedOffer_ != null) {
        if (redeemedOffer_ == null) {
          RedeemedOffer = new global::GooglePlayStore.RedeemedPromoOffer();
        }
        RedeemedOffer.MergeFrom(other.RedeemedOffer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 18: {
            InstrumentId = input.ReadString();
            break;
          }
          case 26: {
            UserMessageHtml = input.ReadString();
            break;
          }
          case 34: {
            errorInputField_.AddEntriesFrom(input, _repeated_errorInputField_codec);
            break;
          }
          case 40: {
            CheckoutTokenRequired = input.ReadBool();
            break;
          }
          case 50: {
            if (redeemedOffer_ == null) {
              RedeemedOffer = new global::GooglePlayStore.RedeemedPromoOffer();
            }
            input.ReadMessage(RedeemedOffer);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InitiateAssociationResponse : pb::IMessage<InitiateAssociationResponse> {
    private static readonly pb::MessageParser<InitiateAssociationResponse> _parser = new pb::MessageParser<InitiateAssociationResponse>(() => new InitiateAssociationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitiateAssociationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitiateAssociationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitiateAssociationResponse(InitiateAssociationResponse other) : this() {
      userToken_ = other.userToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitiateAssociationResponse Clone() {
      return new InitiateAssociationResponse(this);
    }

    /// <summary>Field number for the "userToken" field.</summary>
    public const int UserTokenFieldNumber = 1;
    private readonly static string UserTokenDefaultValue = "";

    private string userToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserToken {
      get { return userToken_ ?? UserTokenDefaultValue; }
      set {
        userToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userToken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserToken {
      get { return userToken_ != null; }
    }
    /// <summary>Clears the value of the "userToken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserToken() {
      userToken_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitiateAssociationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitiateAssociationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserToken != other.UserToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUserToken) hash ^= UserToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasUserToken) {
        output.WriteRawTag(10);
        output.WriteString(UserToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUserToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitiateAssociationResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasUserToken) {
        UserToken = other.UserToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VerifyAssociationResponse : pb::IMessage<VerifyAssociationResponse> {
    private static readonly pb::MessageParser<VerifyAssociationResponse> _parser = new pb::MessageParser<VerifyAssociationResponse>(() => new VerifyAssociationResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerifyAssociationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyAssociationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyAssociationResponse(VerifyAssociationResponse other) : this() {
      _hasBits0 = other._hasBits0;
      status_ = other.status_;
      billingAddress_ = other.billingAddress_ != null ? other.billingAddress_.Clone() : null;
      carrierTos_ = other.carrierTos_ != null ? other.carrierTos_.Clone() : null;
      carrierErrorMessage_ = other.carrierErrorMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyAssociationResponse Clone() {
      return new VerifyAssociationResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private readonly static int StatusDefaultValue = 0;

    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { if ((_hasBits0 & 1) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 1;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "billingAddress" field.</summary>
    public const int BillingAddressFieldNumber = 2;
    private global::GooglePlayStore.Address billingAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Address BillingAddress {
      get { return billingAddress_; }
      set {
        billingAddress_ = value;
      }
    }

    /// <summary>Field number for the "carrierTos" field.</summary>
    public const int CarrierTosFieldNumber = 3;
    private global::GooglePlayStore.CarrierTos carrierTos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CarrierTos CarrierTos {
      get { return carrierTos_; }
      set {
        carrierTos_ = value;
      }
    }

    /// <summary>Field number for the "carrierErrorMessage" field.</summary>
    public const int CarrierErrorMessageFieldNumber = 4;
    private readonly static string CarrierErrorMessageDefaultValue = "";

    private string carrierErrorMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierErrorMessage {
      get { return carrierErrorMessage_ ?? CarrierErrorMessageDefaultValue; }
      set {
        carrierErrorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "carrierErrorMessage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCarrierErrorMessage {
      get { return carrierErrorMessage_ != null; }
    }
    /// <summary>Clears the value of the "carrierErrorMessage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCarrierErrorMessage() {
      carrierErrorMessage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerifyAssociationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerifyAssociationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (!object.Equals(BillingAddress, other.BillingAddress)) return false;
      if (!object.Equals(CarrierTos, other.CarrierTos)) return false;
      if (CarrierErrorMessage != other.CarrierErrorMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStatus) hash ^= Status.GetHashCode();
      if (billingAddress_ != null) hash ^= BillingAddress.GetHashCode();
      if (carrierTos_ != null) hash ^= CarrierTos.GetHashCode();
      if (HasCarrierErrorMessage) hash ^= CarrierErrorMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasStatus) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (billingAddress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BillingAddress);
      }
      if (carrierTos_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CarrierTos);
      }
      if (HasCarrierErrorMessage) {
        output.WriteRawTag(34);
        output.WriteString(CarrierErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (billingAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BillingAddress);
      }
      if (carrierTos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CarrierTos);
      }
      if (HasCarrierErrorMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierErrorMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerifyAssociationResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.billingAddress_ != null) {
        if (billingAddress_ == null) {
          BillingAddress = new global::GooglePlayStore.Address();
        }
        BillingAddress.MergeFrom(other.BillingAddress);
      }
      if (other.carrierTos_ != null) {
        if (carrierTos_ == null) {
          CarrierTos = new global::GooglePlayStore.CarrierTos();
        }
        CarrierTos.MergeFrom(other.CarrierTos);
      }
      if (other.HasCarrierErrorMessage) {
        CarrierErrorMessage = other.CarrierErrorMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            if (billingAddress_ == null) {
              BillingAddress = new global::GooglePlayStore.Address();
            }
            input.ReadMessage(BillingAddress);
            break;
          }
          case 26: {
            if (carrierTos_ == null) {
              CarrierTos = new global::GooglePlayStore.CarrierTos();
            }
            input.ReadMessage(CarrierTos);
            break;
          }
          case 34: {
            CarrierErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddressChallenge : pb::IMessage<AddressChallenge> {
    private static readonly pb::MessageParser<AddressChallenge> _parser = new pb::MessageParser<AddressChallenge>(() => new AddressChallenge());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddressChallenge> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressChallenge() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressChallenge(AddressChallenge other) : this() {
      responseAddressParam_ = other.responseAddressParam_;
      responseCheckboxesParam_ = other.responseCheckboxesParam_;
      title_ = other.title_;
      descriptionHtml_ = other.descriptionHtml_;
      checkbox_ = other.checkbox_.Clone();
      address_ = other.address_ != null ? other.address_.Clone() : null;
      errorInputField_ = other.errorInputField_.Clone();
      errorHtml_ = other.errorHtml_;
      requiredField_ = other.requiredField_.Clone();
      supportedCountry_ = other.supportedCountry_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressChallenge Clone() {
      return new AddressChallenge(this);
    }

    /// <summary>Field number for the "responseAddressParam" field.</summary>
    public const int ResponseAddressParamFieldNumber = 1;
    private readonly static string ResponseAddressParamDefaultValue = "";

    private string responseAddressParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResponseAddressParam {
      get { return responseAddressParam_ ?? ResponseAddressParamDefaultValue; }
      set {
        responseAddressParam_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "responseAddressParam" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResponseAddressParam {
      get { return responseAddressParam_ != null; }
    }
    /// <summary>Clears the value of the "responseAddressParam" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponseAddressParam() {
      responseAddressParam_ = null;
    }

    /// <summary>Field number for the "responseCheckboxesParam" field.</summary>
    public const int ResponseCheckboxesParamFieldNumber = 2;
    private readonly static string ResponseCheckboxesParamDefaultValue = "";

    private string responseCheckboxesParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResponseCheckboxesParam {
      get { return responseCheckboxesParam_ ?? ResponseCheckboxesParamDefaultValue; }
      set {
        responseCheckboxesParam_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "responseCheckboxesParam" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResponseCheckboxesParam {
      get { return responseCheckboxesParam_ != null; }
    }
    /// <summary>Clears the value of the "responseCheckboxesParam" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponseCheckboxesParam() {
      responseCheckboxesParam_ = null;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 3;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "descriptionHtml" field.</summary>
    public const int DescriptionHtmlFieldNumber = 4;
    private readonly static string DescriptionHtmlDefaultValue = "";

    private string descriptionHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DescriptionHtml {
      get { return descriptionHtml_ ?? DescriptionHtmlDefaultValue; }
      set {
        descriptionHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "descriptionHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescriptionHtml {
      get { return descriptionHtml_ != null; }
    }
    /// <summary>Clears the value of the "descriptionHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescriptionHtml() {
      descriptionHtml_ = null;
    }

    /// <summary>Field number for the "checkbox" field.</summary>
    public const int CheckboxFieldNumber = 5;
    private static readonly pb::FieldCodec<global::GooglePlayStore.FormCheckbox> _repeated_checkbox_codec
        = pb::FieldCodec.ForMessage(42, global::GooglePlayStore.FormCheckbox.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.FormCheckbox> checkbox_ = new pbc::RepeatedField<global::GooglePlayStore.FormCheckbox>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.FormCheckbox> Checkbox {
      get { return checkbox_; }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 6;
    private global::GooglePlayStore.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "errorInputField" field.</summary>
    public const int ErrorInputFieldFieldNumber = 7;
    private static readonly pb::FieldCodec<global::GooglePlayStore.InputValidationError> _repeated_errorInputField_codec
        = pb::FieldCodec.ForMessage(58, global::GooglePlayStore.InputValidationError.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.InputValidationError> errorInputField_ = new pbc::RepeatedField<global::GooglePlayStore.InputValidationError>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.InputValidationError> ErrorInputField {
      get { return errorInputField_; }
    }

    /// <summary>Field number for the "errorHtml" field.</summary>
    public const int ErrorHtmlFieldNumber = 8;
    private readonly static string ErrorHtmlDefaultValue = "";

    private string errorHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorHtml {
      get { return errorHtml_ ?? ErrorHtmlDefaultValue; }
      set {
        errorHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "errorHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasErrorHtml {
      get { return errorHtml_ != null; }
    }
    /// <summary>Clears the value of the "errorHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearErrorHtml() {
      errorHtml_ = null;
    }

    /// <summary>Field number for the "requiredField" field.</summary>
    public const int RequiredFieldFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_requiredField_codec
        = pb::FieldCodec.ForInt32(72);
    private readonly pbc::RepeatedField<int> requiredField_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RequiredField {
      get { return requiredField_; }
    }

    /// <summary>Field number for the "supportedCountry" field.</summary>
    public const int SupportedCountryFieldNumber = 10;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Country> _repeated_supportedCountry_codec
        = pb::FieldCodec.ForMessage(82, global::GooglePlayStore.Country.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Country> supportedCountry_ = new pbc::RepeatedField<global::GooglePlayStore.Country>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Country> SupportedCountry {
      get { return supportedCountry_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddressChallenge);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddressChallenge other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResponseAddressParam != other.ResponseAddressParam) return false;
      if (ResponseCheckboxesParam != other.ResponseCheckboxesParam) return false;
      if (Title != other.Title) return false;
      if (DescriptionHtml != other.DescriptionHtml) return false;
      if(!checkbox_.Equals(other.checkbox_)) return false;
      if (!object.Equals(Address, other.Address)) return false;
      if(!errorInputField_.Equals(other.errorInputField_)) return false;
      if (ErrorHtml != other.ErrorHtml) return false;
      if(!requiredField_.Equals(other.requiredField_)) return false;
      if(!supportedCountry_.Equals(other.supportedCountry_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResponseAddressParam) hash ^= ResponseAddressParam.GetHashCode();
      if (HasResponseCheckboxesParam) hash ^= ResponseCheckboxesParam.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasDescriptionHtml) hash ^= DescriptionHtml.GetHashCode();
      hash ^= checkbox_.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      hash ^= errorInputField_.GetHashCode();
      if (HasErrorHtml) hash ^= ErrorHtml.GetHashCode();
      hash ^= requiredField_.GetHashCode();
      hash ^= supportedCountry_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasResponseAddressParam) {
        output.WriteRawTag(10);
        output.WriteString(ResponseAddressParam);
      }
      if (HasResponseCheckboxesParam) {
        output.WriteRawTag(18);
        output.WriteString(ResponseCheckboxesParam);
      }
      if (HasTitle) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (HasDescriptionHtml) {
        output.WriteRawTag(34);
        output.WriteString(DescriptionHtml);
      }
      checkbox_.WriteTo(output, _repeated_checkbox_codec);
      if (address_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Address);
      }
      errorInputField_.WriteTo(output, _repeated_errorInputField_codec);
      if (HasErrorHtml) {
        output.WriteRawTag(66);
        output.WriteString(ErrorHtml);
      }
      requiredField_.WriteTo(output, _repeated_requiredField_codec);
      supportedCountry_.WriteTo(output, _repeated_supportedCountry_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResponseAddressParam) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseAddressParam);
      }
      if (HasResponseCheckboxesParam) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseCheckboxesParam);
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasDescriptionHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionHtml);
      }
      size += checkbox_.CalculateSize(_repeated_checkbox_codec);
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      size += errorInputField_.CalculateSize(_repeated_errorInputField_codec);
      if (HasErrorHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorHtml);
      }
      size += requiredField_.CalculateSize(_repeated_requiredField_codec);
      size += supportedCountry_.CalculateSize(_repeated_supportedCountry_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddressChallenge other) {
      if (other == null) {
        return;
      }
      if (other.HasResponseAddressParam) {
        ResponseAddressParam = other.ResponseAddressParam;
      }
      if (other.HasResponseCheckboxesParam) {
        ResponseCheckboxesParam = other.ResponseCheckboxesParam;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasDescriptionHtml) {
        DescriptionHtml = other.DescriptionHtml;
      }
      checkbox_.Add(other.checkbox_);
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::GooglePlayStore.Address();
        }
        Address.MergeFrom(other.Address);
      }
      errorInputField_.Add(other.errorInputField_);
      if (other.HasErrorHtml) {
        ErrorHtml = other.ErrorHtml;
      }
      requiredField_.Add(other.requiredField_);
      supportedCountry_.Add(other.supportedCountry_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResponseAddressParam = input.ReadString();
            break;
          }
          case 18: {
            ResponseCheckboxesParam = input.ReadString();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 34: {
            DescriptionHtml = input.ReadString();
            break;
          }
          case 42: {
            checkbox_.AddEntriesFrom(input, _repeated_checkbox_codec);
            break;
          }
          case 50: {
            if (address_ == null) {
              Address = new global::GooglePlayStore.Address();
            }
            input.ReadMessage(Address);
            break;
          }
          case 58: {
            errorInputField_.AddEntriesFrom(input, _repeated_errorInputField_codec);
            break;
          }
          case 66: {
            ErrorHtml = input.ReadString();
            break;
          }
          case 74:
          case 72: {
            requiredField_.AddEntriesFrom(input, _repeated_requiredField_codec);
            break;
          }
          case 82: {
            supportedCountry_.AddEntriesFrom(input, _repeated_supportedCountry_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AuthenticationChallenge : pb::IMessage<AuthenticationChallenge> {
    private static readonly pb::MessageParser<AuthenticationChallenge> _parser = new pb::MessageParser<AuthenticationChallenge>(() => new AuthenticationChallenge());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthenticationChallenge> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthenticationChallenge() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthenticationChallenge(AuthenticationChallenge other) : this() {
      _hasBits0 = other._hasBits0;
      authenticationType_ = other.authenticationType_;
      responseAuthenticationTypeParam_ = other.responseAuthenticationTypeParam_;
      responseRetryCountParam_ = other.responseRetryCountParam_;
      pinHeaderText_ = other.pinHeaderText_;
      pinDescriptionTextHtml_ = other.pinDescriptionTextHtml_;
      gaiaHeaderText_ = other.gaiaHeaderText_;
      gaiaDescriptionTextHtml_ = other.gaiaDescriptionTextHtml_;
      gaiaFooterTextHtml_ = other.gaiaFooterTextHtml_;
      gaiaOptOutCheckbox_ = other.gaiaOptOutCheckbox_ != null ? other.gaiaOptOutCheckbox_.Clone() : null;
      gaiaOptOutDescriptionTextHtml_ = other.gaiaOptOutDescriptionTextHtml_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthenticationChallenge Clone() {
      return new AuthenticationChallenge(this);
    }

    /// <summary>Field number for the "authenticationType" field.</summary>
    public const int AuthenticationTypeFieldNumber = 1;
    private readonly static int AuthenticationTypeDefaultValue = 0;

    private int authenticationType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AuthenticationType {
      get { if ((_hasBits0 & 1) != 0) { return authenticationType_; } else { return AuthenticationTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        authenticationType_ = value;
      }
    }
    /// <summary>Gets whether the "authenticationType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAuthenticationType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "authenticationType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAuthenticationType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "responseAuthenticationTypeParam" field.</summary>
    public const int ResponseAuthenticationTypeParamFieldNumber = 2;
    private readonly static string ResponseAuthenticationTypeParamDefaultValue = "";

    private string responseAuthenticationTypeParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResponseAuthenticationTypeParam {
      get { return responseAuthenticationTypeParam_ ?? ResponseAuthenticationTypeParamDefaultValue; }
      set {
        responseAuthenticationTypeParam_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "responseAuthenticationTypeParam" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResponseAuthenticationTypeParam {
      get { return responseAuthenticationTypeParam_ != null; }
    }
    /// <summary>Clears the value of the "responseAuthenticationTypeParam" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponseAuthenticationTypeParam() {
      responseAuthenticationTypeParam_ = null;
    }

    /// <summary>Field number for the "responseRetryCountParam" field.</summary>
    public const int ResponseRetryCountParamFieldNumber = 3;
    private readonly static string ResponseRetryCountParamDefaultValue = "";

    private string responseRetryCountParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResponseRetryCountParam {
      get { return responseRetryCountParam_ ?? ResponseRetryCountParamDefaultValue; }
      set {
        responseRetryCountParam_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "responseRetryCountParam" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResponseRetryCountParam {
      get { return responseRetryCountParam_ != null; }
    }
    /// <summary>Clears the value of the "responseRetryCountParam" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponseRetryCountParam() {
      responseRetryCountParam_ = null;
    }

    /// <summary>Field number for the "pinHeaderText" field.</summary>
    public const int PinHeaderTextFieldNumber = 4;
    private readonly static string PinHeaderTextDefaultValue = "";

    private string pinHeaderText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PinHeaderText {
      get { return pinHeaderText_ ?? PinHeaderTextDefaultValue; }
      set {
        pinHeaderText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pinHeaderText" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPinHeaderText {
      get { return pinHeaderText_ != null; }
    }
    /// <summary>Clears the value of the "pinHeaderText" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPinHeaderText() {
      pinHeaderText_ = null;
    }

    /// <summary>Field number for the "pinDescriptionTextHtml" field.</summary>
    public const int PinDescriptionTextHtmlFieldNumber = 5;
    private readonly static string PinDescriptionTextHtmlDefaultValue = "";

    private string pinDescriptionTextHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PinDescriptionTextHtml {
      get { return pinDescriptionTextHtml_ ?? PinDescriptionTextHtmlDefaultValue; }
      set {
        pinDescriptionTextHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pinDescriptionTextHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPinDescriptionTextHtml {
      get { return pinDescriptionTextHtml_ != null; }
    }
    /// <summary>Clears the value of the "pinDescriptionTextHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPinDescriptionTextHtml() {
      pinDescriptionTextHtml_ = null;
    }

    /// <summary>Field number for the "gaiaHeaderText" field.</summary>
    public const int GaiaHeaderTextFieldNumber = 6;
    private readonly static string GaiaHeaderTextDefaultValue = "";

    private string gaiaHeaderText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GaiaHeaderText {
      get { return gaiaHeaderText_ ?? GaiaHeaderTextDefaultValue; }
      set {
        gaiaHeaderText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gaiaHeaderText" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGaiaHeaderText {
      get { return gaiaHeaderText_ != null; }
    }
    /// <summary>Clears the value of the "gaiaHeaderText" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGaiaHeaderText() {
      gaiaHeaderText_ = null;
    }

    /// <summary>Field number for the "gaiaDescriptionTextHtml" field.</summary>
    public const int GaiaDescriptionTextHtmlFieldNumber = 7;
    private readonly static string GaiaDescriptionTextHtmlDefaultValue = "";

    private string gaiaDescriptionTextHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GaiaDescriptionTextHtml {
      get { return gaiaDescriptionTextHtml_ ?? GaiaDescriptionTextHtmlDefaultValue; }
      set {
        gaiaDescriptionTextHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gaiaDescriptionTextHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGaiaDescriptionTextHtml {
      get { return gaiaDescriptionTextHtml_ != null; }
    }
    /// <summary>Clears the value of the "gaiaDescriptionTextHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGaiaDescriptionTextHtml() {
      gaiaDescriptionTextHtml_ = null;
    }

    /// <summary>Field number for the "gaiaFooterTextHtml" field.</summary>
    public const int GaiaFooterTextHtmlFieldNumber = 8;
    private readonly static string GaiaFooterTextHtmlDefaultValue = "";

    private string gaiaFooterTextHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GaiaFooterTextHtml {
      get { return gaiaFooterTextHtml_ ?? GaiaFooterTextHtmlDefaultValue; }
      set {
        gaiaFooterTextHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gaiaFooterTextHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGaiaFooterTextHtml {
      get { return gaiaFooterTextHtml_ != null; }
    }
    /// <summary>Clears the value of the "gaiaFooterTextHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGaiaFooterTextHtml() {
      gaiaFooterTextHtml_ = null;
    }

    /// <summary>Field number for the "gaiaOptOutCheckbox" field.</summary>
    public const int GaiaOptOutCheckboxFieldNumber = 9;
    private global::GooglePlayStore.FormCheckbox gaiaOptOutCheckbox_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.FormCheckbox GaiaOptOutCheckbox {
      get { return gaiaOptOutCheckbox_; }
      set {
        gaiaOptOutCheckbox_ = value;
      }
    }

    /// <summary>Field number for the "gaiaOptOutDescriptionTextHtml" field.</summary>
    public const int GaiaOptOutDescriptionTextHtmlFieldNumber = 10;
    private readonly static string GaiaOptOutDescriptionTextHtmlDefaultValue = "";

    private string gaiaOptOutDescriptionTextHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GaiaOptOutDescriptionTextHtml {
      get { return gaiaOptOutDescriptionTextHtml_ ?? GaiaOptOutDescriptionTextHtmlDefaultValue; }
      set {
        gaiaOptOutDescriptionTextHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gaiaOptOutDescriptionTextHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGaiaOptOutDescriptionTextHtml {
      get { return gaiaOptOutDescriptionTextHtml_ != null; }
    }
    /// <summary>Clears the value of the "gaiaOptOutDescriptionTextHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGaiaOptOutDescriptionTextHtml() {
      gaiaOptOutDescriptionTextHtml_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthenticationChallenge);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthenticationChallenge other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AuthenticationType != other.AuthenticationType) return false;
      if (ResponseAuthenticationTypeParam != other.ResponseAuthenticationTypeParam) return false;
      if (ResponseRetryCountParam != other.ResponseRetryCountParam) return false;
      if (PinHeaderText != other.PinHeaderText) return false;
      if (PinDescriptionTextHtml != other.PinDescriptionTextHtml) return false;
      if (GaiaHeaderText != other.GaiaHeaderText) return false;
      if (GaiaDescriptionTextHtml != other.GaiaDescriptionTextHtml) return false;
      if (GaiaFooterTextHtml != other.GaiaFooterTextHtml) return false;
      if (!object.Equals(GaiaOptOutCheckbox, other.GaiaOptOutCheckbox)) return false;
      if (GaiaOptOutDescriptionTextHtml != other.GaiaOptOutDescriptionTextHtml) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAuthenticationType) hash ^= AuthenticationType.GetHashCode();
      if (HasResponseAuthenticationTypeParam) hash ^= ResponseAuthenticationTypeParam.GetHashCode();
      if (HasResponseRetryCountParam) hash ^= ResponseRetryCountParam.GetHashCode();
      if (HasPinHeaderText) hash ^= PinHeaderText.GetHashCode();
      if (HasPinDescriptionTextHtml) hash ^= PinDescriptionTextHtml.GetHashCode();
      if (HasGaiaHeaderText) hash ^= GaiaHeaderText.GetHashCode();
      if (HasGaiaDescriptionTextHtml) hash ^= GaiaDescriptionTextHtml.GetHashCode();
      if (HasGaiaFooterTextHtml) hash ^= GaiaFooterTextHtml.GetHashCode();
      if (gaiaOptOutCheckbox_ != null) hash ^= GaiaOptOutCheckbox.GetHashCode();
      if (HasGaiaOptOutDescriptionTextHtml) hash ^= GaiaOptOutDescriptionTextHtml.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAuthenticationType) {
        output.WriteRawTag(8);
        output.WriteInt32(AuthenticationType);
      }
      if (HasResponseAuthenticationTypeParam) {
        output.WriteRawTag(18);
        output.WriteString(ResponseAuthenticationTypeParam);
      }
      if (HasResponseRetryCountParam) {
        output.WriteRawTag(26);
        output.WriteString(ResponseRetryCountParam);
      }
      if (HasPinHeaderText) {
        output.WriteRawTag(34);
        output.WriteString(PinHeaderText);
      }
      if (HasPinDescriptionTextHtml) {
        output.WriteRawTag(42);
        output.WriteString(PinDescriptionTextHtml);
      }
      if (HasGaiaHeaderText) {
        output.WriteRawTag(50);
        output.WriteString(GaiaHeaderText);
      }
      if (HasGaiaDescriptionTextHtml) {
        output.WriteRawTag(58);
        output.WriteString(GaiaDescriptionTextHtml);
      }
      if (HasGaiaFooterTextHtml) {
        output.WriteRawTag(66);
        output.WriteString(GaiaFooterTextHtml);
      }
      if (gaiaOptOutCheckbox_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(GaiaOptOutCheckbox);
      }
      if (HasGaiaOptOutDescriptionTextHtml) {
        output.WriteRawTag(82);
        output.WriteString(GaiaOptOutDescriptionTextHtml);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAuthenticationType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AuthenticationType);
      }
      if (HasResponseAuthenticationTypeParam) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseAuthenticationTypeParam);
      }
      if (HasResponseRetryCountParam) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseRetryCountParam);
      }
      if (HasPinHeaderText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PinHeaderText);
      }
      if (HasPinDescriptionTextHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PinDescriptionTextHtml);
      }
      if (HasGaiaHeaderText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GaiaHeaderText);
      }
      if (HasGaiaDescriptionTextHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GaiaDescriptionTextHtml);
      }
      if (HasGaiaFooterTextHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GaiaFooterTextHtml);
      }
      if (gaiaOptOutCheckbox_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GaiaOptOutCheckbox);
      }
      if (HasGaiaOptOutDescriptionTextHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GaiaOptOutDescriptionTextHtml);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthenticationChallenge other) {
      if (other == null) {
        return;
      }
      if (other.HasAuthenticationType) {
        AuthenticationType = other.AuthenticationType;
      }
      if (other.HasResponseAuthenticationTypeParam) {
        ResponseAuthenticationTypeParam = other.ResponseAuthenticationTypeParam;
      }
      if (other.HasResponseRetryCountParam) {
        ResponseRetryCountParam = other.ResponseRetryCountParam;
      }
      if (other.HasPinHeaderText) {
        PinHeaderText = other.PinHeaderText;
      }
      if (other.HasPinDescriptionTextHtml) {
        PinDescriptionTextHtml = other.PinDescriptionTextHtml;
      }
      if (other.HasGaiaHeaderText) {
        GaiaHeaderText = other.GaiaHeaderText;
      }
      if (other.HasGaiaDescriptionTextHtml) {
        GaiaDescriptionTextHtml = other.GaiaDescriptionTextHtml;
      }
      if (other.HasGaiaFooterTextHtml) {
        GaiaFooterTextHtml = other.GaiaFooterTextHtml;
      }
      if (other.gaiaOptOutCheckbox_ != null) {
        if (gaiaOptOutCheckbox_ == null) {
          GaiaOptOutCheckbox = new global::GooglePlayStore.FormCheckbox();
        }
        GaiaOptOutCheckbox.MergeFrom(other.GaiaOptOutCheckbox);
      }
      if (other.HasGaiaOptOutDescriptionTextHtml) {
        GaiaOptOutDescriptionTextHtml = other.GaiaOptOutDescriptionTextHtml;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AuthenticationType = input.ReadInt32();
            break;
          }
          case 18: {
            ResponseAuthenticationTypeParam = input.ReadString();
            break;
          }
          case 26: {
            ResponseRetryCountParam = input.ReadString();
            break;
          }
          case 34: {
            PinHeaderText = input.ReadString();
            break;
          }
          case 42: {
            PinDescriptionTextHtml = input.ReadString();
            break;
          }
          case 50: {
            GaiaHeaderText = input.ReadString();
            break;
          }
          case 58: {
            GaiaDescriptionTextHtml = input.ReadString();
            break;
          }
          case 66: {
            GaiaFooterTextHtml = input.ReadString();
            break;
          }
          case 74: {
            if (gaiaOptOutCheckbox_ == null) {
              GaiaOptOutCheckbox = new global::GooglePlayStore.FormCheckbox();
            }
            input.ReadMessage(GaiaOptOutCheckbox);
            break;
          }
          case 82: {
            GaiaOptOutDescriptionTextHtml = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Challenge : pb::IMessage<Challenge> {
    private static readonly pb::MessageParser<Challenge> _parser = new pb::MessageParser<Challenge>(() => new Challenge());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Challenge> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Challenge() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Challenge(Challenge other) : this() {
      addressChallenge_ = other.addressChallenge_ != null ? other.addressChallenge_.Clone() : null;
      authenticationChallenge_ = other.authenticationChallenge_ != null ? other.authenticationChallenge_.Clone() : null;
      webViewChallenge_ = other.webViewChallenge_ != null ? other.webViewChallenge_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Challenge Clone() {
      return new Challenge(this);
    }

    /// <summary>Field number for the "addressChallenge" field.</summary>
    public const int AddressChallengeFieldNumber = 1;
    private global::GooglePlayStore.AddressChallenge addressChallenge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AddressChallenge AddressChallenge {
      get { return addressChallenge_; }
      set {
        addressChallenge_ = value;
      }
    }

    /// <summary>Field number for the "authenticationChallenge" field.</summary>
    public const int AuthenticationChallengeFieldNumber = 2;
    private global::GooglePlayStore.AuthenticationChallenge authenticationChallenge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AuthenticationChallenge AuthenticationChallenge {
      get { return authenticationChallenge_; }
      set {
        authenticationChallenge_ = value;
      }
    }

    /// <summary>Field number for the "webViewChallenge" field.</summary>
    public const int WebViewChallengeFieldNumber = 3;
    private global::GooglePlayStore.WebViewChallenge webViewChallenge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.WebViewChallenge WebViewChallenge {
      get { return webViewChallenge_; }
      set {
        webViewChallenge_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Challenge);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Challenge other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AddressChallenge, other.AddressChallenge)) return false;
      if (!object.Equals(AuthenticationChallenge, other.AuthenticationChallenge)) return false;
      if (!object.Equals(WebViewChallenge, other.WebViewChallenge)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (addressChallenge_ != null) hash ^= AddressChallenge.GetHashCode();
      if (authenticationChallenge_ != null) hash ^= AuthenticationChallenge.GetHashCode();
      if (webViewChallenge_ != null) hash ^= WebViewChallenge.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (addressChallenge_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AddressChallenge);
      }
      if (authenticationChallenge_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AuthenticationChallenge);
      }
      if (webViewChallenge_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(WebViewChallenge);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (addressChallenge_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddressChallenge);
      }
      if (authenticationChallenge_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthenticationChallenge);
      }
      if (webViewChallenge_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WebViewChallenge);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Challenge other) {
      if (other == null) {
        return;
      }
      if (other.addressChallenge_ != null) {
        if (addressChallenge_ == null) {
          AddressChallenge = new global::GooglePlayStore.AddressChallenge();
        }
        AddressChallenge.MergeFrom(other.AddressChallenge);
      }
      if (other.authenticationChallenge_ != null) {
        if (authenticationChallenge_ == null) {
          AuthenticationChallenge = new global::GooglePlayStore.AuthenticationChallenge();
        }
        AuthenticationChallenge.MergeFrom(other.AuthenticationChallenge);
      }
      if (other.webViewChallenge_ != null) {
        if (webViewChallenge_ == null) {
          WebViewChallenge = new global::GooglePlayStore.WebViewChallenge();
        }
        WebViewChallenge.MergeFrom(other.WebViewChallenge);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (addressChallenge_ == null) {
              AddressChallenge = new global::GooglePlayStore.AddressChallenge();
            }
            input.ReadMessage(AddressChallenge);
            break;
          }
          case 18: {
            if (authenticationChallenge_ == null) {
              AuthenticationChallenge = new global::GooglePlayStore.AuthenticationChallenge();
            }
            input.ReadMessage(AuthenticationChallenge);
            break;
          }
          case 26: {
            if (webViewChallenge_ == null) {
              WebViewChallenge = new global::GooglePlayStore.WebViewChallenge();
            }
            input.ReadMessage(WebViewChallenge);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Country : pb::IMessage<Country> {
    private static readonly pb::MessageParser<Country> _parser = new pb::MessageParser<Country>(() => new Country());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Country> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Country() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Country(Country other) : this() {
      regionCode_ = other.regionCode_;
      displayName_ = other.displayName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Country Clone() {
      return new Country(this);
    }

    /// <summary>Field number for the "regionCode" field.</summary>
    public const int RegionCodeFieldNumber = 1;
    private readonly static string RegionCodeDefaultValue = "";

    private string regionCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegionCode {
      get { return regionCode_ ?? RegionCodeDefaultValue; }
      set {
        regionCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "regionCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRegionCode {
      get { return regionCode_ != null; }
    }
    /// <summary>Clears the value of the "regionCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRegionCode() {
      regionCode_ = null;
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private readonly static string DisplayNameDefaultValue = "";

    private string displayName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_ ?? DisplayNameDefaultValue; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "displayName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDisplayName {
      get { return displayName_ != null; }
    }
    /// <summary>Clears the value of the "displayName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDisplayName() {
      displayName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Country);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Country other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RegionCode != other.RegionCode) return false;
      if (DisplayName != other.DisplayName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRegionCode) hash ^= RegionCode.GetHashCode();
      if (HasDisplayName) hash ^= DisplayName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasRegionCode) {
        output.WriteRawTag(10);
        output.WriteString(RegionCode);
      }
      if (HasDisplayName) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasRegionCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionCode);
      }
      if (HasDisplayName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Country other) {
      if (other == null) {
        return;
      }
      if (other.HasRegionCode) {
        RegionCode = other.RegionCode;
      }
      if (other.HasDisplayName) {
        DisplayName = other.DisplayName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RegionCode = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FormCheckbox : pb::IMessage<FormCheckbox> {
    private static readonly pb::MessageParser<FormCheckbox> _parser = new pb::MessageParser<FormCheckbox>(() => new FormCheckbox());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FormCheckbox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormCheckbox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormCheckbox(FormCheckbox other) : this() {
      _hasBits0 = other._hasBits0;
      description_ = other.description_;
      checked_ = other.checked_;
      required_ = other.required_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormCheckbox Clone() {
      return new FormCheckbox(this);
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "checked" field.</summary>
    public const int CheckedFieldNumber = 2;
    private readonly static bool CheckedDefaultValue = false;

    private bool checked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Checked {
      get { if ((_hasBits0 & 1) != 0) { return checked_; } else { return CheckedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        checked_ = value;
      }
    }
    /// <summary>Gets whether the "checked" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasChecked {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "checked" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearChecked() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "required" field.</summary>
    public const int RequiredFieldNumber = 3;
    private readonly static bool RequiredDefaultValue = false;

    private bool required_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Required {
      get { if ((_hasBits0 & 2) != 0) { return required_; } else { return RequiredDefaultValue; } }
      set {
        _hasBits0 |= 2;
        required_ = value;
      }
    }
    /// <summary>Gets whether the "required" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRequired {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "required" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequired() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 4;
    private readonly static string IdDefaultValue = "";

    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FormCheckbox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FormCheckbox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      if (Checked != other.Checked) return false;
      if (Required != other.Required) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasChecked) hash ^= Checked.GetHashCode();
      if (HasRequired) hash ^= Required.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasDescription) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (HasChecked) {
        output.WriteRawTag(16);
        output.WriteBool(Checked);
      }
      if (HasRequired) {
        output.WriteRawTag(24);
        output.WriteBool(Required);
      }
      if (HasId) {
        output.WriteRawTag(34);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasChecked) {
        size += 1 + 1;
      }
      if (HasRequired) {
        size += 1 + 1;
      }
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FormCheckbox other) {
      if (other == null) {
        return;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasChecked) {
        Checked = other.Checked;
      }
      if (other.HasRequired) {
        Required = other.Required;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 16: {
            Checked = input.ReadBool();
            break;
          }
          case 24: {
            Required = input.ReadBool();
            break;
          }
          case 34: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InputValidationError : pb::IMessage<InputValidationError> {
    private static readonly pb::MessageParser<InputValidationError> _parser = new pb::MessageParser<InputValidationError>(() => new InputValidationError());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InputValidationError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputValidationError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputValidationError(InputValidationError other) : this() {
      _hasBits0 = other._hasBits0;
      inputField_ = other.inputField_;
      errorMessage_ = other.errorMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputValidationError Clone() {
      return new InputValidationError(this);
    }

    /// <summary>Field number for the "inputField" field.</summary>
    public const int InputFieldFieldNumber = 1;
    private readonly static int InputFieldDefaultValue = 0;

    private int inputField_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InputField {
      get { if ((_hasBits0 & 1) != 0) { return inputField_; } else { return InputFieldDefaultValue; } }
      set {
        _hasBits0 |= 1;
        inputField_ = value;
      }
    }
    /// <summary>Gets whether the "inputField" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInputField {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "inputField" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInputField() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "errorMessage" field.</summary>
    public const int ErrorMessageFieldNumber = 2;
    private readonly static string ErrorMessageDefaultValue = "";

    private string errorMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_ ?? ErrorMessageDefaultValue; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "errorMessage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasErrorMessage {
      get { return errorMessage_ != null; }
    }
    /// <summary>Clears the value of the "errorMessage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearErrorMessage() {
      errorMessage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InputValidationError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InputValidationError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputField != other.InputField) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInputField) hash ^= InputField.GetHashCode();
      if (HasErrorMessage) hash ^= ErrorMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasInputField) {
        output.WriteRawTag(8);
        output.WriteInt32(InputField);
      }
      if (HasErrorMessage) {
        output.WriteRawTag(18);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasInputField) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InputField);
      }
      if (HasErrorMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InputValidationError other) {
      if (other == null) {
        return;
      }
      if (other.HasInputField) {
        InputField = other.InputField;
      }
      if (other.HasErrorMessage) {
        ErrorMessage = other.ErrorMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InputField = input.ReadInt32();
            break;
          }
          case 18: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WebViewChallenge : pb::IMessage<WebViewChallenge> {
    private static readonly pb::MessageParser<WebViewChallenge> _parser = new pb::MessageParser<WebViewChallenge>(() => new WebViewChallenge());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebViewChallenge> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebViewChallenge() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebViewChallenge(WebViewChallenge other) : this() {
      startUrl_ = other.startUrl_;
      targetUrlRegexp_ = other.targetUrlRegexp_;
      cancelButtonDisplayLabel_ = other.cancelButtonDisplayLabel_;
      responseTargetUrlParam_ = other.responseTargetUrlParam_;
      cancelUrlRegexp_ = other.cancelUrlRegexp_;
      title_ = other.title_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebViewChallenge Clone() {
      return new WebViewChallenge(this);
    }

    /// <summary>Field number for the "startUrl" field.</summary>
    public const int StartUrlFieldNumber = 1;
    private readonly static string StartUrlDefaultValue = "";

    private string startUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartUrl {
      get { return startUrl_ ?? StartUrlDefaultValue; }
      set {
        startUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "startUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStartUrl {
      get { return startUrl_ != null; }
    }
    /// <summary>Clears the value of the "startUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStartUrl() {
      startUrl_ = null;
    }

    /// <summary>Field number for the "targetUrlRegexp" field.</summary>
    public const int TargetUrlRegexpFieldNumber = 2;
    private readonly static string TargetUrlRegexpDefaultValue = "";

    private string targetUrlRegexp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetUrlRegexp {
      get { return targetUrlRegexp_ ?? TargetUrlRegexpDefaultValue; }
      set {
        targetUrlRegexp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "targetUrlRegexp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetUrlRegexp {
      get { return targetUrlRegexp_ != null; }
    }
    /// <summary>Clears the value of the "targetUrlRegexp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetUrlRegexp() {
      targetUrlRegexp_ = null;
    }

    /// <summary>Field number for the "cancelButtonDisplayLabel" field.</summary>
    public const int CancelButtonDisplayLabelFieldNumber = 3;
    private readonly static string CancelButtonDisplayLabelDefaultValue = "";

    private string cancelButtonDisplayLabel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CancelButtonDisplayLabel {
      get { return cancelButtonDisplayLabel_ ?? CancelButtonDisplayLabelDefaultValue; }
      set {
        cancelButtonDisplayLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cancelButtonDisplayLabel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCancelButtonDisplayLabel {
      get { return cancelButtonDisplayLabel_ != null; }
    }
    /// <summary>Clears the value of the "cancelButtonDisplayLabel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCancelButtonDisplayLabel() {
      cancelButtonDisplayLabel_ = null;
    }

    /// <summary>Field number for the "responseTargetUrlParam" field.</summary>
    public const int ResponseTargetUrlParamFieldNumber = 4;
    private readonly static string ResponseTargetUrlParamDefaultValue = "";

    private string responseTargetUrlParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResponseTargetUrlParam {
      get { return responseTargetUrlParam_ ?? ResponseTargetUrlParamDefaultValue; }
      set {
        responseTargetUrlParam_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "responseTargetUrlParam" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResponseTargetUrlParam {
      get { return responseTargetUrlParam_ != null; }
    }
    /// <summary>Clears the value of the "responseTargetUrlParam" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponseTargetUrlParam() {
      responseTargetUrlParam_ = null;
    }

    /// <summary>Field number for the "cancelUrlRegexp" field.</summary>
    public const int CancelUrlRegexpFieldNumber = 5;
    private readonly static string CancelUrlRegexpDefaultValue = "";

    private string cancelUrlRegexp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CancelUrlRegexp {
      get { return cancelUrlRegexp_ ?? CancelUrlRegexpDefaultValue; }
      set {
        cancelUrlRegexp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cancelUrlRegexp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCancelUrlRegexp {
      get { return cancelUrlRegexp_ != null; }
    }
    /// <summary>Clears the value of the "cancelUrlRegexp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCancelUrlRegexp() {
      cancelUrlRegexp_ = null;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 6;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebViewChallenge);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebViewChallenge other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartUrl != other.StartUrl) return false;
      if (TargetUrlRegexp != other.TargetUrlRegexp) return false;
      if (CancelButtonDisplayLabel != other.CancelButtonDisplayLabel) return false;
      if (ResponseTargetUrlParam != other.ResponseTargetUrlParam) return false;
      if (CancelUrlRegexp != other.CancelUrlRegexp) return false;
      if (Title != other.Title) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStartUrl) hash ^= StartUrl.GetHashCode();
      if (HasTargetUrlRegexp) hash ^= TargetUrlRegexp.GetHashCode();
      if (HasCancelButtonDisplayLabel) hash ^= CancelButtonDisplayLabel.GetHashCode();
      if (HasResponseTargetUrlParam) hash ^= ResponseTargetUrlParam.GetHashCode();
      if (HasCancelUrlRegexp) hash ^= CancelUrlRegexp.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasStartUrl) {
        output.WriteRawTag(10);
        output.WriteString(StartUrl);
      }
      if (HasTargetUrlRegexp) {
        output.WriteRawTag(18);
        output.WriteString(TargetUrlRegexp);
      }
      if (HasCancelButtonDisplayLabel) {
        output.WriteRawTag(26);
        output.WriteString(CancelButtonDisplayLabel);
      }
      if (HasResponseTargetUrlParam) {
        output.WriteRawTag(34);
        output.WriteString(ResponseTargetUrlParam);
      }
      if (HasCancelUrlRegexp) {
        output.WriteRawTag(42);
        output.WriteString(CancelUrlRegexp);
      }
      if (HasTitle) {
        output.WriteRawTag(50);
        output.WriteString(Title);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasStartUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartUrl);
      }
      if (HasTargetUrlRegexp) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetUrlRegexp);
      }
      if (HasCancelButtonDisplayLabel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CancelButtonDisplayLabel);
      }
      if (HasResponseTargetUrlParam) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseTargetUrlParam);
      }
      if (HasCancelUrlRegexp) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CancelUrlRegexp);
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebViewChallenge other) {
      if (other == null) {
        return;
      }
      if (other.HasStartUrl) {
        StartUrl = other.StartUrl;
      }
      if (other.HasTargetUrlRegexp) {
        TargetUrlRegexp = other.TargetUrlRegexp;
      }
      if (other.HasCancelButtonDisplayLabel) {
        CancelButtonDisplayLabel = other.CancelButtonDisplayLabel;
      }
      if (other.HasResponseTargetUrlParam) {
        ResponseTargetUrlParam = other.ResponseTargetUrlParam;
      }
      if (other.HasCancelUrlRegexp) {
        CancelUrlRegexp = other.CancelUrlRegexp;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StartUrl = input.ReadString();
            break;
          }
          case 18: {
            TargetUrlRegexp = input.ReadString();
            break;
          }
          case 26: {
            CancelButtonDisplayLabel = input.ReadString();
            break;
          }
          case 34: {
            ResponseTargetUrlParam = input.ReadString();
            break;
          }
          case 42: {
            CancelUrlRegexp = input.ReadString();
            break;
          }
          case 50: {
            Title = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddCreditCardPromoOffer : pb::IMessage<AddCreditCardPromoOffer> {
    private static readonly pb::MessageParser<AddCreditCardPromoOffer> _parser = new pb::MessageParser<AddCreditCardPromoOffer>(() => new AddCreditCardPromoOffer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddCreditCardPromoOffer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddCreditCardPromoOffer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddCreditCardPromoOffer(AddCreditCardPromoOffer other) : this() {
      headerText_ = other.headerText_;
      descriptionHtml_ = other.descriptionHtml_;
      image_ = other.image_ != null ? other.image_.Clone() : null;
      introductoryTextHtml_ = other.introductoryTextHtml_;
      offerTitle_ = other.offerTitle_;
      noActionDescription_ = other.noActionDescription_;
      termsAndConditionsHtml_ = other.termsAndConditionsHtml_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddCreditCardPromoOffer Clone() {
      return new AddCreditCardPromoOffer(this);
    }

    /// <summary>Field number for the "headerText" field.</summary>
    public const int HeaderTextFieldNumber = 1;
    private readonly static string HeaderTextDefaultValue = "";

    private string headerText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeaderText {
      get { return headerText_ ?? HeaderTextDefaultValue; }
      set {
        headerText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "headerText" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHeaderText {
      get { return headerText_ != null; }
    }
    /// <summary>Clears the value of the "headerText" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHeaderText() {
      headerText_ = null;
    }

    /// <summary>Field number for the "descriptionHtml" field.</summary>
    public const int DescriptionHtmlFieldNumber = 2;
    private readonly static string DescriptionHtmlDefaultValue = "";

    private string descriptionHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DescriptionHtml {
      get { return descriptionHtml_ ?? DescriptionHtmlDefaultValue; }
      set {
        descriptionHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "descriptionHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescriptionHtml {
      get { return descriptionHtml_ != null; }
    }
    /// <summary>Clears the value of the "descriptionHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescriptionHtml() {
      descriptionHtml_ = null;
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 3;
    private global::GooglePlayStore.Image image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Image Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    /// <summary>Field number for the "introductoryTextHtml" field.</summary>
    public const int IntroductoryTextHtmlFieldNumber = 4;
    private readonly static string IntroductoryTextHtmlDefaultValue = "";

    private string introductoryTextHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IntroductoryTextHtml {
      get { return introductoryTextHtml_ ?? IntroductoryTextHtmlDefaultValue; }
      set {
        introductoryTextHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "introductoryTextHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIntroductoryTextHtml {
      get { return introductoryTextHtml_ != null; }
    }
    /// <summary>Clears the value of the "introductoryTextHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIntroductoryTextHtml() {
      introductoryTextHtml_ = null;
    }

    /// <summary>Field number for the "offerTitle" field.</summary>
    public const int OfferTitleFieldNumber = 5;
    private readonly static string OfferTitleDefaultValue = "";

    private string offerTitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfferTitle {
      get { return offerTitle_ ?? OfferTitleDefaultValue; }
      set {
        offerTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "offerTitle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOfferTitle {
      get { return offerTitle_ != null; }
    }
    /// <summary>Clears the value of the "offerTitle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOfferTitle() {
      offerTitle_ = null;
    }

    /// <summary>Field number for the "noActionDescription" field.</summary>
    public const int NoActionDescriptionFieldNumber = 6;
    private readonly static string NoActionDescriptionDefaultValue = "";

    private string noActionDescription_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoActionDescription {
      get { return noActionDescription_ ?? NoActionDescriptionDefaultValue; }
      set {
        noActionDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "noActionDescription" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNoActionDescription {
      get { return noActionDescription_ != null; }
    }
    /// <summary>Clears the value of the "noActionDescription" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNoActionDescription() {
      noActionDescription_ = null;
    }

    /// <summary>Field number for the "termsAndConditionsHtml" field.</summary>
    public const int TermsAndConditionsHtmlFieldNumber = 7;
    private readonly static string TermsAndConditionsHtmlDefaultValue = "";

    private string termsAndConditionsHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TermsAndConditionsHtml {
      get { return termsAndConditionsHtml_ ?? TermsAndConditionsHtmlDefaultValue; }
      set {
        termsAndConditionsHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "termsAndConditionsHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTermsAndConditionsHtml {
      get { return termsAndConditionsHtml_ != null; }
    }
    /// <summary>Clears the value of the "termsAndConditionsHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTermsAndConditionsHtml() {
      termsAndConditionsHtml_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddCreditCardPromoOffer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddCreditCardPromoOffer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeaderText != other.HeaderText) return false;
      if (DescriptionHtml != other.DescriptionHtml) return false;
      if (!object.Equals(Image, other.Image)) return false;
      if (IntroductoryTextHtml != other.IntroductoryTextHtml) return false;
      if (OfferTitle != other.OfferTitle) return false;
      if (NoActionDescription != other.NoActionDescription) return false;
      if (TermsAndConditionsHtml != other.TermsAndConditionsHtml) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHeaderText) hash ^= HeaderText.GetHashCode();
      if (HasDescriptionHtml) hash ^= DescriptionHtml.GetHashCode();
      if (image_ != null) hash ^= Image.GetHashCode();
      if (HasIntroductoryTextHtml) hash ^= IntroductoryTextHtml.GetHashCode();
      if (HasOfferTitle) hash ^= OfferTitle.GetHashCode();
      if (HasNoActionDescription) hash ^= NoActionDescription.GetHashCode();
      if (HasTermsAndConditionsHtml) hash ^= TermsAndConditionsHtml.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasHeaderText) {
        output.WriteRawTag(10);
        output.WriteString(HeaderText);
      }
      if (HasDescriptionHtml) {
        output.WriteRawTag(18);
        output.WriteString(DescriptionHtml);
      }
      if (image_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Image);
      }
      if (HasIntroductoryTextHtml) {
        output.WriteRawTag(34);
        output.WriteString(IntroductoryTextHtml);
      }
      if (HasOfferTitle) {
        output.WriteRawTag(42);
        output.WriteString(OfferTitle);
      }
      if (HasNoActionDescription) {
        output.WriteRawTag(50);
        output.WriteString(NoActionDescription);
      }
      if (HasTermsAndConditionsHtml) {
        output.WriteRawTag(58);
        output.WriteString(TermsAndConditionsHtml);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasHeaderText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HeaderText);
      }
      if (HasDescriptionHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionHtml);
      }
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (HasIntroductoryTextHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IntroductoryTextHtml);
      }
      if (HasOfferTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OfferTitle);
      }
      if (HasNoActionDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoActionDescription);
      }
      if (HasTermsAndConditionsHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TermsAndConditionsHtml);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddCreditCardPromoOffer other) {
      if (other == null) {
        return;
      }
      if (other.HasHeaderText) {
        HeaderText = other.HeaderText;
      }
      if (other.HasDescriptionHtml) {
        DescriptionHtml = other.DescriptionHtml;
      }
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::GooglePlayStore.Image();
        }
        Image.MergeFrom(other.Image);
      }
      if (other.HasIntroductoryTextHtml) {
        IntroductoryTextHtml = other.IntroductoryTextHtml;
      }
      if (other.HasOfferTitle) {
        OfferTitle = other.OfferTitle;
      }
      if (other.HasNoActionDescription) {
        NoActionDescription = other.NoActionDescription;
      }
      if (other.HasTermsAndConditionsHtml) {
        TermsAndConditionsHtml = other.TermsAndConditionsHtml;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HeaderText = input.ReadString();
            break;
          }
          case 18: {
            DescriptionHtml = input.ReadString();
            break;
          }
          case 26: {
            if (image_ == null) {
              Image = new global::GooglePlayStore.Image();
            }
            input.ReadMessage(Image);
            break;
          }
          case 34: {
            IntroductoryTextHtml = input.ReadString();
            break;
          }
          case 42: {
            OfferTitle = input.ReadString();
            break;
          }
          case 50: {
            NoActionDescription = input.ReadString();
            break;
          }
          case 58: {
            TermsAndConditionsHtml = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AvailablePromoOffer : pb::IMessage<AvailablePromoOffer> {
    private static readonly pb::MessageParser<AvailablePromoOffer> _parser = new pb::MessageParser<AvailablePromoOffer>(() => new AvailablePromoOffer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailablePromoOffer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailablePromoOffer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailablePromoOffer(AvailablePromoOffer other) : this() {
      addCreditCardOffer_ = other.addCreditCardOffer_ != null ? other.addCreditCardOffer_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailablePromoOffer Clone() {
      return new AvailablePromoOffer(this);
    }

    /// <summary>Field number for the "addCreditCardOffer" field.</summary>
    public const int AddCreditCardOfferFieldNumber = 1;
    private global::GooglePlayStore.AddCreditCardPromoOffer addCreditCardOffer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AddCreditCardPromoOffer AddCreditCardOffer {
      get { return addCreditCardOffer_; }
      set {
        addCreditCardOffer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailablePromoOffer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailablePromoOffer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AddCreditCardOffer, other.AddCreditCardOffer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (addCreditCardOffer_ != null) hash ^= AddCreditCardOffer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (addCreditCardOffer_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AddCreditCardOffer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (addCreditCardOffer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddCreditCardOffer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailablePromoOffer other) {
      if (other == null) {
        return;
      }
      if (other.addCreditCardOffer_ != null) {
        if (addCreditCardOffer_ == null) {
          AddCreditCardOffer = new global::GooglePlayStore.AddCreditCardPromoOffer();
        }
        AddCreditCardOffer.MergeFrom(other.AddCreditCardOffer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (addCreditCardOffer_ == null) {
              AddCreditCardOffer = new global::GooglePlayStore.AddCreditCardPromoOffer();
            }
            input.ReadMessage(AddCreditCardOffer);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CheckPromoOfferResponse : pb::IMessage<CheckPromoOfferResponse> {
    private static readonly pb::MessageParser<CheckPromoOfferResponse> _parser = new pb::MessageParser<CheckPromoOfferResponse>(() => new CheckPromoOfferResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckPromoOfferResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckPromoOfferResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckPromoOfferResponse(CheckPromoOfferResponse other) : this() {
      _hasBits0 = other._hasBits0;
      availableOffer_ = other.availableOffer_.Clone();
      redeemedOffer_ = other.redeemedOffer_ != null ? other.redeemedOffer_.Clone() : null;
      checkoutTokenRequired_ = other.checkoutTokenRequired_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckPromoOfferResponse Clone() {
      return new CheckPromoOfferResponse(this);
    }

    /// <summary>Field number for the "availableOffer" field.</summary>
    public const int AvailableOfferFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GooglePlayStore.AvailablePromoOffer> _repeated_availableOffer_codec
        = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.AvailablePromoOffer.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.AvailablePromoOffer> availableOffer_ = new pbc::RepeatedField<global::GooglePlayStore.AvailablePromoOffer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.AvailablePromoOffer> AvailableOffer {
      get { return availableOffer_; }
    }

    /// <summary>Field number for the "redeemedOffer" field.</summary>
    public const int RedeemedOfferFieldNumber = 2;
    private global::GooglePlayStore.RedeemedPromoOffer redeemedOffer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.RedeemedPromoOffer RedeemedOffer {
      get { return redeemedOffer_; }
      set {
        redeemedOffer_ = value;
      }
    }

    /// <summary>Field number for the "checkoutTokenRequired" field.</summary>
    public const int CheckoutTokenRequiredFieldNumber = 3;
    private readonly static bool CheckoutTokenRequiredDefaultValue = false;

    private bool checkoutTokenRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CheckoutTokenRequired {
      get { if ((_hasBits0 & 1) != 0) { return checkoutTokenRequired_; } else { return CheckoutTokenRequiredDefaultValue; } }
      set {
        _hasBits0 |= 1;
        checkoutTokenRequired_ = value;
      }
    }
    /// <summary>Gets whether the "checkoutTokenRequired" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCheckoutTokenRequired {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "checkoutTokenRequired" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCheckoutTokenRequired() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckPromoOfferResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckPromoOfferResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!availableOffer_.Equals(other.availableOffer_)) return false;
      if (!object.Equals(RedeemedOffer, other.RedeemedOffer)) return false;
      if (CheckoutTokenRequired != other.CheckoutTokenRequired) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= availableOffer_.GetHashCode();
      if (redeemedOffer_ != null) hash ^= RedeemedOffer.GetHashCode();
      if (HasCheckoutTokenRequired) hash ^= CheckoutTokenRequired.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      availableOffer_.WriteTo(output, _repeated_availableOffer_codec);
      if (redeemedOffer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RedeemedOffer);
      }
      if (HasCheckoutTokenRequired) {
        output.WriteRawTag(24);
        output.WriteBool(CheckoutTokenRequired);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += availableOffer_.CalculateSize(_repeated_availableOffer_codec);
      if (redeemedOffer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RedeemedOffer);
      }
      if (HasCheckoutTokenRequired) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckPromoOfferResponse other) {
      if (other == null) {
        return;
      }
      availableOffer_.Add(other.availableOffer_);
      if (other.redeemedOffer_ != null) {
        if (redeemedOffer_ == null) {
          RedeemedOffer = new global::GooglePlayStore.RedeemedPromoOffer();
        }
        RedeemedOffer.MergeFrom(other.RedeemedOffer);
      }
      if (other.HasCheckoutTokenRequired) {
        CheckoutTokenRequired = other.CheckoutTokenRequired;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            availableOffer_.AddEntriesFrom(input, _repeated_availableOffer_codec);
            break;
          }
          case 18: {
            if (redeemedOffer_ == null) {
              RedeemedOffer = new global::GooglePlayStore.RedeemedPromoOffer();
            }
            input.ReadMessage(RedeemedOffer);
            break;
          }
          case 24: {
            CheckoutTokenRequired = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RedeemedPromoOffer : pb::IMessage<RedeemedPromoOffer> {
    private static readonly pb::MessageParser<RedeemedPromoOffer> _parser = new pb::MessageParser<RedeemedPromoOffer>(() => new RedeemedPromoOffer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RedeemedPromoOffer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemedPromoOffer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemedPromoOffer(RedeemedPromoOffer other) : this() {
      headerText_ = other.headerText_;
      descriptionHtml_ = other.descriptionHtml_;
      image_ = other.image_ != null ? other.image_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemedPromoOffer Clone() {
      return new RedeemedPromoOffer(this);
    }

    /// <summary>Field number for the "headerText" field.</summary>
    public const int HeaderTextFieldNumber = 1;
    private readonly static string HeaderTextDefaultValue = "";

    private string headerText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeaderText {
      get { return headerText_ ?? HeaderTextDefaultValue; }
      set {
        headerText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "headerText" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHeaderText {
      get { return headerText_ != null; }
    }
    /// <summary>Clears the value of the "headerText" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHeaderText() {
      headerText_ = null;
    }

    /// <summary>Field number for the "descriptionHtml" field.</summary>
    public const int DescriptionHtmlFieldNumber = 2;
    private readonly static string DescriptionHtmlDefaultValue = "";

    private string descriptionHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DescriptionHtml {
      get { return descriptionHtml_ ?? DescriptionHtmlDefaultValue; }
      set {
        descriptionHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "descriptionHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescriptionHtml {
      get { return descriptionHtml_ != null; }
    }
    /// <summary>Clears the value of the "descriptionHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescriptionHtml() {
      descriptionHtml_ = null;
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 3;
    private global::GooglePlayStore.Image image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Image Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RedeemedPromoOffer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RedeemedPromoOffer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeaderText != other.HeaderText) return false;
      if (DescriptionHtml != other.DescriptionHtml) return false;
      if (!object.Equals(Image, other.Image)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHeaderText) hash ^= HeaderText.GetHashCode();
      if (HasDescriptionHtml) hash ^= DescriptionHtml.GetHashCode();
      if (image_ != null) hash ^= Image.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasHeaderText) {
        output.WriteRawTag(10);
        output.WriteString(HeaderText);
      }
      if (HasDescriptionHtml) {
        output.WriteRawTag(18);
        output.WriteString(DescriptionHtml);
      }
      if (image_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Image);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasHeaderText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HeaderText);
      }
      if (HasDescriptionHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionHtml);
      }
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RedeemedPromoOffer other) {
      if (other == null) {
        return;
      }
      if (other.HasHeaderText) {
        HeaderText = other.HeaderText;
      }
      if (other.HasDescriptionHtml) {
        DescriptionHtml = other.DescriptionHtml;
      }
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::GooglePlayStore.Image();
        }
        Image.MergeFrom(other.Image);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HeaderText = input.ReadString();
            break;
          }
          case 18: {
            DescriptionHtml = input.ReadString();
            break;
          }
          case 26: {
            if (image_ == null) {
              Image = new global::GooglePlayStore.Image();
            }
            input.ReadMessage(Image);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DocId : pb::IMessage<DocId> {
    private static readonly pb::MessageParser<DocId> _parser = new pb::MessageParser<DocId>(() => new DocId());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DocId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocId(DocId other) : this() {
      _hasBits0 = other._hasBits0;
      backendDocId_ = other.backendDocId_;
      type_ = other.type_;
      backend_ = other.backend_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocId Clone() {
      return new DocId(this);
    }

    /// <summary>Field number for the "backendDocId" field.</summary>
    public const int BackendDocIdFieldNumber = 1;
    private readonly static string BackendDocIdDefaultValue = "";

    private string backendDocId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BackendDocId {
      get { return backendDocId_ ?? BackendDocIdDefaultValue; }
      set {
        backendDocId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "backendDocId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBackendDocId {
      get { return backendDocId_ != null; }
    }
    /// <summary>Clears the value of the "backendDocId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBackendDocId() {
      backendDocId_ = null;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static int TypeDefaultValue = 1;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "backend" field.</summary>
    public const int BackendFieldNumber = 3;
    private readonly static int BackendDefaultValue = 0;

    private int backend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Backend {
      get { if ((_hasBits0 & 2) != 0) { return backend_; } else { return BackendDefaultValue; } }
      set {
        _hasBits0 |= 2;
        backend_ = value;
      }
    }
    /// <summary>Gets whether the "backend" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBackend {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "backend" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBackend() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DocId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DocId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BackendDocId != other.BackendDocId) return false;
      if (Type != other.Type) return false;
      if (Backend != other.Backend) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBackendDocId) hash ^= BackendDocId.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasBackend) hash ^= Backend.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasBackendDocId) {
        output.WriteRawTag(10);
        output.WriteString(BackendDocId);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (HasBackend) {
        output.WriteRawTag(24);
        output.WriteInt32(Backend);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasBackendDocId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BackendDocId);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasBackend) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Backend);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DocId other) {
      if (other == null) {
        return;
      }
      if (other.HasBackendDocId) {
        BackendDocId = other.BackendDocId;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasBackend) {
        Backend = other.Backend;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BackendDocId = input.ReadString();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 24: {
            Backend = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Install : pb::IMessage<Install> {
    private static readonly pb::MessageParser<Install> _parser = new pb::MessageParser<Install>(() => new Install());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Install> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Install() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Install(Install other) : this() {
      _hasBits0 = other._hasBits0;
      androidId_ = other.androidId_;
      version_ = other.version_;
      bundled_ = other.bundled_;
      pending_ = other.pending_;
      lastUpdated_ = other.lastUpdated_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Install Clone() {
      return new Install(this);
    }

    /// <summary>Field number for the "androidId" field.</summary>
    public const int AndroidIdFieldNumber = 1;
    private readonly static ulong AndroidIdDefaultValue = 0UL;

    private ulong androidId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AndroidId {
      get { if ((_hasBits0 & 1) != 0) { return androidId_; } else { return AndroidIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        androidId_ = value;
      }
    }
    /// <summary>Gets whether the "androidId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAndroidId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "androidId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAndroidId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private readonly static int VersionDefaultValue = 0;

    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { if ((_hasBits0 & 2) != 0) { return version_; } else { return VersionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        version_ = value;
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersion {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersion() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "bundled" field.</summary>
    public const int BundledFieldNumber = 3;
    private readonly static bool BundledDefaultValue = false;

    private bool bundled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Bundled {
      get { if ((_hasBits0 & 4) != 0) { return bundled_; } else { return BundledDefaultValue; } }
      set {
        _hasBits0 |= 4;
        bundled_ = value;
      }
    }
    /// <summary>Gets whether the "bundled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBundled {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "bundled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBundled() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "pending" field.</summary>
    public const int PendingFieldNumber = 4;
    private readonly static bool PendingDefaultValue = false;

    private bool pending_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Pending {
      get { if ((_hasBits0 & 8) != 0) { return pending_; } else { return PendingDefaultValue; } }
      set {
        _hasBits0 |= 8;
        pending_ = value;
      }
    }
    /// <summary>Gets whether the "pending" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPending {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "pending" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPending() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "lastUpdated" field.</summary>
    public const int LastUpdatedFieldNumber = 5;
    private readonly static long LastUpdatedDefaultValue = 0L;

    private long lastUpdated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastUpdated {
      get { if ((_hasBits0 & 16) != 0) { return lastUpdated_; } else { return LastUpdatedDefaultValue; } }
      set {
        _hasBits0 |= 16;
        lastUpdated_ = value;
      }
    }
    /// <summary>Gets whether the "lastUpdated" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLastUpdated {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "lastUpdated" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLastUpdated() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Install);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Install other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AndroidId != other.AndroidId) return false;
      if (Version != other.Version) return false;
      if (Bundled != other.Bundled) return false;
      if (Pending != other.Pending) return false;
      if (LastUpdated != other.LastUpdated) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAndroidId) hash ^= AndroidId.GetHashCode();
      if (HasVersion) hash ^= Version.GetHashCode();
      if (HasBundled) hash ^= Bundled.GetHashCode();
      if (HasPending) hash ^= Pending.GetHashCode();
      if (HasLastUpdated) hash ^= LastUpdated.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAndroidId) {
        output.WriteRawTag(9);
        output.WriteFixed64(AndroidId);
      }
      if (HasVersion) {
        output.WriteRawTag(16);
        output.WriteInt32(Version);
      }
      if (HasBundled) {
        output.WriteRawTag(24);
        output.WriteBool(Bundled);
      }
      if (HasPending) {
        output.WriteRawTag(32);
        output.WriteBool(Pending);
      }
      if (HasLastUpdated) {
        output.WriteRawTag(40);
        output.WriteInt64(LastUpdated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAndroidId) {
        size += 1 + 8;
      }
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (HasBundled) {
        size += 1 + 1;
      }
      if (HasPending) {
        size += 1 + 1;
      }
      if (HasLastUpdated) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastUpdated);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Install other) {
      if (other == null) {
        return;
      }
      if (other.HasAndroidId) {
        AndroidId = other.AndroidId;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.HasBundled) {
        Bundled = other.Bundled;
      }
      if (other.HasPending) {
        Pending = other.Pending;
      }
      if (other.HasLastUpdated) {
        LastUpdated = other.LastUpdated;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            AndroidId = input.ReadFixed64();
            break;
          }
          case 16: {
            Version = input.ReadInt32();
            break;
          }
          case 24: {
            Bundled = input.ReadBool();
            break;
          }
          case 32: {
            Pending = input.ReadBool();
            break;
          }
          case 40: {
            LastUpdated = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupLicenseKey : pb::IMessage<GroupLicenseKey> {
    private static readonly pb::MessageParser<GroupLicenseKey> _parser = new pb::MessageParser<GroupLicenseKey>(() => new GroupLicenseKey());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupLicenseKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupLicenseKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupLicenseKey(GroupLicenseKey other) : this() {
      _hasBits0 = other._hasBits0;
      dasherCustomerId_ = other.dasherCustomerId_;
      docId_ = other.docId_ != null ? other.docId_.Clone() : null;
      licensedOfferType_ = other.licensedOfferType_;
      type_ = other.type_;
      rentalPeriodDays_ = other.rentalPeriodDays_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupLicenseKey Clone() {
      return new GroupLicenseKey(this);
    }

    /// <summary>Field number for the "dasher_customer_id" field.</summary>
    public const int DasherCustomerIdFieldNumber = 1;
    private readonly static ulong DasherCustomerIdDefaultValue = 0UL;

    private ulong dasherCustomerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong DasherCustomerId {
      get { if ((_hasBits0 & 1) != 0) { return dasherCustomerId_; } else { return DasherCustomerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        dasherCustomerId_ = value;
      }
    }
    /// <summary>Gets whether the "dasher_customer_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDasherCustomerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "dasher_customer_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDasherCustomerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "docId" field.</summary>
    public const int DocIdFieldNumber = 2;
    private global::GooglePlayStore.DocId docId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DocId DocId {
      get { return docId_; }
      set {
        docId_ = value;
      }
    }

    /// <summary>Field number for the "licensed_offer_type" field.</summary>
    public const int LicensedOfferTypeFieldNumber = 3;
    private readonly static int LicensedOfferTypeDefaultValue = 1;

    private int licensedOfferType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LicensedOfferType {
      get { if ((_hasBits0 & 2) != 0) { return licensedOfferType_; } else { return LicensedOfferTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        licensedOfferType_ = value;
      }
    }
    /// <summary>Gets whether the "licensed_offer_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLicensedOfferType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "licensed_offer_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLicensedOfferType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { if ((_hasBits0 & 4) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "rental_period_days" field.</summary>
    public const int RentalPeriodDaysFieldNumber = 5;
    private readonly static int RentalPeriodDaysDefaultValue = 0;

    private int rentalPeriodDays_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RentalPeriodDays {
      get { if ((_hasBits0 & 8) != 0) { return rentalPeriodDays_; } else { return RentalPeriodDaysDefaultValue; } }
      set {
        _hasBits0 |= 8;
        rentalPeriodDays_ = value;
      }
    }
    /// <summary>Gets whether the "rental_period_days" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRentalPeriodDays {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "rental_period_days" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRentalPeriodDays() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupLicenseKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupLicenseKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DasherCustomerId != other.DasherCustomerId) return false;
      if (!object.Equals(DocId, other.DocId)) return false;
      if (LicensedOfferType != other.LicensedOfferType) return false;
      if (Type != other.Type) return false;
      if (RentalPeriodDays != other.RentalPeriodDays) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDasherCustomerId) hash ^= DasherCustomerId.GetHashCode();
      if (docId_ != null) hash ^= DocId.GetHashCode();
      if (HasLicensedOfferType) hash ^= LicensedOfferType.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasRentalPeriodDays) hash ^= RentalPeriodDays.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasDasherCustomerId) {
        output.WriteRawTag(9);
        output.WriteFixed64(DasherCustomerId);
      }
      if (docId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DocId);
      }
      if (HasLicensedOfferType) {
        output.WriteRawTag(24);
        output.WriteInt32(LicensedOfferType);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (HasRentalPeriodDays) {
        output.WriteRawTag(40);
        output.WriteInt32(RentalPeriodDays);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDasherCustomerId) {
        size += 1 + 8;
      }
      if (docId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DocId);
      }
      if (HasLicensedOfferType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LicensedOfferType);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasRentalPeriodDays) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RentalPeriodDays);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupLicenseKey other) {
      if (other == null) {
        return;
      }
      if (other.HasDasherCustomerId) {
        DasherCustomerId = other.DasherCustomerId;
      }
      if (other.docId_ != null) {
        if (docId_ == null) {
          DocId = new global::GooglePlayStore.DocId();
        }
        DocId.MergeFrom(other.DocId);
      }
      if (other.HasLicensedOfferType) {
        LicensedOfferType = other.LicensedOfferType;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasRentalPeriodDays) {
        RentalPeriodDays = other.RentalPeriodDays;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            DasherCustomerId = input.ReadFixed64();
            break;
          }
          case 18: {
            if (docId_ == null) {
              DocId = new global::GooglePlayStore.DocId();
            }
            input.ReadMessage(DocId);
            break;
          }
          case 24: {
            LicensedOfferType = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 40: {
            RentalPeriodDays = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LicenseTerms : pb::IMessage<LicenseTerms> {
    private static readonly pb::MessageParser<LicenseTerms> _parser = new pb::MessageParser<LicenseTerms>(() => new LicenseTerms());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LicenseTerms> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicenseTerms() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicenseTerms(LicenseTerms other) : this() {
      groupLicenseKey_ = other.groupLicenseKey_ != null ? other.groupLicenseKey_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicenseTerms Clone() {
      return new LicenseTerms(this);
    }

    /// <summary>Field number for the "groupLicenseKey" field.</summary>
    public const int GroupLicenseKeyFieldNumber = 1;
    private global::GooglePlayStore.GroupLicenseKey groupLicenseKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.GroupLicenseKey GroupLicenseKey {
      get { return groupLicenseKey_; }
      set {
        groupLicenseKey_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LicenseTerms);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LicenseTerms other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GroupLicenseKey, other.GroupLicenseKey)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (groupLicenseKey_ != null) hash ^= GroupLicenseKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (groupLicenseKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GroupLicenseKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (groupLicenseKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupLicenseKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LicenseTerms other) {
      if (other == null) {
        return;
      }
      if (other.groupLicenseKey_ != null) {
        if (groupLicenseKey_ == null) {
          GroupLicenseKey = new global::GooglePlayStore.GroupLicenseKey();
        }
        GroupLicenseKey.MergeFrom(other.GroupLicenseKey);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (groupLicenseKey_ == null) {
              GroupLicenseKey = new global::GooglePlayStore.GroupLicenseKey();
            }
            input.ReadMessage(GroupLicenseKey);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Offer : pb::IMessage<Offer> {
    private static readonly pb::MessageParser<Offer> _parser = new pb::MessageParser<Offer>(() => new Offer());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Offer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Offer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Offer(Offer other) : this() {
      _hasBits0 = other._hasBits0;
      micros_ = other.micros_;
      currencyCode_ = other.currencyCode_;
      formattedAmount_ = other.formattedAmount_;
      convertedPrice_ = other.convertedPrice_.Clone();
      checkoutFlowRequired_ = other.checkoutFlowRequired_;
      fullPriceMicros_ = other.fullPriceMicros_;
      formattedFullAmount_ = other.formattedFullAmount_;
      offerType_ = other.offerType_;
      rentalTerms_ = other.rentalTerms_ != null ? other.rentalTerms_.Clone() : null;
      onSaleDate_ = other.onSaleDate_;
      promotionLabel_ = other.promotionLabel_.Clone();
      subscriptionTerms_ = other.subscriptionTerms_ != null ? other.subscriptionTerms_.Clone() : null;
      formattedName_ = other.formattedName_;
      formattedDescription_ = other.formattedDescription_;
      preorder_ = other.preorder_;
      onSaleDateDisplayTimeZoneOffsetMillis_ = other.onSaleDateDisplayTimeZoneOffsetMillis_;
      licensedOfferType_ = other.licensedOfferType_;
      subscriptionContentTerms_ = other.subscriptionContentTerms_ != null ? other.subscriptionContentTerms_.Clone() : null;
      offerId_ = other.offerId_;
      preorderFulfillmentDisplayDate_ = other.preorderFulfillmentDisplayDate_;
      licenseTerms_ = other.licenseTerms_ != null ? other.licenseTerms_.Clone() : null;
      sale_ = other.sale_;
      voucherTerms_ = other.voucherTerms_ != null ? other.voucherTerms_.Clone() : null;
      offerPayment_ = other.offerPayment_.Clone();
      repeatLastPayment_ = other.repeatLastPayment_;
      buyButtonLabel_ = other.buyButtonLabel_;
      instantPurchaseEnabled_ = other.instantPurchaseEnabled_;
      saleEndTimestamp_ = other.saleEndTimestamp_;
      saleMessage_ = other.saleMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Offer Clone() {
      return new Offer(this);
    }

    /// <summary>Field number for the "micros" field.</summary>
    public const int MicrosFieldNumber = 1;
    private readonly static long MicrosDefaultValue = 0L;

    private long micros_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Micros {
      get { if ((_hasBits0 & 1) != 0) { return micros_; } else { return MicrosDefaultValue; } }
      set {
        _hasBits0 |= 1;
        micros_ = value;
      }
    }
    /// <summary>Gets whether the "micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMicros {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMicros() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "currencyCode" field.</summary>
    public const int CurrencyCodeFieldNumber = 2;
    private readonly static string CurrencyCodeDefaultValue = "";

    private string currencyCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_ ?? CurrencyCodeDefaultValue; }
      set {
        currencyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "currencyCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCurrencyCode {
      get { return currencyCode_ != null; }
    }
    /// <summary>Clears the value of the "currencyCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCurrencyCode() {
      currencyCode_ = null;
    }

    /// <summary>Field number for the "formattedAmount" field.</summary>
    public const int FormattedAmountFieldNumber = 3;
    private readonly static string FormattedAmountDefaultValue = "";

    private string formattedAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FormattedAmount {
      get { return formattedAmount_ ?? FormattedAmountDefaultValue; }
      set {
        formattedAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "formattedAmount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFormattedAmount {
      get { return formattedAmount_ != null; }
    }
    /// <summary>Clears the value of the "formattedAmount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFormattedAmount() {
      formattedAmount_ = null;
    }

    /// <summary>Field number for the "convertedPrice" field.</summary>
    public const int ConvertedPriceFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Offer> _repeated_convertedPrice_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.Offer.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Offer> convertedPrice_ = new pbc::RepeatedField<global::GooglePlayStore.Offer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Offer> ConvertedPrice {
      get { return convertedPrice_; }
    }

    /// <summary>Field number for the "checkoutFlowRequired" field.</summary>
    public const int CheckoutFlowRequiredFieldNumber = 5;
    private readonly static bool CheckoutFlowRequiredDefaultValue = false;

    private bool checkoutFlowRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CheckoutFlowRequired {
      get { if ((_hasBits0 & 2) != 0) { return checkoutFlowRequired_; } else { return CheckoutFlowRequiredDefaultValue; } }
      set {
        _hasBits0 |= 2;
        checkoutFlowRequired_ = value;
      }
    }
    /// <summary>Gets whether the "checkoutFlowRequired" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCheckoutFlowRequired {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "checkoutFlowRequired" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCheckoutFlowRequired() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "fullPriceMicros" field.</summary>
    public const int FullPriceMicrosFieldNumber = 6;
    private readonly static long FullPriceMicrosDefaultValue = 0L;

    private long fullPriceMicros_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FullPriceMicros {
      get { if ((_hasBits0 & 4) != 0) { return fullPriceMicros_; } else { return FullPriceMicrosDefaultValue; } }
      set {
        _hasBits0 |= 4;
        fullPriceMicros_ = value;
      }
    }
    /// <summary>Gets whether the "fullPriceMicros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFullPriceMicros {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "fullPriceMicros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFullPriceMicros() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "formattedFullAmount" field.</summary>
    public const int FormattedFullAmountFieldNumber = 7;
    private readonly static string FormattedFullAmountDefaultValue = "";

    private string formattedFullAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FormattedFullAmount {
      get { return formattedFullAmount_ ?? FormattedFullAmountDefaultValue; }
      set {
        formattedFullAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "formattedFullAmount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFormattedFullAmount {
      get { return formattedFullAmount_ != null; }
    }
    /// <summary>Clears the value of the "formattedFullAmount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFormattedFullAmount() {
      formattedFullAmount_ = null;
    }

    /// <summary>Field number for the "offerType" field.</summary>
    public const int OfferTypeFieldNumber = 8;
    private readonly static int OfferTypeDefaultValue = 1;

    private int offerType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OfferType {
      get { if ((_hasBits0 & 8) != 0) { return offerType_; } else { return OfferTypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        offerType_ = value;
      }
    }
    /// <summary>Gets whether the "offerType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOfferType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "offerType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOfferType() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "rentalTerms" field.</summary>
    public const int RentalTermsFieldNumber = 9;
    private global::GooglePlayStore.RentalTerms rentalTerms_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.RentalTerms RentalTerms {
      get { return rentalTerms_; }
      set {
        rentalTerms_ = value;
      }
    }

    /// <summary>Field number for the "onSaleDate" field.</summary>
    public const int OnSaleDateFieldNumber = 10;
    private readonly static long OnSaleDateDefaultValue = 0L;

    private long onSaleDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OnSaleDate {
      get { if ((_hasBits0 & 16) != 0) { return onSaleDate_; } else { return OnSaleDateDefaultValue; } }
      set {
        _hasBits0 |= 16;
        onSaleDate_ = value;
      }
    }
    /// <summary>Gets whether the "onSaleDate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOnSaleDate {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "onSaleDate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOnSaleDate() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "promotionLabel" field.</summary>
    public const int PromotionLabelFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _repeated_promotionLabel_codec
        = pb::FieldCodec.ForString(90);
    private readonly pbc::RepeatedField<string> promotionLabel_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> PromotionLabel {
      get { return promotionLabel_; }
    }

    /// <summary>Field number for the "subscriptionTerms" field.</summary>
    public const int SubscriptionTermsFieldNumber = 12;
    private global::GooglePlayStore.SubscriptionTerms subscriptionTerms_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SubscriptionTerms SubscriptionTerms {
      get { return subscriptionTerms_; }
      set {
        subscriptionTerms_ = value;
      }
    }

    /// <summary>Field number for the "formattedName" field.</summary>
    public const int FormattedNameFieldNumber = 13;
    private readonly static string FormattedNameDefaultValue = "";

    private string formattedName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FormattedName {
      get { return formattedName_ ?? FormattedNameDefaultValue; }
      set {
        formattedName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "formattedName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFormattedName {
      get { return formattedName_ != null; }
    }
    /// <summary>Clears the value of the "formattedName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFormattedName() {
      formattedName_ = null;
    }

    /// <summary>Field number for the "formattedDescription" field.</summary>
    public const int FormattedDescriptionFieldNumber = 14;
    private readonly static string FormattedDescriptionDefaultValue = "";

    private string formattedDescription_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FormattedDescription {
      get { return formattedDescription_ ?? FormattedDescriptionDefaultValue; }
      set {
        formattedDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "formattedDescription" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFormattedDescription {
      get { return formattedDescription_ != null; }
    }
    /// <summary>Clears the value of the "formattedDescription" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFormattedDescription() {
      formattedDescription_ = null;
    }

    /// <summary>Field number for the "preorder" field.</summary>
    public const int PreorderFieldNumber = 15;
    private readonly static bool PreorderDefaultValue = false;

    private bool preorder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Preorder {
      get { if ((_hasBits0 & 32) != 0) { return preorder_; } else { return PreorderDefaultValue; } }
      set {
        _hasBits0 |= 32;
        preorder_ = value;
      }
    }
    /// <summary>Gets whether the "preorder" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPreorder {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "preorder" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPreorder() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "onSaleDateDisplayTimeZoneOffsetMillis" field.</summary>
    public const int OnSaleDateDisplayTimeZoneOffsetMillisFieldNumber = 16;
    private readonly static int OnSaleDateDisplayTimeZoneOffsetMillisDefaultValue = 0;

    private int onSaleDateDisplayTimeZoneOffsetMillis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OnSaleDateDisplayTimeZoneOffsetMillis {
      get { if ((_hasBits0 & 64) != 0) { return onSaleDateDisplayTimeZoneOffsetMillis_; } else { return OnSaleDateDisplayTimeZoneOffsetMillisDefaultValue; } }
      set {
        _hasBits0 |= 64;
        onSaleDateDisplayTimeZoneOffsetMillis_ = value;
      }
    }
    /// <summary>Gets whether the "onSaleDateDisplayTimeZoneOffsetMillis" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOnSaleDateDisplayTimeZoneOffsetMillis {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "onSaleDateDisplayTimeZoneOffsetMillis" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOnSaleDateDisplayTimeZoneOffsetMillis() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "licensedOfferType" field.</summary>
    public const int LicensedOfferTypeFieldNumber = 17;
    private readonly static int LicensedOfferTypeDefaultValue = 0;

    private int licensedOfferType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LicensedOfferType {
      get { if ((_hasBits0 & 128) != 0) { return licensedOfferType_; } else { return LicensedOfferTypeDefaultValue; } }
      set {
        _hasBits0 |= 128;
        licensedOfferType_ = value;
      }
    }
    /// <summary>Gets whether the "licensedOfferType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLicensedOfferType {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "licensedOfferType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLicensedOfferType() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "subscriptionContentTerms" field.</summary>
    public const int SubscriptionContentTermsFieldNumber = 18;
    private global::GooglePlayStore.SubscriptionContentTerms subscriptionContentTerms_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SubscriptionContentTerms SubscriptionContentTerms {
      get { return subscriptionContentTerms_; }
      set {
        subscriptionContentTerms_ = value;
      }
    }

    /// <summary>Field number for the "offerId" field.</summary>
    public const int OfferIdFieldNumber = 19;
    private readonly static string OfferIdDefaultValue = "";

    private string offerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfferId {
      get { return offerId_ ?? OfferIdDefaultValue; }
      set {
        offerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "offerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOfferId {
      get { return offerId_ != null; }
    }
    /// <summary>Clears the value of the "offerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOfferId() {
      offerId_ = null;
    }

    /// <summary>Field number for the "preorderFulfillmentDisplayDate" field.</summary>
    public const int PreorderFulfillmentDisplayDateFieldNumber = 20;
    private readonly static long PreorderFulfillmentDisplayDateDefaultValue = 0L;

    private long preorderFulfillmentDisplayDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PreorderFulfillmentDisplayDate {
      get { if ((_hasBits0 & 256) != 0) { return preorderFulfillmentDisplayDate_; } else { return PreorderFulfillmentDisplayDateDefaultValue; } }
      set {
        _hasBits0 |= 256;
        preorderFulfillmentDisplayDate_ = value;
      }
    }
    /// <summary>Gets whether the "preorderFulfillmentDisplayDate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPreorderFulfillmentDisplayDate {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "preorderFulfillmentDisplayDate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPreorderFulfillmentDisplayDate() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "licenseTerms" field.</summary>
    public const int LicenseTermsFieldNumber = 21;
    private global::GooglePlayStore.LicenseTerms licenseTerms_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.LicenseTerms LicenseTerms {
      get { return licenseTerms_; }
      set {
        licenseTerms_ = value;
      }
    }

    /// <summary>Field number for the "sale" field.</summary>
    public const int SaleFieldNumber = 22;
    private readonly static bool SaleDefaultValue = false;

    private bool sale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Sale {
      get { if ((_hasBits0 & 512) != 0) { return sale_; } else { return SaleDefaultValue; } }
      set {
        _hasBits0 |= 512;
        sale_ = value;
      }
    }
    /// <summary>Gets whether the "sale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSale {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "sale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSale() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "voucherTerms" field.</summary>
    public const int VoucherTermsFieldNumber = 23;
    private global::GooglePlayStore.VoucherTerms voucherTerms_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.VoucherTerms VoucherTerms {
      get { return voucherTerms_; }
      set {
        voucherTerms_ = value;
      }
    }

    /// <summary>Field number for the "offerPayment" field.</summary>
    public const int OfferPaymentFieldNumber = 24;
    private static readonly pb::FieldCodec<global::GooglePlayStore.OfferPayment> _repeated_offerPayment_codec
        = pb::FieldCodec.ForMessage(194, global::GooglePlayStore.OfferPayment.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.OfferPayment> offerPayment_ = new pbc::RepeatedField<global::GooglePlayStore.OfferPayment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.OfferPayment> OfferPayment {
      get { return offerPayment_; }
    }

    /// <summary>Field number for the "repeatLastPayment" field.</summary>
    public const int RepeatLastPaymentFieldNumber = 25;
    private readonly static bool RepeatLastPaymentDefaultValue = false;

    private bool repeatLastPayment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RepeatLastPayment {
      get { if ((_hasBits0 & 1024) != 0) { return repeatLastPayment_; } else { return RepeatLastPaymentDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        repeatLastPayment_ = value;
      }
    }
    /// <summary>Gets whether the "repeatLastPayment" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRepeatLastPayment {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "repeatLastPayment" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRepeatLastPayment() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "buyButtonLabel" field.</summary>
    public const int BuyButtonLabelFieldNumber = 26;
    private readonly static string BuyButtonLabelDefaultValue = "";

    private string buyButtonLabel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BuyButtonLabel {
      get { return buyButtonLabel_ ?? BuyButtonLabelDefaultValue; }
      set {
        buyButtonLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "buyButtonLabel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBuyButtonLabel {
      get { return buyButtonLabel_ != null; }
    }
    /// <summary>Clears the value of the "buyButtonLabel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBuyButtonLabel() {
      buyButtonLabel_ = null;
    }

    /// <summary>Field number for the "instantPurchaseEnabled" field.</summary>
    public const int InstantPurchaseEnabledFieldNumber = 27;
    private readonly static bool InstantPurchaseEnabledDefaultValue = false;

    private bool instantPurchaseEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool InstantPurchaseEnabled {
      get { if ((_hasBits0 & 2048) != 0) { return instantPurchaseEnabled_; } else { return InstantPurchaseEnabledDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        instantPurchaseEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "instantPurchaseEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInstantPurchaseEnabled {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "instantPurchaseEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInstantPurchaseEnabled() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "saleEndTimestamp" field.</summary>
    public const int SaleEndTimestampFieldNumber = 30;
    private readonly static long SaleEndTimestampDefaultValue = 0L;

    private long saleEndTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SaleEndTimestamp {
      get { if ((_hasBits0 & 4096) != 0) { return saleEndTimestamp_; } else { return SaleEndTimestampDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        saleEndTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "saleEndTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSaleEndTimestamp {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "saleEndTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSaleEndTimestamp() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "saleMessage" field.</summary>
    public const int SaleMessageFieldNumber = 31;
    private readonly static string SaleMessageDefaultValue = "";

    private string saleMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SaleMessage {
      get { return saleMessage_ ?? SaleMessageDefaultValue; }
      set {
        saleMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "saleMessage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSaleMessage {
      get { return saleMessage_ != null; }
    }
    /// <summary>Clears the value of the "saleMessage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSaleMessage() {
      saleMessage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Offer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Offer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Micros != other.Micros) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      if (FormattedAmount != other.FormattedAmount) return false;
      if(!convertedPrice_.Equals(other.convertedPrice_)) return false;
      if (CheckoutFlowRequired != other.CheckoutFlowRequired) return false;
      if (FullPriceMicros != other.FullPriceMicros) return false;
      if (FormattedFullAmount != other.FormattedFullAmount) return false;
      if (OfferType != other.OfferType) return false;
      if (!object.Equals(RentalTerms, other.RentalTerms)) return false;
      if (OnSaleDate != other.OnSaleDate) return false;
      if(!promotionLabel_.Equals(other.promotionLabel_)) return false;
      if (!object.Equals(SubscriptionTerms, other.SubscriptionTerms)) return false;
      if (FormattedName != other.FormattedName) return false;
      if (FormattedDescription != other.FormattedDescription) return false;
      if (Preorder != other.Preorder) return false;
      if (OnSaleDateDisplayTimeZoneOffsetMillis != other.OnSaleDateDisplayTimeZoneOffsetMillis) return false;
      if (LicensedOfferType != other.LicensedOfferType) return false;
      if (!object.Equals(SubscriptionContentTerms, other.SubscriptionContentTerms)) return false;
      if (OfferId != other.OfferId) return false;
      if (PreorderFulfillmentDisplayDate != other.PreorderFulfillmentDisplayDate) return false;
      if (!object.Equals(LicenseTerms, other.LicenseTerms)) return false;
      if (Sale != other.Sale) return false;
      if (!object.Equals(VoucherTerms, other.VoucherTerms)) return false;
      if(!offerPayment_.Equals(other.offerPayment_)) return false;
      if (RepeatLastPayment != other.RepeatLastPayment) return false;
      if (BuyButtonLabel != other.BuyButtonLabel) return false;
      if (InstantPurchaseEnabled != other.InstantPurchaseEnabled) return false;
      if (SaleEndTimestamp != other.SaleEndTimestamp) return false;
      if (SaleMessage != other.SaleMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMicros) hash ^= Micros.GetHashCode();
      if (HasCurrencyCode) hash ^= CurrencyCode.GetHashCode();
      if (HasFormattedAmount) hash ^= FormattedAmount.GetHashCode();
      hash ^= convertedPrice_.GetHashCode();
      if (HasCheckoutFlowRequired) hash ^= CheckoutFlowRequired.GetHashCode();
      if (HasFullPriceMicros) hash ^= FullPriceMicros.GetHashCode();
      if (HasFormattedFullAmount) hash ^= FormattedFullAmount.GetHashCode();
      if (HasOfferType) hash ^= OfferType.GetHashCode();
      if (rentalTerms_ != null) hash ^= RentalTerms.GetHashCode();
      if (HasOnSaleDate) hash ^= OnSaleDate.GetHashCode();
      hash ^= promotionLabel_.GetHashCode();
      if (subscriptionTerms_ != null) hash ^= SubscriptionTerms.GetHashCode();
      if (HasFormattedName) hash ^= FormattedName.GetHashCode();
      if (HasFormattedDescription) hash ^= FormattedDescription.GetHashCode();
      if (HasPreorder) hash ^= Preorder.GetHashCode();
      if (HasOnSaleDateDisplayTimeZoneOffsetMillis) hash ^= OnSaleDateDisplayTimeZoneOffsetMillis.GetHashCode();
      if (HasLicensedOfferType) hash ^= LicensedOfferType.GetHashCode();
      if (subscriptionContentTerms_ != null) hash ^= SubscriptionContentTerms.GetHashCode();
      if (HasOfferId) hash ^= OfferId.GetHashCode();
      if (HasPreorderFulfillmentDisplayDate) hash ^= PreorderFulfillmentDisplayDate.GetHashCode();
      if (licenseTerms_ != null) hash ^= LicenseTerms.GetHashCode();
      if (HasSale) hash ^= Sale.GetHashCode();
      if (voucherTerms_ != null) hash ^= VoucherTerms.GetHashCode();
      hash ^= offerPayment_.GetHashCode();
      if (HasRepeatLastPayment) hash ^= RepeatLastPayment.GetHashCode();
      if (HasBuyButtonLabel) hash ^= BuyButtonLabel.GetHashCode();
      if (HasInstantPurchaseEnabled) hash ^= InstantPurchaseEnabled.GetHashCode();
      if (HasSaleEndTimestamp) hash ^= SaleEndTimestamp.GetHashCode();
      if (HasSaleMessage) hash ^= SaleMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasMicros) {
        output.WriteRawTag(8);
        output.WriteInt64(Micros);
      }
      if (HasCurrencyCode) {
        output.WriteRawTag(18);
        output.WriteString(CurrencyCode);
      }
      if (HasFormattedAmount) {
        output.WriteRawTag(26);
        output.WriteString(FormattedAmount);
      }
      convertedPrice_.WriteTo(output, _repeated_convertedPrice_codec);
      if (HasCheckoutFlowRequired) {
        output.WriteRawTag(40);
        output.WriteBool(CheckoutFlowRequired);
      }
      if (HasFullPriceMicros) {
        output.WriteRawTag(48);
        output.WriteInt64(FullPriceMicros);
      }
      if (HasFormattedFullAmount) {
        output.WriteRawTag(58);
        output.WriteString(FormattedFullAmount);
      }
      if (HasOfferType) {
        output.WriteRawTag(64);
        output.WriteInt32(OfferType);
      }
      if (rentalTerms_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(RentalTerms);
      }
      if (HasOnSaleDate) {
        output.WriteRawTag(80);
        output.WriteInt64(OnSaleDate);
      }
      promotionLabel_.WriteTo(output, _repeated_promotionLabel_codec);
      if (subscriptionTerms_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(SubscriptionTerms);
      }
      if (HasFormattedName) {
        output.WriteRawTag(106);
        output.WriteString(FormattedName);
      }
      if (HasFormattedDescription) {
        output.WriteRawTag(114);
        output.WriteString(FormattedDescription);
      }
      if (HasPreorder) {
        output.WriteRawTag(120);
        output.WriteBool(Preorder);
      }
      if (HasOnSaleDateDisplayTimeZoneOffsetMillis) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(OnSaleDateDisplayTimeZoneOffsetMillis);
      }
      if (HasLicensedOfferType) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(LicensedOfferType);
      }
      if (subscriptionContentTerms_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(SubscriptionContentTerms);
      }
      if (HasOfferId) {
        output.WriteRawTag(154, 1);
        output.WriteString(OfferId);
      }
      if (HasPreorderFulfillmentDisplayDate) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(PreorderFulfillmentDisplayDate);
      }
      if (licenseTerms_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(LicenseTerms);
      }
      if (HasSale) {
        output.WriteRawTag(176, 1);
        output.WriteBool(Sale);
      }
      if (voucherTerms_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(VoucherTerms);
      }
      offerPayment_.WriteTo(output, _repeated_offerPayment_codec);
      if (HasRepeatLastPayment) {
        output.WriteRawTag(200, 1);
        output.WriteBool(RepeatLastPayment);
      }
      if (HasBuyButtonLabel) {
        output.WriteRawTag(210, 1);
        output.WriteString(BuyButtonLabel);
      }
      if (HasInstantPurchaseEnabled) {
        output.WriteRawTag(216, 1);
        output.WriteBool(InstantPurchaseEnabled);
      }
      if (HasSaleEndTimestamp) {
        output.WriteRawTag(240, 1);
        output.WriteInt64(SaleEndTimestamp);
      }
      if (HasSaleMessage) {
        output.WriteRawTag(250, 1);
        output.WriteString(SaleMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMicros) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Micros);
      }
      if (HasCurrencyCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyCode);
      }
      if (HasFormattedAmount) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormattedAmount);
      }
      size += convertedPrice_.CalculateSize(_repeated_convertedPrice_codec);
      if (HasCheckoutFlowRequired) {
        size += 1 + 1;
      }
      if (HasFullPriceMicros) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FullPriceMicros);
      }
      if (HasFormattedFullAmount) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormattedFullAmount);
      }
      if (HasOfferType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OfferType);
      }
      if (rentalTerms_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RentalTerms);
      }
      if (HasOnSaleDate) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OnSaleDate);
      }
      size += promotionLabel_.CalculateSize(_repeated_promotionLabel_codec);
      if (subscriptionTerms_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscriptionTerms);
      }
      if (HasFormattedName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormattedName);
      }
      if (HasFormattedDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormattedDescription);
      }
      if (HasPreorder) {
        size += 1 + 1;
      }
      if (HasOnSaleDateDisplayTimeZoneOffsetMillis) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(OnSaleDateDisplayTimeZoneOffsetMillis);
      }
      if (HasLicensedOfferType) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LicensedOfferType);
      }
      if (subscriptionContentTerms_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SubscriptionContentTerms);
      }
      if (HasOfferId) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OfferId);
      }
      if (HasPreorderFulfillmentDisplayDate) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(PreorderFulfillmentDisplayDate);
      }
      if (licenseTerms_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LicenseTerms);
      }
      if (HasSale) {
        size += 2 + 1;
      }
      if (voucherTerms_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VoucherTerms);
      }
      size += offerPayment_.CalculateSize(_repeated_offerPayment_codec);
      if (HasRepeatLastPayment) {
        size += 2 + 1;
      }
      if (HasBuyButtonLabel) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BuyButtonLabel);
      }
      if (HasInstantPurchaseEnabled) {
        size += 2 + 1;
      }
      if (HasSaleEndTimestamp) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(SaleEndTimestamp);
      }
      if (HasSaleMessage) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SaleMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Offer other) {
      if (other == null) {
        return;
      }
      if (other.HasMicros) {
        Micros = other.Micros;
      }
      if (other.HasCurrencyCode) {
        CurrencyCode = other.CurrencyCode;
      }
      if (other.HasFormattedAmount) {
        FormattedAmount = other.FormattedAmount;
      }
      convertedPrice_.Add(other.convertedPrice_);
      if (other.HasCheckoutFlowRequired) {
        CheckoutFlowRequired = other.CheckoutFlowRequired;
      }
      if (other.HasFullPriceMicros) {
        FullPriceMicros = other.FullPriceMicros;
      }
      if (other.HasFormattedFullAmount) {
        FormattedFullAmount = other.FormattedFullAmount;
      }
      if (other.HasOfferType) {
        OfferType = other.OfferType;
      }
      if (other.rentalTerms_ != null) {
        if (rentalTerms_ == null) {
          RentalTerms = new global::GooglePlayStore.RentalTerms();
        }
        RentalTerms.MergeFrom(other.RentalTerms);
      }
      if (other.HasOnSaleDate) {
        OnSaleDate = other.OnSaleDate;
      }
      promotionLabel_.Add(other.promotionLabel_);
      if (other.subscriptionTerms_ != null) {
        if (subscriptionTerms_ == null) {
          SubscriptionTerms = new global::GooglePlayStore.SubscriptionTerms();
        }
        SubscriptionTerms.MergeFrom(other.SubscriptionTerms);
      }
      if (other.HasFormattedName) {
        FormattedName = other.FormattedName;
      }
      if (other.HasFormattedDescription) {
        FormattedDescription = other.FormattedDescription;
      }
      if (other.HasPreorder) {
        Preorder = other.Preorder;
      }
      if (other.HasOnSaleDateDisplayTimeZoneOffsetMillis) {
        OnSaleDateDisplayTimeZoneOffsetMillis = other.OnSaleDateDisplayTimeZoneOffsetMillis;
      }
      if (other.HasLicensedOfferType) {
        LicensedOfferType = other.LicensedOfferType;
      }
      if (other.subscriptionContentTerms_ != null) {
        if (subscriptionContentTerms_ == null) {
          SubscriptionContentTerms = new global::GooglePlayStore.SubscriptionContentTerms();
        }
        SubscriptionContentTerms.MergeFrom(other.SubscriptionContentTerms);
      }
      if (other.HasOfferId) {
        OfferId = other.OfferId;
      }
      if (other.HasPreorderFulfillmentDisplayDate) {
        PreorderFulfillmentDisplayDate = other.PreorderFulfillmentDisplayDate;
      }
      if (other.licenseTerms_ != null) {
        if (licenseTerms_ == null) {
          LicenseTerms = new global::GooglePlayStore.LicenseTerms();
        }
        LicenseTerms.MergeFrom(other.LicenseTerms);
      }
      if (other.HasSale) {
        Sale = other.Sale;
      }
      if (other.voucherTerms_ != null) {
        if (voucherTerms_ == null) {
          VoucherTerms = new global::GooglePlayStore.VoucherTerms();
        }
        VoucherTerms.MergeFrom(other.VoucherTerms);
      }
      offerPayment_.Add(other.offerPayment_);
      if (other.HasRepeatLastPayment) {
        RepeatLastPayment = other.RepeatLastPayment;
      }
      if (other.HasBuyButtonLabel) {
        BuyButtonLabel = other.BuyButtonLabel;
      }
      if (other.HasInstantPurchaseEnabled) {
        InstantPurchaseEnabled = other.InstantPurchaseEnabled;
      }
      if (other.HasSaleEndTimestamp) {
        SaleEndTimestamp = other.SaleEndTimestamp;
      }
      if (other.HasSaleMessage) {
        SaleMessage = other.SaleMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Micros = input.ReadInt64();
            break;
          }
          case 18: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 26: {
            FormattedAmount = input.ReadString();
            break;
          }
          case 34: {
            convertedPrice_.AddEntriesFrom(input, _repeated_convertedPrice_codec);
            break;
          }
          case 40: {
            CheckoutFlowRequired = input.ReadBool();
            break;
          }
          case 48: {
            FullPriceMicros = input.ReadInt64();
            break;
          }
          case 58: {
            FormattedFullAmount = input.ReadString();
            break;
          }
          case 64: {
            OfferType = input.ReadInt32();
            break;
          }
          case 74: {
            if (rentalTerms_ == null) {
              RentalTerms = new global::GooglePlayStore.RentalTerms();
            }
            input.ReadMessage(RentalTerms);
            break;
          }
          case 80: {
            OnSaleDate = input.ReadInt64();
            break;
          }
          case 90: {
            promotionLabel_.AddEntriesFrom(input, _repeated_promotionLabel_codec);
            break;
          }
          case 98: {
            if (subscriptionTerms_ == null) {
              SubscriptionTerms = new global::GooglePlayStore.SubscriptionTerms();
            }
            input.ReadMessage(SubscriptionTerms);
            break;
          }
          case 106: {
            FormattedName = input.ReadString();
            break;
          }
          case 114: {
            FormattedDescription = input.ReadString();
            break;
          }
          case 120: {
            Preorder = input.ReadBool();
            break;
          }
          case 128: {
            OnSaleDateDisplayTimeZoneOffsetMillis = input.ReadInt32();
            break;
          }
          case 136: {
            LicensedOfferType = input.ReadInt32();
            break;
          }
          case 146: {
            if (subscriptionContentTerms_ == null) {
              SubscriptionContentTerms = new global::GooglePlayStore.SubscriptionContentTerms();
            }
            input.ReadMessage(SubscriptionContentTerms);
            break;
          }
          case 154: {
            OfferId = input.ReadString();
            break;
          }
          case 160: {
            PreorderFulfillmentDisplayDate = input.ReadInt64();
            break;
          }
          case 170: {
            if (licenseTerms_ == null) {
              LicenseTerms = new global::GooglePlayStore.LicenseTerms();
            }
            input.ReadMessage(LicenseTerms);
            break;
          }
          case 176: {
            Sale = input.ReadBool();
            break;
          }
          case 186: {
            if (voucherTerms_ == null) {
              VoucherTerms = new global::GooglePlayStore.VoucherTerms();
            }
            input.ReadMessage(VoucherTerms);
            break;
          }
          case 194: {
            offerPayment_.AddEntriesFrom(input, _repeated_offerPayment_codec);
            break;
          }
          case 200: {
            RepeatLastPayment = input.ReadBool();
            break;
          }
          case 210: {
            BuyButtonLabel = input.ReadString();
            break;
          }
          case 216: {
            InstantPurchaseEnabled = input.ReadBool();
            break;
          }
          case 240: {
            SaleEndTimestamp = input.ReadInt64();
            break;
          }
          case 250: {
            SaleMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MonthAndDay : pb::IMessage<MonthAndDay> {
    private static readonly pb::MessageParser<MonthAndDay> _parser = new pb::MessageParser<MonthAndDay>(() => new MonthAndDay());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MonthAndDay> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonthAndDay() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonthAndDay(MonthAndDay other) : this() {
      _hasBits0 = other._hasBits0;
      month_ = other.month_;
      day_ = other.day_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonthAndDay Clone() {
      return new MonthAndDay(this);
    }

    /// <summary>Field number for the "month" field.</summary>
    public const int MonthFieldNumber = 1;
    private readonly static uint MonthDefaultValue = 0;

    private uint month_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Month {
      get { if ((_hasBits0 & 1) != 0) { return month_; } else { return MonthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        month_ = value;
      }
    }
    /// <summary>Gets whether the "month" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMonth {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "month" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMonth() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "day" field.</summary>
    public const int DayFieldNumber = 2;
    private readonly static uint DayDefaultValue = 0;

    private uint day_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Day {
      get { if ((_hasBits0 & 2) != 0) { return day_; } else { return DayDefaultValue; } }
      set {
        _hasBits0 |= 2;
        day_ = value;
      }
    }
    /// <summary>Gets whether the "day" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDay {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "day" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDay() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MonthAndDay);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MonthAndDay other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Month != other.Month) return false;
      if (Day != other.Day) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMonth) hash ^= Month.GetHashCode();
      if (HasDay) hash ^= Day.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasMonth) {
        output.WriteRawTag(8);
        output.WriteUInt32(Month);
      }
      if (HasDay) {
        output.WriteRawTag(16);
        output.WriteUInt32(Day);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMonth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Month);
      }
      if (HasDay) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Day);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MonthAndDay other) {
      if (other == null) {
        return;
      }
      if (other.HasMonth) {
        Month = other.Month;
      }
      if (other.HasDay) {
        Day = other.Day;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Month = input.ReadUInt32();
            break;
          }
          case 16: {
            Day = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OfferPaymentPeriod : pb::IMessage<OfferPaymentPeriod> {
    private static readonly pb::MessageParser<OfferPaymentPeriod> _parser = new pb::MessageParser<OfferPaymentPeriod>(() => new OfferPaymentPeriod());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OfferPaymentPeriod> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferPaymentPeriod() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferPaymentPeriod(OfferPaymentPeriod other) : this() {
      duration_ = other.duration_ != null ? other.duration_.Clone() : null;
      start_ = other.start_ != null ? other.start_.Clone() : null;
      end_ = other.end_ != null ? other.end_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferPaymentPeriod Clone() {
      return new OfferPaymentPeriod(this);
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 1;
    private global::GooglePlayStore.TimePeriod duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TimePeriod Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 2;
    private global::GooglePlayStore.MonthAndDay start_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.MonthAndDay Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "end" field.</summary>
    public const int EndFieldNumber = 3;
    private global::GooglePlayStore.MonthAndDay end_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.MonthAndDay End {
      get { return end_; }
      set {
        end_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OfferPaymentPeriod);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OfferPaymentPeriod other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Duration, other.Duration)) return false;
      if (!object.Equals(Start, other.Start)) return false;
      if (!object.Equals(End, other.End)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (duration_ != null) hash ^= Duration.GetHashCode();
      if (start_ != null) hash ^= Start.GetHashCode();
      if (end_ != null) hash ^= End.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (duration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Duration);
      }
      if (start_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Start);
      }
      if (end_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(End);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (duration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Duration);
      }
      if (start_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Start);
      }
      if (end_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(End);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OfferPaymentPeriod other) {
      if (other == null) {
        return;
      }
      if (other.duration_ != null) {
        if (duration_ == null) {
          Duration = new global::GooglePlayStore.TimePeriod();
        }
        Duration.MergeFrom(other.Duration);
      }
      if (other.start_ != null) {
        if (start_ == null) {
          Start = new global::GooglePlayStore.MonthAndDay();
        }
        Start.MergeFrom(other.Start);
      }
      if (other.end_ != null) {
        if (end_ == null) {
          End = new global::GooglePlayStore.MonthAndDay();
        }
        End.MergeFrom(other.End);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (duration_ == null) {
              Duration = new global::GooglePlayStore.TimePeriod();
            }
            input.ReadMessage(Duration);
            break;
          }
          case 18: {
            if (start_ == null) {
              Start = new global::GooglePlayStore.MonthAndDay();
            }
            input.ReadMessage(Start);
            break;
          }
          case 26: {
            if (end_ == null) {
              End = new global::GooglePlayStore.MonthAndDay();
            }
            input.ReadMessage(End);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OfferPaymentOverride : pb::IMessage<OfferPaymentOverride> {
    private static readonly pb::MessageParser<OfferPaymentOverride> _parser = new pb::MessageParser<OfferPaymentOverride>(() => new OfferPaymentOverride());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OfferPaymentOverride> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferPaymentOverride() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferPaymentOverride(OfferPaymentOverride other) : this() {
      _hasBits0 = other._hasBits0;
      micros_ = other.micros_;
      start_ = other.start_ != null ? other.start_.Clone() : null;
      end_ = other.end_ != null ? other.end_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferPaymentOverride Clone() {
      return new OfferPaymentOverride(this);
    }

    /// <summary>Field number for the "micros" field.</summary>
    public const int MicrosFieldNumber = 1;
    private readonly static long MicrosDefaultValue = 0L;

    private long micros_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Micros {
      get { if ((_hasBits0 & 1) != 0) { return micros_; } else { return MicrosDefaultValue; } }
      set {
        _hasBits0 |= 1;
        micros_ = value;
      }
    }
    /// <summary>Gets whether the "micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMicros {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMicros() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 2;
    private global::GooglePlayStore.MonthAndDay start_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.MonthAndDay Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "end" field.</summary>
    public const int EndFieldNumber = 3;
    private global::GooglePlayStore.MonthAndDay end_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.MonthAndDay End {
      get { return end_; }
      set {
        end_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OfferPaymentOverride);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OfferPaymentOverride other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Micros != other.Micros) return false;
      if (!object.Equals(Start, other.Start)) return false;
      if (!object.Equals(End, other.End)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMicros) hash ^= Micros.GetHashCode();
      if (start_ != null) hash ^= Start.GetHashCode();
      if (end_ != null) hash ^= End.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasMicros) {
        output.WriteRawTag(8);
        output.WriteInt64(Micros);
      }
      if (start_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Start);
      }
      if (end_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(End);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMicros) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Micros);
      }
      if (start_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Start);
      }
      if (end_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(End);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OfferPaymentOverride other) {
      if (other == null) {
        return;
      }
      if (other.HasMicros) {
        Micros = other.Micros;
      }
      if (other.start_ != null) {
        if (start_ == null) {
          Start = new global::GooglePlayStore.MonthAndDay();
        }
        Start.MergeFrom(other.Start);
      }
      if (other.end_ != null) {
        if (end_ == null) {
          End = new global::GooglePlayStore.MonthAndDay();
        }
        End.MergeFrom(other.End);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Micros = input.ReadInt64();
            break;
          }
          case 18: {
            if (start_ == null) {
              Start = new global::GooglePlayStore.MonthAndDay();
            }
            input.ReadMessage(Start);
            break;
          }
          case 26: {
            if (end_ == null) {
              End = new global::GooglePlayStore.MonthAndDay();
            }
            input.ReadMessage(End);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OfferPayment : pb::IMessage<OfferPayment> {
    private static readonly pb::MessageParser<OfferPayment> _parser = new pb::MessageParser<OfferPayment>(() => new OfferPayment());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OfferPayment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferPayment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferPayment(OfferPayment other) : this() {
      _hasBits0 = other._hasBits0;
      micros_ = other.micros_;
      currencyCode_ = other.currencyCode_;
      offerPaymentPeriod_ = other.offerPaymentPeriod_ != null ? other.offerPaymentPeriod_.Clone() : null;
      offerPaymentOverride_ = other.offerPaymentOverride_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferPayment Clone() {
      return new OfferPayment(this);
    }

    /// <summary>Field number for the "micros" field.</summary>
    public const int MicrosFieldNumber = 1;
    private readonly static long MicrosDefaultValue = 0L;

    private long micros_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Micros {
      get { if ((_hasBits0 & 1) != 0) { return micros_; } else { return MicrosDefaultValue; } }
      set {
        _hasBits0 |= 1;
        micros_ = value;
      }
    }
    /// <summary>Gets whether the "micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMicros {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMicros() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "currencyCode" field.</summary>
    public const int CurrencyCodeFieldNumber = 2;
    private readonly static string CurrencyCodeDefaultValue = "";

    private string currencyCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_ ?? CurrencyCodeDefaultValue; }
      set {
        currencyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "currencyCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCurrencyCode {
      get { return currencyCode_ != null; }
    }
    /// <summary>Clears the value of the "currencyCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCurrencyCode() {
      currencyCode_ = null;
    }

    /// <summary>Field number for the "offerPaymentPeriod" field.</summary>
    public const int OfferPaymentPeriodFieldNumber = 3;
    private global::GooglePlayStore.OfferPaymentPeriod offerPaymentPeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.OfferPaymentPeriod OfferPaymentPeriod {
      get { return offerPaymentPeriod_; }
      set {
        offerPaymentPeriod_ = value;
      }
    }

    /// <summary>Field number for the "offerPaymentOverride" field.</summary>
    public const int OfferPaymentOverrideFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.OfferPaymentOverride> _repeated_offerPaymentOverride_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.OfferPaymentOverride.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.OfferPaymentOverride> offerPaymentOverride_ = new pbc::RepeatedField<global::GooglePlayStore.OfferPaymentOverride>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.OfferPaymentOverride> OfferPaymentOverride {
      get { return offerPaymentOverride_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OfferPayment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OfferPayment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Micros != other.Micros) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      if (!object.Equals(OfferPaymentPeriod, other.OfferPaymentPeriod)) return false;
      if(!offerPaymentOverride_.Equals(other.offerPaymentOverride_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMicros) hash ^= Micros.GetHashCode();
      if (HasCurrencyCode) hash ^= CurrencyCode.GetHashCode();
      if (offerPaymentPeriod_ != null) hash ^= OfferPaymentPeriod.GetHashCode();
      hash ^= offerPaymentOverride_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasMicros) {
        output.WriteRawTag(8);
        output.WriteInt64(Micros);
      }
      if (HasCurrencyCode) {
        output.WriteRawTag(18);
        output.WriteString(CurrencyCode);
      }
      if (offerPaymentPeriod_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OfferPaymentPeriod);
      }
      offerPaymentOverride_.WriteTo(output, _repeated_offerPaymentOverride_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMicros) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Micros);
      }
      if (HasCurrencyCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyCode);
      }
      if (offerPaymentPeriod_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OfferPaymentPeriod);
      }
      size += offerPaymentOverride_.CalculateSize(_repeated_offerPaymentOverride_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OfferPayment other) {
      if (other == null) {
        return;
      }
      if (other.HasMicros) {
        Micros = other.Micros;
      }
      if (other.HasCurrencyCode) {
        CurrencyCode = other.CurrencyCode;
      }
      if (other.offerPaymentPeriod_ != null) {
        if (offerPaymentPeriod_ == null) {
          OfferPaymentPeriod = new global::GooglePlayStore.OfferPaymentPeriod();
        }
        OfferPaymentPeriod.MergeFrom(other.OfferPaymentPeriod);
      }
      offerPaymentOverride_.Add(other.offerPaymentOverride_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Micros = input.ReadInt64();
            break;
          }
          case 18: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 26: {
            if (offerPaymentPeriod_ == null) {
              OfferPaymentPeriod = new global::GooglePlayStore.OfferPaymentPeriod();
            }
            input.ReadMessage(OfferPaymentPeriod);
            break;
          }
          case 34: {
            offerPaymentOverride_.AddEntriesFrom(input, _repeated_offerPaymentOverride_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VoucherTerms : pb::IMessage<VoucherTerms> {
    private static readonly pb::MessageParser<VoucherTerms> _parser = new pb::MessageParser<VoucherTerms>(() => new VoucherTerms());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoucherTerms> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoucherTerms() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoucherTerms(VoucherTerms other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoucherTerms Clone() {
      return new VoucherTerms(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoucherTerms);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoucherTerms other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoucherTerms other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class RentalTerms : pb::IMessage<RentalTerms> {
    private static readonly pb::MessageParser<RentalTerms> _parser = new pb::MessageParser<RentalTerms>(() => new RentalTerms());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RentalTerms> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RentalTerms() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RentalTerms(RentalTerms other) : this() {
      _hasBits0 = other._hasBits0;
      dEPRECATEDGrantPeriodSeconds_ = other.dEPRECATEDGrantPeriodSeconds_;
      dEPRECATEDActivatePeriodSeconds_ = other.dEPRECATEDActivatePeriodSeconds_;
      grantPeriod_ = other.grantPeriod_ != null ? other.grantPeriod_.Clone() : null;
      activatePeriod_ = other.activatePeriod_ != null ? other.activatePeriod_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RentalTerms Clone() {
      return new RentalTerms(this);
    }

    /// <summary>Field number for the "dEPRECATEDGrantPeriodSeconds" field.</summary>
    public const int DEPRECATEDGrantPeriodSecondsFieldNumber = 1;
    private readonly static int DEPRECATEDGrantPeriodSecondsDefaultValue = 0;

    private int dEPRECATEDGrantPeriodSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DEPRECATEDGrantPeriodSeconds {
      get { if ((_hasBits0 & 1) != 0) { return dEPRECATEDGrantPeriodSeconds_; } else { return DEPRECATEDGrantPeriodSecondsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        dEPRECATEDGrantPeriodSeconds_ = value;
      }
    }
    /// <summary>Gets whether the "dEPRECATEDGrantPeriodSeconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDEPRECATEDGrantPeriodSeconds {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "dEPRECATEDGrantPeriodSeconds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDEPRECATEDGrantPeriodSeconds() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "dEPRECATEDActivatePeriodSeconds" field.</summary>
    public const int DEPRECATEDActivatePeriodSecondsFieldNumber = 2;
    private readonly static int DEPRECATEDActivatePeriodSecondsDefaultValue = 0;

    private int dEPRECATEDActivatePeriodSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DEPRECATEDActivatePeriodSeconds {
      get { if ((_hasBits0 & 2) != 0) { return dEPRECATEDActivatePeriodSeconds_; } else { return DEPRECATEDActivatePeriodSecondsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        dEPRECATEDActivatePeriodSeconds_ = value;
      }
    }
    /// <summary>Gets whether the "dEPRECATEDActivatePeriodSeconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDEPRECATEDActivatePeriodSeconds {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "dEPRECATEDActivatePeriodSeconds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDEPRECATEDActivatePeriodSeconds() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "grantPeriod" field.</summary>
    public const int GrantPeriodFieldNumber = 3;
    private global::GooglePlayStore.TimePeriod grantPeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TimePeriod GrantPeriod {
      get { return grantPeriod_; }
      set {
        grantPeriod_ = value;
      }
    }

    /// <summary>Field number for the "activatePeriod" field.</summary>
    public const int ActivatePeriodFieldNumber = 4;
    private global::GooglePlayStore.TimePeriod activatePeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TimePeriod ActivatePeriod {
      get { return activatePeriod_; }
      set {
        activatePeriod_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RentalTerms);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RentalTerms other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DEPRECATEDGrantPeriodSeconds != other.DEPRECATEDGrantPeriodSeconds) return false;
      if (DEPRECATEDActivatePeriodSeconds != other.DEPRECATEDActivatePeriodSeconds) return false;
      if (!object.Equals(GrantPeriod, other.GrantPeriod)) return false;
      if (!object.Equals(ActivatePeriod, other.ActivatePeriod)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDEPRECATEDGrantPeriodSeconds) hash ^= DEPRECATEDGrantPeriodSeconds.GetHashCode();
      if (HasDEPRECATEDActivatePeriodSeconds) hash ^= DEPRECATEDActivatePeriodSeconds.GetHashCode();
      if (grantPeriod_ != null) hash ^= GrantPeriod.GetHashCode();
      if (activatePeriod_ != null) hash ^= ActivatePeriod.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasDEPRECATEDGrantPeriodSeconds) {
        output.WriteRawTag(8);
        output.WriteInt32(DEPRECATEDGrantPeriodSeconds);
      }
      if (HasDEPRECATEDActivatePeriodSeconds) {
        output.WriteRawTag(16);
        output.WriteInt32(DEPRECATEDActivatePeriodSeconds);
      }
      if (grantPeriod_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GrantPeriod);
      }
      if (activatePeriod_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ActivatePeriod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDEPRECATEDGrantPeriodSeconds) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DEPRECATEDGrantPeriodSeconds);
      }
      if (HasDEPRECATEDActivatePeriodSeconds) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DEPRECATEDActivatePeriodSeconds);
      }
      if (grantPeriod_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GrantPeriod);
      }
      if (activatePeriod_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActivatePeriod);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RentalTerms other) {
      if (other == null) {
        return;
      }
      if (other.HasDEPRECATEDGrantPeriodSeconds) {
        DEPRECATEDGrantPeriodSeconds = other.DEPRECATEDGrantPeriodSeconds;
      }
      if (other.HasDEPRECATEDActivatePeriodSeconds) {
        DEPRECATEDActivatePeriodSeconds = other.DEPRECATEDActivatePeriodSeconds;
      }
      if (other.grantPeriod_ != null) {
        if (grantPeriod_ == null) {
          GrantPeriod = new global::GooglePlayStore.TimePeriod();
        }
        GrantPeriod.MergeFrom(other.GrantPeriod);
      }
      if (other.activatePeriod_ != null) {
        if (activatePeriod_ == null) {
          ActivatePeriod = new global::GooglePlayStore.TimePeriod();
        }
        ActivatePeriod.MergeFrom(other.ActivatePeriod);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DEPRECATEDGrantPeriodSeconds = input.ReadInt32();
            break;
          }
          case 16: {
            DEPRECATEDActivatePeriodSeconds = input.ReadInt32();
            break;
          }
          case 26: {
            if (grantPeriod_ == null) {
              GrantPeriod = new global::GooglePlayStore.TimePeriod();
            }
            input.ReadMessage(GrantPeriod);
            break;
          }
          case 34: {
            if (activatePeriod_ == null) {
              ActivatePeriod = new global::GooglePlayStore.TimePeriod();
            }
            input.ReadMessage(ActivatePeriod);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SignedData : pb::IMessage<SignedData> {
    private static readonly pb::MessageParser<SignedData> _parser = new pb::MessageParser<SignedData>(() => new SignedData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SignedData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignedData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignedData(SignedData other) : this() {
      signedData_ = other.signedData_;
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignedData Clone() {
      return new SignedData(this);
    }

    /// <summary>Field number for the "signedData" field.</summary>
    public const int SignedData_FieldNumber = 1;
    private readonly static string SignedData_DefaultValue = "";

    private string signedData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SignedData_ {
      get { return signedData_ ?? SignedData_DefaultValue; }
      set {
        signedData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "signedData" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSignedData_ {
      get { return signedData_ != null; }
    }
    /// <summary>Clears the value of the "signedData" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSignedData_() {
      signedData_ = null;
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private readonly static string SignatureDefaultValue = "";

    private string signature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Signature {
      get { return signature_ ?? SignatureDefaultValue; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "signature" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSignature {
      get { return signature_ != null; }
    }
    /// <summary>Clears the value of the "signature" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSignature() {
      signature_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SignedData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SignedData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SignedData_ != other.SignedData_) return false;
      if (Signature != other.Signature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSignedData_) hash ^= SignedData_.GetHashCode();
      if (HasSignature) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasSignedData_) {
        output.WriteRawTag(10);
        output.WriteString(SignedData_);
      }
      if (HasSignature) {
        output.WriteRawTag(18);
        output.WriteString(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSignedData_) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SignedData_);
      }
      if (HasSignature) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SignedData other) {
      if (other == null) {
        return;
      }
      if (other.HasSignedData_) {
        SignedData_ = other.SignedData_;
      }
      if (other.HasSignature) {
        Signature = other.Signature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SignedData_ = input.ReadString();
            break;
          }
          case 18: {
            Signature = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscriptionContentTerms : pb::IMessage<SubscriptionContentTerms> {
    private static readonly pb::MessageParser<SubscriptionContentTerms> _parser = new pb::MessageParser<SubscriptionContentTerms>(() => new SubscriptionContentTerms());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscriptionContentTerms> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionContentTerms() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionContentTerms(SubscriptionContentTerms other) : this() {
      requiredSubscription_ = other.requiredSubscription_ != null ? other.requiredSubscription_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionContentTerms Clone() {
      return new SubscriptionContentTerms(this);
    }

    /// <summary>Field number for the "requiredSubscription" field.</summary>
    public const int RequiredSubscriptionFieldNumber = 1;
    private global::GooglePlayStore.DocId requiredSubscription_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DocId RequiredSubscription {
      get { return requiredSubscription_; }
      set {
        requiredSubscription_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscriptionContentTerms);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscriptionContentTerms other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequiredSubscription, other.RequiredSubscription)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (requiredSubscription_ != null) hash ^= RequiredSubscription.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (requiredSubscription_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequiredSubscription);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (requiredSubscription_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequiredSubscription);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscriptionContentTerms other) {
      if (other == null) {
        return;
      }
      if (other.requiredSubscription_ != null) {
        if (requiredSubscription_ == null) {
          RequiredSubscription = new global::GooglePlayStore.DocId();
        }
        RequiredSubscription.MergeFrom(other.RequiredSubscription);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (requiredSubscription_ == null) {
              RequiredSubscription = new global::GooglePlayStore.DocId();
            }
            input.ReadMessage(RequiredSubscription);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupLicenseInfo : pb::IMessage<GroupLicenseInfo> {
    private static readonly pb::MessageParser<GroupLicenseInfo> _parser = new pb::MessageParser<GroupLicenseInfo>(() => new GroupLicenseInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupLicenseInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupLicenseInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupLicenseInfo(GroupLicenseInfo other) : this() {
      _hasBits0 = other._hasBits0;
      licensedOfferType_ = other.licensedOfferType_;
      gaiaGroupId_ = other.gaiaGroupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupLicenseInfo Clone() {
      return new GroupLicenseInfo(this);
    }

    /// <summary>Field number for the "licensedOfferType" field.</summary>
    public const int LicensedOfferTypeFieldNumber = 1;
    private readonly static int LicensedOfferTypeDefaultValue = 0;

    private int licensedOfferType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LicensedOfferType {
      get { if ((_hasBits0 & 1) != 0) { return licensedOfferType_; } else { return LicensedOfferTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        licensedOfferType_ = value;
      }
    }
    /// <summary>Gets whether the "licensedOfferType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLicensedOfferType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "licensedOfferType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLicensedOfferType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "gaiaGroupId" field.</summary>
    public const int GaiaGroupIdFieldNumber = 2;
    private readonly static ulong GaiaGroupIdDefaultValue = 0UL;

    private ulong gaiaGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong GaiaGroupId {
      get { if ((_hasBits0 & 2) != 0) { return gaiaGroupId_; } else { return GaiaGroupIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        gaiaGroupId_ = value;
      }
    }
    /// <summary>Gets whether the "gaiaGroupId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGaiaGroupId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "gaiaGroupId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGaiaGroupId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupLicenseInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupLicenseInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LicensedOfferType != other.LicensedOfferType) return false;
      if (GaiaGroupId != other.GaiaGroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLicensedOfferType) hash ^= LicensedOfferType.GetHashCode();
      if (HasGaiaGroupId) hash ^= GaiaGroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasLicensedOfferType) {
        output.WriteRawTag(8);
        output.WriteInt32(LicensedOfferType);
      }
      if (HasGaiaGroupId) {
        output.WriteRawTag(17);
        output.WriteFixed64(GaiaGroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasLicensedOfferType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LicensedOfferType);
      }
      if (HasGaiaGroupId) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupLicenseInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasLicensedOfferType) {
        LicensedOfferType = other.LicensedOfferType;
      }
      if (other.HasGaiaGroupId) {
        GaiaGroupId = other.GaiaGroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LicensedOfferType = input.ReadInt32();
            break;
          }
          case 17: {
            GaiaGroupId = input.ReadFixed64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LicensedDocumentInfo : pb::IMessage<LicensedDocumentInfo> {
    private static readonly pb::MessageParser<LicensedDocumentInfo> _parser = new pb::MessageParser<LicensedDocumentInfo>(() => new LicensedDocumentInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LicensedDocumentInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicensedDocumentInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicensedDocumentInfo(LicensedDocumentInfo other) : this() {
      gaiaGroupId_ = other.gaiaGroupId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicensedDocumentInfo Clone() {
      return new LicensedDocumentInfo(this);
    }

    /// <summary>Field number for the "gaiaGroupId" field.</summary>
    public const int GaiaGroupIdFieldNumber = 1;
    private static readonly pb::FieldCodec<ulong> _repeated_gaiaGroupId_codec
        = pb::FieldCodec.ForFixed64(9);
    private readonly pbc::RepeatedField<ulong> gaiaGroupId_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> GaiaGroupId {
      get { return gaiaGroupId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LicensedDocumentInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LicensedDocumentInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gaiaGroupId_.Equals(other.gaiaGroupId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gaiaGroupId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      gaiaGroupId_.WriteTo(output, _repeated_gaiaGroupId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += gaiaGroupId_.CalculateSize(_repeated_gaiaGroupId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LicensedDocumentInfo other) {
      if (other == null) {
        return;
      }
      gaiaGroupId_.Add(other.gaiaGroupId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 9: {
            gaiaGroupId_.AddEntriesFrom(input, _repeated_gaiaGroupId_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OwnershipInfo : pb::IMessage<OwnershipInfo> {
    private static readonly pb::MessageParser<OwnershipInfo> _parser = new pb::MessageParser<OwnershipInfo>(() => new OwnershipInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OwnershipInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OwnershipInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OwnershipInfo(OwnershipInfo other) : this() {
      _hasBits0 = other._hasBits0;
      initiationTimestamp_ = other.initiationTimestamp_;
      validUntilTimestamp_ = other.validUntilTimestamp_;
      autoRenewing_ = other.autoRenewing_;
      refundTimeoutTimestamp_ = other.refundTimeoutTimestamp_;
      postDeliveryRefundWindowMillis_ = other.postDeliveryRefundWindowMillis_;
      developerPurchaseInfo_ = other.developerPurchaseInfo_ != null ? other.developerPurchaseInfo_.Clone() : null;
      preOrdered_ = other.preOrdered_;
      hidden_ = other.hidden_;
      rentalTerms_ = other.rentalTerms_ != null ? other.rentalTerms_.Clone() : null;
      groupLicenseInfo_ = other.groupLicenseInfo_ != null ? other.groupLicenseInfo_.Clone() : null;
      licensedDocumentInfo_ = other.licensedDocumentInfo_ != null ? other.licensedDocumentInfo_.Clone() : null;
      quantity_ = other.quantity_;
      libraryExpirationTimestamp_ = other.libraryExpirationTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OwnershipInfo Clone() {
      return new OwnershipInfo(this);
    }

    /// <summary>Field number for the "initiationTimestamp" field.</summary>
    public const int InitiationTimestampFieldNumber = 1;
    private readonly static long InitiationTimestampDefaultValue = 0L;

    private long initiationTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InitiationTimestamp {
      get { if ((_hasBits0 & 1) != 0) { return initiationTimestamp_; } else { return InitiationTimestampDefaultValue; } }
      set {
        _hasBits0 |= 1;
        initiationTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "initiationTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInitiationTimestamp {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "initiationTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInitiationTimestamp() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "validUntilTimestamp" field.</summary>
    public const int ValidUntilTimestampFieldNumber = 2;
    private readonly static long ValidUntilTimestampDefaultValue = 0L;

    private long validUntilTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ValidUntilTimestamp {
      get { if ((_hasBits0 & 2) != 0) { return validUntilTimestamp_; } else { return ValidUntilTimestampDefaultValue; } }
      set {
        _hasBits0 |= 2;
        validUntilTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "validUntilTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasValidUntilTimestamp {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "validUntilTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValidUntilTimestamp() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "autoRenewing" field.</summary>
    public const int AutoRenewingFieldNumber = 3;
    private readonly static bool AutoRenewingDefaultValue = false;

    private bool autoRenewing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AutoRenewing {
      get { if ((_hasBits0 & 4) != 0) { return autoRenewing_; } else { return AutoRenewingDefaultValue; } }
      set {
        _hasBits0 |= 4;
        autoRenewing_ = value;
      }
    }
    /// <summary>Gets whether the "autoRenewing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAutoRenewing {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "autoRenewing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAutoRenewing() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "refundTimeoutTimestamp" field.</summary>
    public const int RefundTimeoutTimestampFieldNumber = 4;
    private readonly static long RefundTimeoutTimestampDefaultValue = 0L;

    private long refundTimeoutTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RefundTimeoutTimestamp {
      get { if ((_hasBits0 & 8) != 0) { return refundTimeoutTimestamp_; } else { return RefundTimeoutTimestampDefaultValue; } }
      set {
        _hasBits0 |= 8;
        refundTimeoutTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "refundTimeoutTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRefundTimeoutTimestamp {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "refundTimeoutTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRefundTimeoutTimestamp() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "postDeliveryRefundWindowMillis" field.</summary>
    public const int PostDeliveryRefundWindowMillisFieldNumber = 5;
    private readonly static long PostDeliveryRefundWindowMillisDefaultValue = 0L;

    private long postDeliveryRefundWindowMillis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PostDeliveryRefundWindowMillis {
      get { if ((_hasBits0 & 16) != 0) { return postDeliveryRefundWindowMillis_; } else { return PostDeliveryRefundWindowMillisDefaultValue; } }
      set {
        _hasBits0 |= 16;
        postDeliveryRefundWindowMillis_ = value;
      }
    }
    /// <summary>Gets whether the "postDeliveryRefundWindowMillis" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPostDeliveryRefundWindowMillis {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "postDeliveryRefundWindowMillis" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPostDeliveryRefundWindowMillis() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "developerPurchaseInfo" field.</summary>
    public const int DeveloperPurchaseInfoFieldNumber = 6;
    private global::GooglePlayStore.SignedData developerPurchaseInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SignedData DeveloperPurchaseInfo {
      get { return developerPurchaseInfo_; }
      set {
        developerPurchaseInfo_ = value;
      }
    }

    /// <summary>Field number for the "preOrdered" field.</summary>
    public const int PreOrderedFieldNumber = 7;
    private readonly static bool PreOrderedDefaultValue = false;

    private bool preOrdered_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PreOrdered {
      get { if ((_hasBits0 & 32) != 0) { return preOrdered_; } else { return PreOrderedDefaultValue; } }
      set {
        _hasBits0 |= 32;
        preOrdered_ = value;
      }
    }
    /// <summary>Gets whether the "preOrdered" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPreOrdered {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "preOrdered" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPreOrdered() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "hidden" field.</summary>
    public const int HiddenFieldNumber = 8;
    private readonly static bool HiddenDefaultValue = false;

    private bool hidden_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Hidden {
      get { if ((_hasBits0 & 64) != 0) { return hidden_; } else { return HiddenDefaultValue; } }
      set {
        _hasBits0 |= 64;
        hidden_ = value;
      }
    }
    /// <summary>Gets whether the "hidden" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHidden {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "hidden" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHidden() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "rentalTerms" field.</summary>
    public const int RentalTermsFieldNumber = 9;
    private global::GooglePlayStore.RentalTerms rentalTerms_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.RentalTerms RentalTerms {
      get { return rentalTerms_; }
      set {
        rentalTerms_ = value;
      }
    }

    /// <summary>Field number for the "groupLicenseInfo" field.</summary>
    public const int GroupLicenseInfoFieldNumber = 10;
    private global::GooglePlayStore.GroupLicenseInfo groupLicenseInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.GroupLicenseInfo GroupLicenseInfo {
      get { return groupLicenseInfo_; }
      set {
        groupLicenseInfo_ = value;
      }
    }

    /// <summary>Field number for the "licensedDocumentInfo" field.</summary>
    public const int LicensedDocumentInfoFieldNumber = 11;
    private global::GooglePlayStore.LicensedDocumentInfo licensedDocumentInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.LicensedDocumentInfo LicensedDocumentInfo {
      get { return licensedDocumentInfo_; }
      set {
        licensedDocumentInfo_ = value;
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 12;
    private readonly static int QuantityDefaultValue = 0;

    private int quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Quantity {
      get { if ((_hasBits0 & 128) != 0) { return quantity_; } else { return QuantityDefaultValue; } }
      set {
        _hasBits0 |= 128;
        quantity_ = value;
      }
    }
    /// <summary>Gets whether the "quantity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasQuantity {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "quantity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQuantity() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "libraryExpirationTimestamp" field.</summary>
    public const int LibraryExpirationTimestampFieldNumber = 14;
    private readonly static long LibraryExpirationTimestampDefaultValue = 0L;

    private long libraryExpirationTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LibraryExpirationTimestamp {
      get { if ((_hasBits0 & 256) != 0) { return libraryExpirationTimestamp_; } else { return LibraryExpirationTimestampDefaultValue; } }
      set {
        _hasBits0 |= 256;
        libraryExpirationTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "libraryExpirationTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLibraryExpirationTimestamp {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "libraryExpirationTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLibraryExpirationTimestamp() {
      _hasBits0 &= ~256;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OwnershipInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OwnershipInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InitiationTimestamp != other.InitiationTimestamp) return false;
      if (ValidUntilTimestamp != other.ValidUntilTimestamp) return false;
      if (AutoRenewing != other.AutoRenewing) return false;
      if (RefundTimeoutTimestamp != other.RefundTimeoutTimestamp) return false;
      if (PostDeliveryRefundWindowMillis != other.PostDeliveryRefundWindowMillis) return false;
      if (!object.Equals(DeveloperPurchaseInfo, other.DeveloperPurchaseInfo)) return false;
      if (PreOrdered != other.PreOrdered) return false;
      if (Hidden != other.Hidden) return false;
      if (!object.Equals(RentalTerms, other.RentalTerms)) return false;
      if (!object.Equals(GroupLicenseInfo, other.GroupLicenseInfo)) return false;
      if (!object.Equals(LicensedDocumentInfo, other.LicensedDocumentInfo)) return false;
      if (Quantity != other.Quantity) return false;
      if (LibraryExpirationTimestamp != other.LibraryExpirationTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInitiationTimestamp) hash ^= InitiationTimestamp.GetHashCode();
      if (HasValidUntilTimestamp) hash ^= ValidUntilTimestamp.GetHashCode();
      if (HasAutoRenewing) hash ^= AutoRenewing.GetHashCode();
      if (HasRefundTimeoutTimestamp) hash ^= RefundTimeoutTimestamp.GetHashCode();
      if (HasPostDeliveryRefundWindowMillis) hash ^= PostDeliveryRefundWindowMillis.GetHashCode();
      if (developerPurchaseInfo_ != null) hash ^= DeveloperPurchaseInfo.GetHashCode();
      if (HasPreOrdered) hash ^= PreOrdered.GetHashCode();
      if (HasHidden) hash ^= Hidden.GetHashCode();
      if (rentalTerms_ != null) hash ^= RentalTerms.GetHashCode();
      if (groupLicenseInfo_ != null) hash ^= GroupLicenseInfo.GetHashCode();
      if (licensedDocumentInfo_ != null) hash ^= LicensedDocumentInfo.GetHashCode();
      if (HasQuantity) hash ^= Quantity.GetHashCode();
      if (HasLibraryExpirationTimestamp) hash ^= LibraryExpirationTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasInitiationTimestamp) {
        output.WriteRawTag(8);
        output.WriteInt64(InitiationTimestamp);
      }
      if (HasValidUntilTimestamp) {
        output.WriteRawTag(16);
        output.WriteInt64(ValidUntilTimestamp);
      }
      if (HasAutoRenewing) {
        output.WriteRawTag(24);
        output.WriteBool(AutoRenewing);
      }
      if (HasRefundTimeoutTimestamp) {
        output.WriteRawTag(32);
        output.WriteInt64(RefundTimeoutTimestamp);
      }
      if (HasPostDeliveryRefundWindowMillis) {
        output.WriteRawTag(40);
        output.WriteInt64(PostDeliveryRefundWindowMillis);
      }
      if (developerPurchaseInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DeveloperPurchaseInfo);
      }
      if (HasPreOrdered) {
        output.WriteRawTag(56);
        output.WriteBool(PreOrdered);
      }
      if (HasHidden) {
        output.WriteRawTag(64);
        output.WriteBool(Hidden);
      }
      if (rentalTerms_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(RentalTerms);
      }
      if (groupLicenseInfo_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(GroupLicenseInfo);
      }
      if (licensedDocumentInfo_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(LicensedDocumentInfo);
      }
      if (HasQuantity) {
        output.WriteRawTag(96);
        output.WriteInt32(Quantity);
      }
      if (HasLibraryExpirationTimestamp) {
        output.WriteRawTag(112);
        output.WriteInt64(LibraryExpirationTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasInitiationTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InitiationTimestamp);
      }
      if (HasValidUntilTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ValidUntilTimestamp);
      }
      if (HasAutoRenewing) {
        size += 1 + 1;
      }
      if (HasRefundTimeoutTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RefundTimeoutTimestamp);
      }
      if (HasPostDeliveryRefundWindowMillis) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PostDeliveryRefundWindowMillis);
      }
      if (developerPurchaseInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeveloperPurchaseInfo);
      }
      if (HasPreOrdered) {
        size += 1 + 1;
      }
      if (HasHidden) {
        size += 1 + 1;
      }
      if (rentalTerms_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RentalTerms);
      }
      if (groupLicenseInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupLicenseInfo);
      }
      if (licensedDocumentInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LicensedDocumentInfo);
      }
      if (HasQuantity) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      if (HasLibraryExpirationTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LibraryExpirationTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OwnershipInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasInitiationTimestamp) {
        InitiationTimestamp = other.InitiationTimestamp;
      }
      if (other.HasValidUntilTimestamp) {
        ValidUntilTimestamp = other.ValidUntilTimestamp;
      }
      if (other.HasAutoRenewing) {
        AutoRenewing = other.AutoRenewing;
      }
      if (other.HasRefundTimeoutTimestamp) {
        RefundTimeoutTimestamp = other.RefundTimeoutTimestamp;
      }
      if (other.HasPostDeliveryRefundWindowMillis) {
        PostDeliveryRefundWindowMillis = other.PostDeliveryRefundWindowMillis;
      }
      if (other.developerPurchaseInfo_ != null) {
        if (developerPurchaseInfo_ == null) {
          DeveloperPurchaseInfo = new global::GooglePlayStore.SignedData();
        }
        DeveloperPurchaseInfo.MergeFrom(other.DeveloperPurchaseInfo);
      }
      if (other.HasPreOrdered) {
        PreOrdered = other.PreOrdered;
      }
      if (other.HasHidden) {
        Hidden = other.Hidden;
      }
      if (other.rentalTerms_ != null) {
        if (rentalTerms_ == null) {
          RentalTerms = new global::GooglePlayStore.RentalTerms();
        }
        RentalTerms.MergeFrom(other.RentalTerms);
      }
      if (other.groupLicenseInfo_ != null) {
        if (groupLicenseInfo_ == null) {
          GroupLicenseInfo = new global::GooglePlayStore.GroupLicenseInfo();
        }
        GroupLicenseInfo.MergeFrom(other.GroupLicenseInfo);
      }
      if (other.licensedDocumentInfo_ != null) {
        if (licensedDocumentInfo_ == null) {
          LicensedDocumentInfo = new global::GooglePlayStore.LicensedDocumentInfo();
        }
        LicensedDocumentInfo.MergeFrom(other.LicensedDocumentInfo);
      }
      if (other.HasQuantity) {
        Quantity = other.Quantity;
      }
      if (other.HasLibraryExpirationTimestamp) {
        LibraryExpirationTimestamp = other.LibraryExpirationTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InitiationTimestamp = input.ReadInt64();
            break;
          }
          case 16: {
            ValidUntilTimestamp = input.ReadInt64();
            break;
          }
          case 24: {
            AutoRenewing = input.ReadBool();
            break;
          }
          case 32: {
            RefundTimeoutTimestamp = input.ReadInt64();
            break;
          }
          case 40: {
            PostDeliveryRefundWindowMillis = input.ReadInt64();
            break;
          }
          case 50: {
            if (developerPurchaseInfo_ == null) {
              DeveloperPurchaseInfo = new global::GooglePlayStore.SignedData();
            }
            input.ReadMessage(DeveloperPurchaseInfo);
            break;
          }
          case 56: {
            PreOrdered = input.ReadBool();
            break;
          }
          case 64: {
            Hidden = input.ReadBool();
            break;
          }
          case 74: {
            if (rentalTerms_ == null) {
              RentalTerms = new global::GooglePlayStore.RentalTerms();
            }
            input.ReadMessage(RentalTerms);
            break;
          }
          case 82: {
            if (groupLicenseInfo_ == null) {
              GroupLicenseInfo = new global::GooglePlayStore.GroupLicenseInfo();
            }
            input.ReadMessage(GroupLicenseInfo);
            break;
          }
          case 90: {
            if (licensedDocumentInfo_ == null) {
              LicensedDocumentInfo = new global::GooglePlayStore.LicensedDocumentInfo();
            }
            input.ReadMessage(LicensedDocumentInfo);
            break;
          }
          case 96: {
            Quantity = input.ReadInt32();
            break;
          }
          case 112: {
            LibraryExpirationTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscriptionTerms : pb::IMessage<SubscriptionTerms> {
    private static readonly pb::MessageParser<SubscriptionTerms> _parser = new pb::MessageParser<SubscriptionTerms>(() => new SubscriptionTerms());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscriptionTerms> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionTerms() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionTerms(SubscriptionTerms other) : this() {
      recurringPeriod_ = other.recurringPeriod_ != null ? other.recurringPeriod_.Clone() : null;
      trialPeriod_ = other.trialPeriod_ != null ? other.trialPeriod_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionTerms Clone() {
      return new SubscriptionTerms(this);
    }

    /// <summary>Field number for the "recurringPeriod" field.</summary>
    public const int RecurringPeriodFieldNumber = 1;
    private global::GooglePlayStore.TimePeriod recurringPeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TimePeriod RecurringPeriod {
      get { return recurringPeriod_; }
      set {
        recurringPeriod_ = value;
      }
    }

    /// <summary>Field number for the "trialPeriod" field.</summary>
    public const int TrialPeriodFieldNumber = 2;
    private global::GooglePlayStore.TimePeriod trialPeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TimePeriod TrialPeriod {
      get { return trialPeriod_; }
      set {
        trialPeriod_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscriptionTerms);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscriptionTerms other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RecurringPeriod, other.RecurringPeriod)) return false;
      if (!object.Equals(TrialPeriod, other.TrialPeriod)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (recurringPeriod_ != null) hash ^= RecurringPeriod.GetHashCode();
      if (trialPeriod_ != null) hash ^= TrialPeriod.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (recurringPeriod_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RecurringPeriod);
      }
      if (trialPeriod_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TrialPeriod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (recurringPeriod_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RecurringPeriod);
      }
      if (trialPeriod_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrialPeriod);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscriptionTerms other) {
      if (other == null) {
        return;
      }
      if (other.recurringPeriod_ != null) {
        if (recurringPeriod_ == null) {
          RecurringPeriod = new global::GooglePlayStore.TimePeriod();
        }
        RecurringPeriod.MergeFrom(other.RecurringPeriod);
      }
      if (other.trialPeriod_ != null) {
        if (trialPeriod_ == null) {
          TrialPeriod = new global::GooglePlayStore.TimePeriod();
        }
        TrialPeriod.MergeFrom(other.TrialPeriod);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (recurringPeriod_ == null) {
              RecurringPeriod = new global::GooglePlayStore.TimePeriod();
            }
            input.ReadMessage(RecurringPeriod);
            break;
          }
          case 18: {
            if (trialPeriod_ == null) {
              TrialPeriod = new global::GooglePlayStore.TimePeriod();
            }
            input.ReadMessage(TrialPeriod);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TimePeriod : pb::IMessage<TimePeriod> {
    private static readonly pb::MessageParser<TimePeriod> _parser = new pb::MessageParser<TimePeriod>(() => new TimePeriod());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimePeriod> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimePeriod() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimePeriod(TimePeriod other) : this() {
      _hasBits0 = other._hasBits0;
      unit_ = other.unit_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimePeriod Clone() {
      return new TimePeriod(this);
    }

    /// <summary>Field number for the "unit" field.</summary>
    public const int UnitFieldNumber = 1;
    private readonly static int UnitDefaultValue = 0;

    private int unit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Unit {
      get { if ((_hasBits0 & 1) != 0) { return unit_; } else { return UnitDefaultValue; } }
      set {
        _hasBits0 |= 1;
        unit_ = value;
      }
    }
    /// <summary>Gets whether the "unit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUnit {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "unit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUnit() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private readonly static int CountDefaultValue = 0;

    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { if ((_hasBits0 & 2) != 0) { return count_; } else { return CountDefaultValue; } }
      set {
        _hasBits0 |= 2;
        count_ = value;
      }
    }
    /// <summary>Gets whether the "count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCount {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCount() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimePeriod);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimePeriod other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Unit != other.Unit) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUnit) hash ^= Unit.GetHashCode();
      if (HasCount) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasUnit) {
        output.WriteRawTag(8);
        output.WriteInt32(Unit);
      }
      if (HasCount) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUnit) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unit);
      }
      if (HasCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimePeriod other) {
      if (other == null) {
        return;
      }
      if (other.HasUnit) {
        Unit = other.Unit;
      }
      if (other.HasCount) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Unit = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BillingAddressSpec : pb::IMessage<BillingAddressSpec> {
    private static readonly pb::MessageParser<BillingAddressSpec> _parser = new pb::MessageParser<BillingAddressSpec>(() => new BillingAddressSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BillingAddressSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingAddressSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingAddressSpec(BillingAddressSpec other) : this() {
      _hasBits0 = other._hasBits0;
      billingAddressType_ = other.billingAddressType_;
      requiredField_ = other.requiredField_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingAddressSpec Clone() {
      return new BillingAddressSpec(this);
    }

    /// <summary>Field number for the "billingAddressType" field.</summary>
    public const int BillingAddressTypeFieldNumber = 1;
    private readonly static int BillingAddressTypeDefaultValue = 0;

    private int billingAddressType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BillingAddressType {
      get { if ((_hasBits0 & 1) != 0) { return billingAddressType_; } else { return BillingAddressTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        billingAddressType_ = value;
      }
    }
    /// <summary>Gets whether the "billingAddressType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBillingAddressType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "billingAddressType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBillingAddressType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "requiredField" field.</summary>
    public const int RequiredFieldFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_requiredField_codec
        = pb::FieldCodec.ForInt32(16);
    private readonly pbc::RepeatedField<int> requiredField_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RequiredField {
      get { return requiredField_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BillingAddressSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BillingAddressSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BillingAddressType != other.BillingAddressType) return false;
      if(!requiredField_.Equals(other.requiredField_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBillingAddressType) hash ^= BillingAddressType.GetHashCode();
      hash ^= requiredField_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasBillingAddressType) {
        output.WriteRawTag(8);
        output.WriteInt32(BillingAddressType);
      }
      requiredField_.WriteTo(output, _repeated_requiredField_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasBillingAddressType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BillingAddressType);
      }
      size += requiredField_.CalculateSize(_repeated_requiredField_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BillingAddressSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasBillingAddressType) {
        BillingAddressType = other.BillingAddressType;
      }
      requiredField_.Add(other.requiredField_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BillingAddressType = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            requiredField_.AddEntriesFrom(input, _repeated_requiredField_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BillingProfile : pb::IMessage<BillingProfile> {
    private static readonly pb::MessageParser<BillingProfile> _parser = new pb::MessageParser<BillingProfile>(() => new BillingProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BillingProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingProfile(BillingProfile other) : this() {
      instrument_ = other.instrument_.Clone();
      selectedExternalInstrumentId_ = other.selectedExternalInstrumentId_;
      billingProfileOption_ = other.billingProfileOption_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingProfile Clone() {
      return new BillingProfile(this);
    }

    /// <summary>Field number for the "instrument" field.</summary>
    public const int InstrumentFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Instrument> _repeated_instrument_codec
        = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.Instrument.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Instrument> instrument_ = new pbc::RepeatedField<global::GooglePlayStore.Instrument>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Instrument> Instrument {
      get { return instrument_; }
    }

    /// <summary>Field number for the "selectedExternalInstrumentId" field.</summary>
    public const int SelectedExternalInstrumentIdFieldNumber = 2;
    private readonly static string SelectedExternalInstrumentIdDefaultValue = "";

    private string selectedExternalInstrumentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SelectedExternalInstrumentId {
      get { return selectedExternalInstrumentId_ ?? SelectedExternalInstrumentIdDefaultValue; }
      set {
        selectedExternalInstrumentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "selectedExternalInstrumentId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSelectedExternalInstrumentId {
      get { return selectedExternalInstrumentId_ != null; }
    }
    /// <summary>Clears the value of the "selectedExternalInstrumentId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSelectedExternalInstrumentId() {
      selectedExternalInstrumentId_ = null;
    }

    /// <summary>Field number for the "billingProfileOption" field.</summary>
    public const int BillingProfileOptionFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.BillingProfileOption> _repeated_billingProfileOption_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.BillingProfileOption.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.BillingProfileOption> billingProfileOption_ = new pbc::RepeatedField<global::GooglePlayStore.BillingProfileOption>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.BillingProfileOption> BillingProfileOption {
      get { return billingProfileOption_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BillingProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BillingProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!instrument_.Equals(other.instrument_)) return false;
      if (SelectedExternalInstrumentId != other.SelectedExternalInstrumentId) return false;
      if(!billingProfileOption_.Equals(other.billingProfileOption_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= instrument_.GetHashCode();
      if (HasSelectedExternalInstrumentId) hash ^= SelectedExternalInstrumentId.GetHashCode();
      hash ^= billingProfileOption_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      instrument_.WriteTo(output, _repeated_instrument_codec);
      if (HasSelectedExternalInstrumentId) {
        output.WriteRawTag(18);
        output.WriteString(SelectedExternalInstrumentId);
      }
      billingProfileOption_.WriteTo(output, _repeated_billingProfileOption_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += instrument_.CalculateSize(_repeated_instrument_codec);
      if (HasSelectedExternalInstrumentId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SelectedExternalInstrumentId);
      }
      size += billingProfileOption_.CalculateSize(_repeated_billingProfileOption_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BillingProfile other) {
      if (other == null) {
        return;
      }
      instrument_.Add(other.instrument_);
      if (other.HasSelectedExternalInstrumentId) {
        SelectedExternalInstrumentId = other.SelectedExternalInstrumentId;
      }
      billingProfileOption_.Add(other.billingProfileOption_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            instrument_.AddEntriesFrom(input, _repeated_instrument_codec);
            break;
          }
          case 18: {
            SelectedExternalInstrumentId = input.ReadString();
            break;
          }
          case 26: {
            billingProfileOption_.AddEntriesFrom(input, _repeated_billingProfileOption_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BillingProfileOption : pb::IMessage<BillingProfileOption> {
    private static readonly pb::MessageParser<BillingProfileOption> _parser = new pb::MessageParser<BillingProfileOption>(() => new BillingProfileOption());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BillingProfileOption> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingProfileOption() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingProfileOption(BillingProfileOption other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      displayTitle_ = other.displayTitle_;
      externalInstrumentId_ = other.externalInstrumentId_;
      topupInfo_ = other.topupInfo_ != null ? other.topupInfo_.Clone() : null;
      carrierBillingInstrumentStatus_ = other.carrierBillingInstrumentStatus_ != null ? other.carrierBillingInstrumentStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingProfileOption Clone() {
      return new BillingProfileOption(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "displayTitle" field.</summary>
    public const int DisplayTitleFieldNumber = 2;
    private readonly static string DisplayTitleDefaultValue = "";

    private string displayTitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayTitle {
      get { return displayTitle_ ?? DisplayTitleDefaultValue; }
      set {
        displayTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "displayTitle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDisplayTitle {
      get { return displayTitle_ != null; }
    }
    /// <summary>Clears the value of the "displayTitle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDisplayTitle() {
      displayTitle_ = null;
    }

    /// <summary>Field number for the "externalInstrumentId" field.</summary>
    public const int ExternalInstrumentIdFieldNumber = 3;
    private readonly static string ExternalInstrumentIdDefaultValue = "";

    private string externalInstrumentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalInstrumentId {
      get { return externalInstrumentId_ ?? ExternalInstrumentIdDefaultValue; }
      set {
        externalInstrumentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "externalInstrumentId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExternalInstrumentId {
      get { return externalInstrumentId_ != null; }
    }
    /// <summary>Clears the value of the "externalInstrumentId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExternalInstrumentId() {
      externalInstrumentId_ = null;
    }

    /// <summary>Field number for the "topupInfo" field.</summary>
    public const int TopupInfoFieldNumber = 4;
    private global::GooglePlayStore.TopupInfo topupInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TopupInfo TopupInfo {
      get { return topupInfo_; }
      set {
        topupInfo_ = value;
      }
    }

    /// <summary>Field number for the "carrierBillingInstrumentStatus" field.</summary>
    public const int CarrierBillingInstrumentStatusFieldNumber = 5;
    private global::GooglePlayStore.CarrierBillingInstrumentStatus carrierBillingInstrumentStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CarrierBillingInstrumentStatus CarrierBillingInstrumentStatus {
      get { return carrierBillingInstrumentStatus_; }
      set {
        carrierBillingInstrumentStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BillingProfileOption);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BillingProfileOption other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (DisplayTitle != other.DisplayTitle) return false;
      if (ExternalInstrumentId != other.ExternalInstrumentId) return false;
      if (!object.Equals(TopupInfo, other.TopupInfo)) return false;
      if (!object.Equals(CarrierBillingInstrumentStatus, other.CarrierBillingInstrumentStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasDisplayTitle) hash ^= DisplayTitle.GetHashCode();
      if (HasExternalInstrumentId) hash ^= ExternalInstrumentId.GetHashCode();
      if (topupInfo_ != null) hash ^= TopupInfo.GetHashCode();
      if (carrierBillingInstrumentStatus_ != null) hash ^= CarrierBillingInstrumentStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasDisplayTitle) {
        output.WriteRawTag(18);
        output.WriteString(DisplayTitle);
      }
      if (HasExternalInstrumentId) {
        output.WriteRawTag(26);
        output.WriteString(ExternalInstrumentId);
      }
      if (topupInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TopupInfo);
      }
      if (carrierBillingInstrumentStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CarrierBillingInstrumentStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasDisplayTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayTitle);
      }
      if (HasExternalInstrumentId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalInstrumentId);
      }
      if (topupInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TopupInfo);
      }
      if (carrierBillingInstrumentStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CarrierBillingInstrumentStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BillingProfileOption other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasDisplayTitle) {
        DisplayTitle = other.DisplayTitle;
      }
      if (other.HasExternalInstrumentId) {
        ExternalInstrumentId = other.ExternalInstrumentId;
      }
      if (other.topupInfo_ != null) {
        if (topupInfo_ == null) {
          TopupInfo = new global::GooglePlayStore.TopupInfo();
        }
        TopupInfo.MergeFrom(other.TopupInfo);
      }
      if (other.carrierBillingInstrumentStatus_ != null) {
        if (carrierBillingInstrumentStatus_ == null) {
          CarrierBillingInstrumentStatus = new global::GooglePlayStore.CarrierBillingInstrumentStatus();
        }
        CarrierBillingInstrumentStatus.MergeFrom(other.CarrierBillingInstrumentStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            DisplayTitle = input.ReadString();
            break;
          }
          case 26: {
            ExternalInstrumentId = input.ReadString();
            break;
          }
          case 34: {
            if (topupInfo_ == null) {
              TopupInfo = new global::GooglePlayStore.TopupInfo();
            }
            input.ReadMessage(TopupInfo);
            break;
          }
          case 42: {
            if (carrierBillingInstrumentStatus_ == null) {
              CarrierBillingInstrumentStatus = new global::GooglePlayStore.CarrierBillingInstrumentStatus();
            }
            input.ReadMessage(CarrierBillingInstrumentStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CarrierBillingCredentials : pb::IMessage<CarrierBillingCredentials> {
    private static readonly pb::MessageParser<CarrierBillingCredentials> _parser = new pb::MessageParser<CarrierBillingCredentials>(() => new CarrierBillingCredentials());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CarrierBillingCredentials> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingCredentials() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingCredentials(CarrierBillingCredentials other) : this() {
      _hasBits0 = other._hasBits0;
      value_ = other.value_;
      expiration_ = other.expiration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingCredentials Clone() {
      return new CarrierBillingCredentials(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private readonly static string ValueDefaultValue = "";

    private string value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_ ?? ValueDefaultValue; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasValue {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      value_ = null;
    }

    /// <summary>Field number for the "expiration" field.</summary>
    public const int ExpirationFieldNumber = 2;
    private readonly static long ExpirationDefaultValue = 0L;

    private long expiration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Expiration {
      get { if ((_hasBits0 & 1) != 0) { return expiration_; } else { return ExpirationDefaultValue; } }
      set {
        _hasBits0 |= 1;
        expiration_ = value;
      }
    }
    /// <summary>Gets whether the "expiration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExpiration {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "expiration" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpiration() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CarrierBillingCredentials);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CarrierBillingCredentials other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if (Expiration != other.Expiration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasValue) hash ^= Value.GetHashCode();
      if (HasExpiration) hash ^= Expiration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasValue) {
        output.WriteRawTag(10);
        output.WriteString(Value);
      }
      if (HasExpiration) {
        output.WriteRawTag(16);
        output.WriteInt64(Expiration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (HasExpiration) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Expiration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CarrierBillingCredentials other) {
      if (other == null) {
        return;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      if (other.HasExpiration) {
        Expiration = other.Expiration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadString();
            break;
          }
          case 16: {
            Expiration = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CarrierBillingInstrument : pb::IMessage<CarrierBillingInstrument> {
    private static readonly pb::MessageParser<CarrierBillingInstrument> _parser = new pb::MessageParser<CarrierBillingInstrument>(() => new CarrierBillingInstrument());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CarrierBillingInstrument> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingInstrument() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingInstrument(CarrierBillingInstrument other) : this() {
      _hasBits0 = other._hasBits0;
      instrumentKey_ = other.instrumentKey_;
      accountType_ = other.accountType_;
      currencyCode_ = other.currencyCode_;
      transactionLimit_ = other.transactionLimit_;
      subscriberIdentifier_ = other.subscriberIdentifier_;
      encryptedSubscriberInfo_ = other.encryptedSubscriberInfo_ != null ? other.encryptedSubscriberInfo_.Clone() : null;
      credentials_ = other.credentials_ != null ? other.credentials_.Clone() : null;
      acceptedCarrierTos_ = other.acceptedCarrierTos_ != null ? other.acceptedCarrierTos_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingInstrument Clone() {
      return new CarrierBillingInstrument(this);
    }

    /// <summary>Field number for the "instrumentKey" field.</summary>
    public const int InstrumentKeyFieldNumber = 1;
    private readonly static string InstrumentKeyDefaultValue = "";

    private string instrumentKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstrumentKey {
      get { return instrumentKey_ ?? InstrumentKeyDefaultValue; }
      set {
        instrumentKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "instrumentKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInstrumentKey {
      get { return instrumentKey_ != null; }
    }
    /// <summary>Clears the value of the "instrumentKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInstrumentKey() {
      instrumentKey_ = null;
    }

    /// <summary>Field number for the "accountType" field.</summary>
    public const int AccountTypeFieldNumber = 2;
    private readonly static string AccountTypeDefaultValue = "";

    private string accountType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountType {
      get { return accountType_ ?? AccountTypeDefaultValue; }
      set {
        accountType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "accountType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountType {
      get { return accountType_ != null; }
    }
    /// <summary>Clears the value of the "accountType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountType() {
      accountType_ = null;
    }

    /// <summary>Field number for the "currencyCode" field.</summary>
    public const int CurrencyCodeFieldNumber = 3;
    private readonly static string CurrencyCodeDefaultValue = "";

    private string currencyCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_ ?? CurrencyCodeDefaultValue; }
      set {
        currencyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "currencyCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCurrencyCode {
      get { return currencyCode_ != null; }
    }
    /// <summary>Clears the value of the "currencyCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCurrencyCode() {
      currencyCode_ = null;
    }

    /// <summary>Field number for the "transactionLimit" field.</summary>
    public const int TransactionLimitFieldNumber = 4;
    private readonly static long TransactionLimitDefaultValue = 0L;

    private long transactionLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TransactionLimit {
      get { if ((_hasBits0 & 1) != 0) { return transactionLimit_; } else { return TransactionLimitDefaultValue; } }
      set {
        _hasBits0 |= 1;
        transactionLimit_ = value;
      }
    }
    /// <summary>Gets whether the "transactionLimit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTransactionLimit {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "transactionLimit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTransactionLimit() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "subscriberIdentifier" field.</summary>
    public const int SubscriberIdentifierFieldNumber = 5;
    private readonly static string SubscriberIdentifierDefaultValue = "";

    private string subscriberIdentifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubscriberIdentifier {
      get { return subscriberIdentifier_ ?? SubscriberIdentifierDefaultValue; }
      set {
        subscriberIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "subscriberIdentifier" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubscriberIdentifier {
      get { return subscriberIdentifier_ != null; }
    }
    /// <summary>Clears the value of the "subscriberIdentifier" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubscriberIdentifier() {
      subscriberIdentifier_ = null;
    }

    /// <summary>Field number for the "encryptedSubscriberInfo" field.</summary>
    public const int EncryptedSubscriberInfoFieldNumber = 6;
    private global::GooglePlayStore.EncryptedSubscriberInfo encryptedSubscriberInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.EncryptedSubscriberInfo EncryptedSubscriberInfo {
      get { return encryptedSubscriberInfo_; }
      set {
        encryptedSubscriberInfo_ = value;
      }
    }

    /// <summary>Field number for the "credentials" field.</summary>
    public const int CredentialsFieldNumber = 7;
    private global::GooglePlayStore.CarrierBillingCredentials credentials_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CarrierBillingCredentials Credentials {
      get { return credentials_; }
      set {
        credentials_ = value;
      }
    }

    /// <summary>Field number for the "acceptedCarrierTos" field.</summary>
    public const int AcceptedCarrierTosFieldNumber = 8;
    private global::GooglePlayStore.CarrierTos acceptedCarrierTos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CarrierTos AcceptedCarrierTos {
      get { return acceptedCarrierTos_; }
      set {
        acceptedCarrierTos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CarrierBillingInstrument);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CarrierBillingInstrument other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstrumentKey != other.InstrumentKey) return false;
      if (AccountType != other.AccountType) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      if (TransactionLimit != other.TransactionLimit) return false;
      if (SubscriberIdentifier != other.SubscriberIdentifier) return false;
      if (!object.Equals(EncryptedSubscriberInfo, other.EncryptedSubscriberInfo)) return false;
      if (!object.Equals(Credentials, other.Credentials)) return false;
      if (!object.Equals(AcceptedCarrierTos, other.AcceptedCarrierTos)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInstrumentKey) hash ^= InstrumentKey.GetHashCode();
      if (HasAccountType) hash ^= AccountType.GetHashCode();
      if (HasCurrencyCode) hash ^= CurrencyCode.GetHashCode();
      if (HasTransactionLimit) hash ^= TransactionLimit.GetHashCode();
      if (HasSubscriberIdentifier) hash ^= SubscriberIdentifier.GetHashCode();
      if (encryptedSubscriberInfo_ != null) hash ^= EncryptedSubscriberInfo.GetHashCode();
      if (credentials_ != null) hash ^= Credentials.GetHashCode();
      if (acceptedCarrierTos_ != null) hash ^= AcceptedCarrierTos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasInstrumentKey) {
        output.WriteRawTag(10);
        output.WriteString(InstrumentKey);
      }
      if (HasAccountType) {
        output.WriteRawTag(18);
        output.WriteString(AccountType);
      }
      if (HasCurrencyCode) {
        output.WriteRawTag(26);
        output.WriteString(CurrencyCode);
      }
      if (HasTransactionLimit) {
        output.WriteRawTag(32);
        output.WriteInt64(TransactionLimit);
      }
      if (HasSubscriberIdentifier) {
        output.WriteRawTag(42);
        output.WriteString(SubscriberIdentifier);
      }
      if (encryptedSubscriberInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(EncryptedSubscriberInfo);
      }
      if (credentials_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Credentials);
      }
      if (acceptedCarrierTos_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(AcceptedCarrierTos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasInstrumentKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentKey);
      }
      if (HasAccountType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountType);
      }
      if (HasCurrencyCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyCode);
      }
      if (HasTransactionLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TransactionLimit);
      }
      if (HasSubscriberIdentifier) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubscriberIdentifier);
      }
      if (encryptedSubscriberInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EncryptedSubscriberInfo);
      }
      if (credentials_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Credentials);
      }
      if (acceptedCarrierTos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AcceptedCarrierTos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CarrierBillingInstrument other) {
      if (other == null) {
        return;
      }
      if (other.HasInstrumentKey) {
        InstrumentKey = other.InstrumentKey;
      }
      if (other.HasAccountType) {
        AccountType = other.AccountType;
      }
      if (other.HasCurrencyCode) {
        CurrencyCode = other.CurrencyCode;
      }
      if (other.HasTransactionLimit) {
        TransactionLimit = other.TransactionLimit;
      }
      if (other.HasSubscriberIdentifier) {
        SubscriberIdentifier = other.SubscriberIdentifier;
      }
      if (other.encryptedSubscriberInfo_ != null) {
        if (encryptedSubscriberInfo_ == null) {
          EncryptedSubscriberInfo = new global::GooglePlayStore.EncryptedSubscriberInfo();
        }
        EncryptedSubscriberInfo.MergeFrom(other.EncryptedSubscriberInfo);
      }
      if (other.credentials_ != null) {
        if (credentials_ == null) {
          Credentials = new global::GooglePlayStore.CarrierBillingCredentials();
        }
        Credentials.MergeFrom(other.Credentials);
      }
      if (other.acceptedCarrierTos_ != null) {
        if (acceptedCarrierTos_ == null) {
          AcceptedCarrierTos = new global::GooglePlayStore.CarrierTos();
        }
        AcceptedCarrierTos.MergeFrom(other.AcceptedCarrierTos);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InstrumentKey = input.ReadString();
            break;
          }
          case 18: {
            AccountType = input.ReadString();
            break;
          }
          case 26: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 32: {
            TransactionLimit = input.ReadInt64();
            break;
          }
          case 42: {
            SubscriberIdentifier = input.ReadString();
            break;
          }
          case 50: {
            if (encryptedSubscriberInfo_ == null) {
              EncryptedSubscriberInfo = new global::GooglePlayStore.EncryptedSubscriberInfo();
            }
            input.ReadMessage(EncryptedSubscriberInfo);
            break;
          }
          case 58: {
            if (credentials_ == null) {
              Credentials = new global::GooglePlayStore.CarrierBillingCredentials();
            }
            input.ReadMessage(Credentials);
            break;
          }
          case 66: {
            if (acceptedCarrierTos_ == null) {
              AcceptedCarrierTos = new global::GooglePlayStore.CarrierTos();
            }
            input.ReadMessage(AcceptedCarrierTos);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CarrierBillingInstrumentStatus : pb::IMessage<CarrierBillingInstrumentStatus> {
    private static readonly pb::MessageParser<CarrierBillingInstrumentStatus> _parser = new pb::MessageParser<CarrierBillingInstrumentStatus>(() => new CarrierBillingInstrumentStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CarrierBillingInstrumentStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingInstrumentStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingInstrumentStatus(CarrierBillingInstrumentStatus other) : this() {
      _hasBits0 = other._hasBits0;
      carrierTos_ = other.carrierTos_ != null ? other.carrierTos_.Clone() : null;
      associationRequired_ = other.associationRequired_;
      passwordRequired_ = other.passwordRequired_;
      carrierPasswordPrompt_ = other.carrierPasswordPrompt_ != null ? other.carrierPasswordPrompt_.Clone() : null;
      apiVersion_ = other.apiVersion_;
      name_ = other.name_;
      deviceAssociation_ = other.deviceAssociation_ != null ? other.deviceAssociation_.Clone() : null;
      carrierSupportPhoneNumber_ = other.carrierSupportPhoneNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingInstrumentStatus Clone() {
      return new CarrierBillingInstrumentStatus(this);
    }

    /// <summary>Field number for the "carrierTos" field.</summary>
    public const int CarrierTosFieldNumber = 1;
    private global::GooglePlayStore.CarrierTos carrierTos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CarrierTos CarrierTos {
      get { return carrierTos_; }
      set {
        carrierTos_ = value;
      }
    }

    /// <summary>Field number for the "associationRequired" field.</summary>
    public const int AssociationRequiredFieldNumber = 2;
    private readonly static bool AssociationRequiredDefaultValue = false;

    private bool associationRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AssociationRequired {
      get { if ((_hasBits0 & 1) != 0) { return associationRequired_; } else { return AssociationRequiredDefaultValue; } }
      set {
        _hasBits0 |= 1;
        associationRequired_ = value;
      }
    }
    /// <summary>Gets whether the "associationRequired" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAssociationRequired {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "associationRequired" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAssociationRequired() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "passwordRequired" field.</summary>
    public const int PasswordRequiredFieldNumber = 3;
    private readonly static bool PasswordRequiredDefaultValue = false;

    private bool passwordRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PasswordRequired {
      get { if ((_hasBits0 & 2) != 0) { return passwordRequired_; } else { return PasswordRequiredDefaultValue; } }
      set {
        _hasBits0 |= 2;
        passwordRequired_ = value;
      }
    }
    /// <summary>Gets whether the "passwordRequired" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPasswordRequired {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "passwordRequired" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPasswordRequired() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "carrierPasswordPrompt" field.</summary>
    public const int CarrierPasswordPromptFieldNumber = 4;
    private global::GooglePlayStore.PasswordPrompt carrierPasswordPrompt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.PasswordPrompt CarrierPasswordPrompt {
      get { return carrierPasswordPrompt_; }
      set {
        carrierPasswordPrompt_ = value;
      }
    }

    /// <summary>Field number for the "apiVersion" field.</summary>
    public const int ApiVersionFieldNumber = 5;
    private readonly static int ApiVersionDefaultValue = 0;

    private int apiVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApiVersion {
      get { if ((_hasBits0 & 4) != 0) { return apiVersion_; } else { return ApiVersionDefaultValue; } }
      set {
        _hasBits0 |= 4;
        apiVersion_ = value;
      }
    }
    /// <summary>Gets whether the "apiVersion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasApiVersion {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "apiVersion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearApiVersion() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "deviceAssociation" field.</summary>
    public const int DeviceAssociationFieldNumber = 7;
    private global::GooglePlayStore.DeviceAssociation deviceAssociation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DeviceAssociation DeviceAssociation {
      get { return deviceAssociation_; }
      set {
        deviceAssociation_ = value;
      }
    }

    /// <summary>Field number for the "carrierSupportPhoneNumber" field.</summary>
    public const int CarrierSupportPhoneNumberFieldNumber = 8;
    private readonly static string CarrierSupportPhoneNumberDefaultValue = "";

    private string carrierSupportPhoneNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierSupportPhoneNumber {
      get { return carrierSupportPhoneNumber_ ?? CarrierSupportPhoneNumberDefaultValue; }
      set {
        carrierSupportPhoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "carrierSupportPhoneNumber" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCarrierSupportPhoneNumber {
      get { return carrierSupportPhoneNumber_ != null; }
    }
    /// <summary>Clears the value of the "carrierSupportPhoneNumber" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCarrierSupportPhoneNumber() {
      carrierSupportPhoneNumber_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CarrierBillingInstrumentStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CarrierBillingInstrumentStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CarrierTos, other.CarrierTos)) return false;
      if (AssociationRequired != other.AssociationRequired) return false;
      if (PasswordRequired != other.PasswordRequired) return false;
      if (!object.Equals(CarrierPasswordPrompt, other.CarrierPasswordPrompt)) return false;
      if (ApiVersion != other.ApiVersion) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(DeviceAssociation, other.DeviceAssociation)) return false;
      if (CarrierSupportPhoneNumber != other.CarrierSupportPhoneNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (carrierTos_ != null) hash ^= CarrierTos.GetHashCode();
      if (HasAssociationRequired) hash ^= AssociationRequired.GetHashCode();
      if (HasPasswordRequired) hash ^= PasswordRequired.GetHashCode();
      if (carrierPasswordPrompt_ != null) hash ^= CarrierPasswordPrompt.GetHashCode();
      if (HasApiVersion) hash ^= ApiVersion.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (deviceAssociation_ != null) hash ^= DeviceAssociation.GetHashCode();
      if (HasCarrierSupportPhoneNumber) hash ^= CarrierSupportPhoneNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (carrierTos_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CarrierTos);
      }
      if (HasAssociationRequired) {
        output.WriteRawTag(16);
        output.WriteBool(AssociationRequired);
      }
      if (HasPasswordRequired) {
        output.WriteRawTag(24);
        output.WriteBool(PasswordRequired);
      }
      if (carrierPasswordPrompt_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CarrierPasswordPrompt);
      }
      if (HasApiVersion) {
        output.WriteRawTag(40);
        output.WriteInt32(ApiVersion);
      }
      if (HasName) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (deviceAssociation_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DeviceAssociation);
      }
      if (HasCarrierSupportPhoneNumber) {
        output.WriteRawTag(66);
        output.WriteString(CarrierSupportPhoneNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (carrierTos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CarrierTos);
      }
      if (HasAssociationRequired) {
        size += 1 + 1;
      }
      if (HasPasswordRequired) {
        size += 1 + 1;
      }
      if (carrierPasswordPrompt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CarrierPasswordPrompt);
      }
      if (HasApiVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApiVersion);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (deviceAssociation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceAssociation);
      }
      if (HasCarrierSupportPhoneNumber) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierSupportPhoneNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CarrierBillingInstrumentStatus other) {
      if (other == null) {
        return;
      }
      if (other.carrierTos_ != null) {
        if (carrierTos_ == null) {
          CarrierTos = new global::GooglePlayStore.CarrierTos();
        }
        CarrierTos.MergeFrom(other.CarrierTos);
      }
      if (other.HasAssociationRequired) {
        AssociationRequired = other.AssociationRequired;
      }
      if (other.HasPasswordRequired) {
        PasswordRequired = other.PasswordRequired;
      }
      if (other.carrierPasswordPrompt_ != null) {
        if (carrierPasswordPrompt_ == null) {
          CarrierPasswordPrompt = new global::GooglePlayStore.PasswordPrompt();
        }
        CarrierPasswordPrompt.MergeFrom(other.CarrierPasswordPrompt);
      }
      if (other.HasApiVersion) {
        ApiVersion = other.ApiVersion;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.deviceAssociation_ != null) {
        if (deviceAssociation_ == null) {
          DeviceAssociation = new global::GooglePlayStore.DeviceAssociation();
        }
        DeviceAssociation.MergeFrom(other.DeviceAssociation);
      }
      if (other.HasCarrierSupportPhoneNumber) {
        CarrierSupportPhoneNumber = other.CarrierSupportPhoneNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (carrierTos_ == null) {
              CarrierTos = new global::GooglePlayStore.CarrierTos();
            }
            input.ReadMessage(CarrierTos);
            break;
          }
          case 16: {
            AssociationRequired = input.ReadBool();
            break;
          }
          case 24: {
            PasswordRequired = input.ReadBool();
            break;
          }
          case 34: {
            if (carrierPasswordPrompt_ == null) {
              CarrierPasswordPrompt = new global::GooglePlayStore.PasswordPrompt();
            }
            input.ReadMessage(CarrierPasswordPrompt);
            break;
          }
          case 40: {
            ApiVersion = input.ReadInt32();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
          case 58: {
            if (deviceAssociation_ == null) {
              DeviceAssociation = new global::GooglePlayStore.DeviceAssociation();
            }
            input.ReadMessage(DeviceAssociation);
            break;
          }
          case 66: {
            CarrierSupportPhoneNumber = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CarrierTos : pb::IMessage<CarrierTos> {
    private static readonly pb::MessageParser<CarrierTos> _parser = new pb::MessageParser<CarrierTos>(() => new CarrierTos());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CarrierTos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierTos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierTos(CarrierTos other) : this() {
      _hasBits0 = other._hasBits0;
      dcbTos_ = other.dcbTos_ != null ? other.dcbTos_.Clone() : null;
      piiTos_ = other.piiTos_ != null ? other.piiTos_.Clone() : null;
      needsDcbTosAcceptance_ = other.needsDcbTosAcceptance_;
      needsPiiTosAcceptance_ = other.needsPiiTosAcceptance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierTos Clone() {
      return new CarrierTos(this);
    }

    /// <summary>Field number for the "dcbTos" field.</summary>
    public const int DcbTosFieldNumber = 1;
    private global::GooglePlayStore.CarrierTosEntry dcbTos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CarrierTosEntry DcbTos {
      get { return dcbTos_; }
      set {
        dcbTos_ = value;
      }
    }

    /// <summary>Field number for the "piiTos" field.</summary>
    public const int PiiTosFieldNumber = 2;
    private global::GooglePlayStore.CarrierTosEntry piiTos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CarrierTosEntry PiiTos {
      get { return piiTos_; }
      set {
        piiTos_ = value;
      }
    }

    /// <summary>Field number for the "needsDcbTosAcceptance" field.</summary>
    public const int NeedsDcbTosAcceptanceFieldNumber = 3;
    private readonly static bool NeedsDcbTosAcceptanceDefaultValue = false;

    private bool needsDcbTosAcceptance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NeedsDcbTosAcceptance {
      get { if ((_hasBits0 & 1) != 0) { return needsDcbTosAcceptance_; } else { return NeedsDcbTosAcceptanceDefaultValue; } }
      set {
        _hasBits0 |= 1;
        needsDcbTosAcceptance_ = value;
      }
    }
    /// <summary>Gets whether the "needsDcbTosAcceptance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNeedsDcbTosAcceptance {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "needsDcbTosAcceptance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNeedsDcbTosAcceptance() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "needsPiiTosAcceptance" field.</summary>
    public const int NeedsPiiTosAcceptanceFieldNumber = 4;
    private readonly static bool NeedsPiiTosAcceptanceDefaultValue = false;

    private bool needsPiiTosAcceptance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NeedsPiiTosAcceptance {
      get { if ((_hasBits0 & 2) != 0) { return needsPiiTosAcceptance_; } else { return NeedsPiiTosAcceptanceDefaultValue; } }
      set {
        _hasBits0 |= 2;
        needsPiiTosAcceptance_ = value;
      }
    }
    /// <summary>Gets whether the "needsPiiTosAcceptance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNeedsPiiTosAcceptance {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "needsPiiTosAcceptance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNeedsPiiTosAcceptance() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CarrierTos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CarrierTos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DcbTos, other.DcbTos)) return false;
      if (!object.Equals(PiiTos, other.PiiTos)) return false;
      if (NeedsDcbTosAcceptance != other.NeedsDcbTosAcceptance) return false;
      if (NeedsPiiTosAcceptance != other.NeedsPiiTosAcceptance) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dcbTos_ != null) hash ^= DcbTos.GetHashCode();
      if (piiTos_ != null) hash ^= PiiTos.GetHashCode();
      if (HasNeedsDcbTosAcceptance) hash ^= NeedsDcbTosAcceptance.GetHashCode();
      if (HasNeedsPiiTosAcceptance) hash ^= NeedsPiiTosAcceptance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dcbTos_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DcbTos);
      }
      if (piiTos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PiiTos);
      }
      if (HasNeedsDcbTosAcceptance) {
        output.WriteRawTag(24);
        output.WriteBool(NeedsDcbTosAcceptance);
      }
      if (HasNeedsPiiTosAcceptance) {
        output.WriteRawTag(32);
        output.WriteBool(NeedsPiiTosAcceptance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dcbTos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DcbTos);
      }
      if (piiTos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PiiTos);
      }
      if (HasNeedsDcbTosAcceptance) {
        size += 1 + 1;
      }
      if (HasNeedsPiiTosAcceptance) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CarrierTos other) {
      if (other == null) {
        return;
      }
      if (other.dcbTos_ != null) {
        if (dcbTos_ == null) {
          DcbTos = new global::GooglePlayStore.CarrierTosEntry();
        }
        DcbTos.MergeFrom(other.DcbTos);
      }
      if (other.piiTos_ != null) {
        if (piiTos_ == null) {
          PiiTos = new global::GooglePlayStore.CarrierTosEntry();
        }
        PiiTos.MergeFrom(other.PiiTos);
      }
      if (other.HasNeedsDcbTosAcceptance) {
        NeedsDcbTosAcceptance = other.NeedsDcbTosAcceptance;
      }
      if (other.HasNeedsPiiTosAcceptance) {
        NeedsPiiTosAcceptance = other.NeedsPiiTosAcceptance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dcbTos_ == null) {
              DcbTos = new global::GooglePlayStore.CarrierTosEntry();
            }
            input.ReadMessage(DcbTos);
            break;
          }
          case 18: {
            if (piiTos_ == null) {
              PiiTos = new global::GooglePlayStore.CarrierTosEntry();
            }
            input.ReadMessage(PiiTos);
            break;
          }
          case 24: {
            NeedsDcbTosAcceptance = input.ReadBool();
            break;
          }
          case 32: {
            NeedsPiiTosAcceptance = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CarrierTosEntry : pb::IMessage<CarrierTosEntry> {
    private static readonly pb::MessageParser<CarrierTosEntry> _parser = new pb::MessageParser<CarrierTosEntry>(() => new CarrierTosEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CarrierTosEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierTosEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierTosEntry(CarrierTosEntry other) : this() {
      url_ = other.url_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierTosEntry Clone() {
      return new CarrierTosEntry(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private readonly static string VersionDefaultValue = "";

    private string version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_ ?? VersionDefaultValue; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersion {
      get { return version_ != null; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersion() {
      version_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CarrierTosEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CarrierTosEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasVersion) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasVersion) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CarrierTosEntry other) {
      if (other == null) {
        return;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreditCardInstrument : pb::IMessage<CreditCardInstrument> {
    private static readonly pb::MessageParser<CreditCardInstrument> _parser = new pb::MessageParser<CreditCardInstrument>(() => new CreditCardInstrument());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreditCardInstrument> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreditCardInstrument() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreditCardInstrument(CreditCardInstrument other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      escrowHandle_ = other.escrowHandle_;
      lastDigits_ = other.lastDigits_;
      expirationMonth_ = other.expirationMonth_;
      expirationYear_ = other.expirationYear_;
      escrowEfeParam_ = other.escrowEfeParam_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreditCardInstrument Clone() {
      return new CreditCardInstrument(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "escrowHandle" field.</summary>
    public const int EscrowHandleFieldNumber = 2;
    private readonly static string EscrowHandleDefaultValue = "";

    private string escrowHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EscrowHandle {
      get { return escrowHandle_ ?? EscrowHandleDefaultValue; }
      set {
        escrowHandle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "escrowHandle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEscrowHandle {
      get { return escrowHandle_ != null; }
    }
    /// <summary>Clears the value of the "escrowHandle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEscrowHandle() {
      escrowHandle_ = null;
    }

    /// <summary>Field number for the "lastDigits" field.</summary>
    public const int LastDigitsFieldNumber = 3;
    private readonly static string LastDigitsDefaultValue = "";

    private string lastDigits_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastDigits {
      get { return lastDigits_ ?? LastDigitsDefaultValue; }
      set {
        lastDigits_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "lastDigits" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLastDigits {
      get { return lastDigits_ != null; }
    }
    /// <summary>Clears the value of the "lastDigits" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLastDigits() {
      lastDigits_ = null;
    }

    /// <summary>Field number for the "expirationMonth" field.</summary>
    public const int ExpirationMonthFieldNumber = 4;
    private readonly static int ExpirationMonthDefaultValue = 0;

    private int expirationMonth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExpirationMonth {
      get { if ((_hasBits0 & 2) != 0) { return expirationMonth_; } else { return ExpirationMonthDefaultValue; } }
      set {
        _hasBits0 |= 2;
        expirationMonth_ = value;
      }
    }
    /// <summary>Gets whether the "expirationMonth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExpirationMonth {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "expirationMonth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpirationMonth() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "expirationYear" field.</summary>
    public const int ExpirationYearFieldNumber = 5;
    private readonly static int ExpirationYearDefaultValue = 0;

    private int expirationYear_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExpirationYear {
      get { if ((_hasBits0 & 4) != 0) { return expirationYear_; } else { return ExpirationYearDefaultValue; } }
      set {
        _hasBits0 |= 4;
        expirationYear_ = value;
      }
    }
    /// <summary>Gets whether the "expirationYear" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExpirationYear {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "expirationYear" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpirationYear() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "escrowEfeParam" field.</summary>
    public const int EscrowEfeParamFieldNumber = 6;
    private static readonly pb::FieldCodec<global::GooglePlayStore.EfeParam> _repeated_escrowEfeParam_codec
        = pb::FieldCodec.ForMessage(50, global::GooglePlayStore.EfeParam.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.EfeParam> escrowEfeParam_ = new pbc::RepeatedField<global::GooglePlayStore.EfeParam>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.EfeParam> EscrowEfeParam {
      get { return escrowEfeParam_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreditCardInstrument);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreditCardInstrument other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (EscrowHandle != other.EscrowHandle) return false;
      if (LastDigits != other.LastDigits) return false;
      if (ExpirationMonth != other.ExpirationMonth) return false;
      if (ExpirationYear != other.ExpirationYear) return false;
      if(!escrowEfeParam_.Equals(other.escrowEfeParam_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasEscrowHandle) hash ^= EscrowHandle.GetHashCode();
      if (HasLastDigits) hash ^= LastDigits.GetHashCode();
      if (HasExpirationMonth) hash ^= ExpirationMonth.GetHashCode();
      if (HasExpirationYear) hash ^= ExpirationYear.GetHashCode();
      hash ^= escrowEfeParam_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasEscrowHandle) {
        output.WriteRawTag(18);
        output.WriteString(EscrowHandle);
      }
      if (HasLastDigits) {
        output.WriteRawTag(26);
        output.WriteString(LastDigits);
      }
      if (HasExpirationMonth) {
        output.WriteRawTag(32);
        output.WriteInt32(ExpirationMonth);
      }
      if (HasExpirationYear) {
        output.WriteRawTag(40);
        output.WriteInt32(ExpirationYear);
      }
      escrowEfeParam_.WriteTo(output, _repeated_escrowEfeParam_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasEscrowHandle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EscrowHandle);
      }
      if (HasLastDigits) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastDigits);
      }
      if (HasExpirationMonth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExpirationMonth);
      }
      if (HasExpirationYear) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExpirationYear);
      }
      size += escrowEfeParam_.CalculateSize(_repeated_escrowEfeParam_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreditCardInstrument other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasEscrowHandle) {
        EscrowHandle = other.EscrowHandle;
      }
      if (other.HasLastDigits) {
        LastDigits = other.LastDigits;
      }
      if (other.HasExpirationMonth) {
        ExpirationMonth = other.ExpirationMonth;
      }
      if (other.HasExpirationYear) {
        ExpirationYear = other.ExpirationYear;
      }
      escrowEfeParam_.Add(other.escrowEfeParam_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            EscrowHandle = input.ReadString();
            break;
          }
          case 26: {
            LastDigits = input.ReadString();
            break;
          }
          case 32: {
            ExpirationMonth = input.ReadInt32();
            break;
          }
          case 40: {
            ExpirationYear = input.ReadInt32();
            break;
          }
          case 50: {
            escrowEfeParam_.AddEntriesFrom(input, _repeated_escrowEfeParam_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeviceAssociation : pb::IMessage<DeviceAssociation> {
    private static readonly pb::MessageParser<DeviceAssociation> _parser = new pb::MessageParser<DeviceAssociation>(() => new DeviceAssociation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceAssociation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceAssociation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceAssociation(DeviceAssociation other) : this() {
      userTokenRequestMessage_ = other.userTokenRequestMessage_;
      userTokenRequestAddress_ = other.userTokenRequestAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceAssociation Clone() {
      return new DeviceAssociation(this);
    }

    /// <summary>Field number for the "userTokenRequestMessage" field.</summary>
    public const int UserTokenRequestMessageFieldNumber = 1;
    private readonly static string UserTokenRequestMessageDefaultValue = "";

    private string userTokenRequestMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserTokenRequestMessage {
      get { return userTokenRequestMessage_ ?? UserTokenRequestMessageDefaultValue; }
      set {
        userTokenRequestMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userTokenRequestMessage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserTokenRequestMessage {
      get { return userTokenRequestMessage_ != null; }
    }
    /// <summary>Clears the value of the "userTokenRequestMessage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserTokenRequestMessage() {
      userTokenRequestMessage_ = null;
    }

    /// <summary>Field number for the "userTokenRequestAddress" field.</summary>
    public const int UserTokenRequestAddressFieldNumber = 2;
    private readonly static string UserTokenRequestAddressDefaultValue = "";

    private string userTokenRequestAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserTokenRequestAddress {
      get { return userTokenRequestAddress_ ?? UserTokenRequestAddressDefaultValue; }
      set {
        userTokenRequestAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userTokenRequestAddress" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserTokenRequestAddress {
      get { return userTokenRequestAddress_ != null; }
    }
    /// <summary>Clears the value of the "userTokenRequestAddress" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserTokenRequestAddress() {
      userTokenRequestAddress_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceAssociation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceAssociation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserTokenRequestMessage != other.UserTokenRequestMessage) return false;
      if (UserTokenRequestAddress != other.UserTokenRequestAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUserTokenRequestMessage) hash ^= UserTokenRequestMessage.GetHashCode();
      if (HasUserTokenRequestAddress) hash ^= UserTokenRequestAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasUserTokenRequestMessage) {
        output.WriteRawTag(10);
        output.WriteString(UserTokenRequestMessage);
      }
      if (HasUserTokenRequestAddress) {
        output.WriteRawTag(18);
        output.WriteString(UserTokenRequestAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUserTokenRequestMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserTokenRequestMessage);
      }
      if (HasUserTokenRequestAddress) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserTokenRequestAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceAssociation other) {
      if (other == null) {
        return;
      }
      if (other.HasUserTokenRequestMessage) {
        UserTokenRequestMessage = other.UserTokenRequestMessage;
      }
      if (other.HasUserTokenRequestAddress) {
        UserTokenRequestAddress = other.UserTokenRequestAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserTokenRequestMessage = input.ReadString();
            break;
          }
          case 18: {
            UserTokenRequestAddress = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DisabledInfo : pb::IMessage<DisabledInfo> {
    private static readonly pb::MessageParser<DisabledInfo> _parser = new pb::MessageParser<DisabledInfo>(() => new DisabledInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DisabledInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisabledInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisabledInfo(DisabledInfo other) : this() {
      _hasBits0 = other._hasBits0;
      disabledReason_ = other.disabledReason_;
      disabledMessageHtml_ = other.disabledMessageHtml_;
      errorMessage_ = other.errorMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisabledInfo Clone() {
      return new DisabledInfo(this);
    }

    /// <summary>Field number for the "disabledReason" field.</summary>
    public const int DisabledReasonFieldNumber = 1;
    private readonly static int DisabledReasonDefaultValue = 0;

    private int disabledReason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DisabledReason {
      get { if ((_hasBits0 & 1) != 0) { return disabledReason_; } else { return DisabledReasonDefaultValue; } }
      set {
        _hasBits0 |= 1;
        disabledReason_ = value;
      }
    }
    /// <summary>Gets whether the "disabledReason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDisabledReason {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "disabledReason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDisabledReason() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "disabledMessageHtml" field.</summary>
    public const int DisabledMessageHtmlFieldNumber = 2;
    private readonly static string DisabledMessageHtmlDefaultValue = "";

    private string disabledMessageHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisabledMessageHtml {
      get { return disabledMessageHtml_ ?? DisabledMessageHtmlDefaultValue; }
      set {
        disabledMessageHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "disabledMessageHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDisabledMessageHtml {
      get { return disabledMessageHtml_ != null; }
    }
    /// <summary>Clears the value of the "disabledMessageHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDisabledMessageHtml() {
      disabledMessageHtml_ = null;
    }

    /// <summary>Field number for the "errorMessage" field.</summary>
    public const int ErrorMessageFieldNumber = 3;
    private readonly static string ErrorMessageDefaultValue = "";

    private string errorMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_ ?? ErrorMessageDefaultValue; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "errorMessage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasErrorMessage {
      get { return errorMessage_ != null; }
    }
    /// <summary>Clears the value of the "errorMessage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearErrorMessage() {
      errorMessage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DisabledInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DisabledInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DisabledReason != other.DisabledReason) return false;
      if (DisabledMessageHtml != other.DisabledMessageHtml) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDisabledReason) hash ^= DisabledReason.GetHashCode();
      if (HasDisabledMessageHtml) hash ^= DisabledMessageHtml.GetHashCode();
      if (HasErrorMessage) hash ^= ErrorMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasDisabledReason) {
        output.WriteRawTag(8);
        output.WriteInt32(DisabledReason);
      }
      if (HasDisabledMessageHtml) {
        output.WriteRawTag(18);
        output.WriteString(DisabledMessageHtml);
      }
      if (HasErrorMessage) {
        output.WriteRawTag(26);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDisabledReason) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DisabledReason);
      }
      if (HasDisabledMessageHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisabledMessageHtml);
      }
      if (HasErrorMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DisabledInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasDisabledReason) {
        DisabledReason = other.DisabledReason;
      }
      if (other.HasDisabledMessageHtml) {
        DisabledMessageHtml = other.DisabledMessageHtml;
      }
      if (other.HasErrorMessage) {
        ErrorMessage = other.ErrorMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DisabledReason = input.ReadInt32();
            break;
          }
          case 18: {
            DisabledMessageHtml = input.ReadString();
            break;
          }
          case 26: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EfeParam : pb::IMessage<EfeParam> {
    private static readonly pb::MessageParser<EfeParam> _parser = new pb::MessageParser<EfeParam>(() => new EfeParam());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EfeParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EfeParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EfeParam(EfeParam other) : this() {
      _hasBits0 = other._hasBits0;
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EfeParam Clone() {
      return new EfeParam(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private readonly static int KeyDefaultValue = 0;

    private int key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Key {
      get { if ((_hasBits0 & 1) != 0) { return key_; } else { return KeyDefaultValue; } }
      set {
        _hasBits0 |= 1;
        key_ = value;
      }
    }
    /// <summary>Gets whether the "key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasKey {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearKey() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private readonly static string ValueDefaultValue = "";

    private string value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_ ?? ValueDefaultValue; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasValue {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EfeParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EfeParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasKey) hash ^= Key.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasKey) {
        output.WriteRawTag(8);
        output.WriteInt32(Key);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasKey) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Key);
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EfeParam other) {
      if (other == null) {
        return;
      }
      if (other.HasKey) {
        Key = other.Key;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Key = input.ReadInt32();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Instrument : pb::IMessage<Instrument> {
    private static readonly pb::MessageParser<Instrument> _parser = new pb::MessageParser<Instrument>(() => new Instrument());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Instrument> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Instrument() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Instrument(Instrument other) : this() {
      _hasBits0 = other._hasBits0;
      instrumentId_ = other.instrumentId_;
      billingAddress_ = other.billingAddress_ != null ? other.billingAddress_.Clone() : null;
      creditCard_ = other.creditCard_ != null ? other.creditCard_.Clone() : null;
      carrierBilling_ = other.carrierBilling_ != null ? other.carrierBilling_.Clone() : null;
      billingAddressSpec_ = other.billingAddressSpec_ != null ? other.billingAddressSpec_.Clone() : null;
      instrumentFamily_ = other.instrumentFamily_;
      carrierBillingStatus_ = other.carrierBillingStatus_ != null ? other.carrierBillingStatus_.Clone() : null;
      displayTitle_ = other.displayTitle_;
      topupInfoDeprecated_ = other.topupInfoDeprecated_ != null ? other.topupInfoDeprecated_.Clone() : null;
      version_ = other.version_;
      storedValue_ = other.storedValue_ != null ? other.storedValue_.Clone() : null;
      disabledInfo_ = other.disabledInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Instrument Clone() {
      return new Instrument(this);
    }

    /// <summary>Field number for the "instrumentId" field.</summary>
    public const int InstrumentIdFieldNumber = 1;
    private readonly static string InstrumentIdDefaultValue = "";

    private string instrumentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstrumentId {
      get { return instrumentId_ ?? InstrumentIdDefaultValue; }
      set {
        instrumentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "instrumentId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInstrumentId {
      get { return instrumentId_ != null; }
    }
    /// <summary>Clears the value of the "instrumentId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInstrumentId() {
      instrumentId_ = null;
    }

    /// <summary>Field number for the "billingAddress" field.</summary>
    public const int BillingAddressFieldNumber = 2;
    private global::GooglePlayStore.Address billingAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Address BillingAddress {
      get { return billingAddress_; }
      set {
        billingAddress_ = value;
      }
    }

    /// <summary>Field number for the "creditCard" field.</summary>
    public const int CreditCardFieldNumber = 3;
    private global::GooglePlayStore.CreditCardInstrument creditCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CreditCardInstrument CreditCard {
      get { return creditCard_; }
      set {
        creditCard_ = value;
      }
    }

    /// <summary>Field number for the "carrierBilling" field.</summary>
    public const int CarrierBillingFieldNumber = 4;
    private global::GooglePlayStore.CarrierBillingInstrument carrierBilling_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CarrierBillingInstrument CarrierBilling {
      get { return carrierBilling_; }
      set {
        carrierBilling_ = value;
      }
    }

    /// <summary>Field number for the "billingAddressSpec" field.</summary>
    public const int BillingAddressSpecFieldNumber = 5;
    private global::GooglePlayStore.BillingAddressSpec billingAddressSpec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.BillingAddressSpec BillingAddressSpec {
      get { return billingAddressSpec_; }
      set {
        billingAddressSpec_ = value;
      }
    }

    /// <summary>Field number for the "instrumentFamily" field.</summary>
    public const int InstrumentFamilyFieldNumber = 6;
    private readonly static int InstrumentFamilyDefaultValue = 0;

    private int instrumentFamily_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InstrumentFamily {
      get { if ((_hasBits0 & 1) != 0) { return instrumentFamily_; } else { return InstrumentFamilyDefaultValue; } }
      set {
        _hasBits0 |= 1;
        instrumentFamily_ = value;
      }
    }
    /// <summary>Gets whether the "instrumentFamily" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInstrumentFamily {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "instrumentFamily" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInstrumentFamily() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "carrierBillingStatus" field.</summary>
    public const int CarrierBillingStatusFieldNumber = 7;
    private global::GooglePlayStore.CarrierBillingInstrumentStatus carrierBillingStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CarrierBillingInstrumentStatus CarrierBillingStatus {
      get { return carrierBillingStatus_; }
      set {
        carrierBillingStatus_ = value;
      }
    }

    /// <summary>Field number for the "displayTitle" field.</summary>
    public const int DisplayTitleFieldNumber = 8;
    private readonly static string DisplayTitleDefaultValue = "";

    private string displayTitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayTitle {
      get { return displayTitle_ ?? DisplayTitleDefaultValue; }
      set {
        displayTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "displayTitle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDisplayTitle {
      get { return displayTitle_ != null; }
    }
    /// <summary>Clears the value of the "displayTitle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDisplayTitle() {
      displayTitle_ = null;
    }

    /// <summary>Field number for the "topupInfoDeprecated" field.</summary>
    public const int TopupInfoDeprecatedFieldNumber = 9;
    private global::GooglePlayStore.TopupInfo topupInfoDeprecated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TopupInfo TopupInfoDeprecated {
      get { return topupInfoDeprecated_; }
      set {
        topupInfoDeprecated_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 10;
    private readonly static int VersionDefaultValue = 0;

    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { if ((_hasBits0 & 2) != 0) { return version_; } else { return VersionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        version_ = value;
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersion {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersion() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "storedValue" field.</summary>
    public const int StoredValueFieldNumber = 11;
    private global::GooglePlayStore.StoredValueInstrument storedValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.StoredValueInstrument StoredValue {
      get { return storedValue_; }
      set {
        storedValue_ = value;
      }
    }

    /// <summary>Field number for the "disabledInfo" field.</summary>
    public const int DisabledInfoFieldNumber = 12;
    private static readonly pb::FieldCodec<global::GooglePlayStore.DisabledInfo> _repeated_disabledInfo_codec
        = pb::FieldCodec.ForMessage(98, global::GooglePlayStore.DisabledInfo.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.DisabledInfo> disabledInfo_ = new pbc::RepeatedField<global::GooglePlayStore.DisabledInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.DisabledInfo> DisabledInfo {
      get { return disabledInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Instrument);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Instrument other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstrumentId != other.InstrumentId) return false;
      if (!object.Equals(BillingAddress, other.BillingAddress)) return false;
      if (!object.Equals(CreditCard, other.CreditCard)) return false;
      if (!object.Equals(CarrierBilling, other.CarrierBilling)) return false;
      if (!object.Equals(BillingAddressSpec, other.BillingAddressSpec)) return false;
      if (InstrumentFamily != other.InstrumentFamily) return false;
      if (!object.Equals(CarrierBillingStatus, other.CarrierBillingStatus)) return false;
      if (DisplayTitle != other.DisplayTitle) return false;
      if (!object.Equals(TopupInfoDeprecated, other.TopupInfoDeprecated)) return false;
      if (Version != other.Version) return false;
      if (!object.Equals(StoredValue, other.StoredValue)) return false;
      if(!disabledInfo_.Equals(other.disabledInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInstrumentId) hash ^= InstrumentId.GetHashCode();
      if (billingAddress_ != null) hash ^= BillingAddress.GetHashCode();
      if (creditCard_ != null) hash ^= CreditCard.GetHashCode();
      if (carrierBilling_ != null) hash ^= CarrierBilling.GetHashCode();
      if (billingAddressSpec_ != null) hash ^= BillingAddressSpec.GetHashCode();
      if (HasInstrumentFamily) hash ^= InstrumentFamily.GetHashCode();
      if (carrierBillingStatus_ != null) hash ^= CarrierBillingStatus.GetHashCode();
      if (HasDisplayTitle) hash ^= DisplayTitle.GetHashCode();
      if (topupInfoDeprecated_ != null) hash ^= TopupInfoDeprecated.GetHashCode();
      if (HasVersion) hash ^= Version.GetHashCode();
      if (storedValue_ != null) hash ^= StoredValue.GetHashCode();
      hash ^= disabledInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasInstrumentId) {
        output.WriteRawTag(10);
        output.WriteString(InstrumentId);
      }
      if (billingAddress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BillingAddress);
      }
      if (creditCard_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreditCard);
      }
      if (carrierBilling_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CarrierBilling);
      }
      if (billingAddressSpec_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(BillingAddressSpec);
      }
      if (HasInstrumentFamily) {
        output.WriteRawTag(48);
        output.WriteInt32(InstrumentFamily);
      }
      if (carrierBillingStatus_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CarrierBillingStatus);
      }
      if (HasDisplayTitle) {
        output.WriteRawTag(66);
        output.WriteString(DisplayTitle);
      }
      if (topupInfoDeprecated_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TopupInfoDeprecated);
      }
      if (HasVersion) {
        output.WriteRawTag(80);
        output.WriteInt32(Version);
      }
      if (storedValue_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(StoredValue);
      }
      disabledInfo_.WriteTo(output, _repeated_disabledInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasInstrumentId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentId);
      }
      if (billingAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BillingAddress);
      }
      if (creditCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreditCard);
      }
      if (carrierBilling_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CarrierBilling);
      }
      if (billingAddressSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BillingAddressSpec);
      }
      if (HasInstrumentFamily) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InstrumentFamily);
      }
      if (carrierBillingStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CarrierBillingStatus);
      }
      if (HasDisplayTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayTitle);
      }
      if (topupInfoDeprecated_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TopupInfoDeprecated);
      }
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (storedValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StoredValue);
      }
      size += disabledInfo_.CalculateSize(_repeated_disabledInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Instrument other) {
      if (other == null) {
        return;
      }
      if (other.HasInstrumentId) {
        InstrumentId = other.InstrumentId;
      }
      if (other.billingAddress_ != null) {
        if (billingAddress_ == null) {
          BillingAddress = new global::GooglePlayStore.Address();
        }
        BillingAddress.MergeFrom(other.BillingAddress);
      }
      if (other.creditCard_ != null) {
        if (creditCard_ == null) {
          CreditCard = new global::GooglePlayStore.CreditCardInstrument();
        }
        CreditCard.MergeFrom(other.CreditCard);
      }
      if (other.carrierBilling_ != null) {
        if (carrierBilling_ == null) {
          CarrierBilling = new global::GooglePlayStore.CarrierBillingInstrument();
        }
        CarrierBilling.MergeFrom(other.CarrierBilling);
      }
      if (other.billingAddressSpec_ != null) {
        if (billingAddressSpec_ == null) {
          BillingAddressSpec = new global::GooglePlayStore.BillingAddressSpec();
        }
        BillingAddressSpec.MergeFrom(other.BillingAddressSpec);
      }
      if (other.HasInstrumentFamily) {
        InstrumentFamily = other.InstrumentFamily;
      }
      if (other.carrierBillingStatus_ != null) {
        if (carrierBillingStatus_ == null) {
          CarrierBillingStatus = new global::GooglePlayStore.CarrierBillingInstrumentStatus();
        }
        CarrierBillingStatus.MergeFrom(other.CarrierBillingStatus);
      }
      if (other.HasDisplayTitle) {
        DisplayTitle = other.DisplayTitle;
      }
      if (other.topupInfoDeprecated_ != null) {
        if (topupInfoDeprecated_ == null) {
          TopupInfoDeprecated = new global::GooglePlayStore.TopupInfo();
        }
        TopupInfoDeprecated.MergeFrom(other.TopupInfoDeprecated);
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.storedValue_ != null) {
        if (storedValue_ == null) {
          StoredValue = new global::GooglePlayStore.StoredValueInstrument();
        }
        StoredValue.MergeFrom(other.StoredValue);
      }
      disabledInfo_.Add(other.disabledInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InstrumentId = input.ReadString();
            break;
          }
          case 18: {
            if (billingAddress_ == null) {
              BillingAddress = new global::GooglePlayStore.Address();
            }
            input.ReadMessage(BillingAddress);
            break;
          }
          case 26: {
            if (creditCard_ == null) {
              CreditCard = new global::GooglePlayStore.CreditCardInstrument();
            }
            input.ReadMessage(CreditCard);
            break;
          }
          case 34: {
            if (carrierBilling_ == null) {
              CarrierBilling = new global::GooglePlayStore.CarrierBillingInstrument();
            }
            input.ReadMessage(CarrierBilling);
            break;
          }
          case 42: {
            if (billingAddressSpec_ == null) {
              BillingAddressSpec = new global::GooglePlayStore.BillingAddressSpec();
            }
            input.ReadMessage(BillingAddressSpec);
            break;
          }
          case 48: {
            InstrumentFamily = input.ReadInt32();
            break;
          }
          case 58: {
            if (carrierBillingStatus_ == null) {
              CarrierBillingStatus = new global::GooglePlayStore.CarrierBillingInstrumentStatus();
            }
            input.ReadMessage(CarrierBillingStatus);
            break;
          }
          case 66: {
            DisplayTitle = input.ReadString();
            break;
          }
          case 74: {
            if (topupInfoDeprecated_ == null) {
              TopupInfoDeprecated = new global::GooglePlayStore.TopupInfo();
            }
            input.ReadMessage(TopupInfoDeprecated);
            break;
          }
          case 80: {
            Version = input.ReadInt32();
            break;
          }
          case 90: {
            if (storedValue_ == null) {
              StoredValue = new global::GooglePlayStore.StoredValueInstrument();
            }
            input.ReadMessage(StoredValue);
            break;
          }
          case 98: {
            disabledInfo_.AddEntriesFrom(input, _repeated_disabledInfo_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InstrumentSetupInfo : pb::IMessage<InstrumentSetupInfo> {
    private static readonly pb::MessageParser<InstrumentSetupInfo> _parser = new pb::MessageParser<InstrumentSetupInfo>(() => new InstrumentSetupInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InstrumentSetupInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstrumentSetupInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstrumentSetupInfo(InstrumentSetupInfo other) : this() {
      _hasBits0 = other._hasBits0;
      instrumentFamily_ = other.instrumentFamily_;
      supported_ = other.supported_;
      addressChallenge_ = other.addressChallenge_ != null ? other.addressChallenge_.Clone() : null;
      balance_ = other.balance_ != null ? other.balance_.Clone() : null;
      footerHtml_ = other.footerHtml_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstrumentSetupInfo Clone() {
      return new InstrumentSetupInfo(this);
    }

    /// <summary>Field number for the "instrumentFamily" field.</summary>
    public const int InstrumentFamilyFieldNumber = 1;
    private readonly static int InstrumentFamilyDefaultValue = 0;

    private int instrumentFamily_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InstrumentFamily {
      get { if ((_hasBits0 & 1) != 0) { return instrumentFamily_; } else { return InstrumentFamilyDefaultValue; } }
      set {
        _hasBits0 |= 1;
        instrumentFamily_ = value;
      }
    }
    /// <summary>Gets whether the "instrumentFamily" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInstrumentFamily {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "instrumentFamily" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInstrumentFamily() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "supported" field.</summary>
    public const int SupportedFieldNumber = 2;
    private readonly static bool SupportedDefaultValue = false;

    private bool supported_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Supported {
      get { if ((_hasBits0 & 2) != 0) { return supported_; } else { return SupportedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        supported_ = value;
      }
    }
    /// <summary>Gets whether the "supported" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSupported {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "supported" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSupported() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "addressChallenge" field.</summary>
    public const int AddressChallengeFieldNumber = 3;
    private global::GooglePlayStore.AddressChallenge addressChallenge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AddressChallenge AddressChallenge {
      get { return addressChallenge_; }
      set {
        addressChallenge_ = value;
      }
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 4;
    private global::GooglePlayStore.Money balance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Money Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    /// <summary>Field number for the "footerHtml" field.</summary>
    public const int FooterHtmlFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_footerHtml_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> footerHtml_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> FooterHtml {
      get { return footerHtml_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InstrumentSetupInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InstrumentSetupInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstrumentFamily != other.InstrumentFamily) return false;
      if (Supported != other.Supported) return false;
      if (!object.Equals(AddressChallenge, other.AddressChallenge)) return false;
      if (!object.Equals(Balance, other.Balance)) return false;
      if(!footerHtml_.Equals(other.footerHtml_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInstrumentFamily) hash ^= InstrumentFamily.GetHashCode();
      if (HasSupported) hash ^= Supported.GetHashCode();
      if (addressChallenge_ != null) hash ^= AddressChallenge.GetHashCode();
      if (balance_ != null) hash ^= Balance.GetHashCode();
      hash ^= footerHtml_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasInstrumentFamily) {
        output.WriteRawTag(8);
        output.WriteInt32(InstrumentFamily);
      }
      if (HasSupported) {
        output.WriteRawTag(16);
        output.WriteBool(Supported);
      }
      if (addressChallenge_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AddressChallenge);
      }
      if (balance_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Balance);
      }
      footerHtml_.WriteTo(output, _repeated_footerHtml_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasInstrumentFamily) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InstrumentFamily);
      }
      if (HasSupported) {
        size += 1 + 1;
      }
      if (addressChallenge_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddressChallenge);
      }
      if (balance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Balance);
      }
      size += footerHtml_.CalculateSize(_repeated_footerHtml_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InstrumentSetupInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasInstrumentFamily) {
        InstrumentFamily = other.InstrumentFamily;
      }
      if (other.HasSupported) {
        Supported = other.Supported;
      }
      if (other.addressChallenge_ != null) {
        if (addressChallenge_ == null) {
          AddressChallenge = new global::GooglePlayStore.AddressChallenge();
        }
        AddressChallenge.MergeFrom(other.AddressChallenge);
      }
      if (other.balance_ != null) {
        if (balance_ == null) {
          Balance = new global::GooglePlayStore.Money();
        }
        Balance.MergeFrom(other.Balance);
      }
      footerHtml_.Add(other.footerHtml_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InstrumentFamily = input.ReadInt32();
            break;
          }
          case 16: {
            Supported = input.ReadBool();
            break;
          }
          case 26: {
            if (addressChallenge_ == null) {
              AddressChallenge = new global::GooglePlayStore.AddressChallenge();
            }
            input.ReadMessage(AddressChallenge);
            break;
          }
          case 34: {
            if (balance_ == null) {
              Balance = new global::GooglePlayStore.Money();
            }
            input.ReadMessage(Balance);
            break;
          }
          case 42: {
            footerHtml_.AddEntriesFrom(input, _repeated_footerHtml_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PasswordPrompt : pb::IMessage<PasswordPrompt> {
    private static readonly pb::MessageParser<PasswordPrompt> _parser = new pb::MessageParser<PasswordPrompt>(() => new PasswordPrompt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PasswordPrompt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PasswordPrompt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PasswordPrompt(PasswordPrompt other) : this() {
      prompt_ = other.prompt_;
      forgotPasswordUrl_ = other.forgotPasswordUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PasswordPrompt Clone() {
      return new PasswordPrompt(this);
    }

    /// <summary>Field number for the "prompt" field.</summary>
    public const int PromptFieldNumber = 1;
    private readonly static string PromptDefaultValue = "";

    private string prompt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Prompt {
      get { return prompt_ ?? PromptDefaultValue; }
      set {
        prompt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "prompt" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPrompt {
      get { return prompt_ != null; }
    }
    /// <summary>Clears the value of the "prompt" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPrompt() {
      prompt_ = null;
    }

    /// <summary>Field number for the "forgotPasswordUrl" field.</summary>
    public const int ForgotPasswordUrlFieldNumber = 2;
    private readonly static string ForgotPasswordUrlDefaultValue = "";

    private string forgotPasswordUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ForgotPasswordUrl {
      get { return forgotPasswordUrl_ ?? ForgotPasswordUrlDefaultValue; }
      set {
        forgotPasswordUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "forgotPasswordUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasForgotPasswordUrl {
      get { return forgotPasswordUrl_ != null; }
    }
    /// <summary>Clears the value of the "forgotPasswordUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearForgotPasswordUrl() {
      forgotPasswordUrl_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PasswordPrompt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PasswordPrompt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Prompt != other.Prompt) return false;
      if (ForgotPasswordUrl != other.ForgotPasswordUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPrompt) hash ^= Prompt.GetHashCode();
      if (HasForgotPasswordUrl) hash ^= ForgotPasswordUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasPrompt) {
        output.WriteRawTag(10);
        output.WriteString(Prompt);
      }
      if (HasForgotPasswordUrl) {
        output.WriteRawTag(18);
        output.WriteString(ForgotPasswordUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPrompt) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Prompt);
      }
      if (HasForgotPasswordUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ForgotPasswordUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PasswordPrompt other) {
      if (other == null) {
        return;
      }
      if (other.HasPrompt) {
        Prompt = other.Prompt;
      }
      if (other.HasForgotPasswordUrl) {
        ForgotPasswordUrl = other.ForgotPasswordUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Prompt = input.ReadString();
            break;
          }
          case 18: {
            ForgotPasswordUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StoredValueInstrument : pb::IMessage<StoredValueInstrument> {
    private static readonly pb::MessageParser<StoredValueInstrument> _parser = new pb::MessageParser<StoredValueInstrument>(() => new StoredValueInstrument());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StoredValueInstrument> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoredValueInstrument() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoredValueInstrument(StoredValueInstrument other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      balance_ = other.balance_ != null ? other.balance_.Clone() : null;
      topupInfo_ = other.topupInfo_ != null ? other.topupInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoredValueInstrument Clone() {
      return new StoredValueInstrument(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 2;
    private global::GooglePlayStore.Money balance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Money Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    /// <summary>Field number for the "topupInfo" field.</summary>
    public const int TopupInfoFieldNumber = 3;
    private global::GooglePlayStore.TopupInfo topupInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TopupInfo TopupInfo {
      get { return topupInfo_; }
      set {
        topupInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StoredValueInstrument);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StoredValueInstrument other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Balance, other.Balance)) return false;
      if (!object.Equals(TopupInfo, other.TopupInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (balance_ != null) hash ^= Balance.GetHashCode();
      if (topupInfo_ != null) hash ^= TopupInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (balance_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Balance);
      }
      if (topupInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TopupInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (balance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Balance);
      }
      if (topupInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TopupInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StoredValueInstrument other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.balance_ != null) {
        if (balance_ == null) {
          Balance = new global::GooglePlayStore.Money();
        }
        Balance.MergeFrom(other.Balance);
      }
      if (other.topupInfo_ != null) {
        if (topupInfo_ == null) {
          TopupInfo = new global::GooglePlayStore.TopupInfo();
        }
        TopupInfo.MergeFrom(other.TopupInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            if (balance_ == null) {
              Balance = new global::GooglePlayStore.Money();
            }
            input.ReadMessage(Balance);
            break;
          }
          case 26: {
            if (topupInfo_ == null) {
              TopupInfo = new global::GooglePlayStore.TopupInfo();
            }
            input.ReadMessage(TopupInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TopupInfo : pb::IMessage<TopupInfo> {
    private static readonly pb::MessageParser<TopupInfo> _parser = new pb::MessageParser<TopupInfo>(() => new TopupInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TopupInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopupInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopupInfo(TopupInfo other) : this() {
      optionsContainerDocIdDeprecated_ = other.optionsContainerDocIdDeprecated_;
      optionsListUrl_ = other.optionsListUrl_;
      subtitle_ = other.subtitle_;
      optionsContainerDocId_ = other.optionsContainerDocId_ != null ? other.optionsContainerDocId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopupInfo Clone() {
      return new TopupInfo(this);
    }

    /// <summary>Field number for the "optionsContainerDocIdDeprecated" field.</summary>
    public const int OptionsContainerDocIdDeprecatedFieldNumber = 1;
    private readonly static string OptionsContainerDocIdDeprecatedDefaultValue = "";

    private string optionsContainerDocIdDeprecated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OptionsContainerDocIdDeprecated {
      get { return optionsContainerDocIdDeprecated_ ?? OptionsContainerDocIdDeprecatedDefaultValue; }
      set {
        optionsContainerDocIdDeprecated_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "optionsContainerDocIdDeprecated" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptionsContainerDocIdDeprecated {
      get { return optionsContainerDocIdDeprecated_ != null; }
    }
    /// <summary>Clears the value of the "optionsContainerDocIdDeprecated" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptionsContainerDocIdDeprecated() {
      optionsContainerDocIdDeprecated_ = null;
    }

    /// <summary>Field number for the "optionsListUrl" field.</summary>
    public const int OptionsListUrlFieldNumber = 2;
    private readonly static string OptionsListUrlDefaultValue = "";

    private string optionsListUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OptionsListUrl {
      get { return optionsListUrl_ ?? OptionsListUrlDefaultValue; }
      set {
        optionsListUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "optionsListUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptionsListUrl {
      get { return optionsListUrl_ != null; }
    }
    /// <summary>Clears the value of the "optionsListUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptionsListUrl() {
      optionsListUrl_ = null;
    }

    /// <summary>Field number for the "subtitle" field.</summary>
    public const int SubtitleFieldNumber = 3;
    private readonly static string SubtitleDefaultValue = "";

    private string subtitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subtitle {
      get { return subtitle_ ?? SubtitleDefaultValue; }
      set {
        subtitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "subtitle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubtitle {
      get { return subtitle_ != null; }
    }
    /// <summary>Clears the value of the "subtitle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtitle() {
      subtitle_ = null;
    }

    /// <summary>Field number for the "optionsContainerDocId" field.</summary>
    public const int OptionsContainerDocIdFieldNumber = 4;
    private global::GooglePlayStore.DocId optionsContainerDocId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DocId OptionsContainerDocId {
      get { return optionsContainerDocId_; }
      set {
        optionsContainerDocId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TopupInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TopupInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OptionsContainerDocIdDeprecated != other.OptionsContainerDocIdDeprecated) return false;
      if (OptionsListUrl != other.OptionsListUrl) return false;
      if (Subtitle != other.Subtitle) return false;
      if (!object.Equals(OptionsContainerDocId, other.OptionsContainerDocId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOptionsContainerDocIdDeprecated) hash ^= OptionsContainerDocIdDeprecated.GetHashCode();
      if (HasOptionsListUrl) hash ^= OptionsListUrl.GetHashCode();
      if (HasSubtitle) hash ^= Subtitle.GetHashCode();
      if (optionsContainerDocId_ != null) hash ^= OptionsContainerDocId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasOptionsContainerDocIdDeprecated) {
        output.WriteRawTag(10);
        output.WriteString(OptionsContainerDocIdDeprecated);
      }
      if (HasOptionsListUrl) {
        output.WriteRawTag(18);
        output.WriteString(OptionsListUrl);
      }
      if (HasSubtitle) {
        output.WriteRawTag(26);
        output.WriteString(Subtitle);
      }
      if (optionsContainerDocId_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OptionsContainerDocId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasOptionsContainerDocIdDeprecated) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OptionsContainerDocIdDeprecated);
      }
      if (HasOptionsListUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OptionsListUrl);
      }
      if (HasSubtitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subtitle);
      }
      if (optionsContainerDocId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OptionsContainerDocId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TopupInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasOptionsContainerDocIdDeprecated) {
        OptionsContainerDocIdDeprecated = other.OptionsContainerDocIdDeprecated;
      }
      if (other.HasOptionsListUrl) {
        OptionsListUrl = other.OptionsListUrl;
      }
      if (other.HasSubtitle) {
        Subtitle = other.Subtitle;
      }
      if (other.optionsContainerDocId_ != null) {
        if (optionsContainerDocId_ == null) {
          OptionsContainerDocId = new global::GooglePlayStore.DocId();
        }
        OptionsContainerDocId.MergeFrom(other.OptionsContainerDocId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OptionsContainerDocIdDeprecated = input.ReadString();
            break;
          }
          case 18: {
            OptionsListUrl = input.ReadString();
            break;
          }
          case 26: {
            Subtitle = input.ReadString();
            break;
          }
          case 34: {
            if (optionsContainerDocId_ == null) {
              OptionsContainerDocId = new global::GooglePlayStore.DocId();
            }
            input.ReadMessage(OptionsContainerDocId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConsumePurchaseResponse : pb::IMessage<ConsumePurchaseResponse> {
    private static readonly pb::MessageParser<ConsumePurchaseResponse> _parser = new pb::MessageParser<ConsumePurchaseResponse>(() => new ConsumePurchaseResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConsumePurchaseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConsumePurchaseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConsumePurchaseResponse(ConsumePurchaseResponse other) : this() {
      _hasBits0 = other._hasBits0;
      libraryUpdate_ = other.libraryUpdate_ != null ? other.libraryUpdate_.Clone() : null;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConsumePurchaseResponse Clone() {
      return new ConsumePurchaseResponse(this);
    }

    /// <summary>Field number for the "libraryUpdate" field.</summary>
    public const int LibraryUpdateFieldNumber = 1;
    private global::GooglePlayStore.LibraryUpdate libraryUpdate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.LibraryUpdate LibraryUpdate {
      get { return libraryUpdate_; }
      set {
        libraryUpdate_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static int StatusDefaultValue = 0;

    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { if ((_hasBits0 & 1) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 1;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConsumePurchaseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConsumePurchaseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LibraryUpdate, other.LibraryUpdate)) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (libraryUpdate_ != null) hash ^= LibraryUpdate.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (libraryUpdate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LibraryUpdate);
      }
      if (HasStatus) {
        output.WriteRawTag(16);
        output.WriteInt32(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (libraryUpdate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LibraryUpdate);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConsumePurchaseResponse other) {
      if (other == null) {
        return;
      }
      if (other.libraryUpdate_ != null) {
        if (libraryUpdate_ == null) {
          LibraryUpdate = new global::GooglePlayStore.LibraryUpdate();
        }
        LibraryUpdate.MergeFrom(other.LibraryUpdate);
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (libraryUpdate_ == null) {
              LibraryUpdate = new global::GooglePlayStore.LibraryUpdate();
            }
            input.ReadMessage(LibraryUpdate);
            break;
          }
          case 16: {
            Status = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContainerMetadata : pb::IMessage<ContainerMetadata> {
    private static readonly pb::MessageParser<ContainerMetadata> _parser = new pb::MessageParser<ContainerMetadata>(() => new ContainerMetadata());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContainerMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerMetadata(ContainerMetadata other) : this() {
      _hasBits0 = other._hasBits0;
      browseUrl_ = other.browseUrl_;
      nextPageUrl_ = other.nextPageUrl_;
      relevance_ = other.relevance_;
      estimatedResults_ = other.estimatedResults_;
      analyticsCookie_ = other.analyticsCookie_;
      ordered_ = other.ordered_;
      containerView_ = other.containerView_.Clone();
      leftIcon_ = other.leftIcon_ != null ? other.leftIcon_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerMetadata Clone() {
      return new ContainerMetadata(this);
    }

    /// <summary>Field number for the "browseUrl" field.</summary>
    public const int BrowseUrlFieldNumber = 1;
    private readonly static string BrowseUrlDefaultValue = "";

    private string browseUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BrowseUrl {
      get { return browseUrl_ ?? BrowseUrlDefaultValue; }
      set {
        browseUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "browseUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBrowseUrl {
      get { return browseUrl_ != null; }
    }
    /// <summary>Clears the value of the "browseUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBrowseUrl() {
      browseUrl_ = null;
    }

    /// <summary>Field number for the "nextPageUrl" field.</summary>
    public const int NextPageUrlFieldNumber = 2;
    private readonly static string NextPageUrlDefaultValue = "";

    private string nextPageUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageUrl {
      get { return nextPageUrl_ ?? NextPageUrlDefaultValue; }
      set {
        nextPageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "nextPageUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNextPageUrl {
      get { return nextPageUrl_ != null; }
    }
    /// <summary>Clears the value of the "nextPageUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNextPageUrl() {
      nextPageUrl_ = null;
    }

    /// <summary>Field number for the "relevance" field.</summary>
    public const int RelevanceFieldNumber = 3;
    private readonly static double RelevanceDefaultValue = 0D;

    private double relevance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Relevance {
      get { if ((_hasBits0 & 1) != 0) { return relevance_; } else { return RelevanceDefaultValue; } }
      set {
        _hasBits0 |= 1;
        relevance_ = value;
      }
    }
    /// <summary>Gets whether the "relevance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRelevance {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "relevance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRelevance() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "estimatedResults" field.</summary>
    public const int EstimatedResultsFieldNumber = 4;
    private readonly static long EstimatedResultsDefaultValue = 0L;

    private long estimatedResults_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EstimatedResults {
      get { if ((_hasBits0 & 2) != 0) { return estimatedResults_; } else { return EstimatedResultsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        estimatedResults_ = value;
      }
    }
    /// <summary>Gets whether the "estimatedResults" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEstimatedResults {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "estimatedResults" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEstimatedResults() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "analyticsCookie" field.</summary>
    public const int AnalyticsCookieFieldNumber = 5;
    private readonly static string AnalyticsCookieDefaultValue = "";

    private string analyticsCookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AnalyticsCookie {
      get { return analyticsCookie_ ?? AnalyticsCookieDefaultValue; }
      set {
        analyticsCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "analyticsCookie" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAnalyticsCookie {
      get { return analyticsCookie_ != null; }
    }
    /// <summary>Clears the value of the "analyticsCookie" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAnalyticsCookie() {
      analyticsCookie_ = null;
    }

    /// <summary>Field number for the "ordered" field.</summary>
    public const int OrderedFieldNumber = 6;
    private readonly static bool OrderedDefaultValue = false;

    private bool ordered_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ordered {
      get { if ((_hasBits0 & 4) != 0) { return ordered_; } else { return OrderedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        ordered_ = value;
      }
    }
    /// <summary>Gets whether the "ordered" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOrdered {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ordered" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOrdered() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "containerView" field.</summary>
    public const int ContainerViewFieldNumber = 7;
    private static readonly pb::FieldCodec<global::GooglePlayStore.ContainerView> _repeated_containerView_codec
        = pb::FieldCodec.ForMessage(58, global::GooglePlayStore.ContainerView.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.ContainerView> containerView_ = new pbc::RepeatedField<global::GooglePlayStore.ContainerView>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.ContainerView> ContainerView {
      get { return containerView_; }
    }

    /// <summary>Field number for the "leftIcon" field.</summary>
    public const int LeftIconFieldNumber = 8;
    private global::GooglePlayStore.Image leftIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Image LeftIcon {
      get { return leftIcon_; }
      set {
        leftIcon_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContainerMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContainerMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowseUrl != other.BrowseUrl) return false;
      if (NextPageUrl != other.NextPageUrl) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Relevance, other.Relevance)) return false;
      if (EstimatedResults != other.EstimatedResults) return false;
      if (AnalyticsCookie != other.AnalyticsCookie) return false;
      if (Ordered != other.Ordered) return false;
      if(!containerView_.Equals(other.containerView_)) return false;
      if (!object.Equals(LeftIcon, other.LeftIcon)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrowseUrl) hash ^= BrowseUrl.GetHashCode();
      if (HasNextPageUrl) hash ^= NextPageUrl.GetHashCode();
      if (HasRelevance) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Relevance);
      if (HasEstimatedResults) hash ^= EstimatedResults.GetHashCode();
      if (HasAnalyticsCookie) hash ^= AnalyticsCookie.GetHashCode();
      if (HasOrdered) hash ^= Ordered.GetHashCode();
      hash ^= containerView_.GetHashCode();
      if (leftIcon_ != null) hash ^= LeftIcon.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasBrowseUrl) {
        output.WriteRawTag(10);
        output.WriteString(BrowseUrl);
      }
      if (HasNextPageUrl) {
        output.WriteRawTag(18);
        output.WriteString(NextPageUrl);
      }
      if (HasRelevance) {
        output.WriteRawTag(25);
        output.WriteDouble(Relevance);
      }
      if (HasEstimatedResults) {
        output.WriteRawTag(32);
        output.WriteInt64(EstimatedResults);
      }
      if (HasAnalyticsCookie) {
        output.WriteRawTag(42);
        output.WriteString(AnalyticsCookie);
      }
      if (HasOrdered) {
        output.WriteRawTag(48);
        output.WriteBool(Ordered);
      }
      containerView_.WriteTo(output, _repeated_containerView_codec);
      if (leftIcon_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LeftIcon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasBrowseUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BrowseUrl);
      }
      if (HasNextPageUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageUrl);
      }
      if (HasRelevance) {
        size += 1 + 8;
      }
      if (HasEstimatedResults) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EstimatedResults);
      }
      if (HasAnalyticsCookie) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AnalyticsCookie);
      }
      if (HasOrdered) {
        size += 1 + 1;
      }
      size += containerView_.CalculateSize(_repeated_containerView_codec);
      if (leftIcon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LeftIcon);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContainerMetadata other) {
      if (other == null) {
        return;
      }
      if (other.HasBrowseUrl) {
        BrowseUrl = other.BrowseUrl;
      }
      if (other.HasNextPageUrl) {
        NextPageUrl = other.NextPageUrl;
      }
      if (other.HasRelevance) {
        Relevance = other.Relevance;
      }
      if (other.HasEstimatedResults) {
        EstimatedResults = other.EstimatedResults;
      }
      if (other.HasAnalyticsCookie) {
        AnalyticsCookie = other.AnalyticsCookie;
      }
      if (other.HasOrdered) {
        Ordered = other.Ordered;
      }
      containerView_.Add(other.containerView_);
      if (other.leftIcon_ != null) {
        if (leftIcon_ == null) {
          LeftIcon = new global::GooglePlayStore.Image();
        }
        LeftIcon.MergeFrom(other.LeftIcon);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BrowseUrl = input.ReadString();
            break;
          }
          case 18: {
            NextPageUrl = input.ReadString();
            break;
          }
          case 25: {
            Relevance = input.ReadDouble();
            break;
          }
          case 32: {
            EstimatedResults = input.ReadInt64();
            break;
          }
          case 42: {
            AnalyticsCookie = input.ReadString();
            break;
          }
          case 48: {
            Ordered = input.ReadBool();
            break;
          }
          case 58: {
            containerView_.AddEntriesFrom(input, _repeated_containerView_codec);
            break;
          }
          case 66: {
            if (leftIcon_ == null) {
              LeftIcon = new global::GooglePlayStore.Image();
            }
            input.ReadMessage(LeftIcon);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContainerView : pb::IMessage<ContainerView> {
    private static readonly pb::MessageParser<ContainerView> _parser = new pb::MessageParser<ContainerView>(() => new ContainerView());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContainerView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerView(ContainerView other) : this() {
      _hasBits0 = other._hasBits0;
      selected_ = other.selected_;
      title_ = other.title_;
      listUrl_ = other.listUrl_;
      serverLogsCookie_ = other.serverLogsCookie_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerView Clone() {
      return new ContainerView(this);
    }

    /// <summary>Field number for the "selected" field.</summary>
    public const int SelectedFieldNumber = 1;
    private readonly static bool SelectedDefaultValue = false;

    private bool selected_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Selected {
      get { if ((_hasBits0 & 1) != 0) { return selected_; } else { return SelectedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        selected_ = value;
      }
    }
    /// <summary>Gets whether the "selected" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSelected {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "selected" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSelected() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "listUrl" field.</summary>
    public const int ListUrlFieldNumber = 3;
    private readonly static string ListUrlDefaultValue = "";

    private string listUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ListUrl {
      get { return listUrl_ ?? ListUrlDefaultValue; }
      set {
        listUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "listUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasListUrl {
      get { return listUrl_ != null; }
    }
    /// <summary>Clears the value of the "listUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearListUrl() {
      listUrl_ = null;
    }

    /// <summary>Field number for the "serverLogsCookie" field.</summary>
    public const int ServerLogsCookieFieldNumber = 4;
    private readonly static pb::ByteString ServerLogsCookieDefaultValue = pb::ByteString.Empty;

    private pb::ByteString serverLogsCookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ServerLogsCookie {
      get { return serverLogsCookie_ ?? ServerLogsCookieDefaultValue; }
      set {
        serverLogsCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serverLogsCookie" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServerLogsCookie {
      get { return serverLogsCookie_ != null; }
    }
    /// <summary>Clears the value of the "serverLogsCookie" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServerLogsCookie() {
      serverLogsCookie_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContainerView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContainerView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Selected != other.Selected) return false;
      if (Title != other.Title) return false;
      if (ListUrl != other.ListUrl) return false;
      if (ServerLogsCookie != other.ServerLogsCookie) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSelected) hash ^= Selected.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasListUrl) hash ^= ListUrl.GetHashCode();
      if (HasServerLogsCookie) hash ^= ServerLogsCookie.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasSelected) {
        output.WriteRawTag(8);
        output.WriteBool(Selected);
      }
      if (HasTitle) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (HasListUrl) {
        output.WriteRawTag(26);
        output.WriteString(ListUrl);
      }
      if (HasServerLogsCookie) {
        output.WriteRawTag(34);
        output.WriteBytes(ServerLogsCookie);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSelected) {
        size += 1 + 1;
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasListUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ListUrl);
      }
      if (HasServerLogsCookie) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ServerLogsCookie);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContainerView other) {
      if (other == null) {
        return;
      }
      if (other.HasSelected) {
        Selected = other.Selected;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasListUrl) {
        ListUrl = other.ListUrl;
      }
      if (other.HasServerLogsCookie) {
        ServerLogsCookie = other.ServerLogsCookie;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Selected = input.ReadBool();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            ListUrl = input.ReadString();
            break;
          }
          case 34: {
            ServerLogsCookie = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FlagContentResponse : pb::IMessage<FlagContentResponse> {
    private static readonly pb::MessageParser<FlagContentResponse> _parser = new pb::MessageParser<FlagContentResponse>(() => new FlagContentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FlagContentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlagContentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlagContentResponse(FlagContentResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlagContentResponse Clone() {
      return new FlagContentResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FlagContentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FlagContentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FlagContentResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ClientDownloadRequest : pb::IMessage<ClientDownloadRequest> {
    private static readonly pb::MessageParser<ClientDownloadRequest> _parser = new pb::MessageParser<ClientDownloadRequest>(() => new ClientDownloadRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientDownloadRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientDownloadRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientDownloadRequest(ClientDownloadRequest other) : this() {
      _hasBits0 = other._hasBits0;
      url_ = other.url_;
      digests_ = other.digests_ != null ? other.digests_.Clone() : null;
      length_ = other.length_;
      resources_ = other.resources_.Clone();
      signature_ = other.signature_ != null ? other.signature_.Clone() : null;
      userInitiated_ = other.userInitiated_;
      clientAsn_ = other.clientAsn_.Clone();
      fileBasename_ = other.fileBasename_;
      downloadType_ = other.downloadType_;
      locale_ = other.locale_;
      apkInfo_ = other.apkInfo_ != null ? other.apkInfo_.Clone() : null;
      androidId_ = other.androidId_;
      originatingPackages_ = other.originatingPackages_.Clone();
      originatingSignature_ = other.originatingSignature_ != null ? other.originatingSignature_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientDownloadRequest Clone() {
      return new ClientDownloadRequest(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "digests" field.</summary>
    public const int DigestsFieldNumber = 2;
    private global::GooglePlayStore.ClientDownloadRequest.Types.Digests digests_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ClientDownloadRequest.Types.Digests Digests {
      get { return digests_; }
      set {
        digests_ = value;
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 3;
    private readonly static long LengthDefaultValue = 0L;

    private long length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Length {
      get { if ((_hasBits0 & 1) != 0) { return length_; } else { return LengthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        length_ = value;
      }
    }
    /// <summary>Gets whether the "length" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLength {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "length" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLength() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.ClientDownloadRequest.Types.Resource> _repeated_resources_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.ClientDownloadRequest.Types.Resource.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.ClientDownloadRequest.Types.Resource> resources_ = new pbc::RepeatedField<global::GooglePlayStore.ClientDownloadRequest.Types.Resource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.ClientDownloadRequest.Types.Resource> Resources {
      get { return resources_; }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 5;
    private global::GooglePlayStore.ClientDownloadRequest.Types.SignatureInfo signature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ClientDownloadRequest.Types.SignatureInfo Signature {
      get { return signature_; }
      set {
        signature_ = value;
      }
    }

    /// <summary>Field number for the "userInitiated" field.</summary>
    public const int UserInitiatedFieldNumber = 6;
    private readonly static bool UserInitiatedDefaultValue = false;

    private bool userInitiated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UserInitiated {
      get { if ((_hasBits0 & 2) != 0) { return userInitiated_; } else { return UserInitiatedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        userInitiated_ = value;
      }
    }
    /// <summary>Gets whether the "userInitiated" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserInitiated {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "userInitiated" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserInitiated() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "clientAsn" field.</summary>
    public const int ClientAsnFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_clientAsn_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> clientAsn_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ClientAsn {
      get { return clientAsn_; }
    }

    /// <summary>Field number for the "fileBasename" field.</summary>
    public const int FileBasenameFieldNumber = 9;
    private readonly static string FileBasenameDefaultValue = "";

    private string fileBasename_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileBasename {
      get { return fileBasename_ ?? FileBasenameDefaultValue; }
      set {
        fileBasename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fileBasename" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileBasename {
      get { return fileBasename_ != null; }
    }
    /// <summary>Clears the value of the "fileBasename" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileBasename() {
      fileBasename_ = null;
    }

    /// <summary>Field number for the "downloadType" field.</summary>
    public const int DownloadTypeFieldNumber = 10;
    private readonly static int DownloadTypeDefaultValue = 0;

    private int downloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DownloadType {
      get { if ((_hasBits0 & 4) != 0) { return downloadType_; } else { return DownloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        downloadType_ = value;
      }
    }
    /// <summary>Gets whether the "downloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDownloadType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "downloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDownloadType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "locale" field.</summary>
    public const int LocaleFieldNumber = 11;
    private readonly static string LocaleDefaultValue = "";

    private string locale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Locale {
      get { return locale_ ?? LocaleDefaultValue; }
      set {
        locale_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "locale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLocale {
      get { return locale_ != null; }
    }
    /// <summary>Clears the value of the "locale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLocale() {
      locale_ = null;
    }

    /// <summary>Field number for the "apkInfo" field.</summary>
    public const int ApkInfoFieldNumber = 12;
    private global::GooglePlayStore.ClientDownloadRequest.Types.ApkInfo apkInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ClientDownloadRequest.Types.ApkInfo ApkInfo {
      get { return apkInfo_; }
      set {
        apkInfo_ = value;
      }
    }

    /// <summary>Field number for the "androidId" field.</summary>
    public const int AndroidIdFieldNumber = 13;
    private readonly static ulong AndroidIdDefaultValue = 0UL;

    private ulong androidId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AndroidId {
      get { if ((_hasBits0 & 8) != 0) { return androidId_; } else { return AndroidIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        androidId_ = value;
      }
    }
    /// <summary>Gets whether the "androidId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAndroidId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "androidId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAndroidId() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "originatingPackages" field.</summary>
    public const int OriginatingPackagesFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _repeated_originatingPackages_codec
        = pb::FieldCodec.ForString(122);
    private readonly pbc::RepeatedField<string> originatingPackages_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OriginatingPackages {
      get { return originatingPackages_; }
    }

    /// <summary>Field number for the "originatingSignature" field.</summary>
    public const int OriginatingSignatureFieldNumber = 17;
    private global::GooglePlayStore.ClientDownloadRequest.Types.SignatureInfo originatingSignature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ClientDownloadRequest.Types.SignatureInfo OriginatingSignature {
      get { return originatingSignature_; }
      set {
        originatingSignature_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientDownloadRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientDownloadRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (!object.Equals(Digests, other.Digests)) return false;
      if (Length != other.Length) return false;
      if(!resources_.Equals(other.resources_)) return false;
      if (!object.Equals(Signature, other.Signature)) return false;
      if (UserInitiated != other.UserInitiated) return false;
      if(!clientAsn_.Equals(other.clientAsn_)) return false;
      if (FileBasename != other.FileBasename) return false;
      if (DownloadType != other.DownloadType) return false;
      if (Locale != other.Locale) return false;
      if (!object.Equals(ApkInfo, other.ApkInfo)) return false;
      if (AndroidId != other.AndroidId) return false;
      if(!originatingPackages_.Equals(other.originatingPackages_)) return false;
      if (!object.Equals(OriginatingSignature, other.OriginatingSignature)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUrl) hash ^= Url.GetHashCode();
      if (digests_ != null) hash ^= Digests.GetHashCode();
      if (HasLength) hash ^= Length.GetHashCode();
      hash ^= resources_.GetHashCode();
      if (signature_ != null) hash ^= Signature.GetHashCode();
      if (HasUserInitiated) hash ^= UserInitiated.GetHashCode();
      hash ^= clientAsn_.GetHashCode();
      if (HasFileBasename) hash ^= FileBasename.GetHashCode();
      if (HasDownloadType) hash ^= DownloadType.GetHashCode();
      if (HasLocale) hash ^= Locale.GetHashCode();
      if (apkInfo_ != null) hash ^= ApkInfo.GetHashCode();
      if (HasAndroidId) hash ^= AndroidId.GetHashCode();
      hash ^= originatingPackages_.GetHashCode();
      if (originatingSignature_ != null) hash ^= OriginatingSignature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (digests_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Digests);
      }
      if (HasLength) {
        output.WriteRawTag(24);
        output.WriteInt64(Length);
      }
      resources_.WriteTo(output, _repeated_resources_codec);
      if (signature_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Signature);
      }
      if (HasUserInitiated) {
        output.WriteRawTag(48);
        output.WriteBool(UserInitiated);
      }
      clientAsn_.WriteTo(output, _repeated_clientAsn_codec);
      if (HasFileBasename) {
        output.WriteRawTag(74);
        output.WriteString(FileBasename);
      }
      if (HasDownloadType) {
        output.WriteRawTag(80);
        output.WriteInt32(DownloadType);
      }
      if (HasLocale) {
        output.WriteRawTag(90);
        output.WriteString(Locale);
      }
      if (apkInfo_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ApkInfo);
      }
      if (HasAndroidId) {
        output.WriteRawTag(105);
        output.WriteFixed64(AndroidId);
      }
      originatingPackages_.WriteTo(output, _repeated_originatingPackages_codec);
      if (originatingSignature_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(OriginatingSignature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (digests_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Digests);
      }
      if (HasLength) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Length);
      }
      size += resources_.CalculateSize(_repeated_resources_codec);
      if (signature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Signature);
      }
      if (HasUserInitiated) {
        size += 1 + 1;
      }
      size += clientAsn_.CalculateSize(_repeated_clientAsn_codec);
      if (HasFileBasename) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileBasename);
      }
      if (HasDownloadType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DownloadType);
      }
      if (HasLocale) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Locale);
      }
      if (apkInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ApkInfo);
      }
      if (HasAndroidId) {
        size += 1 + 8;
      }
      size += originatingPackages_.CalculateSize(_repeated_originatingPackages_codec);
      if (originatingSignature_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OriginatingSignature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientDownloadRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.digests_ != null) {
        if (digests_ == null) {
          Digests = new global::GooglePlayStore.ClientDownloadRequest.Types.Digests();
        }
        Digests.MergeFrom(other.Digests);
      }
      if (other.HasLength) {
        Length = other.Length;
      }
      resources_.Add(other.resources_);
      if (other.signature_ != null) {
        if (signature_ == null) {
          Signature = new global::GooglePlayStore.ClientDownloadRequest.Types.SignatureInfo();
        }
        Signature.MergeFrom(other.Signature);
      }
      if (other.HasUserInitiated) {
        UserInitiated = other.UserInitiated;
      }
      clientAsn_.Add(other.clientAsn_);
      if (other.HasFileBasename) {
        FileBasename = other.FileBasename;
      }
      if (other.HasDownloadType) {
        DownloadType = other.DownloadType;
      }
      if (other.HasLocale) {
        Locale = other.Locale;
      }
      if (other.apkInfo_ != null) {
        if (apkInfo_ == null) {
          ApkInfo = new global::GooglePlayStore.ClientDownloadRequest.Types.ApkInfo();
        }
        ApkInfo.MergeFrom(other.ApkInfo);
      }
      if (other.HasAndroidId) {
        AndroidId = other.AndroidId;
      }
      originatingPackages_.Add(other.originatingPackages_);
      if (other.originatingSignature_ != null) {
        if (originatingSignature_ == null) {
          OriginatingSignature = new global::GooglePlayStore.ClientDownloadRequest.Types.SignatureInfo();
        }
        OriginatingSignature.MergeFrom(other.OriginatingSignature);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            if (digests_ == null) {
              Digests = new global::GooglePlayStore.ClientDownloadRequest.Types.Digests();
            }
            input.ReadMessage(Digests);
            break;
          }
          case 24: {
            Length = input.ReadInt64();
            break;
          }
          case 34: {
            resources_.AddEntriesFrom(input, _repeated_resources_codec);
            break;
          }
          case 42: {
            if (signature_ == null) {
              Signature = new global::GooglePlayStore.ClientDownloadRequest.Types.SignatureInfo();
            }
            input.ReadMessage(Signature);
            break;
          }
          case 48: {
            UserInitiated = input.ReadBool();
            break;
          }
          case 66: {
            clientAsn_.AddEntriesFrom(input, _repeated_clientAsn_codec);
            break;
          }
          case 74: {
            FileBasename = input.ReadString();
            break;
          }
          case 80: {
            DownloadType = input.ReadInt32();
            break;
          }
          case 90: {
            Locale = input.ReadString();
            break;
          }
          case 98: {
            if (apkInfo_ == null) {
              ApkInfo = new global::GooglePlayStore.ClientDownloadRequest.Types.ApkInfo();
            }
            input.ReadMessage(ApkInfo);
            break;
          }
          case 105: {
            AndroidId = input.ReadFixed64();
            break;
          }
          case 122: {
            originatingPackages_.AddEntriesFrom(input, _repeated_originatingPackages_codec);
            break;
          }
          case 138: {
            if (originatingSignature_ == null) {
              OriginatingSignature = new global::GooglePlayStore.ClientDownloadRequest.Types.SignatureInfo();
            }
            input.ReadMessage(OriginatingSignature);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ClientDownloadRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ApkInfo : pb::IMessage<ApkInfo> {
        private static readonly pb::MessageParser<ApkInfo> _parser = new pb::MessageParser<ApkInfo>(() => new ApkInfo());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ApkInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GooglePlayStore.ClientDownloadRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ApkInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ApkInfo(ApkInfo other) : this() {
          _hasBits0 = other._hasBits0;
          packageName_ = other.packageName_;
          versionCode_ = other.versionCode_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ApkInfo Clone() {
          return new ApkInfo(this);
        }

        /// <summary>Field number for the "packageName" field.</summary>
        public const int PackageNameFieldNumber = 1;
        private readonly static string PackageNameDefaultValue = "";

        private string packageName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string PackageName {
          get { return packageName_ ?? PackageNameDefaultValue; }
          set {
            packageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "packageName" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasPackageName {
          get { return packageName_ != null; }
        }
        /// <summary>Clears the value of the "packageName" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearPackageName() {
          packageName_ = null;
        }

        /// <summary>Field number for the "versionCode" field.</summary>
        public const int VersionCodeFieldNumber = 2;
        private readonly static int VersionCodeDefaultValue = 0;

        private int versionCode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int VersionCode {
          get { if ((_hasBits0 & 1) != 0) { return versionCode_; } else { return VersionCodeDefaultValue; } }
          set {
            _hasBits0 |= 1;
            versionCode_ = value;
          }
        }
        /// <summary>Gets whether the "versionCode" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasVersionCode {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "versionCode" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearVersionCode() {
          _hasBits0 &= ~1;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ApkInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ApkInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PackageName != other.PackageName) return false;
          if (VersionCode != other.VersionCode) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasPackageName) hash ^= PackageName.GetHashCode();
          if (HasVersionCode) hash ^= VersionCode.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (HasPackageName) {
            output.WriteRawTag(10);
            output.WriteString(PackageName);
          }
          if (HasVersionCode) {
            output.WriteRawTag(16);
            output.WriteInt32(VersionCode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasPackageName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageName);
          }
          if (HasVersionCode) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(VersionCode);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ApkInfo other) {
          if (other == null) {
            return;
          }
          if (other.HasPackageName) {
            PackageName = other.PackageName;
          }
          if (other.HasVersionCode) {
            VersionCode = other.VersionCode;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                PackageName = input.ReadString();
                break;
              }
              case 16: {
                VersionCode = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class CertificateChain : pb::IMessage<CertificateChain> {
        private static readonly pb::MessageParser<CertificateChain> _parser = new pb::MessageParser<CertificateChain>(() => new CertificateChain());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CertificateChain> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GooglePlayStore.ClientDownloadRequest.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CertificateChain() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CertificateChain(CertificateChain other) : this() {
          element_ = other.element_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CertificateChain Clone() {
          return new CertificateChain(this);
        }

        /// <summary>Field number for the "element" field.</summary>
        public const int ElementFieldNumber = 1;
        private static readonly pb::FieldCodec<global::GooglePlayStore.ClientDownloadRequest.Types.CertificateChain.Types.Element> _repeated_element_codec
            = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.ClientDownloadRequest.Types.CertificateChain.Types.Element.Parser);
        private readonly pbc::RepeatedField<global::GooglePlayStore.ClientDownloadRequest.Types.CertificateChain.Types.Element> element_ = new pbc::RepeatedField<global::GooglePlayStore.ClientDownloadRequest.Types.CertificateChain.Types.Element>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::GooglePlayStore.ClientDownloadRequest.Types.CertificateChain.Types.Element> Element {
          get { return element_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CertificateChain);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CertificateChain other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!element_.Equals(other.element_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= element_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          element_.WriteTo(output, _repeated_element_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += element_.CalculateSize(_repeated_element_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CertificateChain other) {
          if (other == null) {
            return;
          }
          element_.Add(other.element_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                element_.AddEntriesFrom(input, _repeated_element_codec);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the CertificateChain message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Element : pb::IMessage<Element> {
            private static readonly pb::MessageParser<Element> _parser = new pb::MessageParser<Element>(() => new Element());
            private pb::UnknownFieldSet _unknownFields;
            private int _hasBits0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Element> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::GooglePlayStore.ClientDownloadRequest.Types.CertificateChain.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Element() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Element(Element other) : this() {
              _hasBits0 = other._hasBits0;
              certificate_ = other.certificate_;
              parsedSuccessfully_ = other.parsedSuccessfully_;
              subject_ = other.subject_;
              issuer_ = other.issuer_;
              fingerprint_ = other.fingerprint_;
              expiryTime_ = other.expiryTime_;
              startTime_ = other.startTime_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Element Clone() {
              return new Element(this);
            }

            /// <summary>Field number for the "certificate" field.</summary>
            public const int CertificateFieldNumber = 1;
            private readonly static pb::ByteString CertificateDefaultValue = pb::ByteString.Empty;

            private pb::ByteString certificate_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pb::ByteString Certificate {
              get { return certificate_ ?? CertificateDefaultValue; }
              set {
                certificate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "certificate" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HasCertificate {
              get { return certificate_ != null; }
            }
            /// <summary>Clears the value of the "certificate" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearCertificate() {
              certificate_ = null;
            }

            /// <summary>Field number for the "parsedSuccessfully" field.</summary>
            public const int ParsedSuccessfullyFieldNumber = 2;
            private readonly static bool ParsedSuccessfullyDefaultValue = false;

            private bool parsedSuccessfully_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool ParsedSuccessfully {
              get { if ((_hasBits0 & 1) != 0) { return parsedSuccessfully_; } else { return ParsedSuccessfullyDefaultValue; } }
              set {
                _hasBits0 |= 1;
                parsedSuccessfully_ = value;
              }
            }
            /// <summary>Gets whether the "parsedSuccessfully" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HasParsedSuccessfully {
              get { return (_hasBits0 & 1) != 0; }
            }
            /// <summary>Clears the value of the "parsedSuccessfully" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearParsedSuccessfully() {
              _hasBits0 &= ~1;
            }

            /// <summary>Field number for the "subject" field.</summary>
            public const int SubjectFieldNumber = 3;
            private readonly static pb::ByteString SubjectDefaultValue = pb::ByteString.Empty;

            private pb::ByteString subject_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pb::ByteString Subject {
              get { return subject_ ?? SubjectDefaultValue; }
              set {
                subject_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "subject" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HasSubject {
              get { return subject_ != null; }
            }
            /// <summary>Clears the value of the "subject" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearSubject() {
              subject_ = null;
            }

            /// <summary>Field number for the "issuer" field.</summary>
            public const int IssuerFieldNumber = 4;
            private readonly static pb::ByteString IssuerDefaultValue = pb::ByteString.Empty;

            private pb::ByteString issuer_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pb::ByteString Issuer {
              get { return issuer_ ?? IssuerDefaultValue; }
              set {
                issuer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "issuer" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HasIssuer {
              get { return issuer_ != null; }
            }
            /// <summary>Clears the value of the "issuer" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearIssuer() {
              issuer_ = null;
            }

            /// <summary>Field number for the "fingerprint" field.</summary>
            public const int FingerprintFieldNumber = 5;
            private readonly static pb::ByteString FingerprintDefaultValue = pb::ByteString.Empty;

            private pb::ByteString fingerprint_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pb::ByteString Fingerprint {
              get { return fingerprint_ ?? FingerprintDefaultValue; }
              set {
                fingerprint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "fingerprint" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HasFingerprint {
              get { return fingerprint_ != null; }
            }
            /// <summary>Clears the value of the "fingerprint" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearFingerprint() {
              fingerprint_ = null;
            }

            /// <summary>Field number for the "expiryTime" field.</summary>
            public const int ExpiryTimeFieldNumber = 6;
            private readonly static long ExpiryTimeDefaultValue = 0L;

            private long expiryTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long ExpiryTime {
              get { if ((_hasBits0 & 2) != 0) { return expiryTime_; } else { return ExpiryTimeDefaultValue; } }
              set {
                _hasBits0 |= 2;
                expiryTime_ = value;
              }
            }
            /// <summary>Gets whether the "expiryTime" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HasExpiryTime {
              get { return (_hasBits0 & 2) != 0; }
            }
            /// <summary>Clears the value of the "expiryTime" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearExpiryTime() {
              _hasBits0 &= ~2;
            }

            /// <summary>Field number for the "startTime" field.</summary>
            public const int StartTimeFieldNumber = 7;
            private readonly static long StartTimeDefaultValue = 0L;

            private long startTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long StartTime {
              get { if ((_hasBits0 & 4) != 0) { return startTime_; } else { return StartTimeDefaultValue; } }
              set {
                _hasBits0 |= 4;
                startTime_ = value;
              }
            }
            /// <summary>Gets whether the "startTime" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HasStartTime {
              get { return (_hasBits0 & 4) != 0; }
            }
            /// <summary>Clears the value of the "startTime" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearStartTime() {
              _hasBits0 &= ~4;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Element);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Element other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Certificate != other.Certificate) return false;
              if (ParsedSuccessfully != other.ParsedSuccessfully) return false;
              if (Subject != other.Subject) return false;
              if (Issuer != other.Issuer) return false;
              if (Fingerprint != other.Fingerprint) return false;
              if (ExpiryTime != other.ExpiryTime) return false;
              if (StartTime != other.StartTime) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (HasCertificate) hash ^= Certificate.GetHashCode();
              if (HasParsedSuccessfully) hash ^= ParsedSuccessfully.GetHashCode();
              if (HasSubject) hash ^= Subject.GetHashCode();
              if (HasIssuer) hash ^= Issuer.GetHashCode();
              if (HasFingerprint) hash ^= Fingerprint.GetHashCode();
              if (HasExpiryTime) hash ^= ExpiryTime.GetHashCode();
              if (HasStartTime) hash ^= StartTime.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (HasCertificate) {
                output.WriteRawTag(10);
                output.WriteBytes(Certificate);
              }
              if (HasParsedSuccessfully) {
                output.WriteRawTag(16);
                output.WriteBool(ParsedSuccessfully);
              }
              if (HasSubject) {
                output.WriteRawTag(26);
                output.WriteBytes(Subject);
              }
              if (HasIssuer) {
                output.WriteRawTag(34);
                output.WriteBytes(Issuer);
              }
              if (HasFingerprint) {
                output.WriteRawTag(42);
                output.WriteBytes(Fingerprint);
              }
              if (HasExpiryTime) {
                output.WriteRawTag(48);
                output.WriteInt64(ExpiryTime);
              }
              if (HasStartTime) {
                output.WriteRawTag(56);
                output.WriteInt64(StartTime);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (HasCertificate) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Certificate);
              }
              if (HasParsedSuccessfully) {
                size += 1 + 1;
              }
              if (HasSubject) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Subject);
              }
              if (HasIssuer) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Issuer);
              }
              if (HasFingerprint) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Fingerprint);
              }
              if (HasExpiryTime) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpiryTime);
              }
              if (HasStartTime) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Element other) {
              if (other == null) {
                return;
              }
              if (other.HasCertificate) {
                Certificate = other.Certificate;
              }
              if (other.HasParsedSuccessfully) {
                ParsedSuccessfully = other.ParsedSuccessfully;
              }
              if (other.HasSubject) {
                Subject = other.Subject;
              }
              if (other.HasIssuer) {
                Issuer = other.Issuer;
              }
              if (other.HasFingerprint) {
                Fingerprint = other.Fingerprint;
              }
              if (other.HasExpiryTime) {
                ExpiryTime = other.ExpiryTime;
              }
              if (other.HasStartTime) {
                StartTime = other.StartTime;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Certificate = input.ReadBytes();
                    break;
                  }
                  case 16: {
                    ParsedSuccessfully = input.ReadBool();
                    break;
                  }
                  case 26: {
                    Subject = input.ReadBytes();
                    break;
                  }
                  case 34: {
                    Issuer = input.ReadBytes();
                    break;
                  }
                  case 42: {
                    Fingerprint = input.ReadBytes();
                    break;
                  }
                  case 48: {
                    ExpiryTime = input.ReadInt64();
                    break;
                  }
                  case 56: {
                    StartTime = input.ReadInt64();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      public sealed partial class Digests : pb::IMessage<Digests> {
        private static readonly pb::MessageParser<Digests> _parser = new pb::MessageParser<Digests>(() => new Digests());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Digests> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GooglePlayStore.ClientDownloadRequest.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Digests() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Digests(Digests other) : this() {
          sha256_ = other.sha256_;
          sha1_ = other.sha1_;
          md5_ = other.md5_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Digests Clone() {
          return new Digests(this);
        }

        /// <summary>Field number for the "sha256" field.</summary>
        public const int Sha256FieldNumber = 1;
        private readonly static pb::ByteString Sha256DefaultValue = pb::ByteString.Empty;

        private pb::ByteString sha256_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Sha256 {
          get { return sha256_ ?? Sha256DefaultValue; }
          set {
            sha256_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "sha256" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasSha256 {
          get { return sha256_ != null; }
        }
        /// <summary>Clears the value of the "sha256" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSha256() {
          sha256_ = null;
        }

        /// <summary>Field number for the "sha1" field.</summary>
        public const int Sha1FieldNumber = 2;
        private readonly static pb::ByteString Sha1DefaultValue = pb::ByteString.Empty;

        private pb::ByteString sha1_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Sha1 {
          get { return sha1_ ?? Sha1DefaultValue; }
          set {
            sha1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "sha1" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasSha1 {
          get { return sha1_ != null; }
        }
        /// <summary>Clears the value of the "sha1" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSha1() {
          sha1_ = null;
        }

        /// <summary>Field number for the "md5" field.</summary>
        public const int Md5FieldNumber = 3;
        private readonly static pb::ByteString Md5DefaultValue = pb::ByteString.Empty;

        private pb::ByteString md5_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Md5 {
          get { return md5_ ?? Md5DefaultValue; }
          set {
            md5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "md5" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasMd5 {
          get { return md5_ != null; }
        }
        /// <summary>Clears the value of the "md5" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearMd5() {
          md5_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Digests);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Digests other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Sha256 != other.Sha256) return false;
          if (Sha1 != other.Sha1) return false;
          if (Md5 != other.Md5) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasSha256) hash ^= Sha256.GetHashCode();
          if (HasSha1) hash ^= Sha1.GetHashCode();
          if (HasMd5) hash ^= Md5.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (HasSha256) {
            output.WriteRawTag(10);
            output.WriteBytes(Sha256);
          }
          if (HasSha1) {
            output.WriteRawTag(18);
            output.WriteBytes(Sha1);
          }
          if (HasMd5) {
            output.WriteRawTag(26);
            output.WriteBytes(Md5);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasSha256) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Sha256);
          }
          if (HasSha1) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Sha1);
          }
          if (HasMd5) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Md5);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Digests other) {
          if (other == null) {
            return;
          }
          if (other.HasSha256) {
            Sha256 = other.Sha256;
          }
          if (other.HasSha1) {
            Sha1 = other.Sha1;
          }
          if (other.HasMd5) {
            Md5 = other.Md5;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Sha256 = input.ReadBytes();
                break;
              }
              case 18: {
                Sha1 = input.ReadBytes();
                break;
              }
              case 26: {
                Md5 = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Resource : pb::IMessage<Resource> {
        private static readonly pb::MessageParser<Resource> _parser = new pb::MessageParser<Resource>(() => new Resource());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Resource> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GooglePlayStore.ClientDownloadRequest.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Resource() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Resource(Resource other) : this() {
          _hasBits0 = other._hasBits0;
          url_ = other.url_;
          type_ = other.type_;
          remoteIp_ = other.remoteIp_;
          referrer_ = other.referrer_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Resource Clone() {
          return new Resource(this);
        }

        /// <summary>Field number for the "url" field.</summary>
        public const int UrlFieldNumber = 1;
        private readonly static string UrlDefaultValue = "";

        private string url_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Url {
          get { return url_ ?? UrlDefaultValue; }
          set {
            url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "url" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasUrl {
          get { return url_ != null; }
        }
        /// <summary>Clears the value of the "url" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearUrl() {
          url_ = null;
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 2;
        private readonly static int TypeDefaultValue = 0;

        private int type_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Type {
          get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
          set {
            _hasBits0 |= 1;
            type_ = value;
          }
        }
        /// <summary>Gets whether the "type" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasType {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "type" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearType() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "remoteIp" field.</summary>
        public const int RemoteIpFieldNumber = 3;
        private readonly static pb::ByteString RemoteIpDefaultValue = pb::ByteString.Empty;

        private pb::ByteString remoteIp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString RemoteIp {
          get { return remoteIp_ ?? RemoteIpDefaultValue; }
          set {
            remoteIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "remoteIp" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasRemoteIp {
          get { return remoteIp_ != null; }
        }
        /// <summary>Clears the value of the "remoteIp" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearRemoteIp() {
          remoteIp_ = null;
        }

        /// <summary>Field number for the "referrer" field.</summary>
        public const int ReferrerFieldNumber = 4;
        private readonly static string ReferrerDefaultValue = "";

        private string referrer_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Referrer {
          get { return referrer_ ?? ReferrerDefaultValue; }
          set {
            referrer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "referrer" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasReferrer {
          get { return referrer_ != null; }
        }
        /// <summary>Clears the value of the "referrer" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearReferrer() {
          referrer_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Resource);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Resource other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Url != other.Url) return false;
          if (Type != other.Type) return false;
          if (RemoteIp != other.RemoteIp) return false;
          if (Referrer != other.Referrer) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasUrl) hash ^= Url.GetHashCode();
          if (HasType) hash ^= Type.GetHashCode();
          if (HasRemoteIp) hash ^= RemoteIp.GetHashCode();
          if (HasReferrer) hash ^= Referrer.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (HasUrl) {
            output.WriteRawTag(10);
            output.WriteString(Url);
          }
          if (HasType) {
            output.WriteRawTag(16);
            output.WriteInt32(Type);
          }
          if (HasRemoteIp) {
            output.WriteRawTag(26);
            output.WriteBytes(RemoteIp);
          }
          if (HasReferrer) {
            output.WriteRawTag(34);
            output.WriteString(Referrer);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasUrl) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
          }
          if (HasType) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
          }
          if (HasRemoteIp) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(RemoteIp);
          }
          if (HasReferrer) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Referrer);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Resource other) {
          if (other == null) {
            return;
          }
          if (other.HasUrl) {
            Url = other.Url;
          }
          if (other.HasType) {
            Type = other.Type;
          }
          if (other.HasRemoteIp) {
            RemoteIp = other.RemoteIp;
          }
          if (other.HasReferrer) {
            Referrer = other.Referrer;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Url = input.ReadString();
                break;
              }
              case 16: {
                Type = input.ReadInt32();
                break;
              }
              case 26: {
                RemoteIp = input.ReadBytes();
                break;
              }
              case 34: {
                Referrer = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class SignatureInfo : pb::IMessage<SignatureInfo> {
        private static readonly pb::MessageParser<SignatureInfo> _parser = new pb::MessageParser<SignatureInfo>(() => new SignatureInfo());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SignatureInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GooglePlayStore.ClientDownloadRequest.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SignatureInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SignatureInfo(SignatureInfo other) : this() {
          _hasBits0 = other._hasBits0;
          certificateChain_ = other.certificateChain_.Clone();
          trusted_ = other.trusted_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SignatureInfo Clone() {
          return new SignatureInfo(this);
        }

        /// <summary>Field number for the "certificateChain" field.</summary>
        public const int CertificateChainFieldNumber = 1;
        private static readonly pb::FieldCodec<global::GooglePlayStore.ClientDownloadRequest.Types.CertificateChain> _repeated_certificateChain_codec
            = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.ClientDownloadRequest.Types.CertificateChain.Parser);
        private readonly pbc::RepeatedField<global::GooglePlayStore.ClientDownloadRequest.Types.CertificateChain> certificateChain_ = new pbc::RepeatedField<global::GooglePlayStore.ClientDownloadRequest.Types.CertificateChain>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::GooglePlayStore.ClientDownloadRequest.Types.CertificateChain> CertificateChain {
          get { return certificateChain_; }
        }

        /// <summary>Field number for the "trusted" field.</summary>
        public const int TrustedFieldNumber = 2;
        private readonly static bool TrustedDefaultValue = false;

        private bool trusted_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Trusted {
          get { if ((_hasBits0 & 1) != 0) { return trusted_; } else { return TrustedDefaultValue; } }
          set {
            _hasBits0 |= 1;
            trusted_ = value;
          }
        }
        /// <summary>Gets whether the "trusted" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasTrusted {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "trusted" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearTrusted() {
          _hasBits0 &= ~1;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SignatureInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SignatureInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!certificateChain_.Equals(other.certificateChain_)) return false;
          if (Trusted != other.Trusted) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= certificateChain_.GetHashCode();
          if (HasTrusted) hash ^= Trusted.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          certificateChain_.WriteTo(output, _repeated_certificateChain_codec);
          if (HasTrusted) {
            output.WriteRawTag(16);
            output.WriteBool(Trusted);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += certificateChain_.CalculateSize(_repeated_certificateChain_codec);
          if (HasTrusted) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SignatureInfo other) {
          if (other == null) {
            return;
          }
          certificateChain_.Add(other.certificateChain_);
          if (other.HasTrusted) {
            Trusted = other.Trusted;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                certificateChain_.AddEntriesFrom(input, _repeated_certificateChain_codec);
                break;
              }
              case 16: {
                Trusted = input.ReadBool();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class ClientDownloadResponse : pb::IMessage<ClientDownloadResponse> {
    private static readonly pb::MessageParser<ClientDownloadResponse> _parser = new pb::MessageParser<ClientDownloadResponse>(() => new ClientDownloadResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientDownloadResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientDownloadResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientDownloadResponse(ClientDownloadResponse other) : this() {
      _hasBits0 = other._hasBits0;
      verdict_ = other.verdict_;
      moreInfo_ = other.moreInfo_ != null ? other.moreInfo_.Clone() : null;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientDownloadResponse Clone() {
      return new ClientDownloadResponse(this);
    }

    /// <summary>Field number for the "verdict" field.</summary>
    public const int VerdictFieldNumber = 1;
    private readonly static int VerdictDefaultValue = 0;

    private int verdict_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Verdict {
      get { if ((_hasBits0 & 1) != 0) { return verdict_; } else { return VerdictDefaultValue; } }
      set {
        _hasBits0 |= 1;
        verdict_ = value;
      }
    }
    /// <summary>Gets whether the "verdict" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVerdict {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "verdict" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVerdict() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "moreInfo" field.</summary>
    public const int MoreInfoFieldNumber = 2;
    private global::GooglePlayStore.ClientDownloadResponse.Types.MoreInfo moreInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ClientDownloadResponse.Types.MoreInfo MoreInfo {
      get { return moreInfo_; }
      set {
        moreInfo_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 3;
    private readonly static pb::ByteString TokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientDownloadResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientDownloadResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Verdict != other.Verdict) return false;
      if (!object.Equals(MoreInfo, other.MoreInfo)) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVerdict) hash ^= Verdict.GetHashCode();
      if (moreInfo_ != null) hash ^= MoreInfo.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasVerdict) {
        output.WriteRawTag(8);
        output.WriteInt32(Verdict);
      }
      if (moreInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MoreInfo);
      }
      if (HasToken) {
        output.WriteRawTag(26);
        output.WriteBytes(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasVerdict) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Verdict);
      }
      if (moreInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoreInfo);
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientDownloadResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasVerdict) {
        Verdict = other.Verdict;
      }
      if (other.moreInfo_ != null) {
        if (moreInfo_ == null) {
          MoreInfo = new global::GooglePlayStore.ClientDownloadResponse.Types.MoreInfo();
        }
        MoreInfo.MergeFrom(other.MoreInfo);
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Verdict = input.ReadInt32();
            break;
          }
          case 18: {
            if (moreInfo_ == null) {
              MoreInfo = new global::GooglePlayStore.ClientDownloadResponse.Types.MoreInfo();
            }
            input.ReadMessage(MoreInfo);
            break;
          }
          case 26: {
            Token = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ClientDownloadResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class MoreInfo : pb::IMessage<MoreInfo> {
        private static readonly pb::MessageParser<MoreInfo> _parser = new pb::MessageParser<MoreInfo>(() => new MoreInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MoreInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GooglePlayStore.ClientDownloadResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MoreInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MoreInfo(MoreInfo other) : this() {
          description_ = other.description_;
          url_ = other.url_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MoreInfo Clone() {
          return new MoreInfo(this);
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 1;
        private readonly static string DescriptionDefaultValue = "";

        private string description_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_ ?? DescriptionDefaultValue; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "description" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasDescription {
          get { return description_ != null; }
        }
        /// <summary>Clears the value of the "description" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearDescription() {
          description_ = null;
        }

        /// <summary>Field number for the "url" field.</summary>
        public const int UrlFieldNumber = 2;
        private readonly static string UrlDefaultValue = "";

        private string url_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Url {
          get { return url_ ?? UrlDefaultValue; }
          set {
            url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "url" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasUrl {
          get { return url_ != null; }
        }
        /// <summary>Clears the value of the "url" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearUrl() {
          url_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MoreInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MoreInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Description != other.Description) return false;
          if (Url != other.Url) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasDescription) hash ^= Description.GetHashCode();
          if (HasUrl) hash ^= Url.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (HasDescription) {
            output.WriteRawTag(10);
            output.WriteString(Description);
          }
          if (HasUrl) {
            output.WriteRawTag(18);
            output.WriteString(Url);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasDescription) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          if (HasUrl) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MoreInfo other) {
          if (other == null) {
            return;
          }
          if (other.HasDescription) {
            Description = other.Description;
          }
          if (other.HasUrl) {
            Url = other.Url;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Description = input.ReadString();
                break;
              }
              case 18: {
                Url = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class ClientDownloadStatsRequest : pb::IMessage<ClientDownloadStatsRequest> {
    private static readonly pb::MessageParser<ClientDownloadStatsRequest> _parser = new pb::MessageParser<ClientDownloadStatsRequest>(() => new ClientDownloadStatsRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientDownloadStatsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientDownloadStatsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientDownloadStatsRequest(ClientDownloadStatsRequest other) : this() {
      _hasBits0 = other._hasBits0;
      userDecision_ = other.userDecision_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientDownloadStatsRequest Clone() {
      return new ClientDownloadStatsRequest(this);
    }

    /// <summary>Field number for the "userDecision" field.</summary>
    public const int UserDecisionFieldNumber = 1;
    private readonly static int UserDecisionDefaultValue = 0;

    private int userDecision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserDecision {
      get { if ((_hasBits0 & 1) != 0) { return userDecision_; } else { return UserDecisionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        userDecision_ = value;
      }
    }
    /// <summary>Gets whether the "userDecision" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserDecision {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "userDecision" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserDecision() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private readonly static pb::ByteString TokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientDownloadStatsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientDownloadStatsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserDecision != other.UserDecision) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUserDecision) hash ^= UserDecision.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasUserDecision) {
        output.WriteRawTag(8);
        output.WriteInt32(UserDecision);
      }
      if (HasToken) {
        output.WriteRawTag(18);
        output.WriteBytes(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUserDecision) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserDecision);
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientDownloadStatsRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasUserDecision) {
        UserDecision = other.UserDecision;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserDecision = input.ReadInt32();
            break;
          }
          case 18: {
            Token = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DebugInfo : pb::IMessage<DebugInfo> {
    private static readonly pb::MessageParser<DebugInfo> _parser = new pb::MessageParser<DebugInfo>(() => new DebugInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DebugInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DebugInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DebugInfo(DebugInfo other) : this() {
      message_ = other.message_.Clone();
      timing_ = other.timing_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DebugInfo Clone() {
      return new DebugInfo(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_message_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> message_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Message {
      get { return message_; }
    }

    /// <summary>Field number for the "timing" field.</summary>
    public const int TimingFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GooglePlayStore.DebugInfo.Types.Timing> _repeated_timing_codec
        = pb::FieldCodec.ForGroup(19, 20, global::GooglePlayStore.DebugInfo.Types.Timing.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.DebugInfo.Types.Timing> timing_ = new pbc::RepeatedField<global::GooglePlayStore.DebugInfo.Types.Timing>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.DebugInfo.Types.Timing> Timing {
      get { return timing_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DebugInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DebugInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!message_.Equals(other.message_)) return false;
      if(!timing_.Equals(other.timing_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= message_.GetHashCode();
      hash ^= timing_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      message_.WriteTo(output, _repeated_message_codec);
      timing_.WriteTo(output, _repeated_timing_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += message_.CalculateSize(_repeated_message_codec);
      size += timing_.CalculateSize(_repeated_timing_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DebugInfo other) {
      if (other == null) {
        return;
      }
      message_.Add(other.message_);
      timing_.Add(other.timing_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            message_.AddEntriesFrom(input, _repeated_message_codec);
            break;
          }
          case 19: {
            timing_.AddEntriesFrom(input, _repeated_timing_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DebugInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Timing : pb::IMessage<Timing> {
        private static readonly pb::MessageParser<Timing> _parser = new pb::MessageParser<Timing>(() => new Timing());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Timing> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GooglePlayStore.DebugInfo.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Timing() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Timing(Timing other) : this() {
          _hasBits0 = other._hasBits0;
          name_ = other.name_;
          timeInMs_ = other.timeInMs_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Timing Clone() {
          return new Timing(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 3;
        private readonly static string NameDefaultValue = "";

        private string name_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_ ?? NameDefaultValue; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasName {
          get { return name_ != null; }
        }
        /// <summary>Clears the value of the "name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearName() {
          name_ = null;
        }

        /// <summary>Field number for the "timeInMs" field.</summary>
        public const int TimeInMsFieldNumber = 4;
        private readonly static double TimeInMsDefaultValue = 0D;

        private double timeInMs_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double TimeInMs {
          get { if ((_hasBits0 & 1) != 0) { return timeInMs_; } else { return TimeInMsDefaultValue; } }
          set {
            _hasBits0 |= 1;
            timeInMs_ = value;
          }
        }
        /// <summary>Gets whether the "timeInMs" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasTimeInMs {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "timeInMs" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearTimeInMs() {
          _hasBits0 &= ~1;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Timing);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Timing other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TimeInMs, other.TimeInMs)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasName) hash ^= Name.GetHashCode();
          if (HasTimeInMs) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TimeInMs);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (HasName) {
            output.WriteRawTag(26);
            output.WriteString(Name);
          }
          if (HasTimeInMs) {
            output.WriteRawTag(33);
            output.WriteDouble(TimeInMs);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (HasTimeInMs) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Timing other) {
          if (other == null) {
            return;
          }
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasTimeInMs) {
            TimeInMs = other.TimeInMs;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              case 20:
                return;
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 26: {
                Name = input.ReadString();
                break;
              }
              case 33: {
                TimeInMs = input.ReadDouble();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class DebugSettingsResponse : pb::IMessage<DebugSettingsResponse> {
    private static readonly pb::MessageParser<DebugSettingsResponse> _parser = new pb::MessageParser<DebugSettingsResponse>(() => new DebugSettingsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DebugSettingsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DebugSettingsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DebugSettingsResponse(DebugSettingsResponse other) : this() {
      playCountryOverride_ = other.playCountryOverride_;
      playCountryDebugInfo_ = other.playCountryDebugInfo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DebugSettingsResponse Clone() {
      return new DebugSettingsResponse(this);
    }

    /// <summary>Field number for the "playCountryOverride" field.</summary>
    public const int PlayCountryOverrideFieldNumber = 1;
    private readonly static string PlayCountryOverrideDefaultValue = "";

    private string playCountryOverride_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayCountryOverride {
      get { return playCountryOverride_ ?? PlayCountryOverrideDefaultValue; }
      set {
        playCountryOverride_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "playCountryOverride" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPlayCountryOverride {
      get { return playCountryOverride_ != null; }
    }
    /// <summary>Clears the value of the "playCountryOverride" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPlayCountryOverride() {
      playCountryOverride_ = null;
    }

    /// <summary>Field number for the "playCountryDebugInfo" field.</summary>
    public const int PlayCountryDebugInfoFieldNumber = 2;
    private readonly static string PlayCountryDebugInfoDefaultValue = "";

    private string playCountryDebugInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayCountryDebugInfo {
      get { return playCountryDebugInfo_ ?? PlayCountryDebugInfoDefaultValue; }
      set {
        playCountryDebugInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "playCountryDebugInfo" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPlayCountryDebugInfo {
      get { return playCountryDebugInfo_ != null; }
    }
    /// <summary>Clears the value of the "playCountryDebugInfo" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPlayCountryDebugInfo() {
      playCountryDebugInfo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DebugSettingsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DebugSettingsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayCountryOverride != other.PlayCountryOverride) return false;
      if (PlayCountryDebugInfo != other.PlayCountryDebugInfo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayCountryOverride) hash ^= PlayCountryOverride.GetHashCode();
      if (HasPlayCountryDebugInfo) hash ^= PlayCountryDebugInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasPlayCountryOverride) {
        output.WriteRawTag(10);
        output.WriteString(PlayCountryOverride);
      }
      if (HasPlayCountryDebugInfo) {
        output.WriteRawTag(18);
        output.WriteString(PlayCountryDebugInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayCountryOverride) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayCountryOverride);
      }
      if (HasPlayCountryDebugInfo) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayCountryDebugInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DebugSettingsResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayCountryOverride) {
        PlayCountryOverride = other.PlayCountryOverride;
      }
      if (other.HasPlayCountryDebugInfo) {
        PlayCountryDebugInfo = other.PlayCountryDebugInfo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayCountryOverride = input.ReadString();
            break;
          }
          case 18: {
            PlayCountryDebugInfo = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeliveryResponse : pb::IMessage<DeliveryResponse> {
    private static readonly pb::MessageParser<DeliveryResponse> _parser = new pb::MessageParser<DeliveryResponse>(() => new DeliveryResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeliveryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeliveryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeliveryResponse(DeliveryResponse other) : this() {
      _hasBits0 = other._hasBits0;
      status_ = other.status_;
      appDeliveryData_ = other.appDeliveryData_ != null ? other.appDeliveryData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeliveryResponse Clone() {
      return new DeliveryResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private readonly static int StatusDefaultValue = 1;

    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { if ((_hasBits0 & 1) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 1;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "appDeliveryData" field.</summary>
    public const int AppDeliveryDataFieldNumber = 2;
    private global::GooglePlayStore.AndroidAppDeliveryData appDeliveryData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AndroidAppDeliveryData AppDeliveryData {
      get { return appDeliveryData_; }
      set {
        appDeliveryData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeliveryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeliveryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (!object.Equals(AppDeliveryData, other.AppDeliveryData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStatus) hash ^= Status.GetHashCode();
      if (appDeliveryData_ != null) hash ^= AppDeliveryData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasStatus) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (appDeliveryData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AppDeliveryData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (appDeliveryData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppDeliveryData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeliveryResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.appDeliveryData_ != null) {
        if (appDeliveryData_ == null) {
          AppDeliveryData = new global::GooglePlayStore.AndroidAppDeliveryData();
        }
        AppDeliveryData.MergeFrom(other.AppDeliveryData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            if (appDeliveryData_ == null) {
              AppDeliveryData = new global::GooglePlayStore.AndroidAppDeliveryData();
            }
            input.ReadMessage(AppDeliveryData);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BulkDetailsEntry : pb::IMessage<BulkDetailsEntry> {
    private static readonly pb::MessageParser<BulkDetailsEntry> _parser = new pb::MessageParser<BulkDetailsEntry>(() => new BulkDetailsEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulkDetailsEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkDetailsEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkDetailsEntry(BulkDetailsEntry other) : this() {
      item_ = other.item_ != null ? other.item_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkDetailsEntry Clone() {
      return new BulkDetailsEntry(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private global::GooglePlayStore.Item item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Item Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulkDetailsEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulkDetailsEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Item, other.Item)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (item_ != null) hash ^= Item.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulkDetailsEntry other) {
      if (other == null) {
        return;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::GooglePlayStore.Item();
        }
        Item.MergeFrom(other.Item);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::GooglePlayStore.Item();
            }
            input.ReadMessage(Item);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BulkDetailsRequest : pb::IMessage<BulkDetailsRequest> {
    private static readonly pb::MessageParser<BulkDetailsRequest> _parser = new pb::MessageParser<BulkDetailsRequest>(() => new BulkDetailsRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulkDetailsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkDetailsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkDetailsRequest(BulkDetailsRequest other) : this() {
      _hasBits0 = other._hasBits0;
      docId_ = other.docId_.Clone();
      includeChildDocs_ = other.includeChildDocs_;
      includeDetails_ = other.includeDetails_;
      sourcePackageName_ = other.sourcePackageName_;
      installedVersionCode_ = other.installedVersionCode_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkDetailsRequest Clone() {
      return new BulkDetailsRequest(this);
    }

    /// <summary>Field number for the "DocId" field.</summary>
    public const int DocIdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_docId_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> docId_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> DocId {
      get { return docId_; }
    }

    /// <summary>Field number for the "includeChildDocs" field.</summary>
    public const int IncludeChildDocsFieldNumber = 2;
    private readonly static bool IncludeChildDocsDefaultValue = true;

    private bool includeChildDocs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeChildDocs {
      get { if ((_hasBits0 & 1) != 0) { return includeChildDocs_; } else { return IncludeChildDocsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        includeChildDocs_ = value;
      }
    }
    /// <summary>Gets whether the "includeChildDocs" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIncludeChildDocs {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "includeChildDocs" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIncludeChildDocs() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "includeDetails" field.</summary>
    public const int IncludeDetailsFieldNumber = 3;
    private readonly static bool IncludeDetailsDefaultValue = false;

    private bool includeDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeDetails {
      get { if ((_hasBits0 & 2) != 0) { return includeDetails_; } else { return IncludeDetailsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        includeDetails_ = value;
      }
    }
    /// <summary>Gets whether the "includeDetails" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIncludeDetails {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "includeDetails" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIncludeDetails() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "sourcePackageName" field.</summary>
    public const int SourcePackageNameFieldNumber = 4;
    private readonly static string SourcePackageNameDefaultValue = "";

    private string sourcePackageName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourcePackageName {
      get { return sourcePackageName_ ?? SourcePackageNameDefaultValue; }
      set {
        sourcePackageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sourcePackageName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSourcePackageName {
      get { return sourcePackageName_ != null; }
    }
    /// <summary>Clears the value of the "sourcePackageName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSourcePackageName() {
      sourcePackageName_ = null;
    }

    /// <summary>Field number for the "installedVersionCode" field.</summary>
    public const int InstalledVersionCodeFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_installedVersionCode_codec
        = pb::FieldCodec.ForInt32(56);
    private readonly pbc::RepeatedField<int> installedVersionCode_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> InstalledVersionCode {
      get { return installedVersionCode_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulkDetailsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulkDetailsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!docId_.Equals(other.docId_)) return false;
      if (IncludeChildDocs != other.IncludeChildDocs) return false;
      if (IncludeDetails != other.IncludeDetails) return false;
      if (SourcePackageName != other.SourcePackageName) return false;
      if(!installedVersionCode_.Equals(other.installedVersionCode_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= docId_.GetHashCode();
      if (HasIncludeChildDocs) hash ^= IncludeChildDocs.GetHashCode();
      if (HasIncludeDetails) hash ^= IncludeDetails.GetHashCode();
      if (HasSourcePackageName) hash ^= SourcePackageName.GetHashCode();
      hash ^= installedVersionCode_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      docId_.WriteTo(output, _repeated_docId_codec);
      if (HasIncludeChildDocs) {
        output.WriteRawTag(16);
        output.WriteBool(IncludeChildDocs);
      }
      if (HasIncludeDetails) {
        output.WriteRawTag(24);
        output.WriteBool(IncludeDetails);
      }
      if (HasSourcePackageName) {
        output.WriteRawTag(34);
        output.WriteString(SourcePackageName);
      }
      installedVersionCode_.WriteTo(output, _repeated_installedVersionCode_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += docId_.CalculateSize(_repeated_docId_codec);
      if (HasIncludeChildDocs) {
        size += 1 + 1;
      }
      if (HasIncludeDetails) {
        size += 1 + 1;
      }
      if (HasSourcePackageName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourcePackageName);
      }
      size += installedVersionCode_.CalculateSize(_repeated_installedVersionCode_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulkDetailsRequest other) {
      if (other == null) {
        return;
      }
      docId_.Add(other.docId_);
      if (other.HasIncludeChildDocs) {
        IncludeChildDocs = other.IncludeChildDocs;
      }
      if (other.HasIncludeDetails) {
        IncludeDetails = other.IncludeDetails;
      }
      if (other.HasSourcePackageName) {
        SourcePackageName = other.SourcePackageName;
      }
      installedVersionCode_.Add(other.installedVersionCode_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            docId_.AddEntriesFrom(input, _repeated_docId_codec);
            break;
          }
          case 16: {
            IncludeChildDocs = input.ReadBool();
            break;
          }
          case 24: {
            IncludeDetails = input.ReadBool();
            break;
          }
          case 34: {
            SourcePackageName = input.ReadString();
            break;
          }
          case 58:
          case 56: {
            installedVersionCode_.AddEntriesFrom(input, _repeated_installedVersionCode_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BulkDetailsResponse : pb::IMessage<BulkDetailsResponse> {
    private static readonly pb::MessageParser<BulkDetailsResponse> _parser = new pb::MessageParser<BulkDetailsResponse>(() => new BulkDetailsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulkDetailsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkDetailsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkDetailsResponse(BulkDetailsResponse other) : this() {
      entry_ = other.entry_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkDetailsResponse Clone() {
      return new BulkDetailsResponse(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GooglePlayStore.BulkDetailsEntry> _repeated_entry_codec
        = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.BulkDetailsEntry.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.BulkDetailsEntry> entry_ = new pbc::RepeatedField<global::GooglePlayStore.BulkDetailsEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.BulkDetailsEntry> Entry {
      get { return entry_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulkDetailsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulkDetailsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entry_.Equals(other.entry_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entry_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entry_.WriteTo(output, _repeated_entry_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entry_.CalculateSize(_repeated_entry_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulkDetailsResponse other) {
      if (other == null) {
        return;
      }
      entry_.Add(other.entry_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entry_.AddEntriesFrom(input, _repeated_entry_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DetailsResponse : pb::IMessage<DetailsResponse> {
    private static readonly pb::MessageParser<DetailsResponse> _parser = new pb::MessageParser<DetailsResponse>(() => new DetailsResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetailsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailsResponse(DetailsResponse other) : this() {
      _hasBits0 = other._hasBits0;
      analyticsCookie_ = other.analyticsCookie_;
      userReview_ = other.userReview_ != null ? other.userReview_.Clone() : null;
      item_ = other.item_ != null ? other.item_.Clone() : null;
      footerHtml_ = other.footerHtml_;
      serverLogsCookie_ = other.serverLogsCookie_;
      discoveryBadge_ = other.discoveryBadge_.Clone();
      enableReviews_ = other.enableReviews_;
      features_ = other.features_ != null ? other.features_.Clone() : null;
      detailsStreamUrl_ = other.detailsStreamUrl_;
      userReviewUrl_ = other.userReviewUrl_;
      postAcquireDetailsStreamUrl_ = other.postAcquireDetailsStreamUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailsResponse Clone() {
      return new DetailsResponse(this);
    }

    /// <summary>Field number for the "analyticsCookie" field.</summary>
    public const int AnalyticsCookieFieldNumber = 2;
    private readonly static string AnalyticsCookieDefaultValue = "";

    private string analyticsCookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AnalyticsCookie {
      get { return analyticsCookie_ ?? AnalyticsCookieDefaultValue; }
      set {
        analyticsCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "analyticsCookie" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAnalyticsCookie {
      get { return analyticsCookie_ != null; }
    }
    /// <summary>Clears the value of the "analyticsCookie" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAnalyticsCookie() {
      analyticsCookie_ = null;
    }

    /// <summary>Field number for the "userReview" field.</summary>
    public const int UserReviewFieldNumber = 3;
    private global::GooglePlayStore.Review userReview_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Review UserReview {
      get { return userReview_; }
      set {
        userReview_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 4;
    private global::GooglePlayStore.Item item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Item Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "footerHtml" field.</summary>
    public const int FooterHtmlFieldNumber = 5;
    private readonly static string FooterHtmlDefaultValue = "";

    private string footerHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FooterHtml {
      get { return footerHtml_ ?? FooterHtmlDefaultValue; }
      set {
        footerHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "footerHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFooterHtml {
      get { return footerHtml_ != null; }
    }
    /// <summary>Clears the value of the "footerHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFooterHtml() {
      footerHtml_ = null;
    }

    /// <summary>Field number for the "serverLogsCookie" field.</summary>
    public const int ServerLogsCookieFieldNumber = 6;
    private readonly static pb::ByteString ServerLogsCookieDefaultValue = pb::ByteString.Empty;

    private pb::ByteString serverLogsCookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ServerLogsCookie {
      get { return serverLogsCookie_ ?? ServerLogsCookieDefaultValue; }
      set {
        serverLogsCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serverLogsCookie" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServerLogsCookie {
      get { return serverLogsCookie_ != null; }
    }
    /// <summary>Clears the value of the "serverLogsCookie" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServerLogsCookie() {
      serverLogsCookie_ = null;
    }

    /// <summary>Field number for the "discoveryBadge" field.</summary>
    public const int DiscoveryBadgeFieldNumber = 7;
    private static readonly pb::FieldCodec<global::GooglePlayStore.DiscoveryBadge> _repeated_discoveryBadge_codec
        = pb::FieldCodec.ForMessage(58, global::GooglePlayStore.DiscoveryBadge.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.DiscoveryBadge> discoveryBadge_ = new pbc::RepeatedField<global::GooglePlayStore.DiscoveryBadge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.DiscoveryBadge> DiscoveryBadge {
      get { return discoveryBadge_; }
    }

    /// <summary>Field number for the "enableReviews" field.</summary>
    public const int EnableReviewsFieldNumber = 8;
    private readonly static bool EnableReviewsDefaultValue = true;

    private bool enableReviews_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableReviews {
      get { if ((_hasBits0 & 1) != 0) { return enableReviews_; } else { return EnableReviewsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        enableReviews_ = value;
      }
    }
    /// <summary>Gets whether the "enableReviews" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEnableReviews {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enableReviews" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEnableReviews() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "features" field.</summary>
    public const int FeaturesFieldNumber = 12;
    private global::GooglePlayStore.Features features_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Features Features {
      get { return features_; }
      set {
        features_ = value;
      }
    }

    /// <summary>Field number for the "detailsStreamUrl" field.</summary>
    public const int DetailsStreamUrlFieldNumber = 13;
    private readonly static string DetailsStreamUrlDefaultValue = "";

    private string detailsStreamUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DetailsStreamUrl {
      get { return detailsStreamUrl_ ?? DetailsStreamUrlDefaultValue; }
      set {
        detailsStreamUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "detailsStreamUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDetailsStreamUrl {
      get { return detailsStreamUrl_ != null; }
    }
    /// <summary>Clears the value of the "detailsStreamUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDetailsStreamUrl() {
      detailsStreamUrl_ = null;
    }

    /// <summary>Field number for the "userReviewUrl" field.</summary>
    public const int UserReviewUrlFieldNumber = 14;
    private readonly static string UserReviewUrlDefaultValue = "";

    private string userReviewUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserReviewUrl {
      get { return userReviewUrl_ ?? UserReviewUrlDefaultValue; }
      set {
        userReviewUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userReviewUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserReviewUrl {
      get { return userReviewUrl_ != null; }
    }
    /// <summary>Clears the value of the "userReviewUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserReviewUrl() {
      userReviewUrl_ = null;
    }

    /// <summary>Field number for the "postAcquireDetailsStreamUrl" field.</summary>
    public const int PostAcquireDetailsStreamUrlFieldNumber = 17;
    private readonly static string PostAcquireDetailsStreamUrlDefaultValue = "";

    private string postAcquireDetailsStreamUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PostAcquireDetailsStreamUrl {
      get { return postAcquireDetailsStreamUrl_ ?? PostAcquireDetailsStreamUrlDefaultValue; }
      set {
        postAcquireDetailsStreamUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "postAcquireDetailsStreamUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPostAcquireDetailsStreamUrl {
      get { return postAcquireDetailsStreamUrl_ != null; }
    }
    /// <summary>Clears the value of the "postAcquireDetailsStreamUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPostAcquireDetailsStreamUrl() {
      postAcquireDetailsStreamUrl_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetailsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetailsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AnalyticsCookie != other.AnalyticsCookie) return false;
      if (!object.Equals(UserReview, other.UserReview)) return false;
      if (!object.Equals(Item, other.Item)) return false;
      if (FooterHtml != other.FooterHtml) return false;
      if (ServerLogsCookie != other.ServerLogsCookie) return false;
      if(!discoveryBadge_.Equals(other.discoveryBadge_)) return false;
      if (EnableReviews != other.EnableReviews) return false;
      if (!object.Equals(Features, other.Features)) return false;
      if (DetailsStreamUrl != other.DetailsStreamUrl) return false;
      if (UserReviewUrl != other.UserReviewUrl) return false;
      if (PostAcquireDetailsStreamUrl != other.PostAcquireDetailsStreamUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAnalyticsCookie) hash ^= AnalyticsCookie.GetHashCode();
      if (userReview_ != null) hash ^= UserReview.GetHashCode();
      if (item_ != null) hash ^= Item.GetHashCode();
      if (HasFooterHtml) hash ^= FooterHtml.GetHashCode();
      if (HasServerLogsCookie) hash ^= ServerLogsCookie.GetHashCode();
      hash ^= discoveryBadge_.GetHashCode();
      if (HasEnableReviews) hash ^= EnableReviews.GetHashCode();
      if (features_ != null) hash ^= Features.GetHashCode();
      if (HasDetailsStreamUrl) hash ^= DetailsStreamUrl.GetHashCode();
      if (HasUserReviewUrl) hash ^= UserReviewUrl.GetHashCode();
      if (HasPostAcquireDetailsStreamUrl) hash ^= PostAcquireDetailsStreamUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAnalyticsCookie) {
        output.WriteRawTag(18);
        output.WriteString(AnalyticsCookie);
      }
      if (userReview_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserReview);
      }
      if (item_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Item);
      }
      if (HasFooterHtml) {
        output.WriteRawTag(42);
        output.WriteString(FooterHtml);
      }
      if (HasServerLogsCookie) {
        output.WriteRawTag(50);
        output.WriteBytes(ServerLogsCookie);
      }
      discoveryBadge_.WriteTo(output, _repeated_discoveryBadge_codec);
      if (HasEnableReviews) {
        output.WriteRawTag(64);
        output.WriteBool(EnableReviews);
      }
      if (features_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Features);
      }
      if (HasDetailsStreamUrl) {
        output.WriteRawTag(106);
        output.WriteString(DetailsStreamUrl);
      }
      if (HasUserReviewUrl) {
        output.WriteRawTag(114);
        output.WriteString(UserReviewUrl);
      }
      if (HasPostAcquireDetailsStreamUrl) {
        output.WriteRawTag(138, 1);
        output.WriteString(PostAcquireDetailsStreamUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAnalyticsCookie) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AnalyticsCookie);
      }
      if (userReview_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserReview);
      }
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (HasFooterHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FooterHtml);
      }
      if (HasServerLogsCookie) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ServerLogsCookie);
      }
      size += discoveryBadge_.CalculateSize(_repeated_discoveryBadge_codec);
      if (HasEnableReviews) {
        size += 1 + 1;
      }
      if (features_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Features);
      }
      if (HasDetailsStreamUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DetailsStreamUrl);
      }
      if (HasUserReviewUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserReviewUrl);
      }
      if (HasPostAcquireDetailsStreamUrl) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PostAcquireDetailsStreamUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetailsResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasAnalyticsCookie) {
        AnalyticsCookie = other.AnalyticsCookie;
      }
      if (other.userReview_ != null) {
        if (userReview_ == null) {
          UserReview = new global::GooglePlayStore.Review();
        }
        UserReview.MergeFrom(other.UserReview);
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::GooglePlayStore.Item();
        }
        Item.MergeFrom(other.Item);
      }
      if (other.HasFooterHtml) {
        FooterHtml = other.FooterHtml;
      }
      if (other.HasServerLogsCookie) {
        ServerLogsCookie = other.ServerLogsCookie;
      }
      discoveryBadge_.Add(other.discoveryBadge_);
      if (other.HasEnableReviews) {
        EnableReviews = other.EnableReviews;
      }
      if (other.features_ != null) {
        if (features_ == null) {
          Features = new global::GooglePlayStore.Features();
        }
        Features.MergeFrom(other.Features);
      }
      if (other.HasDetailsStreamUrl) {
        DetailsStreamUrl = other.DetailsStreamUrl;
      }
      if (other.HasUserReviewUrl) {
        UserReviewUrl = other.UserReviewUrl;
      }
      if (other.HasPostAcquireDetailsStreamUrl) {
        PostAcquireDetailsStreamUrl = other.PostAcquireDetailsStreamUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            AnalyticsCookie = input.ReadString();
            break;
          }
          case 26: {
            if (userReview_ == null) {
              UserReview = new global::GooglePlayStore.Review();
            }
            input.ReadMessage(UserReview);
            break;
          }
          case 34: {
            if (item_ == null) {
              Item = new global::GooglePlayStore.Item();
            }
            input.ReadMessage(Item);
            break;
          }
          case 42: {
            FooterHtml = input.ReadString();
            break;
          }
          case 50: {
            ServerLogsCookie = input.ReadBytes();
            break;
          }
          case 58: {
            discoveryBadge_.AddEntriesFrom(input, _repeated_discoveryBadge_codec);
            break;
          }
          case 64: {
            EnableReviews = input.ReadBool();
            break;
          }
          case 98: {
            if (features_ == null) {
              Features = new global::GooglePlayStore.Features();
            }
            input.ReadMessage(Features);
            break;
          }
          case 106: {
            DetailsStreamUrl = input.ReadString();
            break;
          }
          case 114: {
            UserReviewUrl = input.ReadString();
            break;
          }
          case 138: {
            PostAcquireDetailsStreamUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DiscoveryBadge : pb::IMessage<DiscoveryBadge> {
    private static readonly pb::MessageParser<DiscoveryBadge> _parser = new pb::MessageParser<DiscoveryBadge>(() => new DiscoveryBadge());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DiscoveryBadge> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiscoveryBadge() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiscoveryBadge(DiscoveryBadge other) : this() {
      _hasBits0 = other._hasBits0;
      label_ = other.label_;
      image_ = other.image_ != null ? other.image_.Clone() : null;
      backgroundColor_ = other.backgroundColor_;
      badgeContainer1_ = other.badgeContainer1_ != null ? other.badgeContainer1_.Clone() : null;
      serverLogsCookie_ = other.serverLogsCookie_;
      isPlusOne_ = other.isPlusOne_;
      aggregateRating_ = other.aggregateRating_;
      userStarRating_ = other.userStarRating_;
      downloadCount_ = other.downloadCount_;
      downloadUnits_ = other.downloadUnits_;
      contentDescription_ = other.contentDescription_;
      playerBadge_ = other.playerBadge_ != null ? other.playerBadge_.Clone() : null;
      familyAgeRangeBadge_ = other.familyAgeRangeBadge_;
      familyCategoryBadge_ = other.familyCategoryBadge_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiscoveryBadge Clone() {
      return new DiscoveryBadge(this);
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 1;
    private readonly static string LabelDefaultValue = "";

    private string label_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_ ?? LabelDefaultValue; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "label" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLabel {
      get { return label_ != null; }
    }
    /// <summary>Clears the value of the "label" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLabel() {
      label_ = null;
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 2;
    private global::GooglePlayStore.Image image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Image Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    /// <summary>Field number for the "backgroundColor" field.</summary>
    public const int BackgroundColorFieldNumber = 3;
    private readonly static int BackgroundColorDefaultValue = 0;

    private int backgroundColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BackgroundColor {
      get { if ((_hasBits0 & 1) != 0) { return backgroundColor_; } else { return BackgroundColorDefaultValue; } }
      set {
        _hasBits0 |= 1;
        backgroundColor_ = value;
      }
    }
    /// <summary>Gets whether the "backgroundColor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBackgroundColor {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "backgroundColor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBackgroundColor() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "badgeContainer1" field.</summary>
    public const int BadgeContainer1FieldNumber = 4;
    private global::GooglePlayStore.DiscoveryBadgeLink badgeContainer1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DiscoveryBadgeLink BadgeContainer1 {
      get { return badgeContainer1_; }
      set {
        badgeContainer1_ = value;
      }
    }

    /// <summary>Field number for the "serverLogsCookie" field.</summary>
    public const int ServerLogsCookieFieldNumber = 5;
    private readonly static pb::ByteString ServerLogsCookieDefaultValue = pb::ByteString.Empty;

    private pb::ByteString serverLogsCookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ServerLogsCookie {
      get { return serverLogsCookie_ ?? ServerLogsCookieDefaultValue; }
      set {
        serverLogsCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serverLogsCookie" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServerLogsCookie {
      get { return serverLogsCookie_ != null; }
    }
    /// <summary>Clears the value of the "serverLogsCookie" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServerLogsCookie() {
      serverLogsCookie_ = null;
    }

    /// <summary>Field number for the "isPlusOne" field.</summary>
    public const int IsPlusOneFieldNumber = 6;
    private readonly static bool IsPlusOneDefaultValue = false;

    private bool isPlusOne_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPlusOne {
      get { if ((_hasBits0 & 2) != 0) { return isPlusOne_; } else { return IsPlusOneDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isPlusOne_ = value;
      }
    }
    /// <summary>Gets whether the "isPlusOne" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsPlusOne {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "isPlusOne" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsPlusOne() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "aggregateRating" field.</summary>
    public const int AggregateRatingFieldNumber = 7;
    private readonly static float AggregateRatingDefaultValue = 0F;

    private float aggregateRating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AggregateRating {
      get { if ((_hasBits0 & 4) != 0) { return aggregateRating_; } else { return AggregateRatingDefaultValue; } }
      set {
        _hasBits0 |= 4;
        aggregateRating_ = value;
      }
    }
    /// <summary>Gets whether the "aggregateRating" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAggregateRating {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "aggregateRating" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAggregateRating() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "userStarRating" field.</summary>
    public const int UserStarRatingFieldNumber = 8;
    private readonly static int UserStarRatingDefaultValue = 0;

    private int userStarRating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserStarRating {
      get { if ((_hasBits0 & 8) != 0) { return userStarRating_; } else { return UserStarRatingDefaultValue; } }
      set {
        _hasBits0 |= 8;
        userStarRating_ = value;
      }
    }
    /// <summary>Gets whether the "userStarRating" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserStarRating {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "userStarRating" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserStarRating() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "downloadCount" field.</summary>
    public const int DownloadCountFieldNumber = 9;
    private readonly static string DownloadCountDefaultValue = "";

    private string downloadCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DownloadCount {
      get { return downloadCount_ ?? DownloadCountDefaultValue; }
      set {
        downloadCount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "downloadCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDownloadCount {
      get { return downloadCount_ != null; }
    }
    /// <summary>Clears the value of the "downloadCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDownloadCount() {
      downloadCount_ = null;
    }

    /// <summary>Field number for the "downloadUnits" field.</summary>
    public const int DownloadUnitsFieldNumber = 10;
    private readonly static string DownloadUnitsDefaultValue = "";

    private string downloadUnits_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DownloadUnits {
      get { return downloadUnits_ ?? DownloadUnitsDefaultValue; }
      set {
        downloadUnits_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "downloadUnits" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDownloadUnits {
      get { return downloadUnits_ != null; }
    }
    /// <summary>Clears the value of the "downloadUnits" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDownloadUnits() {
      downloadUnits_ = null;
    }

    /// <summary>Field number for the "contentDescription" field.</summary>
    public const int ContentDescriptionFieldNumber = 11;
    private readonly static string ContentDescriptionDefaultValue = "";

    private string contentDescription_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentDescription {
      get { return contentDescription_ ?? ContentDescriptionDefaultValue; }
      set {
        contentDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "contentDescription" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContentDescription {
      get { return contentDescription_ != null; }
    }
    /// <summary>Clears the value of the "contentDescription" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContentDescription() {
      contentDescription_ = null;
    }

    /// <summary>Field number for the "playerBadge" field.</summary>
    public const int PlayerBadgeFieldNumber = 12;
    private global::GooglePlayStore.PlayerBadge playerBadge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.PlayerBadge PlayerBadge {
      get { return playerBadge_; }
      set {
        playerBadge_ = value;
      }
    }

    /// <summary>Field number for the "familyAgeRangeBadge" field.</summary>
    public const int FamilyAgeRangeBadgeFieldNumber = 13;
    private readonly static pb::ByteString FamilyAgeRangeBadgeDefaultValue = pb::ByteString.Empty;

    private pb::ByteString familyAgeRangeBadge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FamilyAgeRangeBadge {
      get { return familyAgeRangeBadge_ ?? FamilyAgeRangeBadgeDefaultValue; }
      set {
        familyAgeRangeBadge_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "familyAgeRangeBadge" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFamilyAgeRangeBadge {
      get { return familyAgeRangeBadge_ != null; }
    }
    /// <summary>Clears the value of the "familyAgeRangeBadge" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFamilyAgeRangeBadge() {
      familyAgeRangeBadge_ = null;
    }

    /// <summary>Field number for the "familyCategoryBadge" field.</summary>
    public const int FamilyCategoryBadgeFieldNumber = 14;
    private readonly static pb::ByteString FamilyCategoryBadgeDefaultValue = pb::ByteString.Empty;

    private pb::ByteString familyCategoryBadge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FamilyCategoryBadge {
      get { return familyCategoryBadge_ ?? FamilyCategoryBadgeDefaultValue; }
      set {
        familyCategoryBadge_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "familyCategoryBadge" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFamilyCategoryBadge {
      get { return familyCategoryBadge_ != null; }
    }
    /// <summary>Clears the value of the "familyCategoryBadge" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFamilyCategoryBadge() {
      familyCategoryBadge_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DiscoveryBadge);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DiscoveryBadge other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Label != other.Label) return false;
      if (!object.Equals(Image, other.Image)) return false;
      if (BackgroundColor != other.BackgroundColor) return false;
      if (!object.Equals(BadgeContainer1, other.BadgeContainer1)) return false;
      if (ServerLogsCookie != other.ServerLogsCookie) return false;
      if (IsPlusOne != other.IsPlusOne) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AggregateRating, other.AggregateRating)) return false;
      if (UserStarRating != other.UserStarRating) return false;
      if (DownloadCount != other.DownloadCount) return false;
      if (DownloadUnits != other.DownloadUnits) return false;
      if (ContentDescription != other.ContentDescription) return false;
      if (!object.Equals(PlayerBadge, other.PlayerBadge)) return false;
      if (FamilyAgeRangeBadge != other.FamilyAgeRangeBadge) return false;
      if (FamilyCategoryBadge != other.FamilyCategoryBadge) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLabel) hash ^= Label.GetHashCode();
      if (image_ != null) hash ^= Image.GetHashCode();
      if (HasBackgroundColor) hash ^= BackgroundColor.GetHashCode();
      if (badgeContainer1_ != null) hash ^= BadgeContainer1.GetHashCode();
      if (HasServerLogsCookie) hash ^= ServerLogsCookie.GetHashCode();
      if (HasIsPlusOne) hash ^= IsPlusOne.GetHashCode();
      if (HasAggregateRating) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AggregateRating);
      if (HasUserStarRating) hash ^= UserStarRating.GetHashCode();
      if (HasDownloadCount) hash ^= DownloadCount.GetHashCode();
      if (HasDownloadUnits) hash ^= DownloadUnits.GetHashCode();
      if (HasContentDescription) hash ^= ContentDescription.GetHashCode();
      if (playerBadge_ != null) hash ^= PlayerBadge.GetHashCode();
      if (HasFamilyAgeRangeBadge) hash ^= FamilyAgeRangeBadge.GetHashCode();
      if (HasFamilyCategoryBadge) hash ^= FamilyCategoryBadge.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasLabel) {
        output.WriteRawTag(10);
        output.WriteString(Label);
      }
      if (image_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Image);
      }
      if (HasBackgroundColor) {
        output.WriteRawTag(24);
        output.WriteInt32(BackgroundColor);
      }
      if (badgeContainer1_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(BadgeContainer1);
      }
      if (HasServerLogsCookie) {
        output.WriteRawTag(42);
        output.WriteBytes(ServerLogsCookie);
      }
      if (HasIsPlusOne) {
        output.WriteRawTag(48);
        output.WriteBool(IsPlusOne);
      }
      if (HasAggregateRating) {
        output.WriteRawTag(61);
        output.WriteFloat(AggregateRating);
      }
      if (HasUserStarRating) {
        output.WriteRawTag(64);
        output.WriteInt32(UserStarRating);
      }
      if (HasDownloadCount) {
        output.WriteRawTag(74);
        output.WriteString(DownloadCount);
      }
      if (HasDownloadUnits) {
        output.WriteRawTag(82);
        output.WriteString(DownloadUnits);
      }
      if (HasContentDescription) {
        output.WriteRawTag(90);
        output.WriteString(ContentDescription);
      }
      if (playerBadge_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(PlayerBadge);
      }
      if (HasFamilyAgeRangeBadge) {
        output.WriteRawTag(106);
        output.WriteBytes(FamilyAgeRangeBadge);
      }
      if (HasFamilyCategoryBadge) {
        output.WriteRawTag(114);
        output.WriteBytes(FamilyCategoryBadge);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasLabel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (HasBackgroundColor) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BackgroundColor);
      }
      if (badgeContainer1_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BadgeContainer1);
      }
      if (HasServerLogsCookie) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ServerLogsCookie);
      }
      if (HasIsPlusOne) {
        size += 1 + 1;
      }
      if (HasAggregateRating) {
        size += 1 + 4;
      }
      if (HasUserStarRating) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserStarRating);
      }
      if (HasDownloadCount) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DownloadCount);
      }
      if (HasDownloadUnits) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DownloadUnits);
      }
      if (HasContentDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentDescription);
      }
      if (playerBadge_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerBadge);
      }
      if (HasFamilyAgeRangeBadge) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FamilyAgeRangeBadge);
      }
      if (HasFamilyCategoryBadge) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FamilyCategoryBadge);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DiscoveryBadge other) {
      if (other == null) {
        return;
      }
      if (other.HasLabel) {
        Label = other.Label;
      }
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::GooglePlayStore.Image();
        }
        Image.MergeFrom(other.Image);
      }
      if (other.HasBackgroundColor) {
        BackgroundColor = other.BackgroundColor;
      }
      if (other.badgeContainer1_ != null) {
        if (badgeContainer1_ == null) {
          BadgeContainer1 = new global::GooglePlayStore.DiscoveryBadgeLink();
        }
        BadgeContainer1.MergeFrom(other.BadgeContainer1);
      }
      if (other.HasServerLogsCookie) {
        ServerLogsCookie = other.ServerLogsCookie;
      }
      if (other.HasIsPlusOne) {
        IsPlusOne = other.IsPlusOne;
      }
      if (other.HasAggregateRating) {
        AggregateRating = other.AggregateRating;
      }
      if (other.HasUserStarRating) {
        UserStarRating = other.UserStarRating;
      }
      if (other.HasDownloadCount) {
        DownloadCount = other.DownloadCount;
      }
      if (other.HasDownloadUnits) {
        DownloadUnits = other.DownloadUnits;
      }
      if (other.HasContentDescription) {
        ContentDescription = other.ContentDescription;
      }
      if (other.playerBadge_ != null) {
        if (playerBadge_ == null) {
          PlayerBadge = new global::GooglePlayStore.PlayerBadge();
        }
        PlayerBadge.MergeFrom(other.PlayerBadge);
      }
      if (other.HasFamilyAgeRangeBadge) {
        FamilyAgeRangeBadge = other.FamilyAgeRangeBadge;
      }
      if (other.HasFamilyCategoryBadge) {
        FamilyCategoryBadge = other.FamilyCategoryBadge;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Label = input.ReadString();
            break;
          }
          case 18: {
            if (image_ == null) {
              Image = new global::GooglePlayStore.Image();
            }
            input.ReadMessage(Image);
            break;
          }
          case 24: {
            BackgroundColor = input.ReadInt32();
            break;
          }
          case 34: {
            if (badgeContainer1_ == null) {
              BadgeContainer1 = new global::GooglePlayStore.DiscoveryBadgeLink();
            }
            input.ReadMessage(BadgeContainer1);
            break;
          }
          case 42: {
            ServerLogsCookie = input.ReadBytes();
            break;
          }
          case 48: {
            IsPlusOne = input.ReadBool();
            break;
          }
          case 61: {
            AggregateRating = input.ReadFloat();
            break;
          }
          case 64: {
            UserStarRating = input.ReadInt32();
            break;
          }
          case 74: {
            DownloadCount = input.ReadString();
            break;
          }
          case 82: {
            DownloadUnits = input.ReadString();
            break;
          }
          case 90: {
            ContentDescription = input.ReadString();
            break;
          }
          case 98: {
            if (playerBadge_ == null) {
              PlayerBadge = new global::GooglePlayStore.PlayerBadge();
            }
            input.ReadMessage(PlayerBadge);
            break;
          }
          case 106: {
            FamilyAgeRangeBadge = input.ReadBytes();
            break;
          }
          case 114: {
            FamilyCategoryBadge = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerBadge : pb::IMessage<PlayerBadge> {
    private static readonly pb::MessageParser<PlayerBadge> _parser = new pb::MessageParser<PlayerBadge>(() => new PlayerBadge());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerBadge> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerBadge() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerBadge(PlayerBadge other) : this() {
      overlayIcon_ = other.overlayIcon_ != null ? other.overlayIcon_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerBadge Clone() {
      return new PlayerBadge(this);
    }

    /// <summary>Field number for the "overlayIcon" field.</summary>
    public const int OverlayIconFieldNumber = 1;
    private global::GooglePlayStore.Image overlayIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Image OverlayIcon {
      get { return overlayIcon_; }
      set {
        overlayIcon_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerBadge);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerBadge other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OverlayIcon, other.OverlayIcon)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (overlayIcon_ != null) hash ^= OverlayIcon.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (overlayIcon_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OverlayIcon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (overlayIcon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OverlayIcon);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerBadge other) {
      if (other == null) {
        return;
      }
      if (other.overlayIcon_ != null) {
        if (overlayIcon_ == null) {
          OverlayIcon = new global::GooglePlayStore.Image();
        }
        OverlayIcon.MergeFrom(other.OverlayIcon);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (overlayIcon_ == null) {
              OverlayIcon = new global::GooglePlayStore.Image();
            }
            input.ReadMessage(OverlayIcon);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DiscoveryBadgeLink : pb::IMessage<DiscoveryBadgeLink> {
    private static readonly pb::MessageParser<DiscoveryBadgeLink> _parser = new pb::MessageParser<DiscoveryBadgeLink>(() => new DiscoveryBadgeLink());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DiscoveryBadgeLink> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiscoveryBadgeLink() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiscoveryBadgeLink(DiscoveryBadgeLink other) : this() {
      link_ = other.link_ != null ? other.link_.Clone() : null;
      userReviewsUrl_ = other.userReviewsUrl_;
      criticReviewsUrl_ = other.criticReviewsUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiscoveryBadgeLink Clone() {
      return new DiscoveryBadgeLink(this);
    }

    /// <summary>Field number for the "link" field.</summary>
    public const int LinkFieldNumber = 1;
    private global::GooglePlayStore.Link link_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Link Link {
      get { return link_; }
      set {
        link_ = value;
      }
    }

    /// <summary>Field number for the "userReviewsUrl" field.</summary>
    public const int UserReviewsUrlFieldNumber = 2;
    private readonly static string UserReviewsUrlDefaultValue = "";

    private string userReviewsUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserReviewsUrl {
      get { return userReviewsUrl_ ?? UserReviewsUrlDefaultValue; }
      set {
        userReviewsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userReviewsUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserReviewsUrl {
      get { return userReviewsUrl_ != null; }
    }
    /// <summary>Clears the value of the "userReviewsUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserReviewsUrl() {
      userReviewsUrl_ = null;
    }

    /// <summary>Field number for the "criticReviewsUrl" field.</summary>
    public const int CriticReviewsUrlFieldNumber = 3;
    private readonly static string CriticReviewsUrlDefaultValue = "";

    private string criticReviewsUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CriticReviewsUrl {
      get { return criticReviewsUrl_ ?? CriticReviewsUrlDefaultValue; }
      set {
        criticReviewsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "criticReviewsUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCriticReviewsUrl {
      get { return criticReviewsUrl_ != null; }
    }
    /// <summary>Clears the value of the "criticReviewsUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCriticReviewsUrl() {
      criticReviewsUrl_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DiscoveryBadgeLink);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DiscoveryBadgeLink other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Link, other.Link)) return false;
      if (UserReviewsUrl != other.UserReviewsUrl) return false;
      if (CriticReviewsUrl != other.CriticReviewsUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (link_ != null) hash ^= Link.GetHashCode();
      if (HasUserReviewsUrl) hash ^= UserReviewsUrl.GetHashCode();
      if (HasCriticReviewsUrl) hash ^= CriticReviewsUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (link_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Link);
      }
      if (HasUserReviewsUrl) {
        output.WriteRawTag(18);
        output.WriteString(UserReviewsUrl);
      }
      if (HasCriticReviewsUrl) {
        output.WriteRawTag(26);
        output.WriteString(CriticReviewsUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (link_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Link);
      }
      if (HasUserReviewsUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserReviewsUrl);
      }
      if (HasCriticReviewsUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CriticReviewsUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DiscoveryBadgeLink other) {
      if (other == null) {
        return;
      }
      if (other.link_ != null) {
        if (link_ == null) {
          Link = new global::GooglePlayStore.Link();
        }
        Link.MergeFrom(other.Link);
      }
      if (other.HasUserReviewsUrl) {
        UserReviewsUrl = other.UserReviewsUrl;
      }
      if (other.HasCriticReviewsUrl) {
        CriticReviewsUrl = other.CriticReviewsUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (link_ == null) {
              Link = new global::GooglePlayStore.Link();
            }
            input.ReadMessage(Link);
            break;
          }
          case 18: {
            UserReviewsUrl = input.ReadString();
            break;
          }
          case 26: {
            CriticReviewsUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Features : pb::IMessage<Features> {
    private static readonly pb::MessageParser<Features> _parser = new pb::MessageParser<Features>(() => new Features());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Features> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Features() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Features(Features other) : this() {
      featurePresence_ = other.featurePresence_.Clone();
      featureRating_ = other.featureRating_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Features Clone() {
      return new Features(this);
    }

    /// <summary>Field number for the "featurePresence" field.</summary>
    public const int FeaturePresenceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Feature> _repeated_featurePresence_codec
        = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.Feature.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Feature> featurePresence_ = new pbc::RepeatedField<global::GooglePlayStore.Feature>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Feature> FeaturePresence {
      get { return featurePresence_; }
    }

    /// <summary>Field number for the "featureRating" field.</summary>
    public const int FeatureRatingFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Feature> _repeated_featureRating_codec
        = pb::FieldCodec.ForMessage(18, global::GooglePlayStore.Feature.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Feature> featureRating_ = new pbc::RepeatedField<global::GooglePlayStore.Feature>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Feature> FeatureRating {
      get { return featureRating_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Features);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Features other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!featurePresence_.Equals(other.featurePresence_)) return false;
      if(!featureRating_.Equals(other.featureRating_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= featurePresence_.GetHashCode();
      hash ^= featureRating_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      featurePresence_.WriteTo(output, _repeated_featurePresence_codec);
      featureRating_.WriteTo(output, _repeated_featureRating_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += featurePresence_.CalculateSize(_repeated_featurePresence_codec);
      size += featureRating_.CalculateSize(_repeated_featureRating_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Features other) {
      if (other == null) {
        return;
      }
      featurePresence_.Add(other.featurePresence_);
      featureRating_.Add(other.featureRating_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            featurePresence_.AddEntriesFrom(input, _repeated_featurePresence_codec);
            break;
          }
          case 18: {
            featureRating_.AddEntriesFrom(input, _repeated_featureRating_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Feature : pb::IMessage<Feature> {
    private static readonly pb::MessageParser<Feature> _parser = new pb::MessageParser<Feature>(() => new Feature());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Feature> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Feature() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Feature(Feature other) : this() {
      label_ = other.label_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Feature Clone() {
      return new Feature(this);
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 1;
    private readonly static string LabelDefaultValue = "";

    private string label_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_ ?? LabelDefaultValue; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "label" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLabel {
      get { return label_ != null; }
    }
    /// <summary>Clears the value of the "label" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLabel() {
      label_ = null;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private readonly static string ValueDefaultValue = "";

    private string value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_ ?? ValueDefaultValue; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasValue {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Feature);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Feature other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Label != other.Label) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLabel) hash ^= Label.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasLabel) {
        output.WriteRawTag(10);
        output.WriteString(Label);
      }
      if (HasValue) {
        output.WriteRawTag(26);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasLabel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Feature other) {
      if (other == null) {
        return;
      }
      if (other.HasLabel) {
        Label = other.Label;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Label = input.ReadString();
            break;
          }
          case 26: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeviceConfigurationProto : pb::IMessage<DeviceConfigurationProto> {
    private static readonly pb::MessageParser<DeviceConfigurationProto> _parser = new pb::MessageParser<DeviceConfigurationProto>(() => new DeviceConfigurationProto());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceConfigurationProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[96]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceConfigurationProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceConfigurationProto(DeviceConfigurationProto other) : this() {
      _hasBits0 = other._hasBits0;
      touchScreen_ = other.touchScreen_;
      keyboard_ = other.keyboard_;
      navigation_ = other.navigation_;
      screenLayout_ = other.screenLayout_;
      hasHardKeyboard_ = other.hasHardKeyboard_;
      hasFiveWayNavigation_ = other.hasFiveWayNavigation_;
      screenDensity_ = other.screenDensity_;
      glEsVersion_ = other.glEsVersion_;
      systemSharedLibrary_ = other.systemSharedLibrary_.Clone();
      systemAvailableFeature_ = other.systemAvailableFeature_.Clone();
      nativePlatform_ = other.nativePlatform_.Clone();
      screenWidth_ = other.screenWidth_;
      screenHeight_ = other.screenHeight_;
      systemSupportedLocale_ = other.systemSupportedLocale_.Clone();
      glExtension_ = other.glExtension_.Clone();
      deviceClass_ = other.deviceClass_;
      maxApkDownloadSizeMb_ = other.maxApkDownloadSizeMb_;
      smallestScreenWidthDP_ = other.smallestScreenWidthDP_;
      lowRamDevice_ = other.lowRamDevice_;
      totalMemoryBytes_ = other.totalMemoryBytes_;
      maxNumOfCPUCores_ = other.maxNumOfCPUCores_;
      deviceFeature_ = other.deviceFeature_.Clone();
      unknown28_ = other.unknown28_;
      unknown30_ = other.unknown30_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceConfigurationProto Clone() {
      return new DeviceConfigurationProto(this);
    }

    /// <summary>Field number for the "touchScreen" field.</summary>
    public const int TouchScreenFieldNumber = 1;
    private readonly static int TouchScreenDefaultValue = 0;

    private int touchScreen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TouchScreen {
      get { if ((_hasBits0 & 1) != 0) { return touchScreen_; } else { return TouchScreenDefaultValue; } }
      set {
        _hasBits0 |= 1;
        touchScreen_ = value;
      }
    }
    /// <summary>Gets whether the "touchScreen" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTouchScreen {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "touchScreen" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTouchScreen() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "keyboard" field.</summary>
    public const int KeyboardFieldNumber = 2;
    private readonly static int KeyboardDefaultValue = 0;

    private int keyboard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Keyboard {
      get { if ((_hasBits0 & 2) != 0) { return keyboard_; } else { return KeyboardDefaultValue; } }
      set {
        _hasBits0 |= 2;
        keyboard_ = value;
      }
    }
    /// <summary>Gets whether the "keyboard" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasKeyboard {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "keyboard" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearKeyboard() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "navigation" field.</summary>
    public const int NavigationFieldNumber = 3;
    private readonly static int NavigationDefaultValue = 0;

    private int navigation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Navigation {
      get { if ((_hasBits0 & 4) != 0) { return navigation_; } else { return NavigationDefaultValue; } }
      set {
        _hasBits0 |= 4;
        navigation_ = value;
      }
    }
    /// <summary>Gets whether the "navigation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNavigation {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "navigation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNavigation() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "screenLayout" field.</summary>
    public const int ScreenLayoutFieldNumber = 4;
    private readonly static int ScreenLayoutDefaultValue = 0;

    private int screenLayout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ScreenLayout {
      get { if ((_hasBits0 & 8) != 0) { return screenLayout_; } else { return ScreenLayoutDefaultValue; } }
      set {
        _hasBits0 |= 8;
        screenLayout_ = value;
      }
    }
    /// <summary>Gets whether the "screenLayout" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasScreenLayout {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "screenLayout" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearScreenLayout() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "hasHardKeyboard" field.</summary>
    public const int HasHardKeyboardFieldNumber = 5;
    private readonly static bool HasHardKeyboardDefaultValue = false;

    private bool hasHardKeyboard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHardKeyboard {
      get { if ((_hasBits0 & 16) != 0) { return hasHardKeyboard_; } else { return HasHardKeyboardDefaultValue; } }
      set {
        _hasBits0 |= 16;
        hasHardKeyboard_ = value;
      }
    }
    /// <summary>Gets whether the "hasHardKeyboard" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHasHardKeyboard {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "hasHardKeyboard" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHasHardKeyboard() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "hasFiveWayNavigation" field.</summary>
    public const int HasFiveWayNavigationFieldNumber = 6;
    private readonly static bool HasFiveWayNavigationDefaultValue = false;

    private bool hasFiveWayNavigation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFiveWayNavigation {
      get { if ((_hasBits0 & 32) != 0) { return hasFiveWayNavigation_; } else { return HasFiveWayNavigationDefaultValue; } }
      set {
        _hasBits0 |= 32;
        hasFiveWayNavigation_ = value;
      }
    }
    /// <summary>Gets whether the "hasFiveWayNavigation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHasFiveWayNavigation {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "hasFiveWayNavigation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHasFiveWayNavigation() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "screenDensity" field.</summary>
    public const int ScreenDensityFieldNumber = 7;
    private readonly static int ScreenDensityDefaultValue = 0;

    private int screenDensity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ScreenDensity {
      get { if ((_hasBits0 & 64) != 0) { return screenDensity_; } else { return ScreenDensityDefaultValue; } }
      set {
        _hasBits0 |= 64;
        screenDensity_ = value;
      }
    }
    /// <summary>Gets whether the "screenDensity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasScreenDensity {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "screenDensity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearScreenDensity() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "glEsVersion" field.</summary>
    public const int GlEsVersionFieldNumber = 8;
    private readonly static int GlEsVersionDefaultValue = 0;

    private int glEsVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GlEsVersion {
      get { if ((_hasBits0 & 128) != 0) { return glEsVersion_; } else { return GlEsVersionDefaultValue; } }
      set {
        _hasBits0 |= 128;
        glEsVersion_ = value;
      }
    }
    /// <summary>Gets whether the "glEsVersion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGlEsVersion {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "glEsVersion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGlEsVersion() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "systemSharedLibrary" field.</summary>
    public const int SystemSharedLibraryFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_systemSharedLibrary_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> systemSharedLibrary_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SystemSharedLibrary {
      get { return systemSharedLibrary_; }
    }

    /// <summary>Field number for the "systemAvailableFeature" field.</summary>
    public const int SystemAvailableFeatureFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_systemAvailableFeature_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> systemAvailableFeature_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SystemAvailableFeature {
      get { return systemAvailableFeature_; }
    }

    /// <summary>Field number for the "nativePlatform" field.</summary>
    public const int NativePlatformFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _repeated_nativePlatform_codec
        = pb::FieldCodec.ForString(90);
    private readonly pbc::RepeatedField<string> nativePlatform_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> NativePlatform {
      get { return nativePlatform_; }
    }

    /// <summary>Field number for the "screenWidth" field.</summary>
    public const int ScreenWidthFieldNumber = 12;
    private readonly static int ScreenWidthDefaultValue = 0;

    private int screenWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ScreenWidth {
      get { if ((_hasBits0 & 256) != 0) { return screenWidth_; } else { return ScreenWidthDefaultValue; } }
      set {
        _hasBits0 |= 256;
        screenWidth_ = value;
      }
    }
    /// <summary>Gets whether the "screenWidth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasScreenWidth {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "screenWidth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearScreenWidth() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "screenHeight" field.</summary>
    public const int ScreenHeightFieldNumber = 13;
    private readonly static int ScreenHeightDefaultValue = 0;

    private int screenHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ScreenHeight {
      get { if ((_hasBits0 & 512) != 0) { return screenHeight_; } else { return ScreenHeightDefaultValue; } }
      set {
        _hasBits0 |= 512;
        screenHeight_ = value;
      }
    }
    /// <summary>Gets whether the "screenHeight" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasScreenHeight {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "screenHeight" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearScreenHeight() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "systemSupportedLocale" field.</summary>
    public const int SystemSupportedLocaleFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _repeated_systemSupportedLocale_codec
        = pb::FieldCodec.ForString(114);
    private readonly pbc::RepeatedField<string> systemSupportedLocale_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SystemSupportedLocale {
      get { return systemSupportedLocale_; }
    }

    /// <summary>Field number for the "glExtension" field.</summary>
    public const int GlExtensionFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _repeated_glExtension_codec
        = pb::FieldCodec.ForString(122);
    private readonly pbc::RepeatedField<string> glExtension_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> GlExtension {
      get { return glExtension_; }
    }

    /// <summary>Field number for the "deviceClass" field.</summary>
    public const int DeviceClassFieldNumber = 16;
    private readonly static int DeviceClassDefaultValue = 0;

    private int deviceClass_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeviceClass {
      get { if ((_hasBits0 & 1024) != 0) { return deviceClass_; } else { return DeviceClassDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        deviceClass_ = value;
      }
    }
    /// <summary>Gets whether the "deviceClass" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeviceClass {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "deviceClass" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeviceClass() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "maxApkDownloadSizeMb" field.</summary>
    public const int MaxApkDownloadSizeMbFieldNumber = 17;
    private readonly static int MaxApkDownloadSizeMbDefaultValue = 50;

    private int maxApkDownloadSizeMb_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxApkDownloadSizeMb {
      get { if ((_hasBits0 & 2048) != 0) { return maxApkDownloadSizeMb_; } else { return MaxApkDownloadSizeMbDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        maxApkDownloadSizeMb_ = value;
      }
    }
    /// <summary>Gets whether the "maxApkDownloadSizeMb" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMaxApkDownloadSizeMb {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "maxApkDownloadSizeMb" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMaxApkDownloadSizeMb() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "smallestScreenWidthDP" field.</summary>
    public const int SmallestScreenWidthDPFieldNumber = 18;
    private readonly static int SmallestScreenWidthDPDefaultValue = 0;

    private int smallestScreenWidthDP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SmallestScreenWidthDP {
      get { if ((_hasBits0 & 4096) != 0) { return smallestScreenWidthDP_; } else { return SmallestScreenWidthDPDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        smallestScreenWidthDP_ = value;
      }
    }
    /// <summary>Gets whether the "smallestScreenWidthDP" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSmallestScreenWidthDP {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "smallestScreenWidthDP" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSmallestScreenWidthDP() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "lowRamDevice" field.</summary>
    public const int LowRamDeviceFieldNumber = 19;
    private readonly static int LowRamDeviceDefaultValue = 0;

    private int lowRamDevice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LowRamDevice {
      get { if ((_hasBits0 & 8192) != 0) { return lowRamDevice_; } else { return LowRamDeviceDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        lowRamDevice_ = value;
      }
    }
    /// <summary>Gets whether the "lowRamDevice" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLowRamDevice {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "lowRamDevice" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLowRamDevice() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "totalMemoryBytes" field.</summary>
    public const int TotalMemoryBytesFieldNumber = 20;
    private readonly static long TotalMemoryBytesDefaultValue = 8354971648L;

    private long totalMemoryBytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalMemoryBytes {
      get { if ((_hasBits0 & 16384) != 0) { return totalMemoryBytes_; } else { return TotalMemoryBytesDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        totalMemoryBytes_ = value;
      }
    }
    /// <summary>Gets whether the "totalMemoryBytes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTotalMemoryBytes {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "totalMemoryBytes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTotalMemoryBytes() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "maxNumOf_CPUCores" field.</summary>
    public const int MaxNumOfCPUCoresFieldNumber = 21;
    private readonly static int MaxNumOfCPUCoresDefaultValue = 8;

    private int maxNumOfCPUCores_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxNumOfCPUCores {
      get { if ((_hasBits0 & 32768) != 0) { return maxNumOfCPUCores_; } else { return MaxNumOfCPUCoresDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        maxNumOfCPUCores_ = value;
      }
    }
    /// <summary>Gets whether the "maxNumOf_CPUCores" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMaxNumOfCPUCores {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "maxNumOf_CPUCores" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMaxNumOfCPUCores() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "deviceFeature" field.</summary>
    public const int DeviceFeatureFieldNumber = 26;
    private static readonly pb::FieldCodec<global::GooglePlayStore.DeviceFeature> _repeated_deviceFeature_codec
        = pb::FieldCodec.ForMessage(210, global::GooglePlayStore.DeviceFeature.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.DeviceFeature> deviceFeature_ = new pbc::RepeatedField<global::GooglePlayStore.DeviceFeature>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.DeviceFeature> DeviceFeature {
      get { return deviceFeature_; }
    }

    /// <summary>Field number for the "unknown28" field.</summary>
    public const int Unknown28FieldNumber = 28;
    private readonly static int Unknown28DefaultValue = 0;

    private int unknown28_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Unknown28 {
      get { if ((_hasBits0 & 65536) != 0) { return unknown28_; } else { return Unknown28DefaultValue; } }
      set {
        _hasBits0 |= 65536;
        unknown28_ = value;
      }
    }
    /// <summary>Gets whether the "unknown28" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUnknown28 {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "unknown28" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUnknown28() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "unknown30" field.</summary>
    public const int Unknown30FieldNumber = 30;
    private readonly static int Unknown30DefaultValue = 4;

    private int unknown30_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Unknown30 {
      get { if ((_hasBits0 & 131072) != 0) { return unknown30_; } else { return Unknown30DefaultValue; } }
      set {
        _hasBits0 |= 131072;
        unknown30_ = value;
      }
    }
    /// <summary>Gets whether the "unknown30" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUnknown30 {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "unknown30" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUnknown30() {
      _hasBits0 &= ~131072;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceConfigurationProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceConfigurationProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TouchScreen != other.TouchScreen) return false;
      if (Keyboard != other.Keyboard) return false;
      if (Navigation != other.Navigation) return false;
      if (ScreenLayout != other.ScreenLayout) return false;
      if (HasHardKeyboard != other.HasHardKeyboard) return false;
      if (HasFiveWayNavigation != other.HasFiveWayNavigation) return false;
      if (ScreenDensity != other.ScreenDensity) return false;
      if (GlEsVersion != other.GlEsVersion) return false;
      if(!systemSharedLibrary_.Equals(other.systemSharedLibrary_)) return false;
      if(!systemAvailableFeature_.Equals(other.systemAvailableFeature_)) return false;
      if(!nativePlatform_.Equals(other.nativePlatform_)) return false;
      if (ScreenWidth != other.ScreenWidth) return false;
      if (ScreenHeight != other.ScreenHeight) return false;
      if(!systemSupportedLocale_.Equals(other.systemSupportedLocale_)) return false;
      if(!glExtension_.Equals(other.glExtension_)) return false;
      if (DeviceClass != other.DeviceClass) return false;
      if (MaxApkDownloadSizeMb != other.MaxApkDownloadSizeMb) return false;
      if (SmallestScreenWidthDP != other.SmallestScreenWidthDP) return false;
      if (LowRamDevice != other.LowRamDevice) return false;
      if (TotalMemoryBytes != other.TotalMemoryBytes) return false;
      if (MaxNumOfCPUCores != other.MaxNumOfCPUCores) return false;
      if(!deviceFeature_.Equals(other.deviceFeature_)) return false;
      if (Unknown28 != other.Unknown28) return false;
      if (Unknown30 != other.Unknown30) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTouchScreen) hash ^= TouchScreen.GetHashCode();
      if (HasKeyboard) hash ^= Keyboard.GetHashCode();
      if (HasNavigation) hash ^= Navigation.GetHashCode();
      if (HasScreenLayout) hash ^= ScreenLayout.GetHashCode();
      if (HasHasHardKeyboard) hash ^= HasHardKeyboard.GetHashCode();
      if (HasHasFiveWayNavigation) hash ^= HasFiveWayNavigation.GetHashCode();
      if (HasScreenDensity) hash ^= ScreenDensity.GetHashCode();
      if (HasGlEsVersion) hash ^= GlEsVersion.GetHashCode();
      hash ^= systemSharedLibrary_.GetHashCode();
      hash ^= systemAvailableFeature_.GetHashCode();
      hash ^= nativePlatform_.GetHashCode();
      if (HasScreenWidth) hash ^= ScreenWidth.GetHashCode();
      if (HasScreenHeight) hash ^= ScreenHeight.GetHashCode();
      hash ^= systemSupportedLocale_.GetHashCode();
      hash ^= glExtension_.GetHashCode();
      if (HasDeviceClass) hash ^= DeviceClass.GetHashCode();
      if (HasMaxApkDownloadSizeMb) hash ^= MaxApkDownloadSizeMb.GetHashCode();
      if (HasSmallestScreenWidthDP) hash ^= SmallestScreenWidthDP.GetHashCode();
      if (HasLowRamDevice) hash ^= LowRamDevice.GetHashCode();
      if (HasTotalMemoryBytes) hash ^= TotalMemoryBytes.GetHashCode();
      if (HasMaxNumOfCPUCores) hash ^= MaxNumOfCPUCores.GetHashCode();
      hash ^= deviceFeature_.GetHashCode();
      if (HasUnknown28) hash ^= Unknown28.GetHashCode();
      if (HasUnknown30) hash ^= Unknown30.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTouchScreen) {
        output.WriteRawTag(8);
        output.WriteInt32(TouchScreen);
      }
      if (HasKeyboard) {
        output.WriteRawTag(16);
        output.WriteInt32(Keyboard);
      }
      if (HasNavigation) {
        output.WriteRawTag(24);
        output.WriteInt32(Navigation);
      }
      if (HasScreenLayout) {
        output.WriteRawTag(32);
        output.WriteInt32(ScreenLayout);
      }
      if (HasHasHardKeyboard) {
        output.WriteRawTag(40);
        output.WriteBool(HasHardKeyboard);
      }
      if (HasHasFiveWayNavigation) {
        output.WriteRawTag(48);
        output.WriteBool(HasFiveWayNavigation);
      }
      if (HasScreenDensity) {
        output.WriteRawTag(56);
        output.WriteInt32(ScreenDensity);
      }
      if (HasGlEsVersion) {
        output.WriteRawTag(64);
        output.WriteInt32(GlEsVersion);
      }
      systemSharedLibrary_.WriteTo(output, _repeated_systemSharedLibrary_codec);
      systemAvailableFeature_.WriteTo(output, _repeated_systemAvailableFeature_codec);
      nativePlatform_.WriteTo(output, _repeated_nativePlatform_codec);
      if (HasScreenWidth) {
        output.WriteRawTag(96);
        output.WriteInt32(ScreenWidth);
      }
      if (HasScreenHeight) {
        output.WriteRawTag(104);
        output.WriteInt32(ScreenHeight);
      }
      systemSupportedLocale_.WriteTo(output, _repeated_systemSupportedLocale_codec);
      glExtension_.WriteTo(output, _repeated_glExtension_codec);
      if (HasDeviceClass) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(DeviceClass);
      }
      if (HasMaxApkDownloadSizeMb) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(MaxApkDownloadSizeMb);
      }
      if (HasSmallestScreenWidthDP) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(SmallestScreenWidthDP);
      }
      if (HasLowRamDevice) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(LowRamDevice);
      }
      if (HasTotalMemoryBytes) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(TotalMemoryBytes);
      }
      if (HasMaxNumOfCPUCores) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(MaxNumOfCPUCores);
      }
      deviceFeature_.WriteTo(output, _repeated_deviceFeature_codec);
      if (HasUnknown28) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(Unknown28);
      }
      if (HasUnknown30) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(Unknown30);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTouchScreen) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TouchScreen);
      }
      if (HasKeyboard) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Keyboard);
      }
      if (HasNavigation) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Navigation);
      }
      if (HasScreenLayout) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScreenLayout);
      }
      if (HasHasHardKeyboard) {
        size += 1 + 1;
      }
      if (HasHasFiveWayNavigation) {
        size += 1 + 1;
      }
      if (HasScreenDensity) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScreenDensity);
      }
      if (HasGlEsVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GlEsVersion);
      }
      size += systemSharedLibrary_.CalculateSize(_repeated_systemSharedLibrary_codec);
      size += systemAvailableFeature_.CalculateSize(_repeated_systemAvailableFeature_codec);
      size += nativePlatform_.CalculateSize(_repeated_nativePlatform_codec);
      if (HasScreenWidth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScreenWidth);
      }
      if (HasScreenHeight) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScreenHeight);
      }
      size += systemSupportedLocale_.CalculateSize(_repeated_systemSupportedLocale_codec);
      size += glExtension_.CalculateSize(_repeated_glExtension_codec);
      if (HasDeviceClass) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DeviceClass);
      }
      if (HasMaxApkDownloadSizeMb) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxApkDownloadSizeMb);
      }
      if (HasSmallestScreenWidthDP) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SmallestScreenWidthDP);
      }
      if (HasLowRamDevice) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LowRamDevice);
      }
      if (HasTotalMemoryBytes) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(TotalMemoryBytes);
      }
      if (HasMaxNumOfCPUCores) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxNumOfCPUCores);
      }
      size += deviceFeature_.CalculateSize(_repeated_deviceFeature_codec);
      if (HasUnknown28) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Unknown28);
      }
      if (HasUnknown30) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Unknown30);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceConfigurationProto other) {
      if (other == null) {
        return;
      }
      if (other.HasTouchScreen) {
        TouchScreen = other.TouchScreen;
      }
      if (other.HasKeyboard) {
        Keyboard = other.Keyboard;
      }
      if (other.HasNavigation) {
        Navigation = other.Navigation;
      }
      if (other.HasScreenLayout) {
        ScreenLayout = other.ScreenLayout;
      }
      if (other.HasHasHardKeyboard) {
        HasHardKeyboard = other.HasHardKeyboard;
      }
      if (other.HasHasFiveWayNavigation) {
        HasFiveWayNavigation = other.HasFiveWayNavigation;
      }
      if (other.HasScreenDensity) {
        ScreenDensity = other.ScreenDensity;
      }
      if (other.HasGlEsVersion) {
        GlEsVersion = other.GlEsVersion;
      }
      systemSharedLibrary_.Add(other.systemSharedLibrary_);
      systemAvailableFeature_.Add(other.systemAvailableFeature_);
      nativePlatform_.Add(other.nativePlatform_);
      if (other.HasScreenWidth) {
        ScreenWidth = other.ScreenWidth;
      }
      if (other.HasScreenHeight) {
        ScreenHeight = other.ScreenHeight;
      }
      systemSupportedLocale_.Add(other.systemSupportedLocale_);
      glExtension_.Add(other.glExtension_);
      if (other.HasDeviceClass) {
        DeviceClass = other.DeviceClass;
      }
      if (other.HasMaxApkDownloadSizeMb) {
        MaxApkDownloadSizeMb = other.MaxApkDownloadSizeMb;
      }
      if (other.HasSmallestScreenWidthDP) {
        SmallestScreenWidthDP = other.SmallestScreenWidthDP;
      }
      if (other.HasLowRamDevice) {
        LowRamDevice = other.LowRamDevice;
      }
      if (other.HasTotalMemoryBytes) {
        TotalMemoryBytes = other.TotalMemoryBytes;
      }
      if (other.HasMaxNumOfCPUCores) {
        MaxNumOfCPUCores = other.MaxNumOfCPUCores;
      }
      deviceFeature_.Add(other.deviceFeature_);
      if (other.HasUnknown28) {
        Unknown28 = other.Unknown28;
      }
      if (other.HasUnknown30) {
        Unknown30 = other.Unknown30;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TouchScreen = input.ReadInt32();
            break;
          }
          case 16: {
            Keyboard = input.ReadInt32();
            break;
          }
          case 24: {
            Navigation = input.ReadInt32();
            break;
          }
          case 32: {
            ScreenLayout = input.ReadInt32();
            break;
          }
          case 40: {
            HasHardKeyboard = input.ReadBool();
            break;
          }
          case 48: {
            HasFiveWayNavigation = input.ReadBool();
            break;
          }
          case 56: {
            ScreenDensity = input.ReadInt32();
            break;
          }
          case 64: {
            GlEsVersion = input.ReadInt32();
            break;
          }
          case 74: {
            systemSharedLibrary_.AddEntriesFrom(input, _repeated_systemSharedLibrary_codec);
            break;
          }
          case 82: {
            systemAvailableFeature_.AddEntriesFrom(input, _repeated_systemAvailableFeature_codec);
            break;
          }
          case 90: {
            nativePlatform_.AddEntriesFrom(input, _repeated_nativePlatform_codec);
            break;
          }
          case 96: {
            ScreenWidth = input.ReadInt32();
            break;
          }
          case 104: {
            ScreenHeight = input.ReadInt32();
            break;
          }
          case 114: {
            systemSupportedLocale_.AddEntriesFrom(input, _repeated_systemSupportedLocale_codec);
            break;
          }
          case 122: {
            glExtension_.AddEntriesFrom(input, _repeated_glExtension_codec);
            break;
          }
          case 128: {
            DeviceClass = input.ReadInt32();
            break;
          }
          case 136: {
            MaxApkDownloadSizeMb = input.ReadInt32();
            break;
          }
          case 144: {
            SmallestScreenWidthDP = input.ReadInt32();
            break;
          }
          case 152: {
            LowRamDevice = input.ReadInt32();
            break;
          }
          case 160: {
            TotalMemoryBytes = input.ReadInt64();
            break;
          }
          case 168: {
            MaxNumOfCPUCores = input.ReadInt32();
            break;
          }
          case 210: {
            deviceFeature_.AddEntriesFrom(input, _repeated_deviceFeature_codec);
            break;
          }
          case 224: {
            Unknown28 = input.ReadInt32();
            break;
          }
          case 240: {
            Unknown30 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeviceFeature : pb::IMessage<DeviceFeature> {
    private static readonly pb::MessageParser<DeviceFeature> _parser = new pb::MessageParser<DeviceFeature>(() => new DeviceFeature());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceFeature> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[97]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceFeature() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceFeature(DeviceFeature other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceFeature Clone() {
      return new DeviceFeature(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private readonly static int ValueDefaultValue = 0;

    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { if ((_hasBits0 & 1) != 0) { return value_; } else { return ValueDefaultValue; } }
      set {
        _hasBits0 |= 1;
        value_ = value;
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasValue {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceFeature);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceFeature other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasValue) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceFeature other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Document : pb::IMessage<Document> {
    private static readonly pb::MessageParser<Document> _parser = new pb::MessageParser<Document>(() => new Document());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Document> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[98]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Document() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Document(Document other) : this() {
      _hasBits0 = other._hasBits0;
      docId_ = other.docId_ != null ? other.docId_.Clone() : null;
      fetchDocId_ = other.fetchDocId_ != null ? other.fetchDocId_.Clone() : null;
      sampleDocId_ = other.sampleDocId_ != null ? other.sampleDocId_.Clone() : null;
      title_ = other.title_;
      url_ = other.url_;
      snippet_ = other.snippet_.Clone();
      priceDeprecated_ = other.priceDeprecated_ != null ? other.priceDeprecated_.Clone() : null;
      availability_ = other.availability_ != null ? other.availability_.Clone() : null;
      image_ = other.image_.Clone();
      child_ = other.child_.Clone();
      aggregateRating_ = other.aggregateRating_ != null ? other.aggregateRating_.Clone() : null;
      offer_ = other.offer_.Clone();
      translatedSnippet_ = other.translatedSnippet_.Clone();
      documentVariant_ = other.documentVariant_.Clone();
      categoryId_ = other.categoryId_.Clone();
      decoration_ = other.decoration_.Clone();
      parent_ = other.parent_.Clone();
      privacyPolicyUrl_ = other.privacyPolicyUrl_;
      consumptionUrl_ = other.consumptionUrl_;
      estimatedNumChildren_ = other.estimatedNumChildren_;
      subtitle_ = other.subtitle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Document Clone() {
      return new Document(this);
    }

    /// <summary>Field number for the "DocId" field.</summary>
    public const int DocIdFieldNumber = 1;
    private global::GooglePlayStore.DocId docId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DocId DocId {
      get { return docId_; }
      set {
        docId_ = value;
      }
    }

    /// <summary>Field number for the "fetchDocId" field.</summary>
    public const int FetchDocIdFieldNumber = 2;
    private global::GooglePlayStore.DocId fetchDocId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DocId FetchDocId {
      get { return fetchDocId_; }
      set {
        fetchDocId_ = value;
      }
    }

    /// <summary>Field number for the "sampleDocId" field.</summary>
    public const int SampleDocIdFieldNumber = 3;
    private global::GooglePlayStore.DocId sampleDocId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DocId SampleDocId {
      get { return sampleDocId_; }
      set {
        sampleDocId_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 4;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 5;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "snippet" field.</summary>
    public const int SnippetFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_snippet_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> snippet_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Snippet {
      get { return snippet_; }
    }

    /// <summary>Field number for the "priceDeprecated" field.</summary>
    public const int PriceDeprecatedFieldNumber = 7;
    private global::GooglePlayStore.Offer priceDeprecated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Offer PriceDeprecated {
      get { return priceDeprecated_; }
      set {
        priceDeprecated_ = value;
      }
    }

    /// <summary>Field number for the "availability" field.</summary>
    public const int AvailabilityFieldNumber = 9;
    private global::GooglePlayStore.Availability availability_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Availability Availability {
      get { return availability_; }
      set {
        availability_ = value;
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 10;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Image> _repeated_image_codec
        = pb::FieldCodec.ForMessage(82, global::GooglePlayStore.Image.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Image> image_ = new pbc::RepeatedField<global::GooglePlayStore.Image>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Image> Image {
      get { return image_; }
    }

    /// <summary>Field number for the "child" field.</summary>
    public const int ChildFieldNumber = 11;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Document> _repeated_child_codec
        = pb::FieldCodec.ForMessage(90, global::GooglePlayStore.Document.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Document> child_ = new pbc::RepeatedField<global::GooglePlayStore.Document>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Document> Child {
      get { return child_; }
    }

    /// <summary>Field number for the "aggregateRating" field.</summary>
    public const int AggregateRatingFieldNumber = 13;
    private global::GooglePlayStore.AggregateRating aggregateRating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AggregateRating AggregateRating {
      get { return aggregateRating_; }
      set {
        aggregateRating_ = value;
      }
    }

    /// <summary>Field number for the "offer" field.</summary>
    public const int OfferFieldNumber = 14;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Offer> _repeated_offer_codec
        = pb::FieldCodec.ForMessage(114, global::GooglePlayStore.Offer.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Offer> offer_ = new pbc::RepeatedField<global::GooglePlayStore.Offer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Offer> Offer {
      get { return offer_; }
    }

    /// <summary>Field number for the "translatedSnippet" field.</summary>
    public const int TranslatedSnippetFieldNumber = 15;
    private static readonly pb::FieldCodec<global::GooglePlayStore.TranslatedText> _repeated_translatedSnippet_codec
        = pb::FieldCodec.ForMessage(122, global::GooglePlayStore.TranslatedText.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.TranslatedText> translatedSnippet_ = new pbc::RepeatedField<global::GooglePlayStore.TranslatedText>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.TranslatedText> TranslatedSnippet {
      get { return translatedSnippet_; }
    }

    /// <summary>Field number for the "documentVariant" field.</summary>
    public const int DocumentVariantFieldNumber = 16;
    private static readonly pb::FieldCodec<global::GooglePlayStore.DocumentVariant> _repeated_documentVariant_codec
        = pb::FieldCodec.ForMessage(130, global::GooglePlayStore.DocumentVariant.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.DocumentVariant> documentVariant_ = new pbc::RepeatedField<global::GooglePlayStore.DocumentVariant>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.DocumentVariant> DocumentVariant {
      get { return documentVariant_; }
    }

    /// <summary>Field number for the "categoryId" field.</summary>
    public const int CategoryIdFieldNumber = 17;
    private static readonly pb::FieldCodec<string> _repeated_categoryId_codec
        = pb::FieldCodec.ForString(138);
    private readonly pbc::RepeatedField<string> categoryId_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CategoryId {
      get { return categoryId_; }
    }

    /// <summary>Field number for the "decoration" field.</summary>
    public const int DecorationFieldNumber = 18;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Document> _repeated_decoration_codec
        = pb::FieldCodec.ForMessage(146, global::GooglePlayStore.Document.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Document> decoration_ = new pbc::RepeatedField<global::GooglePlayStore.Document>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Document> Decoration {
      get { return decoration_; }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 19;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Document> _repeated_parent_codec
        = pb::FieldCodec.ForMessage(154, global::GooglePlayStore.Document.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Document> parent_ = new pbc::RepeatedField<global::GooglePlayStore.Document>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Document> Parent {
      get { return parent_; }
    }

    /// <summary>Field number for the "privacyPolicyUrl" field.</summary>
    public const int PrivacyPolicyUrlFieldNumber = 20;
    private readonly static string PrivacyPolicyUrlDefaultValue = "";

    private string privacyPolicyUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrivacyPolicyUrl {
      get { return privacyPolicyUrl_ ?? PrivacyPolicyUrlDefaultValue; }
      set {
        privacyPolicyUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "privacyPolicyUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPrivacyPolicyUrl {
      get { return privacyPolicyUrl_ != null; }
    }
    /// <summary>Clears the value of the "privacyPolicyUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPrivacyPolicyUrl() {
      privacyPolicyUrl_ = null;
    }

    /// <summary>Field number for the "consumptionUrl" field.</summary>
    public const int ConsumptionUrlFieldNumber = 21;
    private readonly static string ConsumptionUrlDefaultValue = "";

    private string consumptionUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConsumptionUrl {
      get { return consumptionUrl_ ?? ConsumptionUrlDefaultValue; }
      set {
        consumptionUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "consumptionUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConsumptionUrl {
      get { return consumptionUrl_ != null; }
    }
    /// <summary>Clears the value of the "consumptionUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConsumptionUrl() {
      consumptionUrl_ = null;
    }

    /// <summary>Field number for the "estimatedNumChildren" field.</summary>
    public const int EstimatedNumChildrenFieldNumber = 22;
    private readonly static int EstimatedNumChildrenDefaultValue = 0;

    private int estimatedNumChildren_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EstimatedNumChildren {
      get { if ((_hasBits0 & 1) != 0) { return estimatedNumChildren_; } else { return EstimatedNumChildrenDefaultValue; } }
      set {
        _hasBits0 |= 1;
        estimatedNumChildren_ = value;
      }
    }
    /// <summary>Gets whether the "estimatedNumChildren" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEstimatedNumChildren {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "estimatedNumChildren" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEstimatedNumChildren() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "subtitle" field.</summary>
    public const int SubtitleFieldNumber = 23;
    private readonly static string SubtitleDefaultValue = "";

    private string subtitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subtitle {
      get { return subtitle_ ?? SubtitleDefaultValue; }
      set {
        subtitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "subtitle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubtitle {
      get { return subtitle_ != null; }
    }
    /// <summary>Clears the value of the "subtitle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtitle() {
      subtitle_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Document);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Document other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DocId, other.DocId)) return false;
      if (!object.Equals(FetchDocId, other.FetchDocId)) return false;
      if (!object.Equals(SampleDocId, other.SampleDocId)) return false;
      if (Title != other.Title) return false;
      if (Url != other.Url) return false;
      if(!snippet_.Equals(other.snippet_)) return false;
      if (!object.Equals(PriceDeprecated, other.PriceDeprecated)) return false;
      if (!object.Equals(Availability, other.Availability)) return false;
      if(!image_.Equals(other.image_)) return false;
      if(!child_.Equals(other.child_)) return false;
      if (!object.Equals(AggregateRating, other.AggregateRating)) return false;
      if(!offer_.Equals(other.offer_)) return false;
      if(!translatedSnippet_.Equals(other.translatedSnippet_)) return false;
      if(!documentVariant_.Equals(other.documentVariant_)) return false;
      if(!categoryId_.Equals(other.categoryId_)) return false;
      if(!decoration_.Equals(other.decoration_)) return false;
      if(!parent_.Equals(other.parent_)) return false;
      if (PrivacyPolicyUrl != other.PrivacyPolicyUrl) return false;
      if (ConsumptionUrl != other.ConsumptionUrl) return false;
      if (EstimatedNumChildren != other.EstimatedNumChildren) return false;
      if (Subtitle != other.Subtitle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (docId_ != null) hash ^= DocId.GetHashCode();
      if (fetchDocId_ != null) hash ^= FetchDocId.GetHashCode();
      if (sampleDocId_ != null) hash ^= SampleDocId.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      hash ^= snippet_.GetHashCode();
      if (priceDeprecated_ != null) hash ^= PriceDeprecated.GetHashCode();
      if (availability_ != null) hash ^= Availability.GetHashCode();
      hash ^= image_.GetHashCode();
      hash ^= child_.GetHashCode();
      if (aggregateRating_ != null) hash ^= AggregateRating.GetHashCode();
      hash ^= offer_.GetHashCode();
      hash ^= translatedSnippet_.GetHashCode();
      hash ^= documentVariant_.GetHashCode();
      hash ^= categoryId_.GetHashCode();
      hash ^= decoration_.GetHashCode();
      hash ^= parent_.GetHashCode();
      if (HasPrivacyPolicyUrl) hash ^= PrivacyPolicyUrl.GetHashCode();
      if (HasConsumptionUrl) hash ^= ConsumptionUrl.GetHashCode();
      if (HasEstimatedNumChildren) hash ^= EstimatedNumChildren.GetHashCode();
      if (HasSubtitle) hash ^= Subtitle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (docId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DocId);
      }
      if (fetchDocId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FetchDocId);
      }
      if (sampleDocId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SampleDocId);
      }
      if (HasTitle) {
        output.WriteRawTag(34);
        output.WriteString(Title);
      }
      if (HasUrl) {
        output.WriteRawTag(42);
        output.WriteString(Url);
      }
      snippet_.WriteTo(output, _repeated_snippet_codec);
      if (priceDeprecated_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PriceDeprecated);
      }
      if (availability_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Availability);
      }
      image_.WriteTo(output, _repeated_image_codec);
      child_.WriteTo(output, _repeated_child_codec);
      if (aggregateRating_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(AggregateRating);
      }
      offer_.WriteTo(output, _repeated_offer_codec);
      translatedSnippet_.WriteTo(output, _repeated_translatedSnippet_codec);
      documentVariant_.WriteTo(output, _repeated_documentVariant_codec);
      categoryId_.WriteTo(output, _repeated_categoryId_codec);
      decoration_.WriteTo(output, _repeated_decoration_codec);
      parent_.WriteTo(output, _repeated_parent_codec);
      if (HasPrivacyPolicyUrl) {
        output.WriteRawTag(162, 1);
        output.WriteString(PrivacyPolicyUrl);
      }
      if (HasConsumptionUrl) {
        output.WriteRawTag(170, 1);
        output.WriteString(ConsumptionUrl);
      }
      if (HasEstimatedNumChildren) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(EstimatedNumChildren);
      }
      if (HasSubtitle) {
        output.WriteRawTag(186, 1);
        output.WriteString(Subtitle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (docId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DocId);
      }
      if (fetchDocId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FetchDocId);
      }
      if (sampleDocId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SampleDocId);
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      size += snippet_.CalculateSize(_repeated_snippet_codec);
      if (priceDeprecated_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PriceDeprecated);
      }
      if (availability_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Availability);
      }
      size += image_.CalculateSize(_repeated_image_codec);
      size += child_.CalculateSize(_repeated_child_codec);
      if (aggregateRating_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AggregateRating);
      }
      size += offer_.CalculateSize(_repeated_offer_codec);
      size += translatedSnippet_.CalculateSize(_repeated_translatedSnippet_codec);
      size += documentVariant_.CalculateSize(_repeated_documentVariant_codec);
      size += categoryId_.CalculateSize(_repeated_categoryId_codec);
      size += decoration_.CalculateSize(_repeated_decoration_codec);
      size += parent_.CalculateSize(_repeated_parent_codec);
      if (HasPrivacyPolicyUrl) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PrivacyPolicyUrl);
      }
      if (HasConsumptionUrl) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConsumptionUrl);
      }
      if (HasEstimatedNumChildren) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EstimatedNumChildren);
      }
      if (HasSubtitle) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Subtitle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Document other) {
      if (other == null) {
        return;
      }
      if (other.docId_ != null) {
        if (docId_ == null) {
          DocId = new global::GooglePlayStore.DocId();
        }
        DocId.MergeFrom(other.DocId);
      }
      if (other.fetchDocId_ != null) {
        if (fetchDocId_ == null) {
          FetchDocId = new global::GooglePlayStore.DocId();
        }
        FetchDocId.MergeFrom(other.FetchDocId);
      }
      if (other.sampleDocId_ != null) {
        if (sampleDocId_ == null) {
          SampleDocId = new global::GooglePlayStore.DocId();
        }
        SampleDocId.MergeFrom(other.SampleDocId);
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      snippet_.Add(other.snippet_);
      if (other.priceDeprecated_ != null) {
        if (priceDeprecated_ == null) {
          PriceDeprecated = new global::GooglePlayStore.Offer();
        }
        PriceDeprecated.MergeFrom(other.PriceDeprecated);
      }
      if (other.availability_ != null) {
        if (availability_ == null) {
          Availability = new global::GooglePlayStore.Availability();
        }
        Availability.MergeFrom(other.Availability);
      }
      image_.Add(other.image_);
      child_.Add(other.child_);
      if (other.aggregateRating_ != null) {
        if (aggregateRating_ == null) {
          AggregateRating = new global::GooglePlayStore.AggregateRating();
        }
        AggregateRating.MergeFrom(other.AggregateRating);
      }
      offer_.Add(other.offer_);
      translatedSnippet_.Add(other.translatedSnippet_);
      documentVariant_.Add(other.documentVariant_);
      categoryId_.Add(other.categoryId_);
      decoration_.Add(other.decoration_);
      parent_.Add(other.parent_);
      if (other.HasPrivacyPolicyUrl) {
        PrivacyPolicyUrl = other.PrivacyPolicyUrl;
      }
      if (other.HasConsumptionUrl) {
        ConsumptionUrl = other.ConsumptionUrl;
      }
      if (other.HasEstimatedNumChildren) {
        EstimatedNumChildren = other.EstimatedNumChildren;
      }
      if (other.HasSubtitle) {
        Subtitle = other.Subtitle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (docId_ == null) {
              DocId = new global::GooglePlayStore.DocId();
            }
            input.ReadMessage(DocId);
            break;
          }
          case 18: {
            if (fetchDocId_ == null) {
              FetchDocId = new global::GooglePlayStore.DocId();
            }
            input.ReadMessage(FetchDocId);
            break;
          }
          case 26: {
            if (sampleDocId_ == null) {
              SampleDocId = new global::GooglePlayStore.DocId();
            }
            input.ReadMessage(SampleDocId);
            break;
          }
          case 34: {
            Title = input.ReadString();
            break;
          }
          case 42: {
            Url = input.ReadString();
            break;
          }
          case 50: {
            snippet_.AddEntriesFrom(input, _repeated_snippet_codec);
            break;
          }
          case 58: {
            if (priceDeprecated_ == null) {
              PriceDeprecated = new global::GooglePlayStore.Offer();
            }
            input.ReadMessage(PriceDeprecated);
            break;
          }
          case 74: {
            if (availability_ == null) {
              Availability = new global::GooglePlayStore.Availability();
            }
            input.ReadMessage(Availability);
            break;
          }
          case 82: {
            image_.AddEntriesFrom(input, _repeated_image_codec);
            break;
          }
          case 90: {
            child_.AddEntriesFrom(input, _repeated_child_codec);
            break;
          }
          case 106: {
            if (aggregateRating_ == null) {
              AggregateRating = new global::GooglePlayStore.AggregateRating();
            }
            input.ReadMessage(AggregateRating);
            break;
          }
          case 114: {
            offer_.AddEntriesFrom(input, _repeated_offer_codec);
            break;
          }
          case 122: {
            translatedSnippet_.AddEntriesFrom(input, _repeated_translatedSnippet_codec);
            break;
          }
          case 130: {
            documentVariant_.AddEntriesFrom(input, _repeated_documentVariant_codec);
            break;
          }
          case 138: {
            categoryId_.AddEntriesFrom(input, _repeated_categoryId_codec);
            break;
          }
          case 146: {
            decoration_.AddEntriesFrom(input, _repeated_decoration_codec);
            break;
          }
          case 154: {
            parent_.AddEntriesFrom(input, _repeated_parent_codec);
            break;
          }
          case 162: {
            PrivacyPolicyUrl = input.ReadString();
            break;
          }
          case 170: {
            ConsumptionUrl = input.ReadString();
            break;
          }
          case 176: {
            EstimatedNumChildren = input.ReadInt32();
            break;
          }
          case 186: {
            Subtitle = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DocumentVariant : pb::IMessage<DocumentVariant> {
    private static readonly pb::MessageParser<DocumentVariant> _parser = new pb::MessageParser<DocumentVariant>(() => new DocumentVariant());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DocumentVariant> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[99]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentVariant() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentVariant(DocumentVariant other) : this() {
      _hasBits0 = other._hasBits0;
      variationType_ = other.variationType_;
      rule_ = other.rule_ != null ? other.rule_.Clone() : null;
      title_ = other.title_;
      snippet_ = other.snippet_.Clone();
      recentChanges_ = other.recentChanges_;
      autoTranslation_ = other.autoTranslation_.Clone();
      offer_ = other.offer_.Clone();
      channelId_ = other.channelId_;
      child_ = other.child_.Clone();
      decoration_ = other.decoration_.Clone();
      image_ = other.image_.Clone();
      categoryId_ = other.categoryId_.Clone();
      subtitle_ = other.subtitle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentVariant Clone() {
      return new DocumentVariant(this);
    }

    /// <summary>Field number for the "variationType" field.</summary>
    public const int VariationTypeFieldNumber = 1;
    private readonly static int VariationTypeDefaultValue = 0;

    private int variationType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VariationType {
      get { if ((_hasBits0 & 1) != 0) { return variationType_; } else { return VariationTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        variationType_ = value;
      }
    }
    /// <summary>Gets whether the "variationType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVariationType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "variationType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVariationType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "rule" field.</summary>
    public const int RuleFieldNumber = 2;
    private global::GooglePlayStore.Rule rule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Rule Rule {
      get { return rule_; }
      set {
        rule_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 3;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "snippet" field.</summary>
    public const int SnippetFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_snippet_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> snippet_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Snippet {
      get { return snippet_; }
    }

    /// <summary>Field number for the "recentChanges" field.</summary>
    public const int RecentChangesFieldNumber = 5;
    private readonly static string RecentChangesDefaultValue = "";

    private string recentChanges_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RecentChanges {
      get { return recentChanges_ ?? RecentChangesDefaultValue; }
      set {
        recentChanges_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "recentChanges" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRecentChanges {
      get { return recentChanges_ != null; }
    }
    /// <summary>Clears the value of the "recentChanges" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRecentChanges() {
      recentChanges_ = null;
    }

    /// <summary>Field number for the "autoTranslation" field.</summary>
    public const int AutoTranslationFieldNumber = 6;
    private static readonly pb::FieldCodec<global::GooglePlayStore.TranslatedText> _repeated_autoTranslation_codec
        = pb::FieldCodec.ForMessage(50, global::GooglePlayStore.TranslatedText.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.TranslatedText> autoTranslation_ = new pbc::RepeatedField<global::GooglePlayStore.TranslatedText>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.TranslatedText> AutoTranslation {
      get { return autoTranslation_; }
    }

    /// <summary>Field number for the "offer" field.</summary>
    public const int OfferFieldNumber = 7;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Offer> _repeated_offer_codec
        = pb::FieldCodec.ForMessage(58, global::GooglePlayStore.Offer.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Offer> offer_ = new pbc::RepeatedField<global::GooglePlayStore.Offer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Offer> Offer {
      get { return offer_; }
    }

    /// <summary>Field number for the "channelId" field.</summary>
    public const int ChannelIdFieldNumber = 9;
    private readonly static long ChannelIdDefaultValue = 0L;

    private long channelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ChannelId {
      get { if ((_hasBits0 & 2) != 0) { return channelId_; } else { return ChannelIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        channelId_ = value;
      }
    }
    /// <summary>Gets whether the "channelId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasChannelId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "channelId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearChannelId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "child" field.</summary>
    public const int ChildFieldNumber = 10;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Document> _repeated_child_codec
        = pb::FieldCodec.ForMessage(82, global::GooglePlayStore.Document.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Document> child_ = new pbc::RepeatedField<global::GooglePlayStore.Document>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Document> Child {
      get { return child_; }
    }

    /// <summary>Field number for the "decoration" field.</summary>
    public const int DecorationFieldNumber = 11;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Document> _repeated_decoration_codec
        = pb::FieldCodec.ForMessage(90, global::GooglePlayStore.Document.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Document> decoration_ = new pbc::RepeatedField<global::GooglePlayStore.Document>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Document> Decoration {
      get { return decoration_; }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 12;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Image> _repeated_image_codec
        = pb::FieldCodec.ForMessage(98, global::GooglePlayStore.Image.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Image> image_ = new pbc::RepeatedField<global::GooglePlayStore.Image>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Image> Image {
      get { return image_; }
    }

    /// <summary>Field number for the "categoryId" field.</summary>
    public const int CategoryIdFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _repeated_categoryId_codec
        = pb::FieldCodec.ForString(106);
    private readonly pbc::RepeatedField<string> categoryId_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CategoryId {
      get { return categoryId_; }
    }

    /// <summary>Field number for the "subtitle" field.</summary>
    public const int SubtitleFieldNumber = 14;
    private readonly static string SubtitleDefaultValue = "";

    private string subtitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subtitle {
      get { return subtitle_ ?? SubtitleDefaultValue; }
      set {
        subtitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "subtitle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubtitle {
      get { return subtitle_ != null; }
    }
    /// <summary>Clears the value of the "subtitle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtitle() {
      subtitle_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DocumentVariant);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DocumentVariant other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VariationType != other.VariationType) return false;
      if (!object.Equals(Rule, other.Rule)) return false;
      if (Title != other.Title) return false;
      if(!snippet_.Equals(other.snippet_)) return false;
      if (RecentChanges != other.RecentChanges) return false;
      if(!autoTranslation_.Equals(other.autoTranslation_)) return false;
      if(!offer_.Equals(other.offer_)) return false;
      if (ChannelId != other.ChannelId) return false;
      if(!child_.Equals(other.child_)) return false;
      if(!decoration_.Equals(other.decoration_)) return false;
      if(!image_.Equals(other.image_)) return false;
      if(!categoryId_.Equals(other.categoryId_)) return false;
      if (Subtitle != other.Subtitle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVariationType) hash ^= VariationType.GetHashCode();
      if (rule_ != null) hash ^= Rule.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      hash ^= snippet_.GetHashCode();
      if (HasRecentChanges) hash ^= RecentChanges.GetHashCode();
      hash ^= autoTranslation_.GetHashCode();
      hash ^= offer_.GetHashCode();
      if (HasChannelId) hash ^= ChannelId.GetHashCode();
      hash ^= child_.GetHashCode();
      hash ^= decoration_.GetHashCode();
      hash ^= image_.GetHashCode();
      hash ^= categoryId_.GetHashCode();
      if (HasSubtitle) hash ^= Subtitle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasVariationType) {
        output.WriteRawTag(8);
        output.WriteInt32(VariationType);
      }
      if (rule_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Rule);
      }
      if (HasTitle) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      snippet_.WriteTo(output, _repeated_snippet_codec);
      if (HasRecentChanges) {
        output.WriteRawTag(42);
        output.WriteString(RecentChanges);
      }
      autoTranslation_.WriteTo(output, _repeated_autoTranslation_codec);
      offer_.WriteTo(output, _repeated_offer_codec);
      if (HasChannelId) {
        output.WriteRawTag(72);
        output.WriteInt64(ChannelId);
      }
      child_.WriteTo(output, _repeated_child_codec);
      decoration_.WriteTo(output, _repeated_decoration_codec);
      image_.WriteTo(output, _repeated_image_codec);
      categoryId_.WriteTo(output, _repeated_categoryId_codec);
      if (HasSubtitle) {
        output.WriteRawTag(114);
        output.WriteString(Subtitle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasVariationType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VariationType);
      }
      if (rule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rule);
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      size += snippet_.CalculateSize(_repeated_snippet_codec);
      if (HasRecentChanges) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RecentChanges);
      }
      size += autoTranslation_.CalculateSize(_repeated_autoTranslation_codec);
      size += offer_.CalculateSize(_repeated_offer_codec);
      if (HasChannelId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ChannelId);
      }
      size += child_.CalculateSize(_repeated_child_codec);
      size += decoration_.CalculateSize(_repeated_decoration_codec);
      size += image_.CalculateSize(_repeated_image_codec);
      size += categoryId_.CalculateSize(_repeated_categoryId_codec);
      if (HasSubtitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subtitle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DocumentVariant other) {
      if (other == null) {
        return;
      }
      if (other.HasVariationType) {
        VariationType = other.VariationType;
      }
      if (other.rule_ != null) {
        if (rule_ == null) {
          Rule = new global::GooglePlayStore.Rule();
        }
        Rule.MergeFrom(other.Rule);
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      snippet_.Add(other.snippet_);
      if (other.HasRecentChanges) {
        RecentChanges = other.RecentChanges;
      }
      autoTranslation_.Add(other.autoTranslation_);
      offer_.Add(other.offer_);
      if (other.HasChannelId) {
        ChannelId = other.ChannelId;
      }
      child_.Add(other.child_);
      decoration_.Add(other.decoration_);
      image_.Add(other.image_);
      categoryId_.Add(other.categoryId_);
      if (other.HasSubtitle) {
        Subtitle = other.Subtitle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            VariationType = input.ReadInt32();
            break;
          }
          case 18: {
            if (rule_ == null) {
              Rule = new global::GooglePlayStore.Rule();
            }
            input.ReadMessage(Rule);
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 34: {
            snippet_.AddEntriesFrom(input, _repeated_snippet_codec);
            break;
          }
          case 42: {
            RecentChanges = input.ReadString();
            break;
          }
          case 50: {
            autoTranslation_.AddEntriesFrom(input, _repeated_autoTranslation_codec);
            break;
          }
          case 58: {
            offer_.AddEntriesFrom(input, _repeated_offer_codec);
            break;
          }
          case 72: {
            ChannelId = input.ReadInt64();
            break;
          }
          case 82: {
            child_.AddEntriesFrom(input, _repeated_child_codec);
            break;
          }
          case 90: {
            decoration_.AddEntriesFrom(input, _repeated_decoration_codec);
            break;
          }
          case 98: {
            image_.AddEntriesFrom(input, _repeated_image_codec);
            break;
          }
          case 106: {
            categoryId_.AddEntriesFrom(input, _repeated_categoryId_codec);
            break;
          }
          case 114: {
            Subtitle = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SectionImage : pb::IMessage<SectionImage> {
    private static readonly pb::MessageParser<SectionImage> _parser = new pb::MessageParser<SectionImage>(() => new SectionImage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SectionImage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[100]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SectionImage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SectionImage(SectionImage other) : this() {
      imageContainer_ = other.imageContainer_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SectionImage Clone() {
      return new SectionImage(this);
    }

    /// <summary>Field number for the "imageContainer" field.</summary>
    public const int ImageContainerFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GooglePlayStore.ImageContainer> _repeated_imageContainer_codec
        = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.ImageContainer.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.ImageContainer> imageContainer_ = new pbc::RepeatedField<global::GooglePlayStore.ImageContainer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.ImageContainer> ImageContainer {
      get { return imageContainer_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SectionImage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SectionImage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!imageContainer_.Equals(other.imageContainer_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= imageContainer_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      imageContainer_.WriteTo(output, _repeated_imageContainer_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += imageContainer_.CalculateSize(_repeated_imageContainer_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SectionImage other) {
      if (other == null) {
        return;
      }
      imageContainer_.Add(other.imageContainer_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            imageContainer_.AddEntriesFrom(input, _repeated_imageContainer_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImageContainer : pb::IMessage<ImageContainer> {
    private static readonly pb::MessageParser<ImageContainer> _parser = new pb::MessageParser<ImageContainer>(() => new ImageContainer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImageContainer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[101]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageContainer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageContainer(ImageContainer other) : this() {
      image_ = other.image_ != null ? other.image_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageContainer Clone() {
      return new ImageContainer(this);
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 4;
    private global::GooglePlayStore.Image image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Image Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImageContainer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImageContainer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Image, other.Image)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (image_ != null) hash ^= Image.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (image_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Image);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImageContainer other) {
      if (other == null) {
        return;
      }
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::GooglePlayStore.Image();
        }
        Image.MergeFrom(other.Image);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 34: {
            if (image_ == null) {
              Image = new global::GooglePlayStore.Image();
            }
            input.ReadMessage(Image);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Image : pb::IMessage<Image> {
    private static readonly pb::MessageParser<Image> _parser = new pb::MessageParser<Image>(() => new Image());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Image> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[102]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Image() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Image(Image other) : this() {
      _hasBits0 = other._hasBits0;
      imageType_ = other.imageType_;
      dimension_ = other.HasDimension ? other.dimension_.Clone() : null;
      imageUrl_ = other.imageUrl_;
      altTextLocalized_ = other.altTextLocalized_;
      secureUrl_ = other.secureUrl_;
      positionInSequence_ = other.positionInSequence_;
      supportsFifeUrlOptions_ = other.supportsFifeUrlOptions_;
      citation_ = other.HasCitation ? other.citation_.Clone() : null;
      durationSeconds_ = other.durationSeconds_;
      fillColorRGB_ = other.fillColorRGB_;
      autogen_ = other.autogen_;
      attribution_ = other.attribution_ != null ? other.attribution_.Clone() : null;
      backgroundColorRgb_ = other.backgroundColorRgb_;
      palette_ = other.palette_ != null ? other.palette_.Clone() : null;
      deviceClass_ = other.deviceClass_;
      supportsFifeMonogramOption_ = other.supportsFifeMonogramOption_;
      imageUrlAlt_ = other.imageUrlAlt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Image Clone() {
      return new Image(this);
    }

    /// <summary>Field number for the "imageType" field.</summary>
    public const int ImageTypeFieldNumber = 1;
    private readonly static int ImageTypeDefaultValue = 0;

    private int imageType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ImageType {
      get { if ((_hasBits0 & 1) != 0) { return imageType_; } else { return ImageTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        imageType_ = value;
      }
    }
    /// <summary>Gets whether the "imageType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasImageType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "imageType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearImageType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "dimension" field.</summary>
    public const int DimensionFieldNumber = 2;
    private global::GooglePlayStore.Image.Types.Dimension dimension_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Image.Types.Dimension Dimension {
      get { return dimension_; }
      set {
        dimension_ = value;
      }
    }
    /// <summary>Gets whether the dimension field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDimension {
      get { return dimension_ != null; }
    }
    /// <summary>Clears the value of the dimension field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDimension() {
      dimension_ = null;
    }

    /// <summary>Field number for the "imageUrl" field.</summary>
    public const int ImageUrlFieldNumber = 5;
    private readonly static string ImageUrlDefaultValue = "";

    private string imageUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageUrl {
      get { return imageUrl_ ?? ImageUrlDefaultValue; }
      set {
        imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "imageUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasImageUrl {
      get { return imageUrl_ != null; }
    }
    /// <summary>Clears the value of the "imageUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearImageUrl() {
      imageUrl_ = null;
    }

    /// <summary>Field number for the "altTextLocalized" field.</summary>
    public const int AltTextLocalizedFieldNumber = 6;
    private readonly static string AltTextLocalizedDefaultValue = "";

    private string altTextLocalized_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AltTextLocalized {
      get { return altTextLocalized_ ?? AltTextLocalizedDefaultValue; }
      set {
        altTextLocalized_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "altTextLocalized" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAltTextLocalized {
      get { return altTextLocalized_ != null; }
    }
    /// <summary>Clears the value of the "altTextLocalized" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAltTextLocalized() {
      altTextLocalized_ = null;
    }

    /// <summary>Field number for the "secureUrl" field.</summary>
    public const int SecureUrlFieldNumber = 7;
    private readonly static string SecureUrlDefaultValue = "";

    private string secureUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SecureUrl {
      get { return secureUrl_ ?? SecureUrlDefaultValue; }
      set {
        secureUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "secureUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSecureUrl {
      get { return secureUrl_ != null; }
    }
    /// <summary>Clears the value of the "secureUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSecureUrl() {
      secureUrl_ = null;
    }

    /// <summary>Field number for the "positionInSequence" field.</summary>
    public const int PositionInSequenceFieldNumber = 8;
    private readonly static int PositionInSequenceDefaultValue = 0;

    private int positionInSequence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PositionInSequence {
      get { if ((_hasBits0 & 2) != 0) { return positionInSequence_; } else { return PositionInSequenceDefaultValue; } }
      set {
        _hasBits0 |= 2;
        positionInSequence_ = value;
      }
    }
    /// <summary>Gets whether the "positionInSequence" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPositionInSequence {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "positionInSequence" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPositionInSequence() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "supportsFifeUrlOptions" field.</summary>
    public const int SupportsFifeUrlOptionsFieldNumber = 9;
    private readonly static bool SupportsFifeUrlOptionsDefaultValue = false;

    private bool supportsFifeUrlOptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SupportsFifeUrlOptions {
      get { if ((_hasBits0 & 4) != 0) { return supportsFifeUrlOptions_; } else { return SupportsFifeUrlOptionsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        supportsFifeUrlOptions_ = value;
      }
    }
    /// <summary>Gets whether the "supportsFifeUrlOptions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSupportsFifeUrlOptions {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "supportsFifeUrlOptions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSupportsFifeUrlOptions() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "citation" field.</summary>
    public const int CitationFieldNumber = 10;
    private global::GooglePlayStore.Image.Types.Citation citation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Image.Types.Citation Citation {
      get { return citation_; }
      set {
        citation_ = value;
      }
    }
    /// <summary>Gets whether the citation field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCitation {
      get { return citation_ != null; }
    }
    /// <summary>Clears the value of the citation field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCitation() {
      citation_ = null;
    }

    /// <summary>Field number for the "durationSeconds" field.</summary>
    public const int DurationSecondsFieldNumber = 14;
    private readonly static int DurationSecondsDefaultValue = 0;

    private int durationSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DurationSeconds {
      get { if ((_hasBits0 & 8) != 0) { return durationSeconds_; } else { return DurationSecondsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        durationSeconds_ = value;
      }
    }
    /// <summary>Gets whether the "durationSeconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDurationSeconds {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "durationSeconds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDurationSeconds() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "fillColorRGB" field.</summary>
    public const int FillColorRGBFieldNumber = 15;
    private readonly static string FillColorRGBDefaultValue = "";

    private string fillColorRGB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FillColorRGB {
      get { return fillColorRGB_ ?? FillColorRGBDefaultValue; }
      set {
        fillColorRGB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fillColorRGB" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFillColorRGB {
      get { return fillColorRGB_ != null; }
    }
    /// <summary>Clears the value of the "fillColorRGB" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFillColorRGB() {
      fillColorRGB_ = null;
    }

    /// <summary>Field number for the "autogen" field.</summary>
    public const int AutogenFieldNumber = 16;
    private readonly static bool AutogenDefaultValue = false;

    private bool autogen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Autogen {
      get { if ((_hasBits0 & 16) != 0) { return autogen_; } else { return AutogenDefaultValue; } }
      set {
        _hasBits0 |= 16;
        autogen_ = value;
      }
    }
    /// <summary>Gets whether the "autogen" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAutogen {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "autogen" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAutogen() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "attribution" field.</summary>
    public const int AttributionFieldNumber = 17;
    private global::GooglePlayStore.Attribution attribution_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Attribution Attribution {
      get { return attribution_; }
      set {
        attribution_ = value;
      }
    }

    /// <summary>Field number for the "backgroundColorRgb" field.</summary>
    public const int BackgroundColorRgbFieldNumber = 19;
    private readonly static string BackgroundColorRgbDefaultValue = "";

    private string backgroundColorRgb_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BackgroundColorRgb {
      get { return backgroundColorRgb_ ?? BackgroundColorRgbDefaultValue; }
      set {
        backgroundColorRgb_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "backgroundColorRgb" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBackgroundColorRgb {
      get { return backgroundColorRgb_ != null; }
    }
    /// <summary>Clears the value of the "backgroundColorRgb" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBackgroundColorRgb() {
      backgroundColorRgb_ = null;
    }

    /// <summary>Field number for the "palette" field.</summary>
    public const int PaletteFieldNumber = 20;
    private global::GooglePlayStore.ImagePalette palette_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ImagePalette Palette {
      get { return palette_; }
      set {
        palette_ = value;
      }
    }

    /// <summary>Field number for the "deviceClass" field.</summary>
    public const int DeviceClassFieldNumber = 21;
    private readonly static int DeviceClassDefaultValue = 0;

    private int deviceClass_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeviceClass {
      get { if ((_hasBits0 & 32) != 0) { return deviceClass_; } else { return DeviceClassDefaultValue; } }
      set {
        _hasBits0 |= 32;
        deviceClass_ = value;
      }
    }
    /// <summary>Gets whether the "deviceClass" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeviceClass {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "deviceClass" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeviceClass() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "supportsFifeMonogramOption" field.</summary>
    public const int SupportsFifeMonogramOptionFieldNumber = 22;
    private readonly static bool SupportsFifeMonogramOptionDefaultValue = false;

    private bool supportsFifeMonogramOption_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SupportsFifeMonogramOption {
      get { if ((_hasBits0 & 64) != 0) { return supportsFifeMonogramOption_; } else { return SupportsFifeMonogramOptionDefaultValue; } }
      set {
        _hasBits0 |= 64;
        supportsFifeMonogramOption_ = value;
      }
    }
    /// <summary>Gets whether the "supportsFifeMonogramOption" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSupportsFifeMonogramOption {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "supportsFifeMonogramOption" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSupportsFifeMonogramOption() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "imageUrlAlt" field.</summary>
    public const int ImageUrlAltFieldNumber = 28;
    private readonly static string ImageUrlAltDefaultValue = "";

    private string imageUrlAlt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageUrlAlt {
      get { return imageUrlAlt_ ?? ImageUrlAltDefaultValue; }
      set {
        imageUrlAlt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "imageUrlAlt" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasImageUrlAlt {
      get { return imageUrlAlt_ != null; }
    }
    /// <summary>Clears the value of the "imageUrlAlt" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearImageUrlAlt() {
      imageUrlAlt_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Image);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Image other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ImageType != other.ImageType) return false;
      if (!object.Equals(Dimension, other.Dimension)) return false;
      if (ImageUrl != other.ImageUrl) return false;
      if (AltTextLocalized != other.AltTextLocalized) return false;
      if (SecureUrl != other.SecureUrl) return false;
      if (PositionInSequence != other.PositionInSequence) return false;
      if (SupportsFifeUrlOptions != other.SupportsFifeUrlOptions) return false;
      if (!object.Equals(Citation, other.Citation)) return false;
      if (DurationSeconds != other.DurationSeconds) return false;
      if (FillColorRGB != other.FillColorRGB) return false;
      if (Autogen != other.Autogen) return false;
      if (!object.Equals(Attribution, other.Attribution)) return false;
      if (BackgroundColorRgb != other.BackgroundColorRgb) return false;
      if (!object.Equals(Palette, other.Palette)) return false;
      if (DeviceClass != other.DeviceClass) return false;
      if (SupportsFifeMonogramOption != other.SupportsFifeMonogramOption) return false;
      if (ImageUrlAlt != other.ImageUrlAlt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasImageType) hash ^= ImageType.GetHashCode();
      if (HasDimension) hash ^= Dimension.GetHashCode();
      if (HasImageUrl) hash ^= ImageUrl.GetHashCode();
      if (HasAltTextLocalized) hash ^= AltTextLocalized.GetHashCode();
      if (HasSecureUrl) hash ^= SecureUrl.GetHashCode();
      if (HasPositionInSequence) hash ^= PositionInSequence.GetHashCode();
      if (HasSupportsFifeUrlOptions) hash ^= SupportsFifeUrlOptions.GetHashCode();
      if (HasCitation) hash ^= Citation.GetHashCode();
      if (HasDurationSeconds) hash ^= DurationSeconds.GetHashCode();
      if (HasFillColorRGB) hash ^= FillColorRGB.GetHashCode();
      if (HasAutogen) hash ^= Autogen.GetHashCode();
      if (attribution_ != null) hash ^= Attribution.GetHashCode();
      if (HasBackgroundColorRgb) hash ^= BackgroundColorRgb.GetHashCode();
      if (palette_ != null) hash ^= Palette.GetHashCode();
      if (HasDeviceClass) hash ^= DeviceClass.GetHashCode();
      if (HasSupportsFifeMonogramOption) hash ^= SupportsFifeMonogramOption.GetHashCode();
      if (HasImageUrlAlt) hash ^= ImageUrlAlt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasImageType) {
        output.WriteRawTag(8);
        output.WriteInt32(ImageType);
      }
      if (HasDimension) {
        output.WriteRawTag(19);
        output.WriteGroup(Dimension);
        output.WriteRawTag(20);
      }
      if (HasImageUrl) {
        output.WriteRawTag(42);
        output.WriteString(ImageUrl);
      }
      if (HasAltTextLocalized) {
        output.WriteRawTag(50);
        output.WriteString(AltTextLocalized);
      }
      if (HasSecureUrl) {
        output.WriteRawTag(58);
        output.WriteString(SecureUrl);
      }
      if (HasPositionInSequence) {
        output.WriteRawTag(64);
        output.WriteInt32(PositionInSequence);
      }
      if (HasSupportsFifeUrlOptions) {
        output.WriteRawTag(72);
        output.WriteBool(SupportsFifeUrlOptions);
      }
      if (HasCitation) {
        output.WriteRawTag(83);
        output.WriteGroup(Citation);
        output.WriteRawTag(84);
      }
      if (HasDurationSeconds) {
        output.WriteRawTag(112);
        output.WriteInt32(DurationSeconds);
      }
      if (HasFillColorRGB) {
        output.WriteRawTag(122);
        output.WriteString(FillColorRGB);
      }
      if (HasAutogen) {
        output.WriteRawTag(128, 1);
        output.WriteBool(Autogen);
      }
      if (attribution_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Attribution);
      }
      if (HasBackgroundColorRgb) {
        output.WriteRawTag(154, 1);
        output.WriteString(BackgroundColorRgb);
      }
      if (palette_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Palette);
      }
      if (HasDeviceClass) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(DeviceClass);
      }
      if (HasSupportsFifeMonogramOption) {
        output.WriteRawTag(176, 1);
        output.WriteBool(SupportsFifeMonogramOption);
      }
      if (HasImageUrlAlt) {
        output.WriteRawTag(226, 1);
        output.WriteString(ImageUrlAlt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasImageType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ImageType);
      }
      if (HasDimension) {
        size += 2 + pb::CodedOutputStream.ComputeGroupSize(Dimension);
      }
      if (HasImageUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
      }
      if (HasAltTextLocalized) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AltTextLocalized);
      }
      if (HasSecureUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecureUrl);
      }
      if (HasPositionInSequence) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PositionInSequence);
      }
      if (HasSupportsFifeUrlOptions) {
        size += 1 + 1;
      }
      if (HasCitation) {
        size += 2 + pb::CodedOutputStream.ComputeGroupSize(Citation);
      }
      if (HasDurationSeconds) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DurationSeconds);
      }
      if (HasFillColorRGB) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FillColorRGB);
      }
      if (HasAutogen) {
        size += 2 + 1;
      }
      if (attribution_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Attribution);
      }
      if (HasBackgroundColorRgb) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BackgroundColorRgb);
      }
      if (palette_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Palette);
      }
      if (HasDeviceClass) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DeviceClass);
      }
      if (HasSupportsFifeMonogramOption) {
        size += 2 + 1;
      }
      if (HasImageUrlAlt) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ImageUrlAlt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Image other) {
      if (other == null) {
        return;
      }
      if (other.HasImageType) {
        ImageType = other.ImageType;
      }
      if (other.HasDimension) {
        if (!HasDimension) {
          Dimension = new global::GooglePlayStore.Image.Types.Dimension();
        }
        Dimension.MergeFrom(other.Dimension);
      }
      if (other.HasImageUrl) {
        ImageUrl = other.ImageUrl;
      }
      if (other.HasAltTextLocalized) {
        AltTextLocalized = other.AltTextLocalized;
      }
      if (other.HasSecureUrl) {
        SecureUrl = other.SecureUrl;
      }
      if (other.HasPositionInSequence) {
        PositionInSequence = other.PositionInSequence;
      }
      if (other.HasSupportsFifeUrlOptions) {
        SupportsFifeUrlOptions = other.SupportsFifeUrlOptions;
      }
      if (other.HasCitation) {
        if (!HasCitation) {
          Citation = new global::GooglePlayStore.Image.Types.Citation();
        }
        Citation.MergeFrom(other.Citation);
      }
      if (other.HasDurationSeconds) {
        DurationSeconds = other.DurationSeconds;
      }
      if (other.HasFillColorRGB) {
        FillColorRGB = other.FillColorRGB;
      }
      if (other.HasAutogen) {
        Autogen = other.Autogen;
      }
      if (other.attribution_ != null) {
        if (attribution_ == null) {
          Attribution = new global::GooglePlayStore.Attribution();
        }
        Attribution.MergeFrom(other.Attribution);
      }
      if (other.HasBackgroundColorRgb) {
        BackgroundColorRgb = other.BackgroundColorRgb;
      }
      if (other.palette_ != null) {
        if (palette_ == null) {
          Palette = new global::GooglePlayStore.ImagePalette();
        }
        Palette.MergeFrom(other.Palette);
      }
      if (other.HasDeviceClass) {
        DeviceClass = other.DeviceClass;
      }
      if (other.HasSupportsFifeMonogramOption) {
        SupportsFifeMonogramOption = other.SupportsFifeMonogramOption;
      }
      if (other.HasImageUrlAlt) {
        ImageUrlAlt = other.ImageUrlAlt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ImageType = input.ReadInt32();
            break;
          }
          case 19: {
            if (!HasDimension) {
              Dimension = new global::GooglePlayStore.Image.Types.Dimension();
            }
            input.ReadGroup(Dimension);
            break;
          }
          case 42: {
            ImageUrl = input.ReadString();
            break;
          }
          case 50: {
            AltTextLocalized = input.ReadString();
            break;
          }
          case 58: {
            SecureUrl = input.ReadString();
            break;
          }
          case 64: {
            PositionInSequence = input.ReadInt32();
            break;
          }
          case 72: {
            SupportsFifeUrlOptions = input.ReadBool();
            break;
          }
          case 83: {
            if (!HasCitation) {
              Citation = new global::GooglePlayStore.Image.Types.Citation();
            }
            input.ReadGroup(Citation);
            break;
          }
          case 112: {
            DurationSeconds = input.ReadInt32();
            break;
          }
          case 122: {
            FillColorRGB = input.ReadString();
            break;
          }
          case 128: {
            Autogen = input.ReadBool();
            break;
          }
          case 138: {
            if (attribution_ == null) {
              Attribution = new global::GooglePlayStore.Attribution();
            }
            input.ReadMessage(Attribution);
            break;
          }
          case 154: {
            BackgroundColorRgb = input.ReadString();
            break;
          }
          case 162: {
            if (palette_ == null) {
              Palette = new global::GooglePlayStore.ImagePalette();
            }
            input.ReadMessage(Palette);
            break;
          }
          case 168: {
            DeviceClass = input.ReadInt32();
            break;
          }
          case 176: {
            SupportsFifeMonogramOption = input.ReadBool();
            break;
          }
          case 226: {
            ImageUrlAlt = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Image message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Dimension : pb::IMessage<Dimension> {
        private static readonly pb::MessageParser<Dimension> _parser = new pb::MessageParser<Dimension>(() => new Dimension());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Dimension> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GooglePlayStore.Image.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Dimension() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Dimension(Dimension other) : this() {
          _hasBits0 = other._hasBits0;
          width_ = other.width_;
          height_ = other.height_;
          aspectRatio_ = other.aspectRatio_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Dimension Clone() {
          return new Dimension(this);
        }

        /// <summary>Field number for the "width" field.</summary>
        public const int WidthFieldNumber = 3;
        private readonly static int WidthDefaultValue = 0;

        private int width_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Width {
          get { if ((_hasBits0 & 1) != 0) { return width_; } else { return WidthDefaultValue; } }
          set {
            _hasBits0 |= 1;
            width_ = value;
          }
        }
        /// <summary>Gets whether the "width" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasWidth {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "width" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearWidth() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "height" field.</summary>
        public const int HeightFieldNumber = 4;
        private readonly static int HeightDefaultValue = 0;

        private int height_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Height {
          get { if ((_hasBits0 & 2) != 0) { return height_; } else { return HeightDefaultValue; } }
          set {
            _hasBits0 |= 2;
            height_ = value;
          }
        }
        /// <summary>Gets whether the "height" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasHeight {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "height" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearHeight() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "aspectRatio" field.</summary>
        public const int AspectRatioFieldNumber = 18;
        private readonly static int AspectRatioDefaultValue = 0;

        private int aspectRatio_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int AspectRatio {
          get { if ((_hasBits0 & 4) != 0) { return aspectRatio_; } else { return AspectRatioDefaultValue; } }
          set {
            _hasBits0 |= 4;
            aspectRatio_ = value;
          }
        }
        /// <summary>Gets whether the "aspectRatio" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasAspectRatio {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "aspectRatio" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearAspectRatio() {
          _hasBits0 &= ~4;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Dimension);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Dimension other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Width != other.Width) return false;
          if (Height != other.Height) return false;
          if (AspectRatio != other.AspectRatio) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasWidth) hash ^= Width.GetHashCode();
          if (HasHeight) hash ^= Height.GetHashCode();
          if (HasAspectRatio) hash ^= AspectRatio.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (HasWidth) {
            output.WriteRawTag(24);
            output.WriteInt32(Width);
          }
          if (HasHeight) {
            output.WriteRawTag(32);
            output.WriteInt32(Height);
          }
          if (HasAspectRatio) {
            output.WriteRawTag(144, 1);
            output.WriteInt32(AspectRatio);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasWidth) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
          }
          if (HasHeight) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
          }
          if (HasAspectRatio) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(AspectRatio);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Dimension other) {
          if (other == null) {
            return;
          }
          if (other.HasWidth) {
            Width = other.Width;
          }
          if (other.HasHeight) {
            Height = other.Height;
          }
          if (other.HasAspectRatio) {
            AspectRatio = other.AspectRatio;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              case 20:
                return;
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 24: {
                Width = input.ReadInt32();
                break;
              }
              case 32: {
                Height = input.ReadInt32();
                break;
              }
              case 144: {
                AspectRatio = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Citation : pb::IMessage<Citation> {
        private static readonly pb::MessageParser<Citation> _parser = new pb::MessageParser<Citation>(() => new Citation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Citation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GooglePlayStore.Image.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Citation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Citation(Citation other) : this() {
          titleLocalized_ = other.titleLocalized_;
          url_ = other.url_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Citation Clone() {
          return new Citation(this);
        }

        /// <summary>Field number for the "titleLocalized" field.</summary>
        public const int TitleLocalizedFieldNumber = 11;
        private readonly static string TitleLocalizedDefaultValue = "";

        private string titleLocalized_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TitleLocalized {
          get { return titleLocalized_ ?? TitleLocalizedDefaultValue; }
          set {
            titleLocalized_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "titleLocalized" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasTitleLocalized {
          get { return titleLocalized_ != null; }
        }
        /// <summary>Clears the value of the "titleLocalized" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearTitleLocalized() {
          titleLocalized_ = null;
        }

        /// <summary>Field number for the "url" field.</summary>
        public const int UrlFieldNumber = 12;
        private readonly static string UrlDefaultValue = "";

        private string url_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Url {
          get { return url_ ?? UrlDefaultValue; }
          set {
            url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "url" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasUrl {
          get { return url_ != null; }
        }
        /// <summary>Clears the value of the "url" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearUrl() {
          url_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Citation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Citation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TitleLocalized != other.TitleLocalized) return false;
          if (Url != other.Url) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasTitleLocalized) hash ^= TitleLocalized.GetHashCode();
          if (HasUrl) hash ^= Url.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (HasTitleLocalized) {
            output.WriteRawTag(90);
            output.WriteString(TitleLocalized);
          }
          if (HasUrl) {
            output.WriteRawTag(98);
            output.WriteString(Url);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasTitleLocalized) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TitleLocalized);
          }
          if (HasUrl) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Citation other) {
          if (other == null) {
            return;
          }
          if (other.HasTitleLocalized) {
            TitleLocalized = other.TitleLocalized;
          }
          if (other.HasUrl) {
            Url = other.Url;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              case 84:
                return;
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 90: {
                TitleLocalized = input.ReadString();
                break;
              }
              case 98: {
                Url = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class Attribution : pb::IMessage<Attribution> {
    private static readonly pb::MessageParser<Attribution> _parser = new pb::MessageParser<Attribution>(() => new Attribution());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Attribution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[103]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attribution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attribution(Attribution other) : this() {
      sourceTitle_ = other.sourceTitle_;
      sourceUrl_ = other.sourceUrl_;
      licenseTitle_ = other.licenseTitle_;
      licenseUrl_ = other.licenseUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attribution Clone() {
      return new Attribution(this);
    }

    /// <summary>Field number for the "sourceTitle" field.</summary>
    public const int SourceTitleFieldNumber = 1;
    private readonly static string SourceTitleDefaultValue = "";

    private string sourceTitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceTitle {
      get { return sourceTitle_ ?? SourceTitleDefaultValue; }
      set {
        sourceTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sourceTitle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSourceTitle {
      get { return sourceTitle_ != null; }
    }
    /// <summary>Clears the value of the "sourceTitle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSourceTitle() {
      sourceTitle_ = null;
    }

    /// <summary>Field number for the "sourceUrl" field.</summary>
    public const int SourceUrlFieldNumber = 2;
    private readonly static string SourceUrlDefaultValue = "";

    private string sourceUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceUrl {
      get { return sourceUrl_ ?? SourceUrlDefaultValue; }
      set {
        sourceUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sourceUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSourceUrl {
      get { return sourceUrl_ != null; }
    }
    /// <summary>Clears the value of the "sourceUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSourceUrl() {
      sourceUrl_ = null;
    }

    /// <summary>Field number for the "licenseTitle" field.</summary>
    public const int LicenseTitleFieldNumber = 3;
    private readonly static string LicenseTitleDefaultValue = "";

    private string licenseTitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LicenseTitle {
      get { return licenseTitle_ ?? LicenseTitleDefaultValue; }
      set {
        licenseTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "licenseTitle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLicenseTitle {
      get { return licenseTitle_ != null; }
    }
    /// <summary>Clears the value of the "licenseTitle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLicenseTitle() {
      licenseTitle_ = null;
    }

    /// <summary>Field number for the "licenseUrl" field.</summary>
    public const int LicenseUrlFieldNumber = 4;
    private readonly static string LicenseUrlDefaultValue = "";

    private string licenseUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LicenseUrl {
      get { return licenseUrl_ ?? LicenseUrlDefaultValue; }
      set {
        licenseUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "licenseUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLicenseUrl {
      get { return licenseUrl_ != null; }
    }
    /// <summary>Clears the value of the "licenseUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLicenseUrl() {
      licenseUrl_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Attribution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Attribution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourceTitle != other.SourceTitle) return false;
      if (SourceUrl != other.SourceUrl) return false;
      if (LicenseTitle != other.LicenseTitle) return false;
      if (LicenseUrl != other.LicenseUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSourceTitle) hash ^= SourceTitle.GetHashCode();
      if (HasSourceUrl) hash ^= SourceUrl.GetHashCode();
      if (HasLicenseTitle) hash ^= LicenseTitle.GetHashCode();
      if (HasLicenseUrl) hash ^= LicenseUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasSourceTitle) {
        output.WriteRawTag(10);
        output.WriteString(SourceTitle);
      }
      if (HasSourceUrl) {
        output.WriteRawTag(18);
        output.WriteString(SourceUrl);
      }
      if (HasLicenseTitle) {
        output.WriteRawTag(26);
        output.WriteString(LicenseTitle);
      }
      if (HasLicenseUrl) {
        output.WriteRawTag(34);
        output.WriteString(LicenseUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSourceTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceTitle);
      }
      if (HasSourceUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceUrl);
      }
      if (HasLicenseTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LicenseTitle);
      }
      if (HasLicenseUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LicenseUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Attribution other) {
      if (other == null) {
        return;
      }
      if (other.HasSourceTitle) {
        SourceTitle = other.SourceTitle;
      }
      if (other.HasSourceUrl) {
        SourceUrl = other.SourceUrl;
      }
      if (other.HasLicenseTitle) {
        LicenseTitle = other.LicenseTitle;
      }
      if (other.HasLicenseUrl) {
        LicenseUrl = other.LicenseUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SourceTitle = input.ReadString();
            break;
          }
          case 18: {
            SourceUrl = input.ReadString();
            break;
          }
          case 26: {
            LicenseTitle = input.ReadString();
            break;
          }
          case 34: {
            LicenseUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImagePalette : pb::IMessage<ImagePalette> {
    private static readonly pb::MessageParser<ImagePalette> _parser = new pb::MessageParser<ImagePalette>(() => new ImagePalette());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImagePalette> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[104]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImagePalette() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImagePalette(ImagePalette other) : this() {
      lightVibrantRGB_ = other.lightVibrantRGB_;
      vibrantRGB_ = other.vibrantRGB_;
      darkVibrantRGB_ = other.darkVibrantRGB_;
      lightMutedRGB_ = other.lightMutedRGB_;
      mutedRGB_ = other.mutedRGB_;
      darkMutedRGB_ = other.darkMutedRGB_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImagePalette Clone() {
      return new ImagePalette(this);
    }

    /// <summary>Field number for the "lightVibrantRGB" field.</summary>
    public const int LightVibrantRGBFieldNumber = 1;
    private readonly static string LightVibrantRGBDefaultValue = "";

    private string lightVibrantRGB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LightVibrantRGB {
      get { return lightVibrantRGB_ ?? LightVibrantRGBDefaultValue; }
      set {
        lightVibrantRGB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "lightVibrantRGB" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLightVibrantRGB {
      get { return lightVibrantRGB_ != null; }
    }
    /// <summary>Clears the value of the "lightVibrantRGB" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLightVibrantRGB() {
      lightVibrantRGB_ = null;
    }

    /// <summary>Field number for the "vibrantRGB" field.</summary>
    public const int VibrantRGBFieldNumber = 2;
    private readonly static string VibrantRGBDefaultValue = "";

    private string vibrantRGB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VibrantRGB {
      get { return vibrantRGB_ ?? VibrantRGBDefaultValue; }
      set {
        vibrantRGB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "vibrantRGB" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVibrantRGB {
      get { return vibrantRGB_ != null; }
    }
    /// <summary>Clears the value of the "vibrantRGB" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVibrantRGB() {
      vibrantRGB_ = null;
    }

    /// <summary>Field number for the "darkVibrantRGB" field.</summary>
    public const int DarkVibrantRGBFieldNumber = 3;
    private readonly static string DarkVibrantRGBDefaultValue = "";

    private string darkVibrantRGB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DarkVibrantRGB {
      get { return darkVibrantRGB_ ?? DarkVibrantRGBDefaultValue; }
      set {
        darkVibrantRGB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "darkVibrantRGB" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDarkVibrantRGB {
      get { return darkVibrantRGB_ != null; }
    }
    /// <summary>Clears the value of the "darkVibrantRGB" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDarkVibrantRGB() {
      darkVibrantRGB_ = null;
    }

    /// <summary>Field number for the "lightMutedRGB" field.</summary>
    public const int LightMutedRGBFieldNumber = 4;
    private readonly static string LightMutedRGBDefaultValue = "";

    private string lightMutedRGB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LightMutedRGB {
      get { return lightMutedRGB_ ?? LightMutedRGBDefaultValue; }
      set {
        lightMutedRGB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "lightMutedRGB" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLightMutedRGB {
      get { return lightMutedRGB_ != null; }
    }
    /// <summary>Clears the value of the "lightMutedRGB" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLightMutedRGB() {
      lightMutedRGB_ = null;
    }

    /// <summary>Field number for the "mutedRGB" field.</summary>
    public const int MutedRGBFieldNumber = 5;
    private readonly static string MutedRGBDefaultValue = "";

    private string mutedRGB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MutedRGB {
      get { return mutedRGB_ ?? MutedRGBDefaultValue; }
      set {
        mutedRGB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "mutedRGB" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMutedRGB {
      get { return mutedRGB_ != null; }
    }
    /// <summary>Clears the value of the "mutedRGB" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMutedRGB() {
      mutedRGB_ = null;
    }

    /// <summary>Field number for the "darkMutedRGB" field.</summary>
    public const int DarkMutedRGBFieldNumber = 6;
    private readonly static string DarkMutedRGBDefaultValue = "";

    private string darkMutedRGB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DarkMutedRGB {
      get { return darkMutedRGB_ ?? DarkMutedRGBDefaultValue; }
      set {
        darkMutedRGB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "darkMutedRGB" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDarkMutedRGB {
      get { return darkMutedRGB_ != null; }
    }
    /// <summary>Clears the value of the "darkMutedRGB" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDarkMutedRGB() {
      darkMutedRGB_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImagePalette);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImagePalette other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LightVibrantRGB != other.LightVibrantRGB) return false;
      if (VibrantRGB != other.VibrantRGB) return false;
      if (DarkVibrantRGB != other.DarkVibrantRGB) return false;
      if (LightMutedRGB != other.LightMutedRGB) return false;
      if (MutedRGB != other.MutedRGB) return false;
      if (DarkMutedRGB != other.DarkMutedRGB) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLightVibrantRGB) hash ^= LightVibrantRGB.GetHashCode();
      if (HasVibrantRGB) hash ^= VibrantRGB.GetHashCode();
      if (HasDarkVibrantRGB) hash ^= DarkVibrantRGB.GetHashCode();
      if (HasLightMutedRGB) hash ^= LightMutedRGB.GetHashCode();
      if (HasMutedRGB) hash ^= MutedRGB.GetHashCode();
      if (HasDarkMutedRGB) hash ^= DarkMutedRGB.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasLightVibrantRGB) {
        output.WriteRawTag(10);
        output.WriteString(LightVibrantRGB);
      }
      if (HasVibrantRGB) {
        output.WriteRawTag(18);
        output.WriteString(VibrantRGB);
      }
      if (HasDarkVibrantRGB) {
        output.WriteRawTag(26);
        output.WriteString(DarkVibrantRGB);
      }
      if (HasLightMutedRGB) {
        output.WriteRawTag(34);
        output.WriteString(LightMutedRGB);
      }
      if (HasMutedRGB) {
        output.WriteRawTag(42);
        output.WriteString(MutedRGB);
      }
      if (HasDarkMutedRGB) {
        output.WriteRawTag(50);
        output.WriteString(DarkMutedRGB);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasLightVibrantRGB) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LightVibrantRGB);
      }
      if (HasVibrantRGB) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VibrantRGB);
      }
      if (HasDarkVibrantRGB) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DarkVibrantRGB);
      }
      if (HasLightMutedRGB) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LightMutedRGB);
      }
      if (HasMutedRGB) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MutedRGB);
      }
      if (HasDarkMutedRGB) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DarkMutedRGB);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImagePalette other) {
      if (other == null) {
        return;
      }
      if (other.HasLightVibrantRGB) {
        LightVibrantRGB = other.LightVibrantRGB;
      }
      if (other.HasVibrantRGB) {
        VibrantRGB = other.VibrantRGB;
      }
      if (other.HasDarkVibrantRGB) {
        DarkVibrantRGB = other.DarkVibrantRGB;
      }
      if (other.HasLightMutedRGB) {
        LightMutedRGB = other.LightMutedRGB;
      }
      if (other.HasMutedRGB) {
        MutedRGB = other.MutedRGB;
      }
      if (other.HasDarkMutedRGB) {
        DarkMutedRGB = other.DarkMutedRGB;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LightVibrantRGB = input.ReadString();
            break;
          }
          case 18: {
            VibrantRGB = input.ReadString();
            break;
          }
          case 26: {
            DarkVibrantRGB = input.ReadString();
            break;
          }
          case 34: {
            LightMutedRGB = input.ReadString();
            break;
          }
          case 42: {
            MutedRGB = input.ReadString();
            break;
          }
          case 50: {
            DarkMutedRGB = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TranslatedText : pb::IMessage<TranslatedText> {
    private static readonly pb::MessageParser<TranslatedText> _parser = new pb::MessageParser<TranslatedText>(() => new TranslatedText());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TranslatedText> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[105]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslatedText() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslatedText(TranslatedText other) : this() {
      text_ = other.text_;
      sourceLocale_ = other.sourceLocale_;
      targetLocale_ = other.targetLocale_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslatedText Clone() {
      return new TranslatedText(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private readonly static string TextDefaultValue = "";

    private string text_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_ ?? TextDefaultValue; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasText {
      get { return text_ != null; }
    }
    /// <summary>Clears the value of the "text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearText() {
      text_ = null;
    }

    /// <summary>Field number for the "sourceLocale" field.</summary>
    public const int SourceLocaleFieldNumber = 2;
    private readonly static string SourceLocaleDefaultValue = "";

    private string sourceLocale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceLocale {
      get { return sourceLocale_ ?? SourceLocaleDefaultValue; }
      set {
        sourceLocale_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sourceLocale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSourceLocale {
      get { return sourceLocale_ != null; }
    }
    /// <summary>Clears the value of the "sourceLocale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSourceLocale() {
      sourceLocale_ = null;
    }

    /// <summary>Field number for the "targetLocale" field.</summary>
    public const int TargetLocaleFieldNumber = 3;
    private readonly static string TargetLocaleDefaultValue = "";

    private string targetLocale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetLocale {
      get { return targetLocale_ ?? TargetLocaleDefaultValue; }
      set {
        targetLocale_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "targetLocale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetLocale {
      get { return targetLocale_ != null; }
    }
    /// <summary>Clears the value of the "targetLocale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetLocale() {
      targetLocale_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TranslatedText);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TranslatedText other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      if (SourceLocale != other.SourceLocale) return false;
      if (TargetLocale != other.TargetLocale) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasText) hash ^= Text.GetHashCode();
      if (HasSourceLocale) hash ^= SourceLocale.GetHashCode();
      if (HasTargetLocale) hash ^= TargetLocale.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasText) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (HasSourceLocale) {
        output.WriteRawTag(18);
        output.WriteString(SourceLocale);
      }
      if (HasTargetLocale) {
        output.WriteRawTag(26);
        output.WriteString(TargetLocale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (HasSourceLocale) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceLocale);
      }
      if (HasTargetLocale) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetLocale);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TranslatedText other) {
      if (other == null) {
        return;
      }
      if (other.HasText) {
        Text = other.Text;
      }
      if (other.HasSourceLocale) {
        SourceLocale = other.SourceLocale;
      }
      if (other.HasTargetLocale) {
        TargetLocale = other.TargetLocale;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
          case 18: {
            SourceLocale = input.ReadString();
            break;
          }
          case 26: {
            TargetLocale = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlusOneData : pb::IMessage<PlusOneData> {
    private static readonly pb::MessageParser<PlusOneData> _parser = new pb::MessageParser<PlusOneData>(() => new PlusOneData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlusOneData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[106]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlusOneData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlusOneData(PlusOneData other) : this() {
      _hasBits0 = other._hasBits0;
      setByUser_ = other.setByUser_;
      total_ = other.total_;
      circlesTotal_ = other.circlesTotal_;
      circlesPeople_ = other.circlesPeople_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlusOneData Clone() {
      return new PlusOneData(this);
    }

    /// <summary>Field number for the "setByUser" field.</summary>
    public const int SetByUserFieldNumber = 1;
    private readonly static bool SetByUserDefaultValue = false;

    private bool setByUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SetByUser {
      get { if ((_hasBits0 & 1) != 0) { return setByUser_; } else { return SetByUserDefaultValue; } }
      set {
        _hasBits0 |= 1;
        setByUser_ = value;
      }
    }
    /// <summary>Gets whether the "setByUser" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSetByUser {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "setByUser" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSetByUser() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private readonly static long TotalDefaultValue = 0L;

    private long total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Total {
      get { if ((_hasBits0 & 2) != 0) { return total_; } else { return TotalDefaultValue; } }
      set {
        _hasBits0 |= 2;
        total_ = value;
      }
    }
    /// <summary>Gets whether the "total" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTotal {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "total" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTotal() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "circlesTotal" field.</summary>
    public const int CirclesTotalFieldNumber = 3;
    private readonly static long CirclesTotalDefaultValue = 0L;

    private long circlesTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CirclesTotal {
      get { if ((_hasBits0 & 4) != 0) { return circlesTotal_; } else { return CirclesTotalDefaultValue; } }
      set {
        _hasBits0 |= 4;
        circlesTotal_ = value;
      }
    }
    /// <summary>Gets whether the "circlesTotal" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCirclesTotal {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "circlesTotal" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCirclesTotal() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "circlesPeople" field.</summary>
    public const int CirclesPeopleFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.PlusPerson> _repeated_circlesPeople_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.PlusPerson.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.PlusPerson> circlesPeople_ = new pbc::RepeatedField<global::GooglePlayStore.PlusPerson>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.PlusPerson> CirclesPeople {
      get { return circlesPeople_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlusOneData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlusOneData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SetByUser != other.SetByUser) return false;
      if (Total != other.Total) return false;
      if (CirclesTotal != other.CirclesTotal) return false;
      if(!circlesPeople_.Equals(other.circlesPeople_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSetByUser) hash ^= SetByUser.GetHashCode();
      if (HasTotal) hash ^= Total.GetHashCode();
      if (HasCirclesTotal) hash ^= CirclesTotal.GetHashCode();
      hash ^= circlesPeople_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasSetByUser) {
        output.WriteRawTag(8);
        output.WriteBool(SetByUser);
      }
      if (HasTotal) {
        output.WriteRawTag(16);
        output.WriteInt64(Total);
      }
      if (HasCirclesTotal) {
        output.WriteRawTag(24);
        output.WriteInt64(CirclesTotal);
      }
      circlesPeople_.WriteTo(output, _repeated_circlesPeople_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSetByUser) {
        size += 1 + 1;
      }
      if (HasTotal) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Total);
      }
      if (HasCirclesTotal) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CirclesTotal);
      }
      size += circlesPeople_.CalculateSize(_repeated_circlesPeople_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlusOneData other) {
      if (other == null) {
        return;
      }
      if (other.HasSetByUser) {
        SetByUser = other.SetByUser;
      }
      if (other.HasTotal) {
        Total = other.Total;
      }
      if (other.HasCirclesTotal) {
        CirclesTotal = other.CirclesTotal;
      }
      circlesPeople_.Add(other.circlesPeople_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SetByUser = input.ReadBool();
            break;
          }
          case 16: {
            Total = input.ReadInt64();
            break;
          }
          case 24: {
            CirclesTotal = input.ReadInt64();
            break;
          }
          case 34: {
            circlesPeople_.AddEntriesFrom(input, _repeated_circlesPeople_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlusPerson : pb::IMessage<PlusPerson> {
    private static readonly pb::MessageParser<PlusPerson> _parser = new pb::MessageParser<PlusPerson>(() => new PlusPerson());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlusPerson> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[107]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlusPerson() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlusPerson(PlusPerson other) : this() {
      displayName_ = other.displayName_;
      profileImageUrl_ = other.profileImageUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlusPerson Clone() {
      return new PlusPerson(this);
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private readonly static string DisplayNameDefaultValue = "";

    private string displayName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_ ?? DisplayNameDefaultValue; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "displayName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDisplayName {
      get { return displayName_ != null; }
    }
    /// <summary>Clears the value of the "displayName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDisplayName() {
      displayName_ = null;
    }

    /// <summary>Field number for the "profileImageUrl" field.</summary>
    public const int ProfileImageUrlFieldNumber = 4;
    private readonly static string ProfileImageUrlDefaultValue = "";

    private string profileImageUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProfileImageUrl {
      get { return profileImageUrl_ ?? ProfileImageUrlDefaultValue; }
      set {
        profileImageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "profileImageUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProfileImageUrl {
      get { return profileImageUrl_ != null; }
    }
    /// <summary>Clears the value of the "profileImageUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProfileImageUrl() {
      profileImageUrl_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlusPerson);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlusPerson other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DisplayName != other.DisplayName) return false;
      if (ProfileImageUrl != other.ProfileImageUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDisplayName) hash ^= DisplayName.GetHashCode();
      if (HasProfileImageUrl) hash ^= ProfileImageUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasDisplayName) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (HasProfileImageUrl) {
        output.WriteRawTag(34);
        output.WriteString(ProfileImageUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDisplayName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (HasProfileImageUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProfileImageUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlusPerson other) {
      if (other == null) {
        return;
      }
      if (other.HasDisplayName) {
        DisplayName = other.DisplayName;
      }
      if (other.HasProfileImageUrl) {
        ProfileImageUrl = other.ProfileImageUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 34: {
            ProfileImageUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppDetails : pb::IMessage<AppDetails> {
    private static readonly pb::MessageParser<AppDetails> _parser = new pb::MessageParser<AppDetails>(() => new AppDetails());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[108]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppDetails(AppDetails other) : this() {
      _hasBits0 = other._hasBits0;
      developerName_ = other.developerName_;
      majorVersionNumber_ = other.majorVersionNumber_;
      versionCode_ = other.versionCode_;
      versionString_ = other.versionString_;
      title_ = other.title_;
      appCategory_ = other.appCategory_.Clone();
      contentRating_ = other.contentRating_;
      infoDownloadSize_ = other.infoDownloadSize_;
      permission_ = other.permission_.Clone();
      developerEmail_ = other.developerEmail_;
      developerWebsite_ = other.developerWebsite_;
      infoDownload_ = other.infoDownload_;
      packageName_ = other.packageName_;
      recentChangesHtml_ = other.recentChangesHtml_;
      infoUpdatedOn_ = other.infoUpdatedOn_;
      file_ = other.file_.Clone();
      appType_ = other.appType_;
      certificateHash_ = other.certificateHash_.Clone();
      variesWithDevice_ = other.variesWithDevice_;
      certificateSet_ = other.certificateSet_.Clone();
      autoAcquireFreeAppIfHigherVersionAvailableTag_ = other.autoAcquireFreeAppIfHigherVersionAvailableTag_.Clone();
      hasInstantLink2_ = other.hasInstantLink2_;
      splitId_ = other.splitId_.Clone();
      gamepadRequired_ = other.gamepadRequired_;
      externallyHosted_ = other.externallyHosted_;
      everExternallyHosted_ = other.everExternallyHosted_;
      installNotes_ = other.installNotes_;
      installLocation_ = other.installLocation_;
      targetSdkVersion_ = other.targetSdkVersion_;
      hasPreregistrationPromoCode_ = other.hasPreregistrationPromoCode_;
      dependencies_ = other.dependencies_ != null ? other.dependencies_.Clone() : null;
      testingProgramInfo_ = other.testingProgramInfo_ != null ? other.testingProgramInfo_.Clone() : null;
      earlyAccessInfo_ = other.earlyAccessInfo_ != null ? other.earlyAccessInfo_.Clone() : null;
      editorChoice_ = other.editorChoice_ != null ? other.editorChoice_.Clone() : null;
      instantLink_ = other.instantLink_;
      developerAddress_ = other.developerAddress_;
      publisher_ = other.publisher_ != null ? other.publisher_.Clone() : null;
      categoryName_ = other.categoryName_;
      downloadCount_ = other.downloadCount_;
      downloadLabelDisplay_ = other.downloadLabelDisplay_;
      inAppProduct_ = other.inAppProduct_;
      downloadLabelAbbreviated_ = other.downloadLabelAbbreviated_;
      downloadLabel_ = other.downloadLabel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppDetails Clone() {
      return new AppDetails(this);
    }

    /// <summary>Field number for the "developerName" field.</summary>
    public const int DeveloperNameFieldNumber = 1;
    private readonly static string DeveloperNameDefaultValue = "";

    private string developerName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeveloperName {
      get { return developerName_ ?? DeveloperNameDefaultValue; }
      set {
        developerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "developerName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeveloperName {
      get { return developerName_ != null; }
    }
    /// <summary>Clears the value of the "developerName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeveloperName() {
      developerName_ = null;
    }

    /// <summary>Field number for the "majorVersionNumber" field.</summary>
    public const int MajorVersionNumberFieldNumber = 2;
    private readonly static int MajorVersionNumberDefaultValue = 0;

    private int majorVersionNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MajorVersionNumber {
      get { if ((_hasBits0 & 1) != 0) { return majorVersionNumber_; } else { return MajorVersionNumberDefaultValue; } }
      set {
        _hasBits0 |= 1;
        majorVersionNumber_ = value;
      }
    }
    /// <summary>Gets whether the "majorVersionNumber" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMajorVersionNumber {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "majorVersionNumber" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMajorVersionNumber() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "versionCode" field.</summary>
    public const int VersionCodeFieldNumber = 3;
    private readonly static int VersionCodeDefaultValue = 0;

    private int versionCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VersionCode {
      get { if ((_hasBits0 & 2) != 0) { return versionCode_; } else { return VersionCodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        versionCode_ = value;
      }
    }
    /// <summary>Gets whether the "versionCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "versionCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionCode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "versionString" field.</summary>
    public const int VersionStringFieldNumber = 4;
    private readonly static string VersionStringDefaultValue = "";

    private string versionString_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionString {
      get { return versionString_ ?? VersionStringDefaultValue; }
      set {
        versionString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "versionString" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionString {
      get { return versionString_ != null; }
    }
    /// <summary>Clears the value of the "versionString" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionString() {
      versionString_ = null;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 5;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "appCategory" field.</summary>
    public const int AppCategoryFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_appCategory_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> appCategory_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AppCategory {
      get { return appCategory_; }
    }

    /// <summary>Field number for the "contentRating" field.</summary>
    public const int ContentRatingFieldNumber = 8;
    private readonly static int ContentRatingDefaultValue = 0;

    private int contentRating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ContentRating {
      get { if ((_hasBits0 & 4) != 0) { return contentRating_; } else { return ContentRatingDefaultValue; } }
      set {
        _hasBits0 |= 4;
        contentRating_ = value;
      }
    }
    /// <summary>Gets whether the "contentRating" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContentRating {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "contentRating" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContentRating() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "infoDownloadSize" field.</summary>
    public const int InfoDownloadSizeFieldNumber = 9;
    private readonly static long InfoDownloadSizeDefaultValue = 0L;

    private long infoDownloadSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InfoDownloadSize {
      get { if ((_hasBits0 & 8) != 0) { return infoDownloadSize_; } else { return InfoDownloadSizeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        infoDownloadSize_ = value;
      }
    }
    /// <summary>Gets whether the "infoDownloadSize" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInfoDownloadSize {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "infoDownloadSize" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInfoDownloadSize() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "permission" field.</summary>
    public const int PermissionFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_permission_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> permission_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Permission {
      get { return permission_; }
    }

    /// <summary>Field number for the "developerEmail" field.</summary>
    public const int DeveloperEmailFieldNumber = 11;
    private readonly static string DeveloperEmailDefaultValue = "";

    private string developerEmail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeveloperEmail {
      get { return developerEmail_ ?? DeveloperEmailDefaultValue; }
      set {
        developerEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "developerEmail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeveloperEmail {
      get { return developerEmail_ != null; }
    }
    /// <summary>Clears the value of the "developerEmail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeveloperEmail() {
      developerEmail_ = null;
    }

    /// <summary>Field number for the "developerWebsite" field.</summary>
    public const int DeveloperWebsiteFieldNumber = 12;
    private readonly static string DeveloperWebsiteDefaultValue = "";

    private string developerWebsite_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeveloperWebsite {
      get { return developerWebsite_ ?? DeveloperWebsiteDefaultValue; }
      set {
        developerWebsite_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "developerWebsite" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeveloperWebsite {
      get { return developerWebsite_ != null; }
    }
    /// <summary>Clears the value of the "developerWebsite" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeveloperWebsite() {
      developerWebsite_ = null;
    }

    /// <summary>Field number for the "infoDownload" field.</summary>
    public const int InfoDownloadFieldNumber = 13;
    private readonly static string InfoDownloadDefaultValue = "";

    private string infoDownload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InfoDownload {
      get { return infoDownload_ ?? InfoDownloadDefaultValue; }
      set {
        infoDownload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "infoDownload" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInfoDownload {
      get { return infoDownload_ != null; }
    }
    /// <summary>Clears the value of the "infoDownload" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInfoDownload() {
      infoDownload_ = null;
    }

    /// <summary>Field number for the "packageName" field.</summary>
    public const int PackageNameFieldNumber = 14;
    private readonly static string PackageNameDefaultValue = "";

    private string packageName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackageName {
      get { return packageName_ ?? PackageNameDefaultValue; }
      set {
        packageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "packageName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPackageName {
      get { return packageName_ != null; }
    }
    /// <summary>Clears the value of the "packageName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPackageName() {
      packageName_ = null;
    }

    /// <summary>Field number for the "recentChangesHtml" field.</summary>
    public const int RecentChangesHtmlFieldNumber = 15;
    private readonly static string RecentChangesHtmlDefaultValue = "";

    private string recentChangesHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RecentChangesHtml {
      get { return recentChangesHtml_ ?? RecentChangesHtmlDefaultValue; }
      set {
        recentChangesHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "recentChangesHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRecentChangesHtml {
      get { return recentChangesHtml_ != null; }
    }
    /// <summary>Clears the value of the "recentChangesHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRecentChangesHtml() {
      recentChangesHtml_ = null;
    }

    /// <summary>Field number for the "infoUpdatedOn" field.</summary>
    public const int InfoUpdatedOnFieldNumber = 16;
    private readonly static string InfoUpdatedOnDefaultValue = "";

    private string infoUpdatedOn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InfoUpdatedOn {
      get { return infoUpdatedOn_ ?? InfoUpdatedOnDefaultValue; }
      set {
        infoUpdatedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "infoUpdatedOn" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInfoUpdatedOn {
      get { return infoUpdatedOn_ != null; }
    }
    /// <summary>Clears the value of the "infoUpdatedOn" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInfoUpdatedOn() {
      infoUpdatedOn_ = null;
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 17;
    private static readonly pb::FieldCodec<global::GooglePlayStore.FileMetadata> _repeated_file_codec
        = pb::FieldCodec.ForMessage(138, global::GooglePlayStore.FileMetadata.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.FileMetadata> file_ = new pbc::RepeatedField<global::GooglePlayStore.FileMetadata>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.FileMetadata> File {
      get { return file_; }
    }

    /// <summary>Field number for the "appType" field.</summary>
    public const int AppTypeFieldNumber = 18;
    private readonly static string AppTypeDefaultValue = "";

    private string appType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppType {
      get { return appType_ ?? AppTypeDefaultValue; }
      set {
        appType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "appType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAppType {
      get { return appType_ != null; }
    }
    /// <summary>Clears the value of the "appType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAppType() {
      appType_ = null;
    }

    /// <summary>Field number for the "certificateHash" field.</summary>
    public const int CertificateHashFieldNumber = 19;
    private static readonly pb::FieldCodec<string> _repeated_certificateHash_codec
        = pb::FieldCodec.ForString(154);
    private readonly pbc::RepeatedField<string> certificateHash_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CertificateHash {
      get { return certificateHash_; }
    }

    /// <summary>Field number for the "variesWithDevice" field.</summary>
    public const int VariesWithDeviceFieldNumber = 21;
    private readonly static bool VariesWithDeviceDefaultValue = true;

    private bool variesWithDevice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool VariesWithDevice {
      get { if ((_hasBits0 & 16) != 0) { return variesWithDevice_; } else { return VariesWithDeviceDefaultValue; } }
      set {
        _hasBits0 |= 16;
        variesWithDevice_ = value;
      }
    }
    /// <summary>Gets whether the "variesWithDevice" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVariesWithDevice {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "variesWithDevice" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVariesWithDevice() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "certificateSet" field.</summary>
    public const int CertificateSetFieldNumber = 22;
    private static readonly pb::FieldCodec<global::GooglePlayStore.CertificateSet> _repeated_certificateSet_codec
        = pb::FieldCodec.ForMessage(178, global::GooglePlayStore.CertificateSet.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.CertificateSet> certificateSet_ = new pbc::RepeatedField<global::GooglePlayStore.CertificateSet>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.CertificateSet> CertificateSet {
      get { return certificateSet_; }
    }

    /// <summary>Field number for the "autoAcquireFreeAppIfHigherVersionAvailableTag" field.</summary>
    public const int AutoAcquireFreeAppIfHigherVersionAvailableTagFieldNumber = 23;
    private static readonly pb::FieldCodec<string> _repeated_autoAcquireFreeAppIfHigherVersionAvailableTag_codec
        = pb::FieldCodec.ForString(186);
    private readonly pbc::RepeatedField<string> autoAcquireFreeAppIfHigherVersionAvailableTag_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AutoAcquireFreeAppIfHigherVersionAvailableTag {
      get { return autoAcquireFreeAppIfHigherVersionAvailableTag_; }
    }

    /// <summary>Field number for the "hasInstantLink2" field.</summary>
    public const int HasInstantLink2FieldNumber = 24;
    private readonly static bool HasInstantLink2DefaultValue = false;

    private bool hasInstantLink2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInstantLink2 {
      get { if ((_hasBits0 & 32) != 0) { return hasInstantLink2_; } else { return HasInstantLink2DefaultValue; } }
      set {
        _hasBits0 |= 32;
        hasInstantLink2_ = value;
      }
    }
    /// <summary>Gets whether the "hasInstantLink2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHasInstantLink2 {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "hasInstantLink2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHasInstantLink2() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "splitId" field.</summary>
    public const int SplitIdFieldNumber = 25;
    private static readonly pb::FieldCodec<string> _repeated_splitId_codec
        = pb::FieldCodec.ForString(202);
    private readonly pbc::RepeatedField<string> splitId_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SplitId {
      get { return splitId_; }
    }

    /// <summary>Field number for the "gamepadRequired" field.</summary>
    public const int GamepadRequiredFieldNumber = 26;
    private readonly static bool GamepadRequiredDefaultValue = false;

    private bool gamepadRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool GamepadRequired {
      get { if ((_hasBits0 & 64) != 0) { return gamepadRequired_; } else { return GamepadRequiredDefaultValue; } }
      set {
        _hasBits0 |= 64;
        gamepadRequired_ = value;
      }
    }
    /// <summary>Gets whether the "gamepadRequired" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGamepadRequired {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "gamepadRequired" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGamepadRequired() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "externallyHosted" field.</summary>
    public const int ExternallyHostedFieldNumber = 27;
    private readonly static bool ExternallyHostedDefaultValue = false;

    private bool externallyHosted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ExternallyHosted {
      get { if ((_hasBits0 & 128) != 0) { return externallyHosted_; } else { return ExternallyHostedDefaultValue; } }
      set {
        _hasBits0 |= 128;
        externallyHosted_ = value;
      }
    }
    /// <summary>Gets whether the "externallyHosted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExternallyHosted {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "externallyHosted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExternallyHosted() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "everExternallyHosted" field.</summary>
    public const int EverExternallyHostedFieldNumber = 28;
    private readonly static bool EverExternallyHostedDefaultValue = false;

    private bool everExternallyHosted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EverExternallyHosted {
      get { if ((_hasBits0 & 256) != 0) { return everExternallyHosted_; } else { return EverExternallyHostedDefaultValue; } }
      set {
        _hasBits0 |= 256;
        everExternallyHosted_ = value;
      }
    }
    /// <summary>Gets whether the "everExternallyHosted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEverExternallyHosted {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "everExternallyHosted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEverExternallyHosted() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "installNotes" field.</summary>
    public const int InstallNotesFieldNumber = 30;
    private readonly static string InstallNotesDefaultValue = "";

    private string installNotes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstallNotes {
      get { return installNotes_ ?? InstallNotesDefaultValue; }
      set {
        installNotes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "installNotes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInstallNotes {
      get { return installNotes_ != null; }
    }
    /// <summary>Clears the value of the "installNotes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInstallNotes() {
      installNotes_ = null;
    }

    /// <summary>Field number for the "installLocation" field.</summary>
    public const int InstallLocationFieldNumber = 31;
    private readonly static int InstallLocationDefaultValue = 0;

    private int installLocation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InstallLocation {
      get { if ((_hasBits0 & 512) != 0) { return installLocation_; } else { return InstallLocationDefaultValue; } }
      set {
        _hasBits0 |= 512;
        installLocation_ = value;
      }
    }
    /// <summary>Gets whether the "installLocation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInstallLocation {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "installLocation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInstallLocation() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "targetSdkVersion" field.</summary>
    public const int TargetSdkVersionFieldNumber = 32;
    private readonly static int TargetSdkVersionDefaultValue = 0;

    private int targetSdkVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetSdkVersion {
      get { if ((_hasBits0 & 1024) != 0) { return targetSdkVersion_; } else { return TargetSdkVersionDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        targetSdkVersion_ = value;
      }
    }
    /// <summary>Gets whether the "targetSdkVersion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetSdkVersion {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "targetSdkVersion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetSdkVersion() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "hasPreregistrationPromoCode" field.</summary>
    public const int HasPreregistrationPromoCodeFieldNumber = 33;
    private readonly static string HasPreregistrationPromoCodeDefaultValue = "";

    private string hasPreregistrationPromoCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HasPreregistrationPromoCode {
      get { return hasPreregistrationPromoCode_ ?? HasPreregistrationPromoCodeDefaultValue; }
      set {
        hasPreregistrationPromoCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hasPreregistrationPromoCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHasPreregistrationPromoCode {
      get { return hasPreregistrationPromoCode_ != null; }
    }
    /// <summary>Clears the value of the "hasPreregistrationPromoCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHasPreregistrationPromoCode() {
      hasPreregistrationPromoCode_ = null;
    }

    /// <summary>Field number for the "dependencies" field.</summary>
    public const int DependenciesFieldNumber = 34;
    private global::GooglePlayStore.Dependencies dependencies_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Dependencies Dependencies {
      get { return dependencies_; }
      set {
        dependencies_ = value;
      }
    }

    /// <summary>Field number for the "testingProgramInfo" field.</summary>
    public const int TestingProgramInfoFieldNumber = 35;
    private global::GooglePlayStore.TestingProgramInfo testingProgramInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TestingProgramInfo TestingProgramInfo {
      get { return testingProgramInfo_; }
      set {
        testingProgramInfo_ = value;
      }
    }

    /// <summary>Field number for the "earlyAccessInfo" field.</summary>
    public const int EarlyAccessInfoFieldNumber = 36;
    private global::GooglePlayStore.EarlyAccessInfo earlyAccessInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.EarlyAccessInfo EarlyAccessInfo {
      get { return earlyAccessInfo_; }
      set {
        earlyAccessInfo_ = value;
      }
    }

    /// <summary>Field number for the "editorChoice" field.</summary>
    public const int EditorChoiceFieldNumber = 41;
    private global::GooglePlayStore.EditorChoice editorChoice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.EditorChoice EditorChoice {
      get { return editorChoice_; }
      set {
        editorChoice_ = value;
      }
    }

    /// <summary>Field number for the "instantLink" field.</summary>
    public const int InstantLinkFieldNumber = 43;
    private readonly static string InstantLinkDefaultValue = "";

    private string instantLink_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstantLink {
      get { return instantLink_ ?? InstantLinkDefaultValue; }
      set {
        instantLink_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "instantLink" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInstantLink {
      get { return instantLink_ != null; }
    }
    /// <summary>Clears the value of the "instantLink" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInstantLink() {
      instantLink_ = null;
    }

    /// <summary>Field number for the "developerAddress" field.</summary>
    public const int DeveloperAddressFieldNumber = 45;
    private readonly static string DeveloperAddressDefaultValue = "";

    private string developerAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeveloperAddress {
      get { return developerAddress_ ?? DeveloperAddressDefaultValue; }
      set {
        developerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "developerAddress" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeveloperAddress {
      get { return developerAddress_ != null; }
    }
    /// <summary>Clears the value of the "developerAddress" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeveloperAddress() {
      developerAddress_ = null;
    }

    /// <summary>Field number for the "publisher" field.</summary>
    public const int PublisherFieldNumber = 46;
    private global::GooglePlayStore.Publisher publisher_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Publisher Publisher {
      get { return publisher_; }
      set {
        publisher_ = value;
      }
    }

    /// <summary>Field number for the "categoryName" field.</summary>
    public const int CategoryNameFieldNumber = 48;
    private readonly static string CategoryNameDefaultValue = "";

    private string categoryName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CategoryName {
      get { return categoryName_ ?? CategoryNameDefaultValue; }
      set {
        categoryName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "categoryName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCategoryName {
      get { return categoryName_ != null; }
    }
    /// <summary>Clears the value of the "categoryName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCategoryName() {
      categoryName_ = null;
    }

    /// <summary>Field number for the "downloadCount" field.</summary>
    public const int DownloadCountFieldNumber = 53;
    private readonly static long DownloadCountDefaultValue = 0L;

    private long downloadCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DownloadCount {
      get { if ((_hasBits0 & 2048) != 0) { return downloadCount_; } else { return DownloadCountDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        downloadCount_ = value;
      }
    }
    /// <summary>Gets whether the "downloadCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDownloadCount {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "downloadCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDownloadCount() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "downloadLabelDisplay" field.</summary>
    public const int DownloadLabelDisplayFieldNumber = 61;
    private readonly static string DownloadLabelDisplayDefaultValue = "";

    private string downloadLabelDisplay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DownloadLabelDisplay {
      get { return downloadLabelDisplay_ ?? DownloadLabelDisplayDefaultValue; }
      set {
        downloadLabelDisplay_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "downloadLabelDisplay" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDownloadLabelDisplay {
      get { return downloadLabelDisplay_ != null; }
    }
    /// <summary>Clears the value of the "downloadLabelDisplay" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDownloadLabelDisplay() {
      downloadLabelDisplay_ = null;
    }

    /// <summary>Field number for the "inAppProduct" field.</summary>
    public const int InAppProductFieldNumber = 67;
    private readonly static string InAppProductDefaultValue = "";

    private string inAppProduct_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InAppProduct {
      get { return inAppProduct_ ?? InAppProductDefaultValue; }
      set {
        inAppProduct_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "inAppProduct" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInAppProduct {
      get { return inAppProduct_ != null; }
    }
    /// <summary>Clears the value of the "inAppProduct" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInAppProduct() {
      inAppProduct_ = null;
    }

    /// <summary>Field number for the "downloadLabelAbbreviated" field.</summary>
    public const int DownloadLabelAbbreviatedFieldNumber = 77;
    private readonly static string DownloadLabelAbbreviatedDefaultValue = "";

    private string downloadLabelAbbreviated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DownloadLabelAbbreviated {
      get { return downloadLabelAbbreviated_ ?? DownloadLabelAbbreviatedDefaultValue; }
      set {
        downloadLabelAbbreviated_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "downloadLabelAbbreviated" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDownloadLabelAbbreviated {
      get { return downloadLabelAbbreviated_ != null; }
    }
    /// <summary>Clears the value of the "downloadLabelAbbreviated" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDownloadLabelAbbreviated() {
      downloadLabelAbbreviated_ = null;
    }

    /// <summary>Field number for the "downloadLabel" field.</summary>
    public const int DownloadLabelFieldNumber = 78;
    private readonly static string DownloadLabelDefaultValue = "";

    private string downloadLabel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DownloadLabel {
      get { return downloadLabel_ ?? DownloadLabelDefaultValue; }
      set {
        downloadLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "downloadLabel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDownloadLabel {
      get { return downloadLabel_ != null; }
    }
    /// <summary>Clears the value of the "downloadLabel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDownloadLabel() {
      downloadLabel_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeveloperName != other.DeveloperName) return false;
      if (MajorVersionNumber != other.MajorVersionNumber) return false;
      if (VersionCode != other.VersionCode) return false;
      if (VersionString != other.VersionString) return false;
      if (Title != other.Title) return false;
      if(!appCategory_.Equals(other.appCategory_)) return false;
      if (ContentRating != other.ContentRating) return false;
      if (InfoDownloadSize != other.InfoDownloadSize) return false;
      if(!permission_.Equals(other.permission_)) return false;
      if (DeveloperEmail != other.DeveloperEmail) return false;
      if (DeveloperWebsite != other.DeveloperWebsite) return false;
      if (InfoDownload != other.InfoDownload) return false;
      if (PackageName != other.PackageName) return false;
      if (RecentChangesHtml != other.RecentChangesHtml) return false;
      if (InfoUpdatedOn != other.InfoUpdatedOn) return false;
      if(!file_.Equals(other.file_)) return false;
      if (AppType != other.AppType) return false;
      if(!certificateHash_.Equals(other.certificateHash_)) return false;
      if (VariesWithDevice != other.VariesWithDevice) return false;
      if(!certificateSet_.Equals(other.certificateSet_)) return false;
      if(!autoAcquireFreeAppIfHigherVersionAvailableTag_.Equals(other.autoAcquireFreeAppIfHigherVersionAvailableTag_)) return false;
      if (HasInstantLink2 != other.HasInstantLink2) return false;
      if(!splitId_.Equals(other.splitId_)) return false;
      if (GamepadRequired != other.GamepadRequired) return false;
      if (ExternallyHosted != other.ExternallyHosted) return false;
      if (EverExternallyHosted != other.EverExternallyHosted) return false;
      if (InstallNotes != other.InstallNotes) return false;
      if (InstallLocation != other.InstallLocation) return false;
      if (TargetSdkVersion != other.TargetSdkVersion) return false;
      if (HasPreregistrationPromoCode != other.HasPreregistrationPromoCode) return false;
      if (!object.Equals(Dependencies, other.Dependencies)) return false;
      if (!object.Equals(TestingProgramInfo, other.TestingProgramInfo)) return false;
      if (!object.Equals(EarlyAccessInfo, other.EarlyAccessInfo)) return false;
      if (!object.Equals(EditorChoice, other.EditorChoice)) return false;
      if (InstantLink != other.InstantLink) return false;
      if (DeveloperAddress != other.DeveloperAddress) return false;
      if (!object.Equals(Publisher, other.Publisher)) return false;
      if (CategoryName != other.CategoryName) return false;
      if (DownloadCount != other.DownloadCount) return false;
      if (DownloadLabelDisplay != other.DownloadLabelDisplay) return false;
      if (InAppProduct != other.InAppProduct) return false;
      if (DownloadLabelAbbreviated != other.DownloadLabelAbbreviated) return false;
      if (DownloadLabel != other.DownloadLabel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDeveloperName) hash ^= DeveloperName.GetHashCode();
      if (HasMajorVersionNumber) hash ^= MajorVersionNumber.GetHashCode();
      if (HasVersionCode) hash ^= VersionCode.GetHashCode();
      if (HasVersionString) hash ^= VersionString.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      hash ^= appCategory_.GetHashCode();
      if (HasContentRating) hash ^= ContentRating.GetHashCode();
      if (HasInfoDownloadSize) hash ^= InfoDownloadSize.GetHashCode();
      hash ^= permission_.GetHashCode();
      if (HasDeveloperEmail) hash ^= DeveloperEmail.GetHashCode();
      if (HasDeveloperWebsite) hash ^= DeveloperWebsite.GetHashCode();
      if (HasInfoDownload) hash ^= InfoDownload.GetHashCode();
      if (HasPackageName) hash ^= PackageName.GetHashCode();
      if (HasRecentChangesHtml) hash ^= RecentChangesHtml.GetHashCode();
      if (HasInfoUpdatedOn) hash ^= InfoUpdatedOn.GetHashCode();
      hash ^= file_.GetHashCode();
      if (HasAppType) hash ^= AppType.GetHashCode();
      hash ^= certificateHash_.GetHashCode();
      if (HasVariesWithDevice) hash ^= VariesWithDevice.GetHashCode();
      hash ^= certificateSet_.GetHashCode();
      hash ^= autoAcquireFreeAppIfHigherVersionAvailableTag_.GetHashCode();
      if (HasHasInstantLink2) hash ^= HasInstantLink2.GetHashCode();
      hash ^= splitId_.GetHashCode();
      if (HasGamepadRequired) hash ^= GamepadRequired.GetHashCode();
      if (HasExternallyHosted) hash ^= ExternallyHosted.GetHashCode();
      if (HasEverExternallyHosted) hash ^= EverExternallyHosted.GetHashCode();
      if (HasInstallNotes) hash ^= InstallNotes.GetHashCode();
      if (HasInstallLocation) hash ^= InstallLocation.GetHashCode();
      if (HasTargetSdkVersion) hash ^= TargetSdkVersion.GetHashCode();
      if (HasHasPreregistrationPromoCode) hash ^= HasPreregistrationPromoCode.GetHashCode();
      if (dependencies_ != null) hash ^= Dependencies.GetHashCode();
      if (testingProgramInfo_ != null) hash ^= TestingProgramInfo.GetHashCode();
      if (earlyAccessInfo_ != null) hash ^= EarlyAccessInfo.GetHashCode();
      if (editorChoice_ != null) hash ^= EditorChoice.GetHashCode();
      if (HasInstantLink) hash ^= InstantLink.GetHashCode();
      if (HasDeveloperAddress) hash ^= DeveloperAddress.GetHashCode();
      if (publisher_ != null) hash ^= Publisher.GetHashCode();
      if (HasCategoryName) hash ^= CategoryName.GetHashCode();
      if (HasDownloadCount) hash ^= DownloadCount.GetHashCode();
      if (HasDownloadLabelDisplay) hash ^= DownloadLabelDisplay.GetHashCode();
      if (HasInAppProduct) hash ^= InAppProduct.GetHashCode();
      if (HasDownloadLabelAbbreviated) hash ^= DownloadLabelAbbreviated.GetHashCode();
      if (HasDownloadLabel) hash ^= DownloadLabel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasDeveloperName) {
        output.WriteRawTag(10);
        output.WriteString(DeveloperName);
      }
      if (HasMajorVersionNumber) {
        output.WriteRawTag(16);
        output.WriteInt32(MajorVersionNumber);
      }
      if (HasVersionCode) {
        output.WriteRawTag(24);
        output.WriteInt32(VersionCode);
      }
      if (HasVersionString) {
        output.WriteRawTag(34);
        output.WriteString(VersionString);
      }
      if (HasTitle) {
        output.WriteRawTag(42);
        output.WriteString(Title);
      }
      appCategory_.WriteTo(output, _repeated_appCategory_codec);
      if (HasContentRating) {
        output.WriteRawTag(64);
        output.WriteInt32(ContentRating);
      }
      if (HasInfoDownloadSize) {
        output.WriteRawTag(72);
        output.WriteInt64(InfoDownloadSize);
      }
      permission_.WriteTo(output, _repeated_permission_codec);
      if (HasDeveloperEmail) {
        output.WriteRawTag(90);
        output.WriteString(DeveloperEmail);
      }
      if (HasDeveloperWebsite) {
        output.WriteRawTag(98);
        output.WriteString(DeveloperWebsite);
      }
      if (HasInfoDownload) {
        output.WriteRawTag(106);
        output.WriteString(InfoDownload);
      }
      if (HasPackageName) {
        output.WriteRawTag(114);
        output.WriteString(PackageName);
      }
      if (HasRecentChangesHtml) {
        output.WriteRawTag(122);
        output.WriteString(RecentChangesHtml);
      }
      if (HasInfoUpdatedOn) {
        output.WriteRawTag(130, 1);
        output.WriteString(InfoUpdatedOn);
      }
      file_.WriteTo(output, _repeated_file_codec);
      if (HasAppType) {
        output.WriteRawTag(146, 1);
        output.WriteString(AppType);
      }
      certificateHash_.WriteTo(output, _repeated_certificateHash_codec);
      if (HasVariesWithDevice) {
        output.WriteRawTag(168, 1);
        output.WriteBool(VariesWithDevice);
      }
      certificateSet_.WriteTo(output, _repeated_certificateSet_codec);
      autoAcquireFreeAppIfHigherVersionAvailableTag_.WriteTo(output, _repeated_autoAcquireFreeAppIfHigherVersionAvailableTag_codec);
      if (HasHasInstantLink2) {
        output.WriteRawTag(192, 1);
        output.WriteBool(HasInstantLink2);
      }
      splitId_.WriteTo(output, _repeated_splitId_codec);
      if (HasGamepadRequired) {
        output.WriteRawTag(208, 1);
        output.WriteBool(GamepadRequired);
      }
      if (HasExternallyHosted) {
        output.WriteRawTag(216, 1);
        output.WriteBool(ExternallyHosted);
      }
      if (HasEverExternallyHosted) {
        output.WriteRawTag(224, 1);
        output.WriteBool(EverExternallyHosted);
      }
      if (HasInstallNotes) {
        output.WriteRawTag(242, 1);
        output.WriteString(InstallNotes);
      }
      if (HasInstallLocation) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(InstallLocation);
      }
      if (HasTargetSdkVersion) {
        output.WriteRawTag(128, 2);
        output.WriteInt32(TargetSdkVersion);
      }
      if (HasHasPreregistrationPromoCode) {
        output.WriteRawTag(138, 2);
        output.WriteString(HasPreregistrationPromoCode);
      }
      if (dependencies_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(Dependencies);
      }
      if (testingProgramInfo_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(TestingProgramInfo);
      }
      if (earlyAccessInfo_ != null) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(EarlyAccessInfo);
      }
      if (editorChoice_ != null) {
        output.WriteRawTag(202, 2);
        output.WriteMessage(EditorChoice);
      }
      if (HasInstantLink) {
        output.WriteRawTag(218, 2);
        output.WriteString(InstantLink);
      }
      if (HasDeveloperAddress) {
        output.WriteRawTag(234, 2);
        output.WriteString(DeveloperAddress);
      }
      if (publisher_ != null) {
        output.WriteRawTag(242, 2);
        output.WriteMessage(Publisher);
      }
      if (HasCategoryName) {
        output.WriteRawTag(130, 3);
        output.WriteString(CategoryName);
      }
      if (HasDownloadCount) {
        output.WriteRawTag(168, 3);
        output.WriteInt64(DownloadCount);
      }
      if (HasDownloadLabelDisplay) {
        output.WriteRawTag(234, 3);
        output.WriteString(DownloadLabelDisplay);
      }
      if (HasInAppProduct) {
        output.WriteRawTag(154, 4);
        output.WriteString(InAppProduct);
      }
      if (HasDownloadLabelAbbreviated) {
        output.WriteRawTag(234, 4);
        output.WriteString(DownloadLabelAbbreviated);
      }
      if (HasDownloadLabel) {
        output.WriteRawTag(242, 4);
        output.WriteString(DownloadLabel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDeveloperName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeveloperName);
      }
      if (HasMajorVersionNumber) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MajorVersionNumber);
      }
      if (HasVersionCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VersionCode);
      }
      if (HasVersionString) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionString);
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      size += appCategory_.CalculateSize(_repeated_appCategory_codec);
      if (HasContentRating) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContentRating);
      }
      if (HasInfoDownloadSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InfoDownloadSize);
      }
      size += permission_.CalculateSize(_repeated_permission_codec);
      if (HasDeveloperEmail) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeveloperEmail);
      }
      if (HasDeveloperWebsite) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeveloperWebsite);
      }
      if (HasInfoDownload) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InfoDownload);
      }
      if (HasPackageName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageName);
      }
      if (HasRecentChangesHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RecentChangesHtml);
      }
      if (HasInfoUpdatedOn) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(InfoUpdatedOn);
      }
      size += file_.CalculateSize(_repeated_file_codec);
      if (HasAppType) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AppType);
      }
      size += certificateHash_.CalculateSize(_repeated_certificateHash_codec);
      if (HasVariesWithDevice) {
        size += 2 + 1;
      }
      size += certificateSet_.CalculateSize(_repeated_certificateSet_codec);
      size += autoAcquireFreeAppIfHigherVersionAvailableTag_.CalculateSize(_repeated_autoAcquireFreeAppIfHigherVersionAvailableTag_codec);
      if (HasHasInstantLink2) {
        size += 2 + 1;
      }
      size += splitId_.CalculateSize(_repeated_splitId_codec);
      if (HasGamepadRequired) {
        size += 2 + 1;
      }
      if (HasExternallyHosted) {
        size += 2 + 1;
      }
      if (HasEverExternallyHosted) {
        size += 2 + 1;
      }
      if (HasInstallNotes) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(InstallNotes);
      }
      if (HasInstallLocation) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(InstallLocation);
      }
      if (HasTargetSdkVersion) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TargetSdkVersion);
      }
      if (HasHasPreregistrationPromoCode) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HasPreregistrationPromoCode);
      }
      if (dependencies_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Dependencies);
      }
      if (testingProgramInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TestingProgramInfo);
      }
      if (earlyAccessInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EarlyAccessInfo);
      }
      if (editorChoice_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EditorChoice);
      }
      if (HasInstantLink) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(InstantLink);
      }
      if (HasDeveloperAddress) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DeveloperAddress);
      }
      if (publisher_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Publisher);
      }
      if (HasCategoryName) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CategoryName);
      }
      if (HasDownloadCount) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(DownloadCount);
      }
      if (HasDownloadLabelDisplay) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DownloadLabelDisplay);
      }
      if (HasInAppProduct) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(InAppProduct);
      }
      if (HasDownloadLabelAbbreviated) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DownloadLabelAbbreviated);
      }
      if (HasDownloadLabel) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DownloadLabel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppDetails other) {
      if (other == null) {
        return;
      }
      if (other.HasDeveloperName) {
        DeveloperName = other.DeveloperName;
      }
      if (other.HasMajorVersionNumber) {
        MajorVersionNumber = other.MajorVersionNumber;
      }
      if (other.HasVersionCode) {
        VersionCode = other.VersionCode;
      }
      if (other.HasVersionString) {
        VersionString = other.VersionString;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      appCategory_.Add(other.appCategory_);
      if (other.HasContentRating) {
        ContentRating = other.ContentRating;
      }
      if (other.HasInfoDownloadSize) {
        InfoDownloadSize = other.InfoDownloadSize;
      }
      permission_.Add(other.permission_);
      if (other.HasDeveloperEmail) {
        DeveloperEmail = other.DeveloperEmail;
      }
      if (other.HasDeveloperWebsite) {
        DeveloperWebsite = other.DeveloperWebsite;
      }
      if (other.HasInfoDownload) {
        InfoDownload = other.InfoDownload;
      }
      if (other.HasPackageName) {
        PackageName = other.PackageName;
      }
      if (other.HasRecentChangesHtml) {
        RecentChangesHtml = other.RecentChangesHtml;
      }
      if (other.HasInfoUpdatedOn) {
        InfoUpdatedOn = other.InfoUpdatedOn;
      }
      file_.Add(other.file_);
      if (other.HasAppType) {
        AppType = other.AppType;
      }
      certificateHash_.Add(other.certificateHash_);
      if (other.HasVariesWithDevice) {
        VariesWithDevice = other.VariesWithDevice;
      }
      certificateSet_.Add(other.certificateSet_);
      autoAcquireFreeAppIfHigherVersionAvailableTag_.Add(other.autoAcquireFreeAppIfHigherVersionAvailableTag_);
      if (other.HasHasInstantLink2) {
        HasInstantLink2 = other.HasInstantLink2;
      }
      splitId_.Add(other.splitId_);
      if (other.HasGamepadRequired) {
        GamepadRequired = other.GamepadRequired;
      }
      if (other.HasExternallyHosted) {
        ExternallyHosted = other.ExternallyHosted;
      }
      if (other.HasEverExternallyHosted) {
        EverExternallyHosted = other.EverExternallyHosted;
      }
      if (other.HasInstallNotes) {
        InstallNotes = other.InstallNotes;
      }
      if (other.HasInstallLocation) {
        InstallLocation = other.InstallLocation;
      }
      if (other.HasTargetSdkVersion) {
        TargetSdkVersion = other.TargetSdkVersion;
      }
      if (other.HasHasPreregistrationPromoCode) {
        HasPreregistrationPromoCode = other.HasPreregistrationPromoCode;
      }
      if (other.dependencies_ != null) {
        if (dependencies_ == null) {
          Dependencies = new global::GooglePlayStore.Dependencies();
        }
        Dependencies.MergeFrom(other.Dependencies);
      }
      if (other.testingProgramInfo_ != null) {
        if (testingProgramInfo_ == null) {
          TestingProgramInfo = new global::GooglePlayStore.TestingProgramInfo();
        }
        TestingProgramInfo.MergeFrom(other.TestingProgramInfo);
      }
      if (other.earlyAccessInfo_ != null) {
        if (earlyAccessInfo_ == null) {
          EarlyAccessInfo = new global::GooglePlayStore.EarlyAccessInfo();
        }
        EarlyAccessInfo.MergeFrom(other.EarlyAccessInfo);
      }
      if (other.editorChoice_ != null) {
        if (editorChoice_ == null) {
          EditorChoice = new global::GooglePlayStore.EditorChoice();
        }
        EditorChoice.MergeFrom(other.EditorChoice);
      }
      if (other.HasInstantLink) {
        InstantLink = other.InstantLink;
      }
      if (other.HasDeveloperAddress) {
        DeveloperAddress = other.DeveloperAddress;
      }
      if (other.publisher_ != null) {
        if (publisher_ == null) {
          Publisher = new global::GooglePlayStore.Publisher();
        }
        Publisher.MergeFrom(other.Publisher);
      }
      if (other.HasCategoryName) {
        CategoryName = other.CategoryName;
      }
      if (other.HasDownloadCount) {
        DownloadCount = other.DownloadCount;
      }
      if (other.HasDownloadLabelDisplay) {
        DownloadLabelDisplay = other.DownloadLabelDisplay;
      }
      if (other.HasInAppProduct) {
        InAppProduct = other.InAppProduct;
      }
      if (other.HasDownloadLabelAbbreviated) {
        DownloadLabelAbbreviated = other.DownloadLabelAbbreviated;
      }
      if (other.HasDownloadLabel) {
        DownloadLabel = other.DownloadLabel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeveloperName = input.ReadString();
            break;
          }
          case 16: {
            MajorVersionNumber = input.ReadInt32();
            break;
          }
          case 24: {
            VersionCode = input.ReadInt32();
            break;
          }
          case 34: {
            VersionString = input.ReadString();
            break;
          }
          case 42: {
            Title = input.ReadString();
            break;
          }
          case 58: {
            appCategory_.AddEntriesFrom(input, _repeated_appCategory_codec);
            break;
          }
          case 64: {
            ContentRating = input.ReadInt32();
            break;
          }
          case 72: {
            InfoDownloadSize = input.ReadInt64();
            break;
          }
          case 82: {
            permission_.AddEntriesFrom(input, _repeated_permission_codec);
            break;
          }
          case 90: {
            DeveloperEmail = input.ReadString();
            break;
          }
          case 98: {
            DeveloperWebsite = input.ReadString();
            break;
          }
          case 106: {
            InfoDownload = input.ReadString();
            break;
          }
          case 114: {
            PackageName = input.ReadString();
            break;
          }
          case 122: {
            RecentChangesHtml = input.ReadString();
            break;
          }
          case 130: {
            InfoUpdatedOn = input.ReadString();
            break;
          }
          case 138: {
            file_.AddEntriesFrom(input, _repeated_file_codec);
            break;
          }
          case 146: {
            AppType = input.ReadString();
            break;
          }
          case 154: {
            certificateHash_.AddEntriesFrom(input, _repeated_certificateHash_codec);
            break;
          }
          case 168: {
            VariesWithDevice = input.ReadBool();
            break;
          }
          case 178: {
            certificateSet_.AddEntriesFrom(input, _repeated_certificateSet_codec);
            break;
          }
          case 186: {
            autoAcquireFreeAppIfHigherVersionAvailableTag_.AddEntriesFrom(input, _repeated_autoAcquireFreeAppIfHigherVersionAvailableTag_codec);
            break;
          }
          case 192: {
            HasInstantLink2 = input.ReadBool();
            break;
          }
          case 202: {
            splitId_.AddEntriesFrom(input, _repeated_splitId_codec);
            break;
          }
          case 208: {
            GamepadRequired = input.ReadBool();
            break;
          }
          case 216: {
            ExternallyHosted = input.ReadBool();
            break;
          }
          case 224: {
            EverExternallyHosted = input.ReadBool();
            break;
          }
          case 242: {
            InstallNotes = input.ReadString();
            break;
          }
          case 248: {
            InstallLocation = input.ReadInt32();
            break;
          }
          case 256: {
            TargetSdkVersion = input.ReadInt32();
            break;
          }
          case 266: {
            HasPreregistrationPromoCode = input.ReadString();
            break;
          }
          case 274: {
            if (dependencies_ == null) {
              Dependencies = new global::GooglePlayStore.Dependencies();
            }
            input.ReadMessage(Dependencies);
            break;
          }
          case 282: {
            if (testingProgramInfo_ == null) {
              TestingProgramInfo = new global::GooglePlayStore.TestingProgramInfo();
            }
            input.ReadMessage(TestingProgramInfo);
            break;
          }
          case 290: {
            if (earlyAccessInfo_ == null) {
              EarlyAccessInfo = new global::GooglePlayStore.EarlyAccessInfo();
            }
            input.ReadMessage(EarlyAccessInfo);
            break;
          }
          case 330: {
            if (editorChoice_ == null) {
              EditorChoice = new global::GooglePlayStore.EditorChoice();
            }
            input.ReadMessage(EditorChoice);
            break;
          }
          case 346: {
            InstantLink = input.ReadString();
            break;
          }
          case 362: {
            DeveloperAddress = input.ReadString();
            break;
          }
          case 370: {
            if (publisher_ == null) {
              Publisher = new global::GooglePlayStore.Publisher();
            }
            input.ReadMessage(Publisher);
            break;
          }
          case 386: {
            CategoryName = input.ReadString();
            break;
          }
          case 424: {
            DownloadCount = input.ReadInt64();
            break;
          }
          case 490: {
            DownloadLabelDisplay = input.ReadString();
            break;
          }
          case 538: {
            InAppProduct = input.ReadString();
            break;
          }
          case 618: {
            DownloadLabelAbbreviated = input.ReadString();
            break;
          }
          case 626: {
            DownloadLabel = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModifyLibrary : pb::IMessage<ModifyLibrary> {
    private static readonly pb::MessageParser<ModifyLibrary> _parser = new pb::MessageParser<ModifyLibrary>(() => new ModifyLibrary());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyLibrary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[109]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyLibrary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyLibrary(ModifyLibrary other) : this() {
      id_ = other.id_;
      packageToAdd_ = other.packageToAdd_;
      packageToRemove_ = other.packageToRemove_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyLibrary Clone() {
      return new ModifyLibrary(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static string IdDefaultValue = "";

    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "packageToAdd" field.</summary>
    public const int PackageToAddFieldNumber = 2;
    private readonly static string PackageToAddDefaultValue = "";

    private string packageToAdd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackageToAdd {
      get { return packageToAdd_ ?? PackageToAddDefaultValue; }
      set {
        packageToAdd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "packageToAdd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPackageToAdd {
      get { return packageToAdd_ != null; }
    }
    /// <summary>Clears the value of the "packageToAdd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPackageToAdd() {
      packageToAdd_ = null;
    }

    /// <summary>Field number for the "packageToRemove" field.</summary>
    public const int PackageToRemoveFieldNumber = 3;
    private readonly static string PackageToRemoveDefaultValue = "";

    private string packageToRemove_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackageToRemove {
      get { return packageToRemove_ ?? PackageToRemoveDefaultValue; }
      set {
        packageToRemove_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "packageToRemove" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPackageToRemove {
      get { return packageToRemove_ != null; }
    }
    /// <summary>Clears the value of the "packageToRemove" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPackageToRemove() {
      packageToRemove_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyLibrary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyLibrary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (PackageToAdd != other.PackageToAdd) return false;
      if (PackageToRemove != other.PackageToRemove) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasPackageToAdd) hash ^= PackageToAdd.GetHashCode();
      if (HasPackageToRemove) hash ^= PackageToRemove.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasPackageToAdd) {
        output.WriteRawTag(18);
        output.WriteString(PackageToAdd);
      }
      if (HasPackageToRemove) {
        output.WriteRawTag(26);
        output.WriteString(PackageToRemove);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasPackageToAdd) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageToAdd);
      }
      if (HasPackageToRemove) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageToRemove);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyLibrary other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasPackageToAdd) {
        PackageToAdd = other.PackageToAdd;
      }
      if (other.HasPackageToRemove) {
        PackageToRemove = other.PackageToRemove;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            PackageToAdd = input.ReadString();
            break;
          }
          case 26: {
            PackageToRemove = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Publisher : pb::IMessage<Publisher> {
    private static readonly pb::MessageParser<Publisher> _parser = new pb::MessageParser<Publisher>(() => new Publisher());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Publisher> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[110]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Publisher() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Publisher(Publisher other) : this() {
      publisherStream_ = other.publisherStream_ != null ? other.publisherStream_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Publisher Clone() {
      return new Publisher(this);
    }

    /// <summary>Field number for the "publisherStream" field.</summary>
    public const int PublisherStreamFieldNumber = 2;
    private global::GooglePlayStore.PublisherStream publisherStream_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.PublisherStream PublisherStream {
      get { return publisherStream_; }
      set {
        publisherStream_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Publisher);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Publisher other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PublisherStream, other.PublisherStream)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (publisherStream_ != null) hash ^= PublisherStream.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (publisherStream_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PublisherStream);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (publisherStream_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublisherStream);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Publisher other) {
      if (other == null) {
        return;
      }
      if (other.publisherStream_ != null) {
        if (publisherStream_ == null) {
          PublisherStream = new global::GooglePlayStore.PublisherStream();
        }
        PublisherStream.MergeFrom(other.PublisherStream);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (publisherStream_ == null) {
              PublisherStream = new global::GooglePlayStore.PublisherStream();
            }
            input.ReadMessage(PublisherStream);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PublisherStream : pb::IMessage<PublisherStream> {
    private static readonly pb::MessageParser<PublisherStream> _parser = new pb::MessageParser<PublisherStream>(() => new PublisherStream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublisherStream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[111]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublisherStream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublisherStream(PublisherStream other) : this() {
      moreUrl_ = other.moreUrl_;
      query_ = other.query_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublisherStream Clone() {
      return new PublisherStream(this);
    }

    /// <summary>Field number for the "moreUrl" field.</summary>
    public const int MoreUrlFieldNumber = 3;
    private readonly static string MoreUrlDefaultValue = "";

    private string moreUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MoreUrl {
      get { return moreUrl_ ?? MoreUrlDefaultValue; }
      set {
        moreUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "moreUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMoreUrl {
      get { return moreUrl_ != null; }
    }
    /// <summary>Clears the value of the "moreUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMoreUrl() {
      moreUrl_ = null;
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 11;
    private readonly static string QueryDefaultValue = "";

    private string query_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_ ?? QueryDefaultValue; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "query" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasQuery {
      get { return query_ != null; }
    }
    /// <summary>Clears the value of the "query" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQuery() {
      query_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublisherStream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublisherStream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MoreUrl != other.MoreUrl) return false;
      if (Query != other.Query) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMoreUrl) hash ^= MoreUrl.GetHashCode();
      if (HasQuery) hash ^= Query.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasMoreUrl) {
        output.WriteRawTag(26);
        output.WriteString(MoreUrl);
      }
      if (HasQuery) {
        output.WriteRawTag(90);
        output.WriteString(Query);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMoreUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MoreUrl);
      }
      if (HasQuery) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublisherStream other) {
      if (other == null) {
        return;
      }
      if (other.HasMoreUrl) {
        MoreUrl = other.MoreUrl;
      }
      if (other.HasQuery) {
        Query = other.Query;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            MoreUrl = input.ReadString();
            break;
          }
          case 90: {
            Query = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EditorChoice : pb::IMessage<EditorChoice> {
    private static readonly pb::MessageParser<EditorChoice> _parser = new pb::MessageParser<EditorChoice>(() => new EditorChoice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EditorChoice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[112]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EditorChoice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EditorChoice(EditorChoice other) : this() {
      bulletins_ = other.bulletins_.Clone();
      description_ = other.description_;
      stream_ = other.stream_ != null ? other.stream_.Clone() : null;
      title_ = other.title_;
      subtitle_ = other.subtitle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EditorChoice Clone() {
      return new EditorChoice(this);
    }

    /// <summary>Field number for the "bulletins" field.</summary>
    public const int BulletinsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_bulletins_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> bulletins_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Bulletins {
      get { return bulletins_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "stream" field.</summary>
    public const int StreamFieldNumber = 3;
    private global::GooglePlayStore.SubStream stream_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SubStream Stream {
      get { return stream_; }
      set {
        stream_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 4;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "subtitle" field.</summary>
    public const int SubtitleFieldNumber = 5;
    private readonly static string SubtitleDefaultValue = "";

    private string subtitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subtitle {
      get { return subtitle_ ?? SubtitleDefaultValue; }
      set {
        subtitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "subtitle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubtitle {
      get { return subtitle_ != null; }
    }
    /// <summary>Clears the value of the "subtitle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtitle() {
      subtitle_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EditorChoice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EditorChoice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!bulletins_.Equals(other.bulletins_)) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(Stream, other.Stream)) return false;
      if (Title != other.Title) return false;
      if (Subtitle != other.Subtitle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= bulletins_.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (stream_ != null) hash ^= Stream.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasSubtitle) hash ^= Subtitle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      bulletins_.WriteTo(output, _repeated_bulletins_codec);
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (stream_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Stream);
      }
      if (HasTitle) {
        output.WriteRawTag(34);
        output.WriteString(Title);
      }
      if (HasSubtitle) {
        output.WriteRawTag(42);
        output.WriteString(Subtitle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bulletins_.CalculateSize(_repeated_bulletins_codec);
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (stream_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stream);
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasSubtitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subtitle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EditorChoice other) {
      if (other == null) {
        return;
      }
      bulletins_.Add(other.bulletins_);
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.stream_ != null) {
        if (stream_ == null) {
          Stream = new global::GooglePlayStore.SubStream();
        }
        Stream.MergeFrom(other.Stream);
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasSubtitle) {
        Subtitle = other.Subtitle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bulletins_.AddEntriesFrom(input, _repeated_bulletins_codec);
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (stream_ == null) {
              Stream = new global::GooglePlayStore.SubStream();
            }
            input.ReadMessage(Stream);
            break;
          }
          case 34: {
            Title = input.ReadString();
            break;
          }
          case 42: {
            Subtitle = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CertificateSet : pb::IMessage<CertificateSet> {
    private static readonly pb::MessageParser<CertificateSet> _parser = new pb::MessageParser<CertificateSet>(() => new CertificateSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CertificateSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[113]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CertificateSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CertificateSet(CertificateSet other) : this() {
      certificateHash_ = other.certificateHash_.Clone();
      sha256_ = other.sha256_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CertificateSet Clone() {
      return new CertificateSet(this);
    }

    /// <summary>Field number for the "certificateHash" field.</summary>
    public const int CertificateHashFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_certificateHash_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> certificateHash_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CertificateHash {
      get { return certificateHash_; }
    }

    /// <summary>Field number for the "sha256" field.</summary>
    public const int Sha256FieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_sha256_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> sha256_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Sha256 {
      get { return sha256_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CertificateSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CertificateSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!certificateHash_.Equals(other.certificateHash_)) return false;
      if(!sha256_.Equals(other.sha256_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= certificateHash_.GetHashCode();
      hash ^= sha256_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      certificateHash_.WriteTo(output, _repeated_certificateHash_codec);
      sha256_.WriteTo(output, _repeated_sha256_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += certificateHash_.CalculateSize(_repeated_certificateHash_codec);
      size += sha256_.CalculateSize(_repeated_sha256_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CertificateSet other) {
      if (other == null) {
        return;
      }
      certificateHash_.Add(other.certificateHash_);
      sha256_.Add(other.sha256_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            certificateHash_.AddEntriesFrom(input, _repeated_certificateHash_codec);
            break;
          }
          case 18: {
            sha256_.AddEntriesFrom(input, _repeated_sha256_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Dependencies : pb::IMessage<Dependencies> {
    private static readonly pb::MessageParser<Dependencies> _parser = new pb::MessageParser<Dependencies>(() => new Dependencies());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dependencies> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[114]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dependencies() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dependencies(Dependencies other) : this() {
      _hasBits0 = other._hasBits0;
      unknown_ = other.unknown_;
      size_ = other.size_;
      dependency_ = other.dependency_.Clone();
      targetSdk_ = other.targetSdk_;
      unknown2_ = other.unknown2_;
      splitApks_ = other.splitApks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dependencies Clone() {
      return new Dependencies(this);
    }

    /// <summary>Field number for the "unknown" field.</summary>
    public const int UnknownFieldNumber = 1;
    private readonly static int UnknownDefaultValue = 0;

    private int unknown_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Unknown {
      get { if ((_hasBits0 & 1) != 0) { return unknown_; } else { return UnknownDefaultValue; } }
      set {
        _hasBits0 |= 1;
        unknown_ = value;
      }
    }
    /// <summary>Gets whether the "unknown" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUnknown {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "unknown" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUnknown() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 2;
    private readonly static long SizeDefaultValue = 0L;

    private long size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Size {
      get { if ((_hasBits0 & 2) != 0) { return size_; } else { return SizeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        size_ = value;
      }
    }
    /// <summary>Gets whether the "size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSize {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSize() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "dependency" field.</summary>
    public const int DependencyFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Dependency> _repeated_dependency_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.Dependency.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Dependency> dependency_ = new pbc::RepeatedField<global::GooglePlayStore.Dependency>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Dependency> Dependency {
      get { return dependency_; }
    }

    /// <summary>Field number for the "targetSdk" field.</summary>
    public const int TargetSdkFieldNumber = 4;
    private readonly static int TargetSdkDefaultValue = 0;

    private int targetSdk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetSdk {
      get { if ((_hasBits0 & 4) != 0) { return targetSdk_; } else { return TargetSdkDefaultValue; } }
      set {
        _hasBits0 |= 4;
        targetSdk_ = value;
      }
    }
    /// <summary>Gets whether the "targetSdk" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetSdk {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "targetSdk" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetSdk() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "unknown2" field.</summary>
    public const int Unknown2FieldNumber = 5;
    private readonly static int Unknown2DefaultValue = 0;

    private int unknown2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Unknown2 {
      get { if ((_hasBits0 & 8) != 0) { return unknown2_; } else { return Unknown2DefaultValue; } }
      set {
        _hasBits0 |= 8;
        unknown2_ = value;
      }
    }
    /// <summary>Gets whether the "unknown2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUnknown2 {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "unknown2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUnknown2() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "splitApks" field.</summary>
    public const int SplitApksFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _repeated_splitApks_codec
        = pb::FieldCodec.ForString(90);
    private readonly pbc::RepeatedField<string> splitApks_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SplitApks {
      get { return splitApks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dependencies);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dependencies other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Unknown != other.Unknown) return false;
      if (Size != other.Size) return false;
      if(!dependency_.Equals(other.dependency_)) return false;
      if (TargetSdk != other.TargetSdk) return false;
      if (Unknown2 != other.Unknown2) return false;
      if(!splitApks_.Equals(other.splitApks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUnknown) hash ^= Unknown.GetHashCode();
      if (HasSize) hash ^= Size.GetHashCode();
      hash ^= dependency_.GetHashCode();
      if (HasTargetSdk) hash ^= TargetSdk.GetHashCode();
      if (HasUnknown2) hash ^= Unknown2.GetHashCode();
      hash ^= splitApks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasUnknown) {
        output.WriteRawTag(8);
        output.WriteInt32(Unknown);
      }
      if (HasSize) {
        output.WriteRawTag(16);
        output.WriteInt64(Size);
      }
      dependency_.WriteTo(output, _repeated_dependency_codec);
      if (HasTargetSdk) {
        output.WriteRawTag(32);
        output.WriteInt32(TargetSdk);
      }
      if (HasUnknown2) {
        output.WriteRawTag(40);
        output.WriteInt32(Unknown2);
      }
      splitApks_.WriteTo(output, _repeated_splitApks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unknown);
      }
      if (HasSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Size);
      }
      size += dependency_.CalculateSize(_repeated_dependency_codec);
      if (HasTargetSdk) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetSdk);
      }
      if (HasUnknown2) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unknown2);
      }
      size += splitApks_.CalculateSize(_repeated_splitApks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dependencies other) {
      if (other == null) {
        return;
      }
      if (other.HasUnknown) {
        Unknown = other.Unknown;
      }
      if (other.HasSize) {
        Size = other.Size;
      }
      dependency_.Add(other.dependency_);
      if (other.HasTargetSdk) {
        TargetSdk = other.TargetSdk;
      }
      if (other.HasUnknown2) {
        Unknown2 = other.Unknown2;
      }
      splitApks_.Add(other.splitApks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Unknown = input.ReadInt32();
            break;
          }
          case 16: {
            Size = input.ReadInt64();
            break;
          }
          case 26: {
            dependency_.AddEntriesFrom(input, _repeated_dependency_codec);
            break;
          }
          case 32: {
            TargetSdk = input.ReadInt32();
            break;
          }
          case 40: {
            Unknown2 = input.ReadInt32();
            break;
          }
          case 90: {
            splitApks_.AddEntriesFrom(input, _repeated_splitApks_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Dependency : pb::IMessage<Dependency> {
    private static readonly pb::MessageParser<Dependency> _parser = new pb::MessageParser<Dependency>(() => new Dependency());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dependency> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[115]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dependency() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dependency(Dependency other) : this() {
      _hasBits0 = other._hasBits0;
      packageName_ = other.packageName_;
      version_ = other.version_;
      unknown4_ = other.unknown4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dependency Clone() {
      return new Dependency(this);
    }

    /// <summary>Field number for the "packageName" field.</summary>
    public const int PackageNameFieldNumber = 1;
    private readonly static string PackageNameDefaultValue = "";

    private string packageName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackageName {
      get { return packageName_ ?? PackageNameDefaultValue; }
      set {
        packageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "packageName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPackageName {
      get { return packageName_ != null; }
    }
    /// <summary>Clears the value of the "packageName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPackageName() {
      packageName_ = null;
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private readonly static int VersionDefaultValue = 0;

    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { if ((_hasBits0 & 1) != 0) { return version_; } else { return VersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        version_ = value;
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "unknown4" field.</summary>
    public const int Unknown4FieldNumber = 4;
    private readonly static int Unknown4DefaultValue = 0;

    private int unknown4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Unknown4 {
      get { if ((_hasBits0 & 2) != 0) { return unknown4_; } else { return Unknown4DefaultValue; } }
      set {
        _hasBits0 |= 2;
        unknown4_ = value;
      }
    }
    /// <summary>Gets whether the "unknown4" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUnknown4 {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "unknown4" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUnknown4() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dependency);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dependency other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PackageName != other.PackageName) return false;
      if (Version != other.Version) return false;
      if (Unknown4 != other.Unknown4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPackageName) hash ^= PackageName.GetHashCode();
      if (HasVersion) hash ^= Version.GetHashCode();
      if (HasUnknown4) hash ^= Unknown4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasPackageName) {
        output.WriteRawTag(10);
        output.WriteString(PackageName);
      }
      if (HasVersion) {
        output.WriteRawTag(16);
        output.WriteInt32(Version);
      }
      if (HasUnknown4) {
        output.WriteRawTag(32);
        output.WriteInt32(Unknown4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPackageName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageName);
      }
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (HasUnknown4) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unknown4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dependency other) {
      if (other == null) {
        return;
      }
      if (other.HasPackageName) {
        PackageName = other.PackageName;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.HasUnknown4) {
        Unknown4 = other.Unknown4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PackageName = input.ReadString();
            break;
          }
          case 16: {
            Version = input.ReadInt32();
            break;
          }
          case 32: {
            Unknown4 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestingProgramInfo : pb::IMessage<TestingProgramInfo> {
    private static readonly pb::MessageParser<TestingProgramInfo> _parser = new pb::MessageParser<TestingProgramInfo>(() => new TestingProgramInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestingProgramInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[116]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramInfo(TestingProgramInfo other) : this() {
      _hasBits0 = other._hasBits0;
      subscribed_ = other.subscribed_;
      subscribedAndInstalled_ = other.subscribedAndInstalled_;
      email_ = other.email_;
      displayName_ = other.displayName_;
      image_ = other.image_ != null ? other.image_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramInfo Clone() {
      return new TestingProgramInfo(this);
    }

    /// <summary>Field number for the "subscribed" field.</summary>
    public const int SubscribedFieldNumber = 2;
    private readonly static bool SubscribedDefaultValue = false;

    private bool subscribed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Subscribed {
      get { if ((_hasBits0 & 1) != 0) { return subscribed_; } else { return SubscribedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        subscribed_ = value;
      }
    }
    /// <summary>Gets whether the "subscribed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubscribed {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "subscribed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubscribed() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "subscribedAndInstalled" field.</summary>
    public const int SubscribedAndInstalledFieldNumber = 3;
    private readonly static bool SubscribedAndInstalledDefaultValue = false;

    private bool subscribedAndInstalled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SubscribedAndInstalled {
      get { if ((_hasBits0 & 2) != 0) { return subscribedAndInstalled_; } else { return SubscribedAndInstalledDefaultValue; } }
      set {
        _hasBits0 |= 2;
        subscribedAndInstalled_ = value;
      }
    }
    /// <summary>Gets whether the "subscribedAndInstalled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubscribedAndInstalled {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "subscribedAndInstalled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubscribedAndInstalled() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 5;
    private readonly static string EmailDefaultValue = "";

    private string email_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_ ?? EmailDefaultValue; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "email" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEmail {
      get { return email_ != null; }
    }
    /// <summary>Clears the value of the "email" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEmail() {
      email_ = null;
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 7;
    private readonly static string DisplayNameDefaultValue = "";

    private string displayName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_ ?? DisplayNameDefaultValue; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "displayName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDisplayName {
      get { return displayName_ != null; }
    }
    /// <summary>Clears the value of the "displayName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDisplayName() {
      displayName_ = null;
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 6;
    private global::GooglePlayStore.Image image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Image Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestingProgramInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestingProgramInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Subscribed != other.Subscribed) return false;
      if (SubscribedAndInstalled != other.SubscribedAndInstalled) return false;
      if (Email != other.Email) return false;
      if (DisplayName != other.DisplayName) return false;
      if (!object.Equals(Image, other.Image)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSubscribed) hash ^= Subscribed.GetHashCode();
      if (HasSubscribedAndInstalled) hash ^= SubscribedAndInstalled.GetHashCode();
      if (HasEmail) hash ^= Email.GetHashCode();
      if (HasDisplayName) hash ^= DisplayName.GetHashCode();
      if (image_ != null) hash ^= Image.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasSubscribed) {
        output.WriteRawTag(16);
        output.WriteBool(Subscribed);
      }
      if (HasSubscribedAndInstalled) {
        output.WriteRawTag(24);
        output.WriteBool(SubscribedAndInstalled);
      }
      if (HasEmail) {
        output.WriteRawTag(42);
        output.WriteString(Email);
      }
      if (image_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Image);
      }
      if (HasDisplayName) {
        output.WriteRawTag(58);
        output.WriteString(DisplayName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSubscribed) {
        size += 1 + 1;
      }
      if (HasSubscribedAndInstalled) {
        size += 1 + 1;
      }
      if (HasEmail) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (HasDisplayName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestingProgramInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasSubscribed) {
        Subscribed = other.Subscribed;
      }
      if (other.HasSubscribedAndInstalled) {
        SubscribedAndInstalled = other.SubscribedAndInstalled;
      }
      if (other.HasEmail) {
        Email = other.Email;
      }
      if (other.HasDisplayName) {
        DisplayName = other.DisplayName;
      }
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::GooglePlayStore.Image();
        }
        Image.MergeFrom(other.Image);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            Subscribed = input.ReadBool();
            break;
          }
          case 24: {
            SubscribedAndInstalled = input.ReadBool();
            break;
          }
          case 42: {
            Email = input.ReadString();
            break;
          }
          case 50: {
            if (image_ == null) {
              Image = new global::GooglePlayStore.Image();
            }
            input.ReadMessage(Image);
            break;
          }
          case 58: {
            DisplayName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EarlyAccessInfo : pb::IMessage<EarlyAccessInfo> {
    private static readonly pb::MessageParser<EarlyAccessInfo> _parser = new pb::MessageParser<EarlyAccessInfo>(() => new EarlyAccessInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EarlyAccessInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[117]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EarlyAccessInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EarlyAccessInfo(EarlyAccessInfo other) : this() {
      email_ = other.email_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EarlyAccessInfo Clone() {
      return new EarlyAccessInfo(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 3;
    private readonly static string EmailDefaultValue = "";

    private string email_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_ ?? EmailDefaultValue; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "email" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEmail {
      get { return email_ != null; }
    }
    /// <summary>Clears the value of the "email" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEmail() {
      email_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EarlyAccessInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EarlyAccessInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEmail) hash ^= Email.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasEmail) {
        output.WriteRawTag(26);
        output.WriteString(Email);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasEmail) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EarlyAccessInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasEmail) {
        Email = other.Email;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            Email = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DocumentDetails : pb::IMessage<DocumentDetails> {
    private static readonly pb::MessageParser<DocumentDetails> _parser = new pb::MessageParser<DocumentDetails>(() => new DocumentDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DocumentDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[118]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentDetails(DocumentDetails other) : this() {
      appDetails_ = other.appDetails_ != null ? other.appDetails_.Clone() : null;
      subscriptionDetails_ = other.subscriptionDetails_ != null ? other.subscriptionDetails_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentDetails Clone() {
      return new DocumentDetails(this);
    }

    /// <summary>Field number for the "appDetails" field.</summary>
    public const int AppDetailsFieldNumber = 1;
    private global::GooglePlayStore.AppDetails appDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AppDetails AppDetails {
      get { return appDetails_; }
      set {
        appDetails_ = value;
      }
    }

    /// <summary>Field number for the "subscriptionDetails" field.</summary>
    public const int SubscriptionDetailsFieldNumber = 7;
    private global::GooglePlayStore.SubscriptionDetails subscriptionDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SubscriptionDetails SubscriptionDetails {
      get { return subscriptionDetails_; }
      set {
        subscriptionDetails_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DocumentDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DocumentDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AppDetails, other.AppDetails)) return false;
      if (!object.Equals(SubscriptionDetails, other.SubscriptionDetails)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (appDetails_ != null) hash ^= AppDetails.GetHashCode();
      if (subscriptionDetails_ != null) hash ^= SubscriptionDetails.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (appDetails_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AppDetails);
      }
      if (subscriptionDetails_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(SubscriptionDetails);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (appDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppDetails);
      }
      if (subscriptionDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscriptionDetails);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DocumentDetails other) {
      if (other == null) {
        return;
      }
      if (other.appDetails_ != null) {
        if (appDetails_ == null) {
          AppDetails = new global::GooglePlayStore.AppDetails();
        }
        AppDetails.MergeFrom(other.AppDetails);
      }
      if (other.subscriptionDetails_ != null) {
        if (subscriptionDetails_ == null) {
          SubscriptionDetails = new global::GooglePlayStore.SubscriptionDetails();
        }
        SubscriptionDetails.MergeFrom(other.SubscriptionDetails);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (appDetails_ == null) {
              AppDetails = new global::GooglePlayStore.AppDetails();
            }
            input.ReadMessage(AppDetails);
            break;
          }
          case 58: {
            if (subscriptionDetails_ == null) {
              SubscriptionDetails = new global::GooglePlayStore.SubscriptionDetails();
            }
            input.ReadMessage(SubscriptionDetails);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PatchDetails : pb::IMessage<PatchDetails> {
    private static readonly pb::MessageParser<PatchDetails> _parser = new pb::MessageParser<PatchDetails>(() => new PatchDetails());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PatchDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[119]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchDetails(PatchDetails other) : this() {
      _hasBits0 = other._hasBits0;
      baseVersionCode_ = other.baseVersionCode_;
      size_ = other.size_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchDetails Clone() {
      return new PatchDetails(this);
    }

    /// <summary>Field number for the "baseVersionCode" field.</summary>
    public const int BaseVersionCodeFieldNumber = 1;
    private readonly static int BaseVersionCodeDefaultValue = 0;

    private int baseVersionCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BaseVersionCode {
      get { if ((_hasBits0 & 1) != 0) { return baseVersionCode_; } else { return BaseVersionCodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        baseVersionCode_ = value;
      }
    }
    /// <summary>Gets whether the "baseVersionCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBaseVersionCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "baseVersionCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBaseVersionCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 2;
    private readonly static long SizeDefaultValue = 0L;

    private long size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Size {
      get { if ((_hasBits0 & 2) != 0) { return size_; } else { return SizeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        size_ = value;
      }
    }
    /// <summary>Gets whether the "size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSize {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSize() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PatchDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PatchDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BaseVersionCode != other.BaseVersionCode) return false;
      if (Size != other.Size) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBaseVersionCode) hash ^= BaseVersionCode.GetHashCode();
      if (HasSize) hash ^= Size.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasBaseVersionCode) {
        output.WriteRawTag(8);
        output.WriteInt32(BaseVersionCode);
      }
      if (HasSize) {
        output.WriteRawTag(16);
        output.WriteInt64(Size);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasBaseVersionCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BaseVersionCode);
      }
      if (HasSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Size);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PatchDetails other) {
      if (other == null) {
        return;
      }
      if (other.HasBaseVersionCode) {
        BaseVersionCode = other.BaseVersionCode;
      }
      if (other.HasSize) {
        Size = other.Size;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BaseVersionCode = input.ReadInt32();
            break;
          }
          case 16: {
            Size = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FileMetadata : pb::IMessage<FileMetadata> {
    private static readonly pb::MessageParser<FileMetadata> _parser = new pb::MessageParser<FileMetadata>(() => new FileMetadata());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[120]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileMetadata(FileMetadata other) : this() {
      _hasBits0 = other._hasBits0;
      fileType_ = other.fileType_;
      versionCode_ = other.versionCode_;
      size_ = other.size_;
      splitId_ = other.splitId_;
      compressedSize_ = other.compressedSize_;
      patchDetails_ = other.patchDetails_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileMetadata Clone() {
      return new FileMetadata(this);
    }

    /// <summary>Field number for the "fileType" field.</summary>
    public const int FileTypeFieldNumber = 1;
    private readonly static int FileTypeDefaultValue = 0;

    private int fileType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FileType {
      get { if ((_hasBits0 & 1) != 0) { return fileType_; } else { return FileTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        fileType_ = value;
      }
    }
    /// <summary>Gets whether the "fileType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "fileType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "versionCode" field.</summary>
    public const int VersionCodeFieldNumber = 2;
    private readonly static int VersionCodeDefaultValue = 0;

    private int versionCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VersionCode {
      get { if ((_hasBits0 & 2) != 0) { return versionCode_; } else { return VersionCodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        versionCode_ = value;
      }
    }
    /// <summary>Gets whether the "versionCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "versionCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionCode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 3;
    private readonly static long SizeDefaultValue = 0L;

    private long size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Size {
      get { if ((_hasBits0 & 4) != 0) { return size_; } else { return SizeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        size_ = value;
      }
    }
    /// <summary>Gets whether the "size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSize {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSize() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "splitId" field.</summary>
    public const int SplitIdFieldNumber = 4;
    private readonly static string SplitIdDefaultValue = "";

    private string splitId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SplitId {
      get { return splitId_ ?? SplitIdDefaultValue; }
      set {
        splitId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "splitId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSplitId {
      get { return splitId_ != null; }
    }
    /// <summary>Clears the value of the "splitId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSplitId() {
      splitId_ = null;
    }

    /// <summary>Field number for the "compressedSize" field.</summary>
    public const int CompressedSizeFieldNumber = 5;
    private readonly static long CompressedSizeDefaultValue = 0L;

    private long compressedSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CompressedSize {
      get { if ((_hasBits0 & 8) != 0) { return compressedSize_; } else { return CompressedSizeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        compressedSize_ = value;
      }
    }
    /// <summary>Gets whether the "compressedSize" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCompressedSize {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "compressedSize" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCompressedSize() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "patchDetails" field.</summary>
    public const int PatchDetailsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::GooglePlayStore.PatchDetails> _repeated_patchDetails_codec
        = pb::FieldCodec.ForMessage(50, global::GooglePlayStore.PatchDetails.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.PatchDetails> patchDetails_ = new pbc::RepeatedField<global::GooglePlayStore.PatchDetails>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.PatchDetails> PatchDetails {
      get { return patchDetails_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileType != other.FileType) return false;
      if (VersionCode != other.VersionCode) return false;
      if (Size != other.Size) return false;
      if (SplitId != other.SplitId) return false;
      if (CompressedSize != other.CompressedSize) return false;
      if(!patchDetails_.Equals(other.patchDetails_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFileType) hash ^= FileType.GetHashCode();
      if (HasVersionCode) hash ^= VersionCode.GetHashCode();
      if (HasSize) hash ^= Size.GetHashCode();
      if (HasSplitId) hash ^= SplitId.GetHashCode();
      if (HasCompressedSize) hash ^= CompressedSize.GetHashCode();
      hash ^= patchDetails_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasFileType) {
        output.WriteRawTag(8);
        output.WriteInt32(FileType);
      }
      if (HasVersionCode) {
        output.WriteRawTag(16);
        output.WriteInt32(VersionCode);
      }
      if (HasSize) {
        output.WriteRawTag(24);
        output.WriteInt64(Size);
      }
      if (HasSplitId) {
        output.WriteRawTag(34);
        output.WriteString(SplitId);
      }
      if (HasCompressedSize) {
        output.WriteRawTag(40);
        output.WriteInt64(CompressedSize);
      }
      patchDetails_.WriteTo(output, _repeated_patchDetails_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasFileType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FileType);
      }
      if (HasVersionCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VersionCode);
      }
      if (HasSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Size);
      }
      if (HasSplitId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SplitId);
      }
      if (HasCompressedSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CompressedSize);
      }
      size += patchDetails_.CalculateSize(_repeated_patchDetails_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileMetadata other) {
      if (other == null) {
        return;
      }
      if (other.HasFileType) {
        FileType = other.FileType;
      }
      if (other.HasVersionCode) {
        VersionCode = other.VersionCode;
      }
      if (other.HasSize) {
        Size = other.Size;
      }
      if (other.HasSplitId) {
        SplitId = other.SplitId;
      }
      if (other.HasCompressedSize) {
        CompressedSize = other.CompressedSize;
      }
      patchDetails_.Add(other.patchDetails_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FileType = input.ReadInt32();
            break;
          }
          case 16: {
            VersionCode = input.ReadInt32();
            break;
          }
          case 24: {
            Size = input.ReadInt64();
            break;
          }
          case 34: {
            SplitId = input.ReadString();
            break;
          }
          case 40: {
            CompressedSize = input.ReadInt64();
            break;
          }
          case 50: {
            patchDetails_.AddEntriesFrom(input, _repeated_patchDetails_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscriptionDetails : pb::IMessage<SubscriptionDetails> {
    private static readonly pb::MessageParser<SubscriptionDetails> _parser = new pb::MessageParser<SubscriptionDetails>(() => new SubscriptionDetails());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscriptionDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[121]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionDetails(SubscriptionDetails other) : this() {
      _hasBits0 = other._hasBits0;
      subscriptionPeriod_ = other.subscriptionPeriod_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionDetails Clone() {
      return new SubscriptionDetails(this);
    }

    /// <summary>Field number for the "subscriptionPeriod" field.</summary>
    public const int SubscriptionPeriodFieldNumber = 1;
    private readonly static int SubscriptionPeriodDefaultValue = 0;

    private int subscriptionPeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubscriptionPeriod {
      get { if ((_hasBits0 & 1) != 0) { return subscriptionPeriod_; } else { return SubscriptionPeriodDefaultValue; } }
      set {
        _hasBits0 |= 1;
        subscriptionPeriod_ = value;
      }
    }
    /// <summary>Gets whether the "subscriptionPeriod" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubscriptionPeriod {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "subscriptionPeriod" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubscriptionPeriod() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscriptionDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscriptionDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubscriptionPeriod != other.SubscriptionPeriod) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSubscriptionPeriod) hash ^= SubscriptionPeriod.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasSubscriptionPeriod) {
        output.WriteRawTag(8);
        output.WriteInt32(SubscriptionPeriod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSubscriptionPeriod) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubscriptionPeriod);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscriptionDetails other) {
      if (other == null) {
        return;
      }
      if (other.HasSubscriptionPeriod) {
        SubscriptionPeriod = other.SubscriptionPeriod;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SubscriptionPeriod = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Bucket : pb::IMessage<Bucket> {
    private static readonly pb::MessageParser<Bucket> _parser = new pb::MessageParser<Bucket>(() => new Bucket());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Bucket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[122]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bucket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bucket(Bucket other) : this() {
      _hasBits0 = other._hasBits0;
      multiCorpus_ = other.multiCorpus_;
      title_ = other.title_;
      iconUrl_ = other.iconUrl_;
      fullContentsUrl_ = other.fullContentsUrl_;
      relevance_ = other.relevance_;
      estimatedResults_ = other.estimatedResults_;
      analyticsCookie_ = other.analyticsCookie_;
      fullContentsListUrl_ = other.fullContentsListUrl_;
      nextPageUrl_ = other.nextPageUrl_;
      ordered_ = other.ordered_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bucket Clone() {
      return new Bucket(this);
    }

    /// <summary>Field number for the "multiCorpus" field.</summary>
    public const int MultiCorpusFieldNumber = 2;
    private readonly static bool MultiCorpusDefaultValue = false;

    private bool multiCorpus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MultiCorpus {
      get { if ((_hasBits0 & 1) != 0) { return multiCorpus_; } else { return MultiCorpusDefaultValue; } }
      set {
        _hasBits0 |= 1;
        multiCorpus_ = value;
      }
    }
    /// <summary>Gets whether the "multiCorpus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMultiCorpus {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "multiCorpus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMultiCorpus() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 3;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "iconUrl" field.</summary>
    public const int IconUrlFieldNumber = 4;
    private readonly static string IconUrlDefaultValue = "";

    private string iconUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IconUrl {
      get { return iconUrl_ ?? IconUrlDefaultValue; }
      set {
        iconUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "iconUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIconUrl {
      get { return iconUrl_ != null; }
    }
    /// <summary>Clears the value of the "iconUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIconUrl() {
      iconUrl_ = null;
    }

    /// <summary>Field number for the "fullContentsUrl" field.</summary>
    public const int FullContentsUrlFieldNumber = 5;
    private readonly static string FullContentsUrlDefaultValue = "";

    private string fullContentsUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FullContentsUrl {
      get { return fullContentsUrl_ ?? FullContentsUrlDefaultValue; }
      set {
        fullContentsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fullContentsUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFullContentsUrl {
      get { return fullContentsUrl_ != null; }
    }
    /// <summary>Clears the value of the "fullContentsUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFullContentsUrl() {
      fullContentsUrl_ = null;
    }

    /// <summary>Field number for the "relevance" field.</summary>
    public const int RelevanceFieldNumber = 6;
    private readonly static double RelevanceDefaultValue = 0D;

    private double relevance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Relevance {
      get { if ((_hasBits0 & 2) != 0) { return relevance_; } else { return RelevanceDefaultValue; } }
      set {
        _hasBits0 |= 2;
        relevance_ = value;
      }
    }
    /// <summary>Gets whether the "relevance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRelevance {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "relevance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRelevance() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "estimatedResults" field.</summary>
    public const int EstimatedResultsFieldNumber = 7;
    private readonly static long EstimatedResultsDefaultValue = 0L;

    private long estimatedResults_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EstimatedResults {
      get { if ((_hasBits0 & 4) != 0) { return estimatedResults_; } else { return EstimatedResultsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        estimatedResults_ = value;
      }
    }
    /// <summary>Gets whether the "estimatedResults" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEstimatedResults {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "estimatedResults" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEstimatedResults() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "analyticsCookie" field.</summary>
    public const int AnalyticsCookieFieldNumber = 8;
    private readonly static string AnalyticsCookieDefaultValue = "";

    private string analyticsCookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AnalyticsCookie {
      get { return analyticsCookie_ ?? AnalyticsCookieDefaultValue; }
      set {
        analyticsCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "analyticsCookie" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAnalyticsCookie {
      get { return analyticsCookie_ != null; }
    }
    /// <summary>Clears the value of the "analyticsCookie" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAnalyticsCookie() {
      analyticsCookie_ = null;
    }

    /// <summary>Field number for the "fullContentsListUrl" field.</summary>
    public const int FullContentsListUrlFieldNumber = 9;
    private readonly static string FullContentsListUrlDefaultValue = "";

    private string fullContentsListUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FullContentsListUrl {
      get { return fullContentsListUrl_ ?? FullContentsListUrlDefaultValue; }
      set {
        fullContentsListUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fullContentsListUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFullContentsListUrl {
      get { return fullContentsListUrl_ != null; }
    }
    /// <summary>Clears the value of the "fullContentsListUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFullContentsListUrl() {
      fullContentsListUrl_ = null;
    }

    /// <summary>Field number for the "nextPageUrl" field.</summary>
    public const int NextPageUrlFieldNumber = 10;
    private readonly static string NextPageUrlDefaultValue = "";

    private string nextPageUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageUrl {
      get { return nextPageUrl_ ?? NextPageUrlDefaultValue; }
      set {
        nextPageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "nextPageUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNextPageUrl {
      get { return nextPageUrl_ != null; }
    }
    /// <summary>Clears the value of the "nextPageUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNextPageUrl() {
      nextPageUrl_ = null;
    }

    /// <summary>Field number for the "ordered" field.</summary>
    public const int OrderedFieldNumber = 11;
    private readonly static bool OrderedDefaultValue = false;

    private bool ordered_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ordered {
      get { if ((_hasBits0 & 8) != 0) { return ordered_; } else { return OrderedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        ordered_ = value;
      }
    }
    /// <summary>Gets whether the "ordered" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOrdered {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "ordered" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOrdered() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Bucket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Bucket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MultiCorpus != other.MultiCorpus) return false;
      if (Title != other.Title) return false;
      if (IconUrl != other.IconUrl) return false;
      if (FullContentsUrl != other.FullContentsUrl) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Relevance, other.Relevance)) return false;
      if (EstimatedResults != other.EstimatedResults) return false;
      if (AnalyticsCookie != other.AnalyticsCookie) return false;
      if (FullContentsListUrl != other.FullContentsListUrl) return false;
      if (NextPageUrl != other.NextPageUrl) return false;
      if (Ordered != other.Ordered) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMultiCorpus) hash ^= MultiCorpus.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasIconUrl) hash ^= IconUrl.GetHashCode();
      if (HasFullContentsUrl) hash ^= FullContentsUrl.GetHashCode();
      if (HasRelevance) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Relevance);
      if (HasEstimatedResults) hash ^= EstimatedResults.GetHashCode();
      if (HasAnalyticsCookie) hash ^= AnalyticsCookie.GetHashCode();
      if (HasFullContentsListUrl) hash ^= FullContentsListUrl.GetHashCode();
      if (HasNextPageUrl) hash ^= NextPageUrl.GetHashCode();
      if (HasOrdered) hash ^= Ordered.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasMultiCorpus) {
        output.WriteRawTag(16);
        output.WriteBool(MultiCorpus);
      }
      if (HasTitle) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (HasIconUrl) {
        output.WriteRawTag(34);
        output.WriteString(IconUrl);
      }
      if (HasFullContentsUrl) {
        output.WriteRawTag(42);
        output.WriteString(FullContentsUrl);
      }
      if (HasRelevance) {
        output.WriteRawTag(49);
        output.WriteDouble(Relevance);
      }
      if (HasEstimatedResults) {
        output.WriteRawTag(56);
        output.WriteInt64(EstimatedResults);
      }
      if (HasAnalyticsCookie) {
        output.WriteRawTag(66);
        output.WriteString(AnalyticsCookie);
      }
      if (HasFullContentsListUrl) {
        output.WriteRawTag(74);
        output.WriteString(FullContentsListUrl);
      }
      if (HasNextPageUrl) {
        output.WriteRawTag(82);
        output.WriteString(NextPageUrl);
      }
      if (HasOrdered) {
        output.WriteRawTag(88);
        output.WriteBool(Ordered);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMultiCorpus) {
        size += 1 + 1;
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasIconUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconUrl);
      }
      if (HasFullContentsUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FullContentsUrl);
      }
      if (HasRelevance) {
        size += 1 + 8;
      }
      if (HasEstimatedResults) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EstimatedResults);
      }
      if (HasAnalyticsCookie) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AnalyticsCookie);
      }
      if (HasFullContentsListUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FullContentsListUrl);
      }
      if (HasNextPageUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageUrl);
      }
      if (HasOrdered) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Bucket other) {
      if (other == null) {
        return;
      }
      if (other.HasMultiCorpus) {
        MultiCorpus = other.MultiCorpus;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasIconUrl) {
        IconUrl = other.IconUrl;
      }
      if (other.HasFullContentsUrl) {
        FullContentsUrl = other.FullContentsUrl;
      }
      if (other.HasRelevance) {
        Relevance = other.Relevance;
      }
      if (other.HasEstimatedResults) {
        EstimatedResults = other.EstimatedResults;
      }
      if (other.HasAnalyticsCookie) {
        AnalyticsCookie = other.AnalyticsCookie;
      }
      if (other.HasFullContentsListUrl) {
        FullContentsListUrl = other.FullContentsListUrl;
      }
      if (other.HasNextPageUrl) {
        NextPageUrl = other.NextPageUrl;
      }
      if (other.HasOrdered) {
        Ordered = other.Ordered;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            MultiCorpus = input.ReadBool();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 34: {
            IconUrl = input.ReadString();
            break;
          }
          case 42: {
            FullContentsUrl = input.ReadString();
            break;
          }
          case 49: {
            Relevance = input.ReadDouble();
            break;
          }
          case 56: {
            EstimatedResults = input.ReadInt64();
            break;
          }
          case 66: {
            AnalyticsCookie = input.ReadString();
            break;
          }
          case 74: {
            FullContentsListUrl = input.ReadString();
            break;
          }
          case 82: {
            NextPageUrl = input.ReadString();
            break;
          }
          case 88: {
            Ordered = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListResponse : pb::IMessage<ListResponse> {
    private static readonly pb::MessageParser<ListResponse> _parser = new pb::MessageParser<ListResponse>(() => new ListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[123]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListResponse(ListResponse other) : this() {
      bucket_ = other.bucket_.Clone();
      item_ = other.item_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListResponse Clone() {
      return new ListResponse(this);
    }

    /// <summary>Field number for the "bucket" field.</summary>
    public const int BucketFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Bucket> _repeated_bucket_codec
        = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.Bucket.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Bucket> bucket_ = new pbc::RepeatedField<global::GooglePlayStore.Bucket>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Bucket> Bucket {
      get { return bucket_; }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Item> _repeated_item_codec
        = pb::FieldCodec.ForMessage(18, global::GooglePlayStore.Item.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Item> item_ = new pbc::RepeatedField<global::GooglePlayStore.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Item> Item {
      get { return item_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!bucket_.Equals(other.bucket_)) return false;
      if(!item_.Equals(other.item_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= bucket_.GetHashCode();
      hash ^= item_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      bucket_.WriteTo(output, _repeated_bucket_codec);
      item_.WriteTo(output, _repeated_item_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bucket_.CalculateSize(_repeated_bucket_codec);
      size += item_.CalculateSize(_repeated_item_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListResponse other) {
      if (other == null) {
        return;
      }
      bucket_.Add(other.bucket_);
      item_.Add(other.item_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bucket_.AddEntriesFrom(input, _repeated_bucket_codec);
            break;
          }
          case 18: {
            item_.AddEntriesFrom(input, _repeated_item_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Item : pb::IMessage<Item> {
    private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Item> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[124]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item(Item other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      subId_ = other.subId_;
      type_ = other.type_;
      categoryId_ = other.categoryId_;
      title_ = other.title_;
      creator_ = other.creator_;
      descriptionHtml_ = other.descriptionHtml_;
      offer_ = other.offer_.Clone();
      availability_ = other.availability_ != null ? other.availability_.Clone() : null;
      image_ = other.image_.Clone();
      subItem_ = other.subItem_.Clone();
      containerMetadata_ = other.containerMetadata_ != null ? other.containerMetadata_.Clone() : null;
      details_ = other.details_ != null ? other.details_.Clone() : null;
      aggregateRating_ = other.aggregateRating_ != null ? other.aggregateRating_.Clone() : null;
      annotations_ = other.annotations_ != null ? other.annotations_.Clone() : null;
      detailsUrl_ = other.detailsUrl_;
      shareUrl_ = other.shareUrl_;
      reviewsUrl_ = other.reviewsUrl_;
      backendUrl_ = other.backendUrl_;
      purchaseDetailsUrl_ = other.purchaseDetailsUrl_;
      detailsReusable_ = other.detailsReusable_;
      subtitle_ = other.subtitle_;
      translatedDescriptionHtml_ = other.translatedDescriptionHtml_;
      serverLogsCookie_ = other.serverLogsCookie_;
      appInfo_ = other.appInfo_ != null ? other.appInfo_.Clone() : null;
      mature_ = other.mature_;
      promotionalDescription_ = other.promotionalDescription_;
      availableForPreregistration_ = other.availableForPreregistration_;
      tip_ = other.tip_.Clone();
      reviewSnippetsUrl_ = other.reviewSnippetsUrl_;
      forceShareability_ = other.forceShareability_;
      useWishlistAsPrimaryAction_ = other.useWishlistAsPrimaryAction_;
      reviewQuestionsUrl_ = other.reviewQuestionsUrl_;
      reviewSummaryUrl_ = other.reviewSummaryUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item Clone() {
      return new Item(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static string IdDefaultValue = "";

    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "subId" field.</summary>
    public const int SubIdFieldNumber = 2;
    private readonly static string SubIdDefaultValue = "";

    private string subId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubId {
      get { return subId_ ?? SubIdDefaultValue; }
      set {
        subId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "subId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubId {
      get { return subId_ != null; }
    }
    /// <summary>Clears the value of the "subId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubId() {
      subId_ = null;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "categoryId" field.</summary>
    public const int CategoryIdFieldNumber = 4;
    private readonly static int CategoryIdDefaultValue = 0;

    private int categoryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CategoryId {
      get { if ((_hasBits0 & 2) != 0) { return categoryId_; } else { return CategoryIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        categoryId_ = value;
      }
    }
    /// <summary>Gets whether the "categoryId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCategoryId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "categoryId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCategoryId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 5;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "creator" field.</summary>
    public const int CreatorFieldNumber = 6;
    private readonly static string CreatorDefaultValue = "";

    private string creator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Creator {
      get { return creator_ ?? CreatorDefaultValue; }
      set {
        creator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "creator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCreator {
      get { return creator_ != null; }
    }
    /// <summary>Clears the value of the "creator" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCreator() {
      creator_ = null;
    }

    /// <summary>Field number for the "descriptionHtml" field.</summary>
    public const int DescriptionHtmlFieldNumber = 7;
    private readonly static string DescriptionHtmlDefaultValue = "";

    private string descriptionHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DescriptionHtml {
      get { return descriptionHtml_ ?? DescriptionHtmlDefaultValue; }
      set {
        descriptionHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "descriptionHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescriptionHtml {
      get { return descriptionHtml_ != null; }
    }
    /// <summary>Clears the value of the "descriptionHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescriptionHtml() {
      descriptionHtml_ = null;
    }

    /// <summary>Field number for the "offer" field.</summary>
    public const int OfferFieldNumber = 8;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Offer> _repeated_offer_codec
        = pb::FieldCodec.ForMessage(66, global::GooglePlayStore.Offer.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Offer> offer_ = new pbc::RepeatedField<global::GooglePlayStore.Offer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Offer> Offer {
      get { return offer_; }
    }

    /// <summary>Field number for the "availability" field.</summary>
    public const int AvailabilityFieldNumber = 9;
    private global::GooglePlayStore.Availability availability_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Availability Availability {
      get { return availability_; }
      set {
        availability_ = value;
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 10;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Image> _repeated_image_codec
        = pb::FieldCodec.ForMessage(82, global::GooglePlayStore.Image.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Image> image_ = new pbc::RepeatedField<global::GooglePlayStore.Image>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Image> Image {
      get { return image_; }
    }

    /// <summary>Field number for the "subItem" field.</summary>
    public const int SubItemFieldNumber = 11;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Item> _repeated_subItem_codec
        = pb::FieldCodec.ForMessage(90, global::GooglePlayStore.Item.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Item> subItem_ = new pbc::RepeatedField<global::GooglePlayStore.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Item> SubItem {
      get { return subItem_; }
    }

    /// <summary>Field number for the "containerMetadata" field.</summary>
    public const int ContainerMetadataFieldNumber = 12;
    private global::GooglePlayStore.ContainerMetadata containerMetadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ContainerMetadata ContainerMetadata {
      get { return containerMetadata_; }
      set {
        containerMetadata_ = value;
      }
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 13;
    private global::GooglePlayStore.DocumentDetails details_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DocumentDetails Details {
      get { return details_; }
      set {
        details_ = value;
      }
    }

    /// <summary>Field number for the "aggregateRating" field.</summary>
    public const int AggregateRatingFieldNumber = 14;
    private global::GooglePlayStore.AggregateRating aggregateRating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AggregateRating AggregateRating {
      get { return aggregateRating_; }
      set {
        aggregateRating_ = value;
      }
    }

    /// <summary>Field number for the "annotations" field.</summary>
    public const int AnnotationsFieldNumber = 15;
    private global::GooglePlayStore.Annotations annotations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Annotations Annotations {
      get { return annotations_; }
      set {
        annotations_ = value;
      }
    }

    /// <summary>Field number for the "detailsUrl" field.</summary>
    public const int DetailsUrlFieldNumber = 16;
    private readonly static string DetailsUrlDefaultValue = "";

    private string detailsUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DetailsUrl {
      get { return detailsUrl_ ?? DetailsUrlDefaultValue; }
      set {
        detailsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "detailsUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDetailsUrl {
      get { return detailsUrl_ != null; }
    }
    /// <summary>Clears the value of the "detailsUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDetailsUrl() {
      detailsUrl_ = null;
    }

    /// <summary>Field number for the "shareUrl" field.</summary>
    public const int ShareUrlFieldNumber = 17;
    private readonly static string ShareUrlDefaultValue = "";

    private string shareUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShareUrl {
      get { return shareUrl_ ?? ShareUrlDefaultValue; }
      set {
        shareUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "shareUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasShareUrl {
      get { return shareUrl_ != null; }
    }
    /// <summary>Clears the value of the "shareUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearShareUrl() {
      shareUrl_ = null;
    }

    /// <summary>Field number for the "reviewsUrl" field.</summary>
    public const int ReviewsUrlFieldNumber = 18;
    private readonly static string ReviewsUrlDefaultValue = "";

    private string reviewsUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReviewsUrl {
      get { return reviewsUrl_ ?? ReviewsUrlDefaultValue; }
      set {
        reviewsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reviewsUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReviewsUrl {
      get { return reviewsUrl_ != null; }
    }
    /// <summary>Clears the value of the "reviewsUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReviewsUrl() {
      reviewsUrl_ = null;
    }

    /// <summary>Field number for the "backendUrl" field.</summary>
    public const int BackendUrlFieldNumber = 19;
    private readonly static string BackendUrlDefaultValue = "";

    private string backendUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BackendUrl {
      get { return backendUrl_ ?? BackendUrlDefaultValue; }
      set {
        backendUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "backendUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBackendUrl {
      get { return backendUrl_ != null; }
    }
    /// <summary>Clears the value of the "backendUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBackendUrl() {
      backendUrl_ = null;
    }

    /// <summary>Field number for the "purchaseDetailsUrl" field.</summary>
    public const int PurchaseDetailsUrlFieldNumber = 20;
    private readonly static string PurchaseDetailsUrlDefaultValue = "";

    private string purchaseDetailsUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PurchaseDetailsUrl {
      get { return purchaseDetailsUrl_ ?? PurchaseDetailsUrlDefaultValue; }
      set {
        purchaseDetailsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "purchaseDetailsUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPurchaseDetailsUrl {
      get { return purchaseDetailsUrl_ != null; }
    }
    /// <summary>Clears the value of the "purchaseDetailsUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPurchaseDetailsUrl() {
      purchaseDetailsUrl_ = null;
    }

    /// <summary>Field number for the "detailsReusable" field.</summary>
    public const int DetailsReusableFieldNumber = 21;
    private readonly static bool DetailsReusableDefaultValue = false;

    private bool detailsReusable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DetailsReusable {
      get { if ((_hasBits0 & 4) != 0) { return detailsReusable_; } else { return DetailsReusableDefaultValue; } }
      set {
        _hasBits0 |= 4;
        detailsReusable_ = value;
      }
    }
    /// <summary>Gets whether the "detailsReusable" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDetailsReusable {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "detailsReusable" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDetailsReusable() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "subtitle" field.</summary>
    public const int SubtitleFieldNumber = 22;
    private readonly static string SubtitleDefaultValue = "";

    private string subtitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subtitle {
      get { return subtitle_ ?? SubtitleDefaultValue; }
      set {
        subtitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "subtitle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubtitle {
      get { return subtitle_ != null; }
    }
    /// <summary>Clears the value of the "subtitle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtitle() {
      subtitle_ = null;
    }

    /// <summary>Field number for the "translatedDescriptionHtml" field.</summary>
    public const int TranslatedDescriptionHtmlFieldNumber = 23;
    private readonly static string TranslatedDescriptionHtmlDefaultValue = "";

    private string translatedDescriptionHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TranslatedDescriptionHtml {
      get { return translatedDescriptionHtml_ ?? TranslatedDescriptionHtmlDefaultValue; }
      set {
        translatedDescriptionHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "translatedDescriptionHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTranslatedDescriptionHtml {
      get { return translatedDescriptionHtml_ != null; }
    }
    /// <summary>Clears the value of the "translatedDescriptionHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTranslatedDescriptionHtml() {
      translatedDescriptionHtml_ = null;
    }

    /// <summary>Field number for the "serverLogsCookie" field.</summary>
    public const int ServerLogsCookieFieldNumber = 24;
    private readonly static pb::ByteString ServerLogsCookieDefaultValue = pb::ByteString.Empty;

    private pb::ByteString serverLogsCookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ServerLogsCookie {
      get { return serverLogsCookie_ ?? ServerLogsCookieDefaultValue; }
      set {
        serverLogsCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serverLogsCookie" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServerLogsCookie {
      get { return serverLogsCookie_ != null; }
    }
    /// <summary>Clears the value of the "serverLogsCookie" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServerLogsCookie() {
      serverLogsCookie_ = null;
    }

    /// <summary>Field number for the "appInfo" field.</summary>
    public const int AppInfoFieldNumber = 25;
    private global::GooglePlayStore.AppInfo appInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AppInfo AppInfo {
      get { return appInfo_; }
      set {
        appInfo_ = value;
      }
    }

    /// <summary>Field number for the "mature" field.</summary>
    public const int MatureFieldNumber = 26;
    private readonly static bool MatureDefaultValue = false;

    private bool mature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Mature {
      get { if ((_hasBits0 & 8) != 0) { return mature_; } else { return MatureDefaultValue; } }
      set {
        _hasBits0 |= 8;
        mature_ = value;
      }
    }
    /// <summary>Gets whether the "mature" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMature {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "mature" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMature() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "promotionalDescription" field.</summary>
    public const int PromotionalDescriptionFieldNumber = 27;
    private readonly static string PromotionalDescriptionDefaultValue = "";

    private string promotionalDescription_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PromotionalDescription {
      get { return promotionalDescription_ ?? PromotionalDescriptionDefaultValue; }
      set {
        promotionalDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "promotionalDescription" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPromotionalDescription {
      get { return promotionalDescription_ != null; }
    }
    /// <summary>Clears the value of the "promotionalDescription" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPromotionalDescription() {
      promotionalDescription_ = null;
    }

    /// <summary>Field number for the "availableForPreregistration" field.</summary>
    public const int AvailableForPreregistrationFieldNumber = 29;
    private readonly static bool AvailableForPreregistrationDefaultValue = false;

    private bool availableForPreregistration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AvailableForPreregistration {
      get { if ((_hasBits0 & 16) != 0) { return availableForPreregistration_; } else { return AvailableForPreregistrationDefaultValue; } }
      set {
        _hasBits0 |= 16;
        availableForPreregistration_ = value;
      }
    }
    /// <summary>Gets whether the "availableForPreregistration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAvailableForPreregistration {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "availableForPreregistration" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAvailableForPreregistration() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "tip" field.</summary>
    public const int TipFieldNumber = 30;
    private static readonly pb::FieldCodec<global::GooglePlayStore.ReviewTip> _repeated_tip_codec
        = pb::FieldCodec.ForMessage(242, global::GooglePlayStore.ReviewTip.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.ReviewTip> tip_ = new pbc::RepeatedField<global::GooglePlayStore.ReviewTip>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.ReviewTip> Tip {
      get { return tip_; }
    }

    /// <summary>Field number for the "reviewSnippetsUrl" field.</summary>
    public const int ReviewSnippetsUrlFieldNumber = 31;
    private readonly static string ReviewSnippetsUrlDefaultValue = "";

    private string reviewSnippetsUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReviewSnippetsUrl {
      get { return reviewSnippetsUrl_ ?? ReviewSnippetsUrlDefaultValue; }
      set {
        reviewSnippetsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reviewSnippetsUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReviewSnippetsUrl {
      get { return reviewSnippetsUrl_ != null; }
    }
    /// <summary>Clears the value of the "reviewSnippetsUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReviewSnippetsUrl() {
      reviewSnippetsUrl_ = null;
    }

    /// <summary>Field number for the "forceShareability" field.</summary>
    public const int ForceShareabilityFieldNumber = 32;
    private readonly static bool ForceShareabilityDefaultValue = false;

    private bool forceShareability_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ForceShareability {
      get { if ((_hasBits0 & 32) != 0) { return forceShareability_; } else { return ForceShareabilityDefaultValue; } }
      set {
        _hasBits0 |= 32;
        forceShareability_ = value;
      }
    }
    /// <summary>Gets whether the "forceShareability" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasForceShareability {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "forceShareability" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearForceShareability() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "useWishlistAsPrimaryAction" field.</summary>
    public const int UseWishlistAsPrimaryActionFieldNumber = 33;
    private readonly static bool UseWishlistAsPrimaryActionDefaultValue = false;

    private bool useWishlistAsPrimaryAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseWishlistAsPrimaryAction {
      get { if ((_hasBits0 & 64) != 0) { return useWishlistAsPrimaryAction_; } else { return UseWishlistAsPrimaryActionDefaultValue; } }
      set {
        _hasBits0 |= 64;
        useWishlistAsPrimaryAction_ = value;
      }
    }
    /// <summary>Gets whether the "useWishlistAsPrimaryAction" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUseWishlistAsPrimaryAction {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "useWishlistAsPrimaryAction" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUseWishlistAsPrimaryAction() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "reviewQuestionsUrl" field.</summary>
    public const int ReviewQuestionsUrlFieldNumber = 34;
    private readonly static string ReviewQuestionsUrlDefaultValue = "";

    private string reviewQuestionsUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReviewQuestionsUrl {
      get { return reviewQuestionsUrl_ ?? ReviewQuestionsUrlDefaultValue; }
      set {
        reviewQuestionsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reviewQuestionsUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReviewQuestionsUrl {
      get { return reviewQuestionsUrl_ != null; }
    }
    /// <summary>Clears the value of the "reviewQuestionsUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReviewQuestionsUrl() {
      reviewQuestionsUrl_ = null;
    }

    /// <summary>Field number for the "reviewSummaryUrl" field.</summary>
    public const int ReviewSummaryUrlFieldNumber = 39;
    private readonly static string ReviewSummaryUrlDefaultValue = "";

    private string reviewSummaryUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReviewSummaryUrl {
      get { return reviewSummaryUrl_ ?? ReviewSummaryUrlDefaultValue; }
      set {
        reviewSummaryUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reviewSummaryUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReviewSummaryUrl {
      get { return reviewSummaryUrl_ != null; }
    }
    /// <summary>Clears the value of the "reviewSummaryUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReviewSummaryUrl() {
      reviewSummaryUrl_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Item);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Item other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (SubId != other.SubId) return false;
      if (Type != other.Type) return false;
      if (CategoryId != other.CategoryId) return false;
      if (Title != other.Title) return false;
      if (Creator != other.Creator) return false;
      if (DescriptionHtml != other.DescriptionHtml) return false;
      if(!offer_.Equals(other.offer_)) return false;
      if (!object.Equals(Availability, other.Availability)) return false;
      if(!image_.Equals(other.image_)) return false;
      if(!subItem_.Equals(other.subItem_)) return false;
      if (!object.Equals(ContainerMetadata, other.ContainerMetadata)) return false;
      if (!object.Equals(Details, other.Details)) return false;
      if (!object.Equals(AggregateRating, other.AggregateRating)) return false;
      if (!object.Equals(Annotations, other.Annotations)) return false;
      if (DetailsUrl != other.DetailsUrl) return false;
      if (ShareUrl != other.ShareUrl) return false;
      if (ReviewsUrl != other.ReviewsUrl) return false;
      if (BackendUrl != other.BackendUrl) return false;
      if (PurchaseDetailsUrl != other.PurchaseDetailsUrl) return false;
      if (DetailsReusable != other.DetailsReusable) return false;
      if (Subtitle != other.Subtitle) return false;
      if (TranslatedDescriptionHtml != other.TranslatedDescriptionHtml) return false;
      if (ServerLogsCookie != other.ServerLogsCookie) return false;
      if (!object.Equals(AppInfo, other.AppInfo)) return false;
      if (Mature != other.Mature) return false;
      if (PromotionalDescription != other.PromotionalDescription) return false;
      if (AvailableForPreregistration != other.AvailableForPreregistration) return false;
      if(!tip_.Equals(other.tip_)) return false;
      if (ReviewSnippetsUrl != other.ReviewSnippetsUrl) return false;
      if (ForceShareability != other.ForceShareability) return false;
      if (UseWishlistAsPrimaryAction != other.UseWishlistAsPrimaryAction) return false;
      if (ReviewQuestionsUrl != other.ReviewQuestionsUrl) return false;
      if (ReviewSummaryUrl != other.ReviewSummaryUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasSubId) hash ^= SubId.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasCategoryId) hash ^= CategoryId.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasCreator) hash ^= Creator.GetHashCode();
      if (HasDescriptionHtml) hash ^= DescriptionHtml.GetHashCode();
      hash ^= offer_.GetHashCode();
      if (availability_ != null) hash ^= Availability.GetHashCode();
      hash ^= image_.GetHashCode();
      hash ^= subItem_.GetHashCode();
      if (containerMetadata_ != null) hash ^= ContainerMetadata.GetHashCode();
      if (details_ != null) hash ^= Details.GetHashCode();
      if (aggregateRating_ != null) hash ^= AggregateRating.GetHashCode();
      if (annotations_ != null) hash ^= Annotations.GetHashCode();
      if (HasDetailsUrl) hash ^= DetailsUrl.GetHashCode();
      if (HasShareUrl) hash ^= ShareUrl.GetHashCode();
      if (HasReviewsUrl) hash ^= ReviewsUrl.GetHashCode();
      if (HasBackendUrl) hash ^= BackendUrl.GetHashCode();
      if (HasPurchaseDetailsUrl) hash ^= PurchaseDetailsUrl.GetHashCode();
      if (HasDetailsReusable) hash ^= DetailsReusable.GetHashCode();
      if (HasSubtitle) hash ^= Subtitle.GetHashCode();
      if (HasTranslatedDescriptionHtml) hash ^= TranslatedDescriptionHtml.GetHashCode();
      if (HasServerLogsCookie) hash ^= ServerLogsCookie.GetHashCode();
      if (appInfo_ != null) hash ^= AppInfo.GetHashCode();
      if (HasMature) hash ^= Mature.GetHashCode();
      if (HasPromotionalDescription) hash ^= PromotionalDescription.GetHashCode();
      if (HasAvailableForPreregistration) hash ^= AvailableForPreregistration.GetHashCode();
      hash ^= tip_.GetHashCode();
      if (HasReviewSnippetsUrl) hash ^= ReviewSnippetsUrl.GetHashCode();
      if (HasForceShareability) hash ^= ForceShareability.GetHashCode();
      if (HasUseWishlistAsPrimaryAction) hash ^= UseWishlistAsPrimaryAction.GetHashCode();
      if (HasReviewQuestionsUrl) hash ^= ReviewQuestionsUrl.GetHashCode();
      if (HasReviewSummaryUrl) hash ^= ReviewSummaryUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasSubId) {
        output.WriteRawTag(18);
        output.WriteString(SubId);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (HasCategoryId) {
        output.WriteRawTag(32);
        output.WriteInt32(CategoryId);
      }
      if (HasTitle) {
        output.WriteRawTag(42);
        output.WriteString(Title);
      }
      if (HasCreator) {
        output.WriteRawTag(50);
        output.WriteString(Creator);
      }
      if (HasDescriptionHtml) {
        output.WriteRawTag(58);
        output.WriteString(DescriptionHtml);
      }
      offer_.WriteTo(output, _repeated_offer_codec);
      if (availability_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Availability);
      }
      image_.WriteTo(output, _repeated_image_codec);
      subItem_.WriteTo(output, _repeated_subItem_codec);
      if (containerMetadata_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ContainerMetadata);
      }
      if (details_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Details);
      }
      if (aggregateRating_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(AggregateRating);
      }
      if (annotations_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Annotations);
      }
      if (HasDetailsUrl) {
        output.WriteRawTag(130, 1);
        output.WriteString(DetailsUrl);
      }
      if (HasShareUrl) {
        output.WriteRawTag(138, 1);
        output.WriteString(ShareUrl);
      }
      if (HasReviewsUrl) {
        output.WriteRawTag(146, 1);
        output.WriteString(ReviewsUrl);
      }
      if (HasBackendUrl) {
        output.WriteRawTag(154, 1);
        output.WriteString(BackendUrl);
      }
      if (HasPurchaseDetailsUrl) {
        output.WriteRawTag(162, 1);
        output.WriteString(PurchaseDetailsUrl);
      }
      if (HasDetailsReusable) {
        output.WriteRawTag(168, 1);
        output.WriteBool(DetailsReusable);
      }
      if (HasSubtitle) {
        output.WriteRawTag(178, 1);
        output.WriteString(Subtitle);
      }
      if (HasTranslatedDescriptionHtml) {
        output.WriteRawTag(186, 1);
        output.WriteString(TranslatedDescriptionHtml);
      }
      if (HasServerLogsCookie) {
        output.WriteRawTag(194, 1);
        output.WriteBytes(ServerLogsCookie);
      }
      if (appInfo_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(AppInfo);
      }
      if (HasMature) {
        output.WriteRawTag(208, 1);
        output.WriteBool(Mature);
      }
      if (HasPromotionalDescription) {
        output.WriteRawTag(218, 1);
        output.WriteString(PromotionalDescription);
      }
      if (HasAvailableForPreregistration) {
        output.WriteRawTag(232, 1);
        output.WriteBool(AvailableForPreregistration);
      }
      tip_.WriteTo(output, _repeated_tip_codec);
      if (HasReviewSnippetsUrl) {
        output.WriteRawTag(250, 1);
        output.WriteString(ReviewSnippetsUrl);
      }
      if (HasForceShareability) {
        output.WriteRawTag(128, 2);
        output.WriteBool(ForceShareability);
      }
      if (HasUseWishlistAsPrimaryAction) {
        output.WriteRawTag(136, 2);
        output.WriteBool(UseWishlistAsPrimaryAction);
      }
      if (HasReviewQuestionsUrl) {
        output.WriteRawTag(146, 2);
        output.WriteString(ReviewQuestionsUrl);
      }
      if (HasReviewSummaryUrl) {
        output.WriteRawTag(186, 2);
        output.WriteString(ReviewSummaryUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasSubId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubId);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasCategoryId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CategoryId);
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasCreator) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Creator);
      }
      if (HasDescriptionHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionHtml);
      }
      size += offer_.CalculateSize(_repeated_offer_codec);
      if (availability_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Availability);
      }
      size += image_.CalculateSize(_repeated_image_codec);
      size += subItem_.CalculateSize(_repeated_subItem_codec);
      if (containerMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContainerMetadata);
      }
      if (details_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Details);
      }
      if (aggregateRating_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AggregateRating);
      }
      if (annotations_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Annotations);
      }
      if (HasDetailsUrl) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DetailsUrl);
      }
      if (HasShareUrl) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ShareUrl);
      }
      if (HasReviewsUrl) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ReviewsUrl);
      }
      if (HasBackendUrl) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BackendUrl);
      }
      if (HasPurchaseDetailsUrl) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PurchaseDetailsUrl);
      }
      if (HasDetailsReusable) {
        size += 2 + 1;
      }
      if (HasSubtitle) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Subtitle);
      }
      if (HasTranslatedDescriptionHtml) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TranslatedDescriptionHtml);
      }
      if (HasServerLogsCookie) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(ServerLogsCookie);
      }
      if (appInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AppInfo);
      }
      if (HasMature) {
        size += 2 + 1;
      }
      if (HasPromotionalDescription) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PromotionalDescription);
      }
      if (HasAvailableForPreregistration) {
        size += 2 + 1;
      }
      size += tip_.CalculateSize(_repeated_tip_codec);
      if (HasReviewSnippetsUrl) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ReviewSnippetsUrl);
      }
      if (HasForceShareability) {
        size += 2 + 1;
      }
      if (HasUseWishlistAsPrimaryAction) {
        size += 2 + 1;
      }
      if (HasReviewQuestionsUrl) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ReviewQuestionsUrl);
      }
      if (HasReviewSummaryUrl) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ReviewSummaryUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Item other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasSubId) {
        SubId = other.SubId;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasCategoryId) {
        CategoryId = other.CategoryId;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasCreator) {
        Creator = other.Creator;
      }
      if (other.HasDescriptionHtml) {
        DescriptionHtml = other.DescriptionHtml;
      }
      offer_.Add(other.offer_);
      if (other.availability_ != null) {
        if (availability_ == null) {
          Availability = new global::GooglePlayStore.Availability();
        }
        Availability.MergeFrom(other.Availability);
      }
      image_.Add(other.image_);
      subItem_.Add(other.subItem_);
      if (other.containerMetadata_ != null) {
        if (containerMetadata_ == null) {
          ContainerMetadata = new global::GooglePlayStore.ContainerMetadata();
        }
        ContainerMetadata.MergeFrom(other.ContainerMetadata);
      }
      if (other.details_ != null) {
        if (details_ == null) {
          Details = new global::GooglePlayStore.DocumentDetails();
        }
        Details.MergeFrom(other.Details);
      }
      if (other.aggregateRating_ != null) {
        if (aggregateRating_ == null) {
          AggregateRating = new global::GooglePlayStore.AggregateRating();
        }
        AggregateRating.MergeFrom(other.AggregateRating);
      }
      if (other.annotations_ != null) {
        if (annotations_ == null) {
          Annotations = new global::GooglePlayStore.Annotations();
        }
        Annotations.MergeFrom(other.Annotations);
      }
      if (other.HasDetailsUrl) {
        DetailsUrl = other.DetailsUrl;
      }
      if (other.HasShareUrl) {
        ShareUrl = other.ShareUrl;
      }
      if (other.HasReviewsUrl) {
        ReviewsUrl = other.ReviewsUrl;
      }
      if (other.HasBackendUrl) {
        BackendUrl = other.BackendUrl;
      }
      if (other.HasPurchaseDetailsUrl) {
        PurchaseDetailsUrl = other.PurchaseDetailsUrl;
      }
      if (other.HasDetailsReusable) {
        DetailsReusable = other.DetailsReusable;
      }
      if (other.HasSubtitle) {
        Subtitle = other.Subtitle;
      }
      if (other.HasTranslatedDescriptionHtml) {
        TranslatedDescriptionHtml = other.TranslatedDescriptionHtml;
      }
      if (other.HasServerLogsCookie) {
        ServerLogsCookie = other.ServerLogsCookie;
      }
      if (other.appInfo_ != null) {
        if (appInfo_ == null) {
          AppInfo = new global::GooglePlayStore.AppInfo();
        }
        AppInfo.MergeFrom(other.AppInfo);
      }
      if (other.HasMature) {
        Mature = other.Mature;
      }
      if (other.HasPromotionalDescription) {
        PromotionalDescription = other.PromotionalDescription;
      }
      if (other.HasAvailableForPreregistration) {
        AvailableForPreregistration = other.AvailableForPreregistration;
      }
      tip_.Add(other.tip_);
      if (other.HasReviewSnippetsUrl) {
        ReviewSnippetsUrl = other.ReviewSnippetsUrl;
      }
      if (other.HasForceShareability) {
        ForceShareability = other.ForceShareability;
      }
      if (other.HasUseWishlistAsPrimaryAction) {
        UseWishlistAsPrimaryAction = other.UseWishlistAsPrimaryAction;
      }
      if (other.HasReviewQuestionsUrl) {
        ReviewQuestionsUrl = other.ReviewQuestionsUrl;
      }
      if (other.HasReviewSummaryUrl) {
        ReviewSummaryUrl = other.ReviewSummaryUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            SubId = input.ReadString();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 32: {
            CategoryId = input.ReadInt32();
            break;
          }
          case 42: {
            Title = input.ReadString();
            break;
          }
          case 50: {
            Creator = input.ReadString();
            break;
          }
          case 58: {
            DescriptionHtml = input.ReadString();
            break;
          }
          case 66: {
            offer_.AddEntriesFrom(input, _repeated_offer_codec);
            break;
          }
          case 74: {
            if (availability_ == null) {
              Availability = new global::GooglePlayStore.Availability();
            }
            input.ReadMessage(Availability);
            break;
          }
          case 82: {
            image_.AddEntriesFrom(input, _repeated_image_codec);
            break;
          }
          case 90: {
            subItem_.AddEntriesFrom(input, _repeated_subItem_codec);
            break;
          }
          case 98: {
            if (containerMetadata_ == null) {
              ContainerMetadata = new global::GooglePlayStore.ContainerMetadata();
            }
            input.ReadMessage(ContainerMetadata);
            break;
          }
          case 106: {
            if (details_ == null) {
              Details = new global::GooglePlayStore.DocumentDetails();
            }
            input.ReadMessage(Details);
            break;
          }
          case 114: {
            if (aggregateRating_ == null) {
              AggregateRating = new global::GooglePlayStore.AggregateRating();
            }
            input.ReadMessage(AggregateRating);
            break;
          }
          case 122: {
            if (annotations_ == null) {
              Annotations = new global::GooglePlayStore.Annotations();
            }
            input.ReadMessage(Annotations);
            break;
          }
          case 130: {
            DetailsUrl = input.ReadString();
            break;
          }
          case 138: {
            ShareUrl = input.ReadString();
            break;
          }
          case 146: {
            ReviewsUrl = input.ReadString();
            break;
          }
          case 154: {
            BackendUrl = input.ReadString();
            break;
          }
          case 162: {
            PurchaseDetailsUrl = input.ReadString();
            break;
          }
          case 168: {
            DetailsReusable = input.ReadBool();
            break;
          }
          case 178: {
            Subtitle = input.ReadString();
            break;
          }
          case 186: {
            TranslatedDescriptionHtml = input.ReadString();
            break;
          }
          case 194: {
            ServerLogsCookie = input.ReadBytes();
            break;
          }
          case 202: {
            if (appInfo_ == null) {
              AppInfo = new global::GooglePlayStore.AppInfo();
            }
            input.ReadMessage(AppInfo);
            break;
          }
          case 208: {
            Mature = input.ReadBool();
            break;
          }
          case 218: {
            PromotionalDescription = input.ReadString();
            break;
          }
          case 232: {
            AvailableForPreregistration = input.ReadBool();
            break;
          }
          case 242: {
            tip_.AddEntriesFrom(input, _repeated_tip_codec);
            break;
          }
          case 250: {
            ReviewSnippetsUrl = input.ReadString();
            break;
          }
          case 256: {
            ForceShareability = input.ReadBool();
            break;
          }
          case 264: {
            UseWishlistAsPrimaryAction = input.ReadBool();
            break;
          }
          case 274: {
            ReviewQuestionsUrl = input.ReadString();
            break;
          }
          case 314: {
            ReviewSummaryUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppInfo : pb::IMessage<AppInfo> {
    private static readonly pb::MessageParser<AppInfo> _parser = new pb::MessageParser<AppInfo>(() => new AppInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[125]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInfo(AppInfo other) : this() {
      title_ = other.title_;
      section_ = other.section_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInfo Clone() {
      return new AppInfo(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "section" field.</summary>
    public const int SectionFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GooglePlayStore.AppInfoSection> _repeated_section_codec
        = pb::FieldCodec.ForMessage(18, global::GooglePlayStore.AppInfoSection.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.AppInfoSection> section_ = new pbc::RepeatedField<global::GooglePlayStore.AppInfoSection>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.AppInfoSection> Section {
      get { return section_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if(!section_.Equals(other.section_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTitle) hash ^= Title.GetHashCode();
      hash ^= section_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTitle) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      section_.WriteTo(output, _repeated_section_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      size += section_.CalculateSize(_repeated_section_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      section_.Add(other.section_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            section_.AddEntriesFrom(input, _repeated_section_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppInfoSection : pb::IMessage<AppInfoSection> {
    private static readonly pb::MessageParser<AppInfoSection> _parser = new pb::MessageParser<AppInfoSection>(() => new AppInfoSection());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppInfoSection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[126]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInfoSection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInfoSection(AppInfoSection other) : this() {
      label_ = other.label_;
      container_ = other.container_ != null ? other.container_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInfoSection Clone() {
      return new AppInfoSection(this);
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 1;
    private readonly static string LabelDefaultValue = "";

    private string label_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_ ?? LabelDefaultValue; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "label" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLabel {
      get { return label_ != null; }
    }
    /// <summary>Clears the value of the "label" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLabel() {
      label_ = null;
    }

    /// <summary>Field number for the "container" field.</summary>
    public const int ContainerFieldNumber = 3;
    private global::GooglePlayStore.AppInfoContainer container_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AppInfoContainer Container {
      get { return container_; }
      set {
        container_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppInfoSection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppInfoSection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Label != other.Label) return false;
      if (!object.Equals(Container, other.Container)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLabel) hash ^= Label.GetHashCode();
      if (container_ != null) hash ^= Container.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasLabel) {
        output.WriteRawTag(10);
        output.WriteString(Label);
      }
      if (container_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Container);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasLabel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (container_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Container);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppInfoSection other) {
      if (other == null) {
        return;
      }
      if (other.HasLabel) {
        Label = other.Label;
      }
      if (other.container_ != null) {
        if (container_ == null) {
          Container = new global::GooglePlayStore.AppInfoContainer();
        }
        Container.MergeFrom(other.Container);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Label = input.ReadString();
            break;
          }
          case 26: {
            if (container_ == null) {
              Container = new global::GooglePlayStore.AppInfoContainer();
            }
            input.ReadMessage(Container);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppInfoContainer : pb::IMessage<AppInfoContainer> {
    private static readonly pb::MessageParser<AppInfoContainer> _parser = new pb::MessageParser<AppInfoContainer>(() => new AppInfoContainer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppInfoContainer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[127]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInfoContainer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInfoContainer(AppInfoContainer other) : this() {
      image_ = other.image_ != null ? other.image_.Clone() : null;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInfoContainer Clone() {
      return new AppInfoContainer(this);
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 1;
    private global::GooglePlayStore.Image image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Image Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppInfoContainer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppInfoContainer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Image, other.Image)) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (image_ != null) hash ^= Image.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (image_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Image);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppInfoContainer other) {
      if (other == null) {
        return;
      }
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::GooglePlayStore.Image();
        }
        Image.MergeFrom(other.Image);
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (image_ == null) {
              Image = new global::GooglePlayStore.Image();
            }
            input.ReadMessage(Image);
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Annotations : pb::IMessage<Annotations> {
    private static readonly pb::MessageParser<Annotations> _parser = new pb::MessageParser<Annotations>(() => new Annotations());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Annotations> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[128]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Annotations() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Annotations(Annotations other) : this() {
      sectionRelated_ = other.sectionRelated_ != null ? other.sectionRelated_.Clone() : null;
      sectionMoreBy_ = other.sectionMoreBy_ != null ? other.sectionMoreBy_.Clone() : null;
      warning_ = other.warning_.Clone();
      sectionBodyOfWork_ = other.sectionBodyOfWork_ != null ? other.sectionBodyOfWork_.Clone() : null;
      sectionCoreContent_ = other.sectionCoreContent_ != null ? other.sectionCoreContent_.Clone() : null;
      overlayMetaData_ = other.overlayMetaData_ != null ? other.overlayMetaData_.Clone() : null;
      badgeForCreator_ = other.badgeForCreator_.Clone();
      infoBadge_ = other.infoBadge_.Clone();
      annotationLink_ = other.annotationLink_ != null ? other.annotationLink_.Clone() : null;
      sectionCrossSell_ = other.sectionCrossSell_ != null ? other.sectionCrossSell_.Clone() : null;
      sectionRelatedItemType_ = other.sectionRelatedItemType_ != null ? other.sectionRelatedItemType_.Clone() : null;
      promotedDoc_ = other.promotedDoc_.Clone();
      offerNote_ = other.offerNote_;
      privacyPolicyUrl_ = other.privacyPolicyUrl_;
      suggestionReasons_ = other.suggestionReasons_ != null ? other.suggestionReasons_.Clone() : null;
      optimalDeviceClassWarning_ = other.optimalDeviceClassWarning_ != null ? other.optimalDeviceClassWarning_.Clone() : null;
      badgeContainer_ = other.badgeContainer_.Clone();
      sectionSuggestForRating_ = other.sectionSuggestForRating_ != null ? other.sectionSuggestForRating_.Clone() : null;
      sectionPurchaseCrossSell_ = other.sectionPurchaseCrossSell_ != null ? other.sectionPurchaseCrossSell_.Clone() : null;
      overflowLink_ = other.overflowLink_.Clone();
      attributionHtml_ = other.attributionHtml_;
      purchaseHistoryDetails_ = other.purchaseHistoryDetails_ != null ? other.purchaseHistoryDetails_.Clone() : null;
      badgeForLegacyRating_ = other.badgeForLegacyRating_ != null ? other.badgeForLegacyRating_.Clone() : null;
      voucherInfo_ = other.voucherInfo_.Clone();
      sectionFeaturedApps_ = other.sectionFeaturedApps_ != null ? other.sectionFeaturedApps_.Clone() : null;
      detailsPageCluster_ = other.detailsPageCluster_.Clone();
      videoAnnotations_ = other.videoAnnotations_ != null ? other.videoAnnotations_.Clone() : null;
      sectionPurchaseRelatedTopics_ = other.sectionPurchaseRelatedTopics_ != null ? other.sectionPurchaseRelatedTopics_.Clone() : null;
      mySubscriptionDetails_ = other.mySubscriptionDetails_ != null ? other.mySubscriptionDetails_.Clone() : null;
      myRewardDetails_ = other.myRewardDetails_ != null ? other.myRewardDetails_.Clone() : null;
      featureBadge_ = other.featureBadge_.Clone();
      snippet_ = other.snippet_ != null ? other.snippet_.Clone() : null;
      downloadsLabel_ = other.downloadsLabel_;
      badgeForRating_ = other.badgeForRating_ != null ? other.badgeForRating_.Clone() : null;
      categoryInfo_ = other.categoryInfo_ != null ? other.categoryInfo_.Clone() : null;
      reasons_ = other.reasons_ != null ? other.reasons_.Clone() : null;
      topChartStream_ = other.topChartStream_ != null ? other.topChartStream_.Clone() : null;
      categoryName_ = other.categoryName_;
      chip_ = other.chip_.Clone();
      displayBadge_ = other.displayBadge_.Clone();
      liveStreamUrl_ = other.liveStreamUrl_;
      promotionStreamUrl_ = other.promotionStreamUrl_;
      overlayMetaDataExtra_ = other.overlayMetaDataExtra_ != null ? other.overlayMetaDataExtra_.Clone() : null;
      sectionImage_ = other.sectionImage_ != null ? other.sectionImage_.Clone() : null;
      categoryStream_ = other.categoryStream_ != null ? other.categoryStream_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Annotations Clone() {
      return new Annotations(this);
    }

    /// <summary>Field number for the "sectionRelated" field.</summary>
    public const int SectionRelatedFieldNumber = 1;
    private global::GooglePlayStore.SectionMetaData sectionRelated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SectionMetaData SectionRelated {
      get { return sectionRelated_; }
      set {
        sectionRelated_ = value;
      }
    }

    /// <summary>Field number for the "sectionMoreBy" field.</summary>
    public const int SectionMoreByFieldNumber = 2;
    private global::GooglePlayStore.SectionMetaData sectionMoreBy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SectionMetaData SectionMoreBy {
      get { return sectionMoreBy_; }
      set {
        sectionMoreBy_ = value;
      }
    }

    /// <summary>Field number for the "warning" field.</summary>
    public const int WarningFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Warning> _repeated_warning_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.Warning.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Warning> warning_ = new pbc::RepeatedField<global::GooglePlayStore.Warning>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Warning> Warning {
      get { return warning_; }
    }

    /// <summary>Field number for the "sectionBodyOfWork" field.</summary>
    public const int SectionBodyOfWorkFieldNumber = 5;
    private global::GooglePlayStore.SectionMetaData sectionBodyOfWork_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SectionMetaData SectionBodyOfWork {
      get { return sectionBodyOfWork_; }
      set {
        sectionBodyOfWork_ = value;
      }
    }

    /// <summary>Field number for the "sectionCoreContent" field.</summary>
    public const int SectionCoreContentFieldNumber = 6;
    private global::GooglePlayStore.SectionMetaData sectionCoreContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SectionMetaData SectionCoreContent {
      get { return sectionCoreContent_; }
      set {
        sectionCoreContent_ = value;
      }
    }

    /// <summary>Field number for the "overlayMetaData" field.</summary>
    public const int OverlayMetaDataFieldNumber = 7;
    private global::GooglePlayStore.OverlayMetaData overlayMetaData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.OverlayMetaData OverlayMetaData {
      get { return overlayMetaData_; }
      set {
        overlayMetaData_ = value;
      }
    }

    /// <summary>Field number for the "badgeForCreator" field.</summary>
    public const int BadgeForCreatorFieldNumber = 8;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Badge> _repeated_badgeForCreator_codec
        = pb::FieldCodec.ForMessage(66, global::GooglePlayStore.Badge.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Badge> badgeForCreator_ = new pbc::RepeatedField<global::GooglePlayStore.Badge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Badge> BadgeForCreator {
      get { return badgeForCreator_; }
    }

    /// <summary>Field number for the "infoBadge" field.</summary>
    public const int InfoBadgeFieldNumber = 9;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Badge> _repeated_infoBadge_codec
        = pb::FieldCodec.ForMessage(74, global::GooglePlayStore.Badge.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Badge> infoBadge_ = new pbc::RepeatedField<global::GooglePlayStore.Badge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Badge> InfoBadge {
      get { return infoBadge_; }
    }

    /// <summary>Field number for the "annotationLink" field.</summary>
    public const int AnnotationLinkFieldNumber = 10;
    private global::GooglePlayStore.AnnotationLink annotationLink_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AnnotationLink AnnotationLink {
      get { return annotationLink_; }
      set {
        annotationLink_ = value;
      }
    }

    /// <summary>Field number for the "sectionCrossSell" field.</summary>
    public const int SectionCrossSellFieldNumber = 11;
    private global::GooglePlayStore.SectionMetaData sectionCrossSell_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SectionMetaData SectionCrossSell {
      get { return sectionCrossSell_; }
      set {
        sectionCrossSell_ = value;
      }
    }

    /// <summary>Field number for the "sectionRelatedItemType" field.</summary>
    public const int SectionRelatedItemTypeFieldNumber = 12;
    private global::GooglePlayStore.SectionMetaData sectionRelatedItemType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SectionMetaData SectionRelatedItemType {
      get { return sectionRelatedItemType_; }
      set {
        sectionRelatedItemType_ = value;
      }
    }

    /// <summary>Field number for the "promotedDoc" field.</summary>
    public const int PromotedDocFieldNumber = 13;
    private static readonly pb::FieldCodec<global::GooglePlayStore.PromotedDoc> _repeated_promotedDoc_codec
        = pb::FieldCodec.ForMessage(106, global::GooglePlayStore.PromotedDoc.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.PromotedDoc> promotedDoc_ = new pbc::RepeatedField<global::GooglePlayStore.PromotedDoc>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.PromotedDoc> PromotedDoc {
      get { return promotedDoc_; }
    }

    /// <summary>Field number for the "offerNote" field.</summary>
    public const int OfferNoteFieldNumber = 14;
    private readonly static string OfferNoteDefaultValue = "";

    private string offerNote_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfferNote {
      get { return offerNote_ ?? OfferNoteDefaultValue; }
      set {
        offerNote_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "offerNote" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOfferNote {
      get { return offerNote_ != null; }
    }
    /// <summary>Clears the value of the "offerNote" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOfferNote() {
      offerNote_ = null;
    }

    /// <summary>Field number for the "privacyPolicyUrl" field.</summary>
    public const int PrivacyPolicyUrlFieldNumber = 18;
    private readonly static string PrivacyPolicyUrlDefaultValue = "";

    private string privacyPolicyUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrivacyPolicyUrl {
      get { return privacyPolicyUrl_ ?? PrivacyPolicyUrlDefaultValue; }
      set {
        privacyPolicyUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "privacyPolicyUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPrivacyPolicyUrl {
      get { return privacyPolicyUrl_ != null; }
    }
    /// <summary>Clears the value of the "privacyPolicyUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPrivacyPolicyUrl() {
      privacyPolicyUrl_ = null;
    }

    /// <summary>Field number for the "suggestion_reasons" field.</summary>
    public const int SuggestionReasonsFieldNumber = 19;
    private global::GooglePlayStore.SuggestionReasons suggestionReasons_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SuggestionReasons SuggestionReasons {
      get { return suggestionReasons_; }
      set {
        suggestionReasons_ = value;
      }
    }

    /// <summary>Field number for the "optimalDeviceClassWarning" field.</summary>
    public const int OptimalDeviceClassWarningFieldNumber = 20;
    private global::GooglePlayStore.Warning optimalDeviceClassWarning_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Warning OptimalDeviceClassWarning {
      get { return optimalDeviceClassWarning_; }
      set {
        optimalDeviceClassWarning_ = value;
      }
    }

    /// <summary>Field number for the "badgeContainer" field.</summary>
    public const int BadgeContainerFieldNumber = 21;
    private static readonly pb::FieldCodec<global::GooglePlayStore.BadgeContainer> _repeated_badgeContainer_codec
        = pb::FieldCodec.ForMessage(170, global::GooglePlayStore.BadgeContainer.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.BadgeContainer> badgeContainer_ = new pbc::RepeatedField<global::GooglePlayStore.BadgeContainer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.BadgeContainer> BadgeContainer {
      get { return badgeContainer_; }
    }

    /// <summary>Field number for the "sectionSuggestForRating" field.</summary>
    public const int SectionSuggestForRatingFieldNumber = 22;
    private global::GooglePlayStore.SectionMetaData sectionSuggestForRating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SectionMetaData SectionSuggestForRating {
      get { return sectionSuggestForRating_; }
      set {
        sectionSuggestForRating_ = value;
      }
    }

    /// <summary>Field number for the "sectionPurchaseCrossSell" field.</summary>
    public const int SectionPurchaseCrossSellFieldNumber = 24;
    private global::GooglePlayStore.SectionMetaData sectionPurchaseCrossSell_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SectionMetaData SectionPurchaseCrossSell {
      get { return sectionPurchaseCrossSell_; }
      set {
        sectionPurchaseCrossSell_ = value;
      }
    }

    /// <summary>Field number for the "overflowLink" field.</summary>
    public const int OverflowLinkFieldNumber = 25;
    private static readonly pb::FieldCodec<global::GooglePlayStore.OverflowLink> _repeated_overflowLink_codec
        = pb::FieldCodec.ForMessage(202, global::GooglePlayStore.OverflowLink.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.OverflowLink> overflowLink_ = new pbc::RepeatedField<global::GooglePlayStore.OverflowLink>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.OverflowLink> OverflowLink {
      get { return overflowLink_; }
    }

    /// <summary>Field number for the "attributionHtml" field.</summary>
    public const int AttributionHtmlFieldNumber = 27;
    private readonly static string AttributionHtmlDefaultValue = "";

    private string attributionHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AttributionHtml {
      get { return attributionHtml_ ?? AttributionHtmlDefaultValue; }
      set {
        attributionHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "attributionHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAttributionHtml {
      get { return attributionHtml_ != null; }
    }
    /// <summary>Clears the value of the "attributionHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAttributionHtml() {
      attributionHtml_ = null;
    }

    /// <summary>Field number for the "purchaseHistoryDetails" field.</summary>
    public const int PurchaseHistoryDetailsFieldNumber = 28;
    private global::GooglePlayStore.PurchaseHistoryDetails purchaseHistoryDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.PurchaseHistoryDetails PurchaseHistoryDetails {
      get { return purchaseHistoryDetails_; }
      set {
        purchaseHistoryDetails_ = value;
      }
    }

    /// <summary>Field number for the "badgeForLegacyRating" field.</summary>
    public const int BadgeForLegacyRatingFieldNumber = 29;
    private global::GooglePlayStore.Badge badgeForLegacyRating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Badge BadgeForLegacyRating {
      get { return badgeForLegacyRating_; }
      set {
        badgeForLegacyRating_ = value;
      }
    }

    /// <summary>Field number for the "voucherInfo" field.</summary>
    public const int VoucherInfoFieldNumber = 30;
    private static readonly pb::FieldCodec<global::GooglePlayStore.VoucherInfo> _repeated_voucherInfo_codec
        = pb::FieldCodec.ForMessage(242, global::GooglePlayStore.VoucherInfo.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.VoucherInfo> voucherInfo_ = new pbc::RepeatedField<global::GooglePlayStore.VoucherInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.VoucherInfo> VoucherInfo {
      get { return voucherInfo_; }
    }

    /// <summary>Field number for the "sectionFeaturedApps" field.</summary>
    public const int SectionFeaturedAppsFieldNumber = 32;
    private global::GooglePlayStore.SectionMetaData sectionFeaturedApps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SectionMetaData SectionFeaturedApps {
      get { return sectionFeaturedApps_; }
      set {
        sectionFeaturedApps_ = value;
      }
    }

    /// <summary>Field number for the "detailsPageCluster" field.</summary>
    public const int DetailsPageClusterFieldNumber = 34;
    private static readonly pb::FieldCodec<global::GooglePlayStore.SectionMetaData> _repeated_detailsPageCluster_codec
        = pb::FieldCodec.ForMessage(274, global::GooglePlayStore.SectionMetaData.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.SectionMetaData> detailsPageCluster_ = new pbc::RepeatedField<global::GooglePlayStore.SectionMetaData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.SectionMetaData> DetailsPageCluster {
      get { return detailsPageCluster_; }
    }

    /// <summary>Field number for the "videoAnnotations" field.</summary>
    public const int VideoAnnotationsFieldNumber = 35;
    private global::GooglePlayStore.VideoAnnotations videoAnnotations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.VideoAnnotations VideoAnnotations {
      get { return videoAnnotations_; }
      set {
        videoAnnotations_ = value;
      }
    }

    /// <summary>Field number for the "sectionPurchaseRelatedTopics" field.</summary>
    public const int SectionPurchaseRelatedTopicsFieldNumber = 36;
    private global::GooglePlayStore.SectionMetaData sectionPurchaseRelatedTopics_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SectionMetaData SectionPurchaseRelatedTopics {
      get { return sectionPurchaseRelatedTopics_; }
      set {
        sectionPurchaseRelatedTopics_ = value;
      }
    }

    /// <summary>Field number for the "mySubscriptionDetails" field.</summary>
    public const int MySubscriptionDetailsFieldNumber = 37;
    private global::GooglePlayStore.MySubscriptionDetails mySubscriptionDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.MySubscriptionDetails MySubscriptionDetails {
      get { return mySubscriptionDetails_; }
      set {
        mySubscriptionDetails_ = value;
      }
    }

    /// <summary>Field number for the "myRewardDetails" field.</summary>
    public const int MyRewardDetailsFieldNumber = 38;
    private global::GooglePlayStore.MyRewardDetails myRewardDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.MyRewardDetails MyRewardDetails {
      get { return myRewardDetails_; }
      set {
        myRewardDetails_ = value;
      }
    }

    /// <summary>Field number for the "featureBadge" field.</summary>
    public const int FeatureBadgeFieldNumber = 39;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Badge> _repeated_featureBadge_codec
        = pb::FieldCodec.ForMessage(314, global::GooglePlayStore.Badge.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Badge> featureBadge_ = new pbc::RepeatedField<global::GooglePlayStore.Badge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Badge> FeatureBadge {
      get { return featureBadge_; }
    }

    /// <summary>Field number for the "snippet" field.</summary>
    public const int SnippetFieldNumber = 42;
    private global::GooglePlayStore.Snippet snippet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Snippet Snippet {
      get { return snippet_; }
      set {
        snippet_ = value;
      }
    }

    /// <summary>Field number for the "downloadsLabel" field.</summary>
    public const int DownloadsLabelFieldNumber = 48;
    private readonly static string DownloadsLabelDefaultValue = "";

    private string downloadsLabel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DownloadsLabel {
      get { return downloadsLabel_ ?? DownloadsLabelDefaultValue; }
      set {
        downloadsLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "downloadsLabel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDownloadsLabel {
      get { return downloadsLabel_ != null; }
    }
    /// <summary>Clears the value of the "downloadsLabel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDownloadsLabel() {
      downloadsLabel_ = null;
    }

    /// <summary>Field number for the "badgeForRating" field.</summary>
    public const int BadgeForRatingFieldNumber = 50;
    private global::GooglePlayStore.Badge badgeForRating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Badge BadgeForRating {
      get { return badgeForRating_; }
      set {
        badgeForRating_ = value;
      }
    }

    /// <summary>Field number for the "categoryInfo" field.</summary>
    public const int CategoryInfoFieldNumber = 53;
    private global::GooglePlayStore.CategoryInfo categoryInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CategoryInfo CategoryInfo {
      get { return categoryInfo_; }
      set {
        categoryInfo_ = value;
      }
    }

    /// <summary>Field number for the "reasons" field.</summary>
    public const int ReasonsFieldNumber = 60;
    private global::GooglePlayStore.EditorReason reasons_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.EditorReason Reasons {
      get { return reasons_; }
      set {
        reasons_ = value;
      }
    }

    /// <summary>Field number for the "topChartStream" field.</summary>
    public const int TopChartStreamFieldNumber = 65;
    private global::GooglePlayStore.Stream topChartStream_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Stream TopChartStream {
      get { return topChartStream_; }
      set {
        topChartStream_ = value;
      }
    }

    /// <summary>Field number for the "categoryName" field.</summary>
    public const int CategoryNameFieldNumber = 66;
    private readonly static string CategoryNameDefaultValue = "";

    private string categoryName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CategoryName {
      get { return categoryName_ ?? CategoryNameDefaultValue; }
      set {
        categoryName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "categoryName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCategoryName {
      get { return categoryName_ != null; }
    }
    /// <summary>Clears the value of the "categoryName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCategoryName() {
      categoryName_ = null;
    }

    /// <summary>Field number for the "chip" field.</summary>
    public const int ChipFieldNumber = 71;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Chip> _repeated_chip_codec
        = pb::FieldCodec.ForMessage(570, global::GooglePlayStore.Chip.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Chip> chip_ = new pbc::RepeatedField<global::GooglePlayStore.Chip>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Chip> Chip {
      get { return chip_; }
    }

    /// <summary>Field number for the "displayBadge" field.</summary>
    public const int DisplayBadgeFieldNumber = 72;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Badge> _repeated_displayBadge_codec
        = pb::FieldCodec.ForMessage(578, global::GooglePlayStore.Badge.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Badge> displayBadge_ = new pbc::RepeatedField<global::GooglePlayStore.Badge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Badge> DisplayBadge {
      get { return displayBadge_; }
    }

    /// <summary>Field number for the "liveStreamUrl" field.</summary>
    public const int LiveStreamUrlFieldNumber = 80;
    private readonly static string LiveStreamUrlDefaultValue = "";

    private string liveStreamUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LiveStreamUrl {
      get { return liveStreamUrl_ ?? LiveStreamUrlDefaultValue; }
      set {
        liveStreamUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "liveStreamUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLiveStreamUrl {
      get { return liveStreamUrl_ != null; }
    }
    /// <summary>Clears the value of the "liveStreamUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLiveStreamUrl() {
      liveStreamUrl_ = null;
    }

    /// <summary>Field number for the "promotionStreamUrl" field.</summary>
    public const int PromotionStreamUrlFieldNumber = 85;
    private readonly static string PromotionStreamUrlDefaultValue = "";

    private string promotionStreamUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PromotionStreamUrl {
      get { return promotionStreamUrl_ ?? PromotionStreamUrlDefaultValue; }
      set {
        promotionStreamUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "promotionStreamUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPromotionStreamUrl {
      get { return promotionStreamUrl_ != null; }
    }
    /// <summary>Clears the value of the "promotionStreamUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPromotionStreamUrl() {
      promotionStreamUrl_ = null;
    }

    /// <summary>Field number for the "overlayMetaDataExtra" field.</summary>
    public const int OverlayMetaDataExtraFieldNumber = 91;
    private global::GooglePlayStore.OverlayMetaData overlayMetaDataExtra_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.OverlayMetaData OverlayMetaDataExtra {
      get { return overlayMetaDataExtra_; }
      set {
        overlayMetaDataExtra_ = value;
      }
    }

    /// <summary>Field number for the "sectionImage" field.</summary>
    public const int SectionImageFieldNumber = 94;
    private global::GooglePlayStore.SectionImage sectionImage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SectionImage SectionImage {
      get { return sectionImage_; }
      set {
        sectionImage_ = value;
      }
    }

    /// <summary>Field number for the "categoryStream" field.</summary>
    public const int CategoryStreamFieldNumber = 97;
    private global::GooglePlayStore.SubStream categoryStream_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SubStream CategoryStream {
      get { return categoryStream_; }
      set {
        categoryStream_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Annotations);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Annotations other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SectionRelated, other.SectionRelated)) return false;
      if (!object.Equals(SectionMoreBy, other.SectionMoreBy)) return false;
      if(!warning_.Equals(other.warning_)) return false;
      if (!object.Equals(SectionBodyOfWork, other.SectionBodyOfWork)) return false;
      if (!object.Equals(SectionCoreContent, other.SectionCoreContent)) return false;
      if (!object.Equals(OverlayMetaData, other.OverlayMetaData)) return false;
      if(!badgeForCreator_.Equals(other.badgeForCreator_)) return false;
      if(!infoBadge_.Equals(other.infoBadge_)) return false;
      if (!object.Equals(AnnotationLink, other.AnnotationLink)) return false;
      if (!object.Equals(SectionCrossSell, other.SectionCrossSell)) return false;
      if (!object.Equals(SectionRelatedItemType, other.SectionRelatedItemType)) return false;
      if(!promotedDoc_.Equals(other.promotedDoc_)) return false;
      if (OfferNote != other.OfferNote) return false;
      if (PrivacyPolicyUrl != other.PrivacyPolicyUrl) return false;
      if (!object.Equals(SuggestionReasons, other.SuggestionReasons)) return false;
      if (!object.Equals(OptimalDeviceClassWarning, other.OptimalDeviceClassWarning)) return false;
      if(!badgeContainer_.Equals(other.badgeContainer_)) return false;
      if (!object.Equals(SectionSuggestForRating, other.SectionSuggestForRating)) return false;
      if (!object.Equals(SectionPurchaseCrossSell, other.SectionPurchaseCrossSell)) return false;
      if(!overflowLink_.Equals(other.overflowLink_)) return false;
      if (AttributionHtml != other.AttributionHtml) return false;
      if (!object.Equals(PurchaseHistoryDetails, other.PurchaseHistoryDetails)) return false;
      if (!object.Equals(BadgeForLegacyRating, other.BadgeForLegacyRating)) return false;
      if(!voucherInfo_.Equals(other.voucherInfo_)) return false;
      if (!object.Equals(SectionFeaturedApps, other.SectionFeaturedApps)) return false;
      if(!detailsPageCluster_.Equals(other.detailsPageCluster_)) return false;
      if (!object.Equals(VideoAnnotations, other.VideoAnnotations)) return false;
      if (!object.Equals(SectionPurchaseRelatedTopics, other.SectionPurchaseRelatedTopics)) return false;
      if (!object.Equals(MySubscriptionDetails, other.MySubscriptionDetails)) return false;
      if (!object.Equals(MyRewardDetails, other.MyRewardDetails)) return false;
      if(!featureBadge_.Equals(other.featureBadge_)) return false;
      if (!object.Equals(Snippet, other.Snippet)) return false;
      if (DownloadsLabel != other.DownloadsLabel) return false;
      if (!object.Equals(BadgeForRating, other.BadgeForRating)) return false;
      if (!object.Equals(CategoryInfo, other.CategoryInfo)) return false;
      if (!object.Equals(Reasons, other.Reasons)) return false;
      if (!object.Equals(TopChartStream, other.TopChartStream)) return false;
      if (CategoryName != other.CategoryName) return false;
      if(!chip_.Equals(other.chip_)) return false;
      if(!displayBadge_.Equals(other.displayBadge_)) return false;
      if (LiveStreamUrl != other.LiveStreamUrl) return false;
      if (PromotionStreamUrl != other.PromotionStreamUrl) return false;
      if (!object.Equals(OverlayMetaDataExtra, other.OverlayMetaDataExtra)) return false;
      if (!object.Equals(SectionImage, other.SectionImage)) return false;
      if (!object.Equals(CategoryStream, other.CategoryStream)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sectionRelated_ != null) hash ^= SectionRelated.GetHashCode();
      if (sectionMoreBy_ != null) hash ^= SectionMoreBy.GetHashCode();
      hash ^= warning_.GetHashCode();
      if (sectionBodyOfWork_ != null) hash ^= SectionBodyOfWork.GetHashCode();
      if (sectionCoreContent_ != null) hash ^= SectionCoreContent.GetHashCode();
      if (overlayMetaData_ != null) hash ^= OverlayMetaData.GetHashCode();
      hash ^= badgeForCreator_.GetHashCode();
      hash ^= infoBadge_.GetHashCode();
      if (annotationLink_ != null) hash ^= AnnotationLink.GetHashCode();
      if (sectionCrossSell_ != null) hash ^= SectionCrossSell.GetHashCode();
      if (sectionRelatedItemType_ != null) hash ^= SectionRelatedItemType.GetHashCode();
      hash ^= promotedDoc_.GetHashCode();
      if (HasOfferNote) hash ^= OfferNote.GetHashCode();
      if (HasPrivacyPolicyUrl) hash ^= PrivacyPolicyUrl.GetHashCode();
      if (suggestionReasons_ != null) hash ^= SuggestionReasons.GetHashCode();
      if (optimalDeviceClassWarning_ != null) hash ^= OptimalDeviceClassWarning.GetHashCode();
      hash ^= badgeContainer_.GetHashCode();
      if (sectionSuggestForRating_ != null) hash ^= SectionSuggestForRating.GetHashCode();
      if (sectionPurchaseCrossSell_ != null) hash ^= SectionPurchaseCrossSell.GetHashCode();
      hash ^= overflowLink_.GetHashCode();
      if (HasAttributionHtml) hash ^= AttributionHtml.GetHashCode();
      if (purchaseHistoryDetails_ != null) hash ^= PurchaseHistoryDetails.GetHashCode();
      if (badgeForLegacyRating_ != null) hash ^= BadgeForLegacyRating.GetHashCode();
      hash ^= voucherInfo_.GetHashCode();
      if (sectionFeaturedApps_ != null) hash ^= SectionFeaturedApps.GetHashCode();
      hash ^= detailsPageCluster_.GetHashCode();
      if (videoAnnotations_ != null) hash ^= VideoAnnotations.GetHashCode();
      if (sectionPurchaseRelatedTopics_ != null) hash ^= SectionPurchaseRelatedTopics.GetHashCode();
      if (mySubscriptionDetails_ != null) hash ^= MySubscriptionDetails.GetHashCode();
      if (myRewardDetails_ != null) hash ^= MyRewardDetails.GetHashCode();
      hash ^= featureBadge_.GetHashCode();
      if (snippet_ != null) hash ^= Snippet.GetHashCode();
      if (HasDownloadsLabel) hash ^= DownloadsLabel.GetHashCode();
      if (badgeForRating_ != null) hash ^= BadgeForRating.GetHashCode();
      if (categoryInfo_ != null) hash ^= CategoryInfo.GetHashCode();
      if (reasons_ != null) hash ^= Reasons.GetHashCode();
      if (topChartStream_ != null) hash ^= TopChartStream.GetHashCode();
      if (HasCategoryName) hash ^= CategoryName.GetHashCode();
      hash ^= chip_.GetHashCode();
      hash ^= displayBadge_.GetHashCode();
      if (HasLiveStreamUrl) hash ^= LiveStreamUrl.GetHashCode();
      if (HasPromotionStreamUrl) hash ^= PromotionStreamUrl.GetHashCode();
      if (overlayMetaDataExtra_ != null) hash ^= OverlayMetaDataExtra.GetHashCode();
      if (sectionImage_ != null) hash ^= SectionImage.GetHashCode();
      if (categoryStream_ != null) hash ^= CategoryStream.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (sectionRelated_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SectionRelated);
      }
      if (sectionMoreBy_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SectionMoreBy);
      }
      warning_.WriteTo(output, _repeated_warning_codec);
      if (sectionBodyOfWork_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SectionBodyOfWork);
      }
      if (sectionCoreContent_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SectionCoreContent);
      }
      if (overlayMetaData_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(OverlayMetaData);
      }
      badgeForCreator_.WriteTo(output, _repeated_badgeForCreator_codec);
      infoBadge_.WriteTo(output, _repeated_infoBadge_codec);
      if (annotationLink_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(AnnotationLink);
      }
      if (sectionCrossSell_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(SectionCrossSell);
      }
      if (sectionRelatedItemType_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(SectionRelatedItemType);
      }
      promotedDoc_.WriteTo(output, _repeated_promotedDoc_codec);
      if (HasOfferNote) {
        output.WriteRawTag(114);
        output.WriteString(OfferNote);
      }
      if (HasPrivacyPolicyUrl) {
        output.WriteRawTag(146, 1);
        output.WriteString(PrivacyPolicyUrl);
      }
      if (suggestionReasons_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(SuggestionReasons);
      }
      if (optimalDeviceClassWarning_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(OptimalDeviceClassWarning);
      }
      badgeContainer_.WriteTo(output, _repeated_badgeContainer_codec);
      if (sectionSuggestForRating_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(SectionSuggestForRating);
      }
      if (sectionPurchaseCrossSell_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(SectionPurchaseCrossSell);
      }
      overflowLink_.WriteTo(output, _repeated_overflowLink_codec);
      if (HasAttributionHtml) {
        output.WriteRawTag(218, 1);
        output.WriteString(AttributionHtml);
      }
      if (purchaseHistoryDetails_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(PurchaseHistoryDetails);
      }
      if (badgeForLegacyRating_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(BadgeForLegacyRating);
      }
      voucherInfo_.WriteTo(output, _repeated_voucherInfo_codec);
      if (sectionFeaturedApps_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(SectionFeaturedApps);
      }
      detailsPageCluster_.WriteTo(output, _repeated_detailsPageCluster_codec);
      if (videoAnnotations_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(VideoAnnotations);
      }
      if (sectionPurchaseRelatedTopics_ != null) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(SectionPurchaseRelatedTopics);
      }
      if (mySubscriptionDetails_ != null) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(MySubscriptionDetails);
      }
      if (myRewardDetails_ != null) {
        output.WriteRawTag(178, 2);
        output.WriteMessage(MyRewardDetails);
      }
      featureBadge_.WriteTo(output, _repeated_featureBadge_codec);
      if (snippet_ != null) {
        output.WriteRawTag(210, 2);
        output.WriteMessage(Snippet);
      }
      if (HasDownloadsLabel) {
        output.WriteRawTag(130, 3);
        output.WriteString(DownloadsLabel);
      }
      if (badgeForRating_ != null) {
        output.WriteRawTag(146, 3);
        output.WriteMessage(BadgeForRating);
      }
      if (categoryInfo_ != null) {
        output.WriteRawTag(170, 3);
        output.WriteMessage(CategoryInfo);
      }
      if (reasons_ != null) {
        output.WriteRawTag(226, 3);
        output.WriteMessage(Reasons);
      }
      if (topChartStream_ != null) {
        output.WriteRawTag(138, 4);
        output.WriteMessage(TopChartStream);
      }
      if (HasCategoryName) {
        output.WriteRawTag(146, 4);
        output.WriteString(CategoryName);
      }
      chip_.WriteTo(output, _repeated_chip_codec);
      displayBadge_.WriteTo(output, _repeated_displayBadge_codec);
      if (HasLiveStreamUrl) {
        output.WriteRawTag(130, 5);
        output.WriteString(LiveStreamUrl);
      }
      if (HasPromotionStreamUrl) {
        output.WriteRawTag(170, 5);
        output.WriteString(PromotionStreamUrl);
      }
      if (overlayMetaDataExtra_ != null) {
        output.WriteRawTag(218, 5);
        output.WriteMessage(OverlayMetaDataExtra);
      }
      if (sectionImage_ != null) {
        output.WriteRawTag(242, 5);
        output.WriteMessage(SectionImage);
      }
      if (categoryStream_ != null) {
        output.WriteRawTag(138, 6);
        output.WriteMessage(CategoryStream);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sectionRelated_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SectionRelated);
      }
      if (sectionMoreBy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SectionMoreBy);
      }
      size += warning_.CalculateSize(_repeated_warning_codec);
      if (sectionBodyOfWork_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SectionBodyOfWork);
      }
      if (sectionCoreContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SectionCoreContent);
      }
      if (overlayMetaData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OverlayMetaData);
      }
      size += badgeForCreator_.CalculateSize(_repeated_badgeForCreator_codec);
      size += infoBadge_.CalculateSize(_repeated_infoBadge_codec);
      if (annotationLink_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AnnotationLink);
      }
      if (sectionCrossSell_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SectionCrossSell);
      }
      if (sectionRelatedItemType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SectionRelatedItemType);
      }
      size += promotedDoc_.CalculateSize(_repeated_promotedDoc_codec);
      if (HasOfferNote) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OfferNote);
      }
      if (HasPrivacyPolicyUrl) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PrivacyPolicyUrl);
      }
      if (suggestionReasons_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SuggestionReasons);
      }
      if (optimalDeviceClassWarning_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OptimalDeviceClassWarning);
      }
      size += badgeContainer_.CalculateSize(_repeated_badgeContainer_codec);
      if (sectionSuggestForRating_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SectionSuggestForRating);
      }
      if (sectionPurchaseCrossSell_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SectionPurchaseCrossSell);
      }
      size += overflowLink_.CalculateSize(_repeated_overflowLink_codec);
      if (HasAttributionHtml) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AttributionHtml);
      }
      if (purchaseHistoryDetails_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PurchaseHistoryDetails);
      }
      if (badgeForLegacyRating_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BadgeForLegacyRating);
      }
      size += voucherInfo_.CalculateSize(_repeated_voucherInfo_codec);
      if (sectionFeaturedApps_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SectionFeaturedApps);
      }
      size += detailsPageCluster_.CalculateSize(_repeated_detailsPageCluster_codec);
      if (videoAnnotations_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VideoAnnotations);
      }
      if (sectionPurchaseRelatedTopics_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SectionPurchaseRelatedTopics);
      }
      if (mySubscriptionDetails_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MySubscriptionDetails);
      }
      if (myRewardDetails_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MyRewardDetails);
      }
      size += featureBadge_.CalculateSize(_repeated_featureBadge_codec);
      if (snippet_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Snippet);
      }
      if (HasDownloadsLabel) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DownloadsLabel);
      }
      if (badgeForRating_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BadgeForRating);
      }
      if (categoryInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CategoryInfo);
      }
      if (reasons_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Reasons);
      }
      if (topChartStream_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TopChartStream);
      }
      if (HasCategoryName) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CategoryName);
      }
      size += chip_.CalculateSize(_repeated_chip_codec);
      size += displayBadge_.CalculateSize(_repeated_displayBadge_codec);
      if (HasLiveStreamUrl) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LiveStreamUrl);
      }
      if (HasPromotionStreamUrl) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PromotionStreamUrl);
      }
      if (overlayMetaDataExtra_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OverlayMetaDataExtra);
      }
      if (sectionImage_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SectionImage);
      }
      if (categoryStream_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CategoryStream);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Annotations other) {
      if (other == null) {
        return;
      }
      if (other.sectionRelated_ != null) {
        if (sectionRelated_ == null) {
          SectionRelated = new global::GooglePlayStore.SectionMetaData();
        }
        SectionRelated.MergeFrom(other.SectionRelated);
      }
      if (other.sectionMoreBy_ != null) {
        if (sectionMoreBy_ == null) {
          SectionMoreBy = new global::GooglePlayStore.SectionMetaData();
        }
        SectionMoreBy.MergeFrom(other.SectionMoreBy);
      }
      warning_.Add(other.warning_);
      if (other.sectionBodyOfWork_ != null) {
        if (sectionBodyOfWork_ == null) {
          SectionBodyOfWork = new global::GooglePlayStore.SectionMetaData();
        }
        SectionBodyOfWork.MergeFrom(other.SectionBodyOfWork);
      }
      if (other.sectionCoreContent_ != null) {
        if (sectionCoreContent_ == null) {
          SectionCoreContent = new global::GooglePlayStore.SectionMetaData();
        }
        SectionCoreContent.MergeFrom(other.SectionCoreContent);
      }
      if (other.overlayMetaData_ != null) {
        if (overlayMetaData_ == null) {
          OverlayMetaData = new global::GooglePlayStore.OverlayMetaData();
        }
        OverlayMetaData.MergeFrom(other.OverlayMetaData);
      }
      badgeForCreator_.Add(other.badgeForCreator_);
      infoBadge_.Add(other.infoBadge_);
      if (other.annotationLink_ != null) {
        if (annotationLink_ == null) {
          AnnotationLink = new global::GooglePlayStore.AnnotationLink();
        }
        AnnotationLink.MergeFrom(other.AnnotationLink);
      }
      if (other.sectionCrossSell_ != null) {
        if (sectionCrossSell_ == null) {
          SectionCrossSell = new global::GooglePlayStore.SectionMetaData();
        }
        SectionCrossSell.MergeFrom(other.SectionCrossSell);
      }
      if (other.sectionRelatedItemType_ != null) {
        if (sectionRelatedItemType_ == null) {
          SectionRelatedItemType = new global::GooglePlayStore.SectionMetaData();
        }
        SectionRelatedItemType.MergeFrom(other.SectionRelatedItemType);
      }
      promotedDoc_.Add(other.promotedDoc_);
      if (other.HasOfferNote) {
        OfferNote = other.OfferNote;
      }
      if (other.HasPrivacyPolicyUrl) {
        PrivacyPolicyUrl = other.PrivacyPolicyUrl;
      }
      if (other.suggestionReasons_ != null) {
        if (suggestionReasons_ == null) {
          SuggestionReasons = new global::GooglePlayStore.SuggestionReasons();
        }
        SuggestionReasons.MergeFrom(other.SuggestionReasons);
      }
      if (other.optimalDeviceClassWarning_ != null) {
        if (optimalDeviceClassWarning_ == null) {
          OptimalDeviceClassWarning = new global::GooglePlayStore.Warning();
        }
        OptimalDeviceClassWarning.MergeFrom(other.OptimalDeviceClassWarning);
      }
      badgeContainer_.Add(other.badgeContainer_);
      if (other.sectionSuggestForRating_ != null) {
        if (sectionSuggestForRating_ == null) {
          SectionSuggestForRating = new global::GooglePlayStore.SectionMetaData();
        }
        SectionSuggestForRating.MergeFrom(other.SectionSuggestForRating);
      }
      if (other.sectionPurchaseCrossSell_ != null) {
        if (sectionPurchaseCrossSell_ == null) {
          SectionPurchaseCrossSell = new global::GooglePlayStore.SectionMetaData();
        }
        SectionPurchaseCrossSell.MergeFrom(other.SectionPurchaseCrossSell);
      }
      overflowLink_.Add(other.overflowLink_);
      if (other.HasAttributionHtml) {
        AttributionHtml = other.AttributionHtml;
      }
      if (other.purchaseHistoryDetails_ != null) {
        if (purchaseHistoryDetails_ == null) {
          PurchaseHistoryDetails = new global::GooglePlayStore.PurchaseHistoryDetails();
        }
        PurchaseHistoryDetails.MergeFrom(other.PurchaseHistoryDetails);
      }
      if (other.badgeForLegacyRating_ != null) {
        if (badgeForLegacyRating_ == null) {
          BadgeForLegacyRating = new global::GooglePlayStore.Badge();
        }
        BadgeForLegacyRating.MergeFrom(other.BadgeForLegacyRating);
      }
      voucherInfo_.Add(other.voucherInfo_);
      if (other.sectionFeaturedApps_ != null) {
        if (sectionFeaturedApps_ == null) {
          SectionFeaturedApps = new global::GooglePlayStore.SectionMetaData();
        }
        SectionFeaturedApps.MergeFrom(other.SectionFeaturedApps);
      }
      detailsPageCluster_.Add(other.detailsPageCluster_);
      if (other.videoAnnotations_ != null) {
        if (videoAnnotations_ == null) {
          VideoAnnotations = new global::GooglePlayStore.VideoAnnotations();
        }
        VideoAnnotations.MergeFrom(other.VideoAnnotations);
      }
      if (other.sectionPurchaseRelatedTopics_ != null) {
        if (sectionPurchaseRelatedTopics_ == null) {
          SectionPurchaseRelatedTopics = new global::GooglePlayStore.SectionMetaData();
        }
        SectionPurchaseRelatedTopics.MergeFrom(other.SectionPurchaseRelatedTopics);
      }
      if (other.mySubscriptionDetails_ != null) {
        if (mySubscriptionDetails_ == null) {
          MySubscriptionDetails = new global::GooglePlayStore.MySubscriptionDetails();
        }
        MySubscriptionDetails.MergeFrom(other.MySubscriptionDetails);
      }
      if (other.myRewardDetails_ != null) {
        if (myRewardDetails_ == null) {
          MyRewardDetails = new global::GooglePlayStore.MyRewardDetails();
        }
        MyRewardDetails.MergeFrom(other.MyRewardDetails);
      }
      featureBadge_.Add(other.featureBadge_);
      if (other.snippet_ != null) {
        if (snippet_ == null) {
          Snippet = new global::GooglePlayStore.Snippet();
        }
        Snippet.MergeFrom(other.Snippet);
      }
      if (other.HasDownloadsLabel) {
        DownloadsLabel = other.DownloadsLabel;
      }
      if (other.badgeForRating_ != null) {
        if (badgeForRating_ == null) {
          BadgeForRating = new global::GooglePlayStore.Badge();
        }
        BadgeForRating.MergeFrom(other.BadgeForRating);
      }
      if (other.categoryInfo_ != null) {
        if (categoryInfo_ == null) {
          CategoryInfo = new global::GooglePlayStore.CategoryInfo();
        }
        CategoryInfo.MergeFrom(other.CategoryInfo);
      }
      if (other.reasons_ != null) {
        if (reasons_ == null) {
          Reasons = new global::GooglePlayStore.EditorReason();
        }
        Reasons.MergeFrom(other.Reasons);
      }
      if (other.topChartStream_ != null) {
        if (topChartStream_ == null) {
          TopChartStream = new global::GooglePlayStore.Stream();
        }
        TopChartStream.MergeFrom(other.TopChartStream);
      }
      if (other.HasCategoryName) {
        CategoryName = other.CategoryName;
      }
      chip_.Add(other.chip_);
      displayBadge_.Add(other.displayBadge_);
      if (other.HasLiveStreamUrl) {
        LiveStreamUrl = other.LiveStreamUrl;
      }
      if (other.HasPromotionStreamUrl) {
        PromotionStreamUrl = other.PromotionStreamUrl;
      }
      if (other.overlayMetaDataExtra_ != null) {
        if (overlayMetaDataExtra_ == null) {
          OverlayMetaDataExtra = new global::GooglePlayStore.OverlayMetaData();
        }
        OverlayMetaDataExtra.MergeFrom(other.OverlayMetaDataExtra);
      }
      if (other.sectionImage_ != null) {
        if (sectionImage_ == null) {
          SectionImage = new global::GooglePlayStore.SectionImage();
        }
        SectionImage.MergeFrom(other.SectionImage);
      }
      if (other.categoryStream_ != null) {
        if (categoryStream_ == null) {
          CategoryStream = new global::GooglePlayStore.SubStream();
        }
        CategoryStream.MergeFrom(other.CategoryStream);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (sectionRelated_ == null) {
              SectionRelated = new global::GooglePlayStore.SectionMetaData();
            }
            input.ReadMessage(SectionRelated);
            break;
          }
          case 18: {
            if (sectionMoreBy_ == null) {
              SectionMoreBy = new global::GooglePlayStore.SectionMetaData();
            }
            input.ReadMessage(SectionMoreBy);
            break;
          }
          case 34: {
            warning_.AddEntriesFrom(input, _repeated_warning_codec);
            break;
          }
          case 42: {
            if (sectionBodyOfWork_ == null) {
              SectionBodyOfWork = new global::GooglePlayStore.SectionMetaData();
            }
            input.ReadMessage(SectionBodyOfWork);
            break;
          }
          case 50: {
            if (sectionCoreContent_ == null) {
              SectionCoreContent = new global::GooglePlayStore.SectionMetaData();
            }
            input.ReadMessage(SectionCoreContent);
            break;
          }
          case 58: {
            if (overlayMetaData_ == null) {
              OverlayMetaData = new global::GooglePlayStore.OverlayMetaData();
            }
            input.ReadMessage(OverlayMetaData);
            break;
          }
          case 66: {
            badgeForCreator_.AddEntriesFrom(input, _repeated_badgeForCreator_codec);
            break;
          }
          case 74: {
            infoBadge_.AddEntriesFrom(input, _repeated_infoBadge_codec);
            break;
          }
          case 82: {
            if (annotationLink_ == null) {
              AnnotationLink = new global::GooglePlayStore.AnnotationLink();
            }
            input.ReadMessage(AnnotationLink);
            break;
          }
          case 90: {
            if (sectionCrossSell_ == null) {
              SectionCrossSell = new global::GooglePlayStore.SectionMetaData();
            }
            input.ReadMessage(SectionCrossSell);
            break;
          }
          case 98: {
            if (sectionRelatedItemType_ == null) {
              SectionRelatedItemType = new global::GooglePlayStore.SectionMetaData();
            }
            input.ReadMessage(SectionRelatedItemType);
            break;
          }
          case 106: {
            promotedDoc_.AddEntriesFrom(input, _repeated_promotedDoc_codec);
            break;
          }
          case 114: {
            OfferNote = input.ReadString();
            break;
          }
          case 146: {
            PrivacyPolicyUrl = input.ReadString();
            break;
          }
          case 154: {
            if (suggestionReasons_ == null) {
              SuggestionReasons = new global::GooglePlayStore.SuggestionReasons();
            }
            input.ReadMessage(SuggestionReasons);
            break;
          }
          case 162: {
            if (optimalDeviceClassWarning_ == null) {
              OptimalDeviceClassWarning = new global::GooglePlayStore.Warning();
            }
            input.ReadMessage(OptimalDeviceClassWarning);
            break;
          }
          case 170: {
            badgeContainer_.AddEntriesFrom(input, _repeated_badgeContainer_codec);
            break;
          }
          case 178: {
            if (sectionSuggestForRating_ == null) {
              SectionSuggestForRating = new global::GooglePlayStore.SectionMetaData();
            }
            input.ReadMessage(SectionSuggestForRating);
            break;
          }
          case 194: {
            if (sectionPurchaseCrossSell_ == null) {
              SectionPurchaseCrossSell = new global::GooglePlayStore.SectionMetaData();
            }
            input.ReadMessage(SectionPurchaseCrossSell);
            break;
          }
          case 202: {
            overflowLink_.AddEntriesFrom(input, _repeated_overflowLink_codec);
            break;
          }
          case 218: {
            AttributionHtml = input.ReadString();
            break;
          }
          case 226: {
            if (purchaseHistoryDetails_ == null) {
              PurchaseHistoryDetails = new global::GooglePlayStore.PurchaseHistoryDetails();
            }
            input.ReadMessage(PurchaseHistoryDetails);
            break;
          }
          case 234: {
            if (badgeForLegacyRating_ == null) {
              BadgeForLegacyRating = new global::GooglePlayStore.Badge();
            }
            input.ReadMessage(BadgeForLegacyRating);
            break;
          }
          case 242: {
            voucherInfo_.AddEntriesFrom(input, _repeated_voucherInfo_codec);
            break;
          }
          case 258: {
            if (sectionFeaturedApps_ == null) {
              SectionFeaturedApps = new global::GooglePlayStore.SectionMetaData();
            }
            input.ReadMessage(SectionFeaturedApps);
            break;
          }
          case 274: {
            detailsPageCluster_.AddEntriesFrom(input, _repeated_detailsPageCluster_codec);
            break;
          }
          case 282: {
            if (videoAnnotations_ == null) {
              VideoAnnotations = new global::GooglePlayStore.VideoAnnotations();
            }
            input.ReadMessage(VideoAnnotations);
            break;
          }
          case 290: {
            if (sectionPurchaseRelatedTopics_ == null) {
              SectionPurchaseRelatedTopics = new global::GooglePlayStore.SectionMetaData();
            }
            input.ReadMessage(SectionPurchaseRelatedTopics);
            break;
          }
          case 298: {
            if (mySubscriptionDetails_ == null) {
              MySubscriptionDetails = new global::GooglePlayStore.MySubscriptionDetails();
            }
            input.ReadMessage(MySubscriptionDetails);
            break;
          }
          case 306: {
            if (myRewardDetails_ == null) {
              MyRewardDetails = new global::GooglePlayStore.MyRewardDetails();
            }
            input.ReadMessage(MyRewardDetails);
            break;
          }
          case 314: {
            featureBadge_.AddEntriesFrom(input, _repeated_featureBadge_codec);
            break;
          }
          case 338: {
            if (snippet_ == null) {
              Snippet = new global::GooglePlayStore.Snippet();
            }
            input.ReadMessage(Snippet);
            break;
          }
          case 386: {
            DownloadsLabel = input.ReadString();
            break;
          }
          case 402: {
            if (badgeForRating_ == null) {
              BadgeForRating = new global::GooglePlayStore.Badge();
            }
            input.ReadMessage(BadgeForRating);
            break;
          }
          case 426: {
            if (categoryInfo_ == null) {
              CategoryInfo = new global::GooglePlayStore.CategoryInfo();
            }
            input.ReadMessage(CategoryInfo);
            break;
          }
          case 482: {
            if (reasons_ == null) {
              Reasons = new global::GooglePlayStore.EditorReason();
            }
            input.ReadMessage(Reasons);
            break;
          }
          case 522: {
            if (topChartStream_ == null) {
              TopChartStream = new global::GooglePlayStore.Stream();
            }
            input.ReadMessage(TopChartStream);
            break;
          }
          case 530: {
            CategoryName = input.ReadString();
            break;
          }
          case 570: {
            chip_.AddEntriesFrom(input, _repeated_chip_codec);
            break;
          }
          case 578: {
            displayBadge_.AddEntriesFrom(input, _repeated_displayBadge_codec);
            break;
          }
          case 642: {
            LiveStreamUrl = input.ReadString();
            break;
          }
          case 682: {
            PromotionStreamUrl = input.ReadString();
            break;
          }
          case 730: {
            if (overlayMetaDataExtra_ == null) {
              OverlayMetaDataExtra = new global::GooglePlayStore.OverlayMetaData();
            }
            input.ReadMessage(OverlayMetaDataExtra);
            break;
          }
          case 754: {
            if (sectionImage_ == null) {
              SectionImage = new global::GooglePlayStore.SectionImage();
            }
            input.ReadMessage(SectionImage);
            break;
          }
          case 778: {
            if (categoryStream_ == null) {
              CategoryStream = new global::GooglePlayStore.SubStream();
            }
            input.ReadMessage(CategoryStream);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EditorReason : pb::IMessage<EditorReason> {
    private static readonly pb::MessageParser<EditorReason> _parser = new pb::MessageParser<EditorReason>(() => new EditorReason());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EditorReason> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[129]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EditorReason() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EditorReason(EditorReason other) : this() {
      bulletin_ = other.bulletin_.Clone();
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EditorReason Clone() {
      return new EditorReason(this);
    }

    /// <summary>Field number for the "bulletin" field.</summary>
    public const int BulletinFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_bulletin_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> bulletin_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Bulletin {
      get { return bulletin_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EditorReason);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EditorReason other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!bulletin_.Equals(other.bulletin_)) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= bulletin_.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      bulletin_.WriteTo(output, _repeated_bulletin_codec);
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bulletin_.CalculateSize(_repeated_bulletin_codec);
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EditorReason other) {
      if (other == null) {
        return;
      }
      bulletin_.Add(other.bulletin_);
      if (other.HasDescription) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bulletin_.AddEntriesFrom(input, _repeated_bulletin_codec);
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SectionMetaData : pb::IMessage<SectionMetaData> {
    private static readonly pb::MessageParser<SectionMetaData> _parser = new pb::MessageParser<SectionMetaData>(() => new SectionMetaData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SectionMetaData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[130]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SectionMetaData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SectionMetaData(SectionMetaData other) : this() {
      header_ = other.header_;
      listUrl_ = other.listUrl_;
      browseUrl_ = other.browseUrl_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SectionMetaData Clone() {
      return new SectionMetaData(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private readonly static string HeaderDefaultValue = "";

    private string header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Header {
      get { return header_ ?? HeaderDefaultValue; }
      set {
        header_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "header" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHeader {
      get { return header_ != null; }
    }
    /// <summary>Clears the value of the "header" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHeader() {
      header_ = null;
    }

    /// <summary>Field number for the "listUrl" field.</summary>
    public const int ListUrlFieldNumber = 2;
    private readonly static string ListUrlDefaultValue = "";

    private string listUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ListUrl {
      get { return listUrl_ ?? ListUrlDefaultValue; }
      set {
        listUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "listUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasListUrl {
      get { return listUrl_ != null; }
    }
    /// <summary>Clears the value of the "listUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearListUrl() {
      listUrl_ = null;
    }

    /// <summary>Field number for the "browseUrl" field.</summary>
    public const int BrowseUrlFieldNumber = 3;
    private readonly static string BrowseUrlDefaultValue = "";

    private string browseUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BrowseUrl {
      get { return browseUrl_ ?? BrowseUrlDefaultValue; }
      set {
        browseUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "browseUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBrowseUrl {
      get { return browseUrl_ != null; }
    }
    /// <summary>Clears the value of the "browseUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBrowseUrl() {
      browseUrl_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SectionMetaData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SectionMetaData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Header != other.Header) return false;
      if (ListUrl != other.ListUrl) return false;
      if (BrowseUrl != other.BrowseUrl) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHeader) hash ^= Header.GetHashCode();
      if (HasListUrl) hash ^= ListUrl.GetHashCode();
      if (HasBrowseUrl) hash ^= BrowseUrl.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasHeader) {
        output.WriteRawTag(10);
        output.WriteString(Header);
      }
      if (HasListUrl) {
        output.WriteRawTag(18);
        output.WriteString(ListUrl);
      }
      if (HasBrowseUrl) {
        output.WriteRawTag(26);
        output.WriteString(BrowseUrl);
      }
      if (HasDescription) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasHeader) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Header);
      }
      if (HasListUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ListUrl);
      }
      if (HasBrowseUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BrowseUrl);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SectionMetaData other) {
      if (other == null) {
        return;
      }
      if (other.HasHeader) {
        Header = other.Header;
      }
      if (other.HasListUrl) {
        ListUrl = other.ListUrl;
      }
      if (other.HasBrowseUrl) {
        BrowseUrl = other.BrowseUrl;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Header = input.ReadString();
            break;
          }
          case 18: {
            ListUrl = input.ReadString();
            break;
          }
          case 26: {
            BrowseUrl = input.ReadString();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OverlayMetaData : pb::IMessage<OverlayMetaData> {
    private static readonly pb::MessageParser<OverlayMetaData> _parser = new pb::MessageParser<OverlayMetaData>(() => new OverlayMetaData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OverlayMetaData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[131]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayMetaData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayMetaData(OverlayMetaData other) : this() {
      overlayHeader_ = other.overlayHeader_ != null ? other.overlayHeader_.Clone() : null;
      overlayTitle_ = other.overlayTitle_ != null ? other.overlayTitle_.Clone() : null;
      overlayDescription_ = other.overlayDescription_ != null ? other.overlayDescription_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayMetaData Clone() {
      return new OverlayMetaData(this);
    }

    /// <summary>Field number for the "overlayHeader" field.</summary>
    public const int OverlayHeaderFieldNumber = 1;
    private global::GooglePlayStore.OverlayHeader overlayHeader_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.OverlayHeader OverlayHeader {
      get { return overlayHeader_; }
      set {
        overlayHeader_ = value;
      }
    }

    /// <summary>Field number for the "overlayTitle" field.</summary>
    public const int OverlayTitleFieldNumber = 181;
    private global::GooglePlayStore.OverlayTitle overlayTitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.OverlayTitle OverlayTitle {
      get { return overlayTitle_; }
      set {
        overlayTitle_ = value;
      }
    }

    /// <summary>Field number for the "overlayDescription" field.</summary>
    public const int OverlayDescriptionFieldNumber = 182;
    private global::GooglePlayStore.OverlayDescription overlayDescription_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.OverlayDescription OverlayDescription {
      get { return overlayDescription_; }
      set {
        overlayDescription_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OverlayMetaData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OverlayMetaData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OverlayHeader, other.OverlayHeader)) return false;
      if (!object.Equals(OverlayTitle, other.OverlayTitle)) return false;
      if (!object.Equals(OverlayDescription, other.OverlayDescription)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (overlayHeader_ != null) hash ^= OverlayHeader.GetHashCode();
      if (overlayTitle_ != null) hash ^= OverlayTitle.GetHashCode();
      if (overlayDescription_ != null) hash ^= OverlayDescription.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (overlayHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OverlayHeader);
      }
      if (overlayTitle_ != null) {
        output.WriteRawTag(170, 11);
        output.WriteMessage(OverlayTitle);
      }
      if (overlayDescription_ != null) {
        output.WriteRawTag(178, 11);
        output.WriteMessage(OverlayDescription);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (overlayHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OverlayHeader);
      }
      if (overlayTitle_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OverlayTitle);
      }
      if (overlayDescription_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OverlayDescription);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OverlayMetaData other) {
      if (other == null) {
        return;
      }
      if (other.overlayHeader_ != null) {
        if (overlayHeader_ == null) {
          OverlayHeader = new global::GooglePlayStore.OverlayHeader();
        }
        OverlayHeader.MergeFrom(other.OverlayHeader);
      }
      if (other.overlayTitle_ != null) {
        if (overlayTitle_ == null) {
          OverlayTitle = new global::GooglePlayStore.OverlayTitle();
        }
        OverlayTitle.MergeFrom(other.OverlayTitle);
      }
      if (other.overlayDescription_ != null) {
        if (overlayDescription_ == null) {
          OverlayDescription = new global::GooglePlayStore.OverlayDescription();
        }
        OverlayDescription.MergeFrom(other.OverlayDescription);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (overlayHeader_ == null) {
              OverlayHeader = new global::GooglePlayStore.OverlayHeader();
            }
            input.ReadMessage(OverlayHeader);
            break;
          }
          case 1450: {
            if (overlayTitle_ == null) {
              OverlayTitle = new global::GooglePlayStore.OverlayTitle();
            }
            input.ReadMessage(OverlayTitle);
            break;
          }
          case 1458: {
            if (overlayDescription_ == null) {
              OverlayDescription = new global::GooglePlayStore.OverlayDescription();
            }
            input.ReadMessage(OverlayDescription);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OverlayHeader : pb::IMessage<OverlayHeader> {
    private static readonly pb::MessageParser<OverlayHeader> _parser = new pb::MessageParser<OverlayHeader>(() => new OverlayHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OverlayHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[132]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayHeader(OverlayHeader other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayHeader Clone() {
      return new OverlayHeader(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OverlayHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OverlayHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OverlayHeader other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class OverlayTitle : pb::IMessage<OverlayTitle> {
    private static readonly pb::MessageParser<OverlayTitle> _parser = new pb::MessageParser<OverlayTitle>(() => new OverlayTitle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OverlayTitle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[133]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayTitle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayTitle(OverlayTitle other) : this() {
      title_ = other.title_;
      compositeImage_ = other.compositeImage_ != null ? other.compositeImage_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayTitle Clone() {
      return new OverlayTitle(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "compositeImage" field.</summary>
    public const int CompositeImageFieldNumber = 3;
    private global::GooglePlayStore.CompositeImage compositeImage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CompositeImage CompositeImage {
      get { return compositeImage_; }
      set {
        compositeImage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OverlayTitle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OverlayTitle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (!object.Equals(CompositeImage, other.CompositeImage)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTitle) hash ^= Title.GetHashCode();
      if (compositeImage_ != null) hash ^= CompositeImage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTitle) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (compositeImage_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CompositeImage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (compositeImage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompositeImage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OverlayTitle other) {
      if (other == null) {
        return;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.compositeImage_ != null) {
        if (compositeImage_ == null) {
          CompositeImage = new global::GooglePlayStore.CompositeImage();
        }
        CompositeImage.MergeFrom(other.CompositeImage);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            if (compositeImage_ == null) {
              CompositeImage = new global::GooglePlayStore.CompositeImage();
            }
            input.ReadMessage(CompositeImage);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompositeImage : pb::IMessage<CompositeImage> {
    private static readonly pb::MessageParser<CompositeImage> _parser = new pb::MessageParser<CompositeImage>(() => new CompositeImage());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompositeImage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[134]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompositeImage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompositeImage(CompositeImage other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      url_ = other.url_;
      typeAlt_ = other.typeAlt_;
      title_ = other.title_;
      urlAlt_ = other.urlAlt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompositeImage Clone() {
      return new CompositeImage(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 5;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "typeAlt" field.</summary>
    public const int TypeAltFieldNumber = 9;
    private readonly static int TypeAltDefaultValue = 0;

    private int typeAlt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TypeAlt {
      get { if ((_hasBits0 & 2) != 0) { return typeAlt_; } else { return TypeAltDefaultValue; } }
      set {
        _hasBits0 |= 2;
        typeAlt_ = value;
      }
    }
    /// <summary>Gets whether the "typeAlt" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTypeAlt {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "typeAlt" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTypeAlt() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 24;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "urlAlt" field.</summary>
    public const int UrlAltFieldNumber = 28;
    private readonly static string UrlAltDefaultValue = "";

    private string urlAlt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UrlAlt {
      get { return urlAlt_ ?? UrlAltDefaultValue; }
      set {
        urlAlt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "urlAlt" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrlAlt {
      get { return urlAlt_ != null; }
    }
    /// <summary>Clears the value of the "urlAlt" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrlAlt() {
      urlAlt_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompositeImage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompositeImage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Url != other.Url) return false;
      if (TypeAlt != other.TypeAlt) return false;
      if (Title != other.Title) return false;
      if (UrlAlt != other.UrlAlt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasTypeAlt) hash ^= TypeAlt.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasUrlAlt) hash ^= UrlAlt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasUrl) {
        output.WriteRawTag(42);
        output.WriteString(Url);
      }
      if (HasTypeAlt) {
        output.WriteRawTag(72);
        output.WriteInt32(TypeAlt);
      }
      if (HasTitle) {
        output.WriteRawTag(194, 1);
        output.WriteString(Title);
      }
      if (HasUrlAlt) {
        output.WriteRawTag(226, 1);
        output.WriteString(UrlAlt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasTypeAlt) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TypeAlt);
      }
      if (HasTitle) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasUrlAlt) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UrlAlt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompositeImage other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasTypeAlt) {
        TypeAlt = other.TypeAlt;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasUrlAlt) {
        UrlAlt = other.UrlAlt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 42: {
            Url = input.ReadString();
            break;
          }
          case 72: {
            TypeAlt = input.ReadInt32();
            break;
          }
          case 194: {
            Title = input.ReadString();
            break;
          }
          case 226: {
            UrlAlt = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OverlayDescription : pb::IMessage<OverlayDescription> {
    private static readonly pb::MessageParser<OverlayDescription> _parser = new pb::MessageParser<OverlayDescription>(() => new OverlayDescription());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OverlayDescription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[135]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayDescription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayDescription(OverlayDescription other) : this() {
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayDescription Clone() {
      return new OverlayDescription(this);
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OverlayDescription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OverlayDescription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDescription) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OverlayDescription other) {
      if (other == null) {
        return;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SuggestionReasons : pb::IMessage<SuggestionReasons> {
    private static readonly pb::MessageParser<SuggestionReasons> _parser = new pb::MessageParser<SuggestionReasons>(() => new SuggestionReasons());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SuggestionReasons> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[136]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestionReasons() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestionReasons(SuggestionReasons other) : this() {
      reason_ = other.reason_.Clone();
      neutralDismissal_ = other.neutralDismissal_ != null ? other.neutralDismissal_.Clone() : null;
      positiveDismissal_ = other.positiveDismissal_ != null ? other.positiveDismissal_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestionReasons Clone() {
      return new SuggestionReasons(this);
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Reason> _repeated_reason_codec
        = pb::FieldCodec.ForMessage(18, global::GooglePlayStore.Reason.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Reason> reason_ = new pbc::RepeatedField<global::GooglePlayStore.Reason>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Reason> Reason {
      get { return reason_; }
    }

    /// <summary>Field number for the "neutralDismissal" field.</summary>
    public const int NeutralDismissalFieldNumber = 4;
    private global::GooglePlayStore.Dismissal neutralDismissal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Dismissal NeutralDismissal {
      get { return neutralDismissal_; }
      set {
        neutralDismissal_ = value;
      }
    }

    /// <summary>Field number for the "positiveDismissal" field.</summary>
    public const int PositiveDismissalFieldNumber = 5;
    private global::GooglePlayStore.Dismissal positiveDismissal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Dismissal PositiveDismissal {
      get { return positiveDismissal_; }
      set {
        positiveDismissal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SuggestionReasons);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SuggestionReasons other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!reason_.Equals(other.reason_)) return false;
      if (!object.Equals(NeutralDismissal, other.NeutralDismissal)) return false;
      if (!object.Equals(PositiveDismissal, other.PositiveDismissal)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= reason_.GetHashCode();
      if (neutralDismissal_ != null) hash ^= NeutralDismissal.GetHashCode();
      if (positiveDismissal_ != null) hash ^= PositiveDismissal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      reason_.WriteTo(output, _repeated_reason_codec);
      if (neutralDismissal_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NeutralDismissal);
      }
      if (positiveDismissal_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PositiveDismissal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += reason_.CalculateSize(_repeated_reason_codec);
      if (neutralDismissal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NeutralDismissal);
      }
      if (positiveDismissal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PositiveDismissal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SuggestionReasons other) {
      if (other == null) {
        return;
      }
      reason_.Add(other.reason_);
      if (other.neutralDismissal_ != null) {
        if (neutralDismissal_ == null) {
          NeutralDismissal = new global::GooglePlayStore.Dismissal();
        }
        NeutralDismissal.MergeFrom(other.NeutralDismissal);
      }
      if (other.positiveDismissal_ != null) {
        if (positiveDismissal_ == null) {
          PositiveDismissal = new global::GooglePlayStore.Dismissal();
        }
        PositiveDismissal.MergeFrom(other.PositiveDismissal);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            reason_.AddEntriesFrom(input, _repeated_reason_codec);
            break;
          }
          case 34: {
            if (neutralDismissal_ == null) {
              NeutralDismissal = new global::GooglePlayStore.Dismissal();
            }
            input.ReadMessage(NeutralDismissal);
            break;
          }
          case 42: {
            if (positiveDismissal_ == null) {
              PositiveDismissal = new global::GooglePlayStore.Dismissal();
            }
            input.ReadMessage(PositiveDismissal);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Reason : pb::IMessage<Reason> {
    private static readonly pb::MessageParser<Reason> _parser = new pb::MessageParser<Reason>(() => new Reason());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Reason> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[137]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reason() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reason(Reason other) : this() {
      descriptionHtml_ = other.descriptionHtml_;
      reasonPlusOne_ = other.reasonPlusOne_ != null ? other.reasonPlusOne_.Clone() : null;
      reasonReview_ = other.reasonReview_ != null ? other.reasonReview_.Clone() : null;
      dismissal_ = other.dismissal_ != null ? other.dismissal_.Clone() : null;
      reasonUserAction_ = other.reasonUserAction_ != null ? other.reasonUserAction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reason Clone() {
      return new Reason(this);
    }

    /// <summary>Field number for the "descriptionHtml" field.</summary>
    public const int DescriptionHtmlFieldNumber = 3;
    private readonly static string DescriptionHtmlDefaultValue = "";

    private string descriptionHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DescriptionHtml {
      get { return descriptionHtml_ ?? DescriptionHtmlDefaultValue; }
      set {
        descriptionHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "descriptionHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescriptionHtml {
      get { return descriptionHtml_ != null; }
    }
    /// <summary>Clears the value of the "descriptionHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescriptionHtml() {
      descriptionHtml_ = null;
    }

    /// <summary>Field number for the "reasonPlusOne" field.</summary>
    public const int ReasonPlusOneFieldNumber = 4;
    private global::GooglePlayStore.ReasonPlusOne reasonPlusOne_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ReasonPlusOne ReasonPlusOne {
      get { return reasonPlusOne_; }
      set {
        reasonPlusOne_ = value;
      }
    }

    /// <summary>Field number for the "reasonReview" field.</summary>
    public const int ReasonReviewFieldNumber = 5;
    private global::GooglePlayStore.ReasonReview reasonReview_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ReasonReview ReasonReview {
      get { return reasonReview_; }
      set {
        reasonReview_ = value;
      }
    }

    /// <summary>Field number for the "dismissal" field.</summary>
    public const int DismissalFieldNumber = 7;
    private global::GooglePlayStore.Dismissal dismissal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Dismissal Dismissal {
      get { return dismissal_; }
      set {
        dismissal_ = value;
      }
    }

    /// <summary>Field number for the "reasonUserAction" field.</summary>
    public const int ReasonUserActionFieldNumber = 9;
    private global::GooglePlayStore.ReasonUserAction reasonUserAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ReasonUserAction ReasonUserAction {
      get { return reasonUserAction_; }
      set {
        reasonUserAction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Reason);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Reason other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DescriptionHtml != other.DescriptionHtml) return false;
      if (!object.Equals(ReasonPlusOne, other.ReasonPlusOne)) return false;
      if (!object.Equals(ReasonReview, other.ReasonReview)) return false;
      if (!object.Equals(Dismissal, other.Dismissal)) return false;
      if (!object.Equals(ReasonUserAction, other.ReasonUserAction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDescriptionHtml) hash ^= DescriptionHtml.GetHashCode();
      if (reasonPlusOne_ != null) hash ^= ReasonPlusOne.GetHashCode();
      if (reasonReview_ != null) hash ^= ReasonReview.GetHashCode();
      if (dismissal_ != null) hash ^= Dismissal.GetHashCode();
      if (reasonUserAction_ != null) hash ^= ReasonUserAction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasDescriptionHtml) {
        output.WriteRawTag(26);
        output.WriteString(DescriptionHtml);
      }
      if (reasonPlusOne_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ReasonPlusOne);
      }
      if (reasonReview_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ReasonReview);
      }
      if (dismissal_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Dismissal);
      }
      if (reasonUserAction_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ReasonUserAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDescriptionHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionHtml);
      }
      if (reasonPlusOne_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReasonPlusOne);
      }
      if (reasonReview_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReasonReview);
      }
      if (dismissal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dismissal);
      }
      if (reasonUserAction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReasonUserAction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Reason other) {
      if (other == null) {
        return;
      }
      if (other.HasDescriptionHtml) {
        DescriptionHtml = other.DescriptionHtml;
      }
      if (other.reasonPlusOne_ != null) {
        if (reasonPlusOne_ == null) {
          ReasonPlusOne = new global::GooglePlayStore.ReasonPlusOne();
        }
        ReasonPlusOne.MergeFrom(other.ReasonPlusOne);
      }
      if (other.reasonReview_ != null) {
        if (reasonReview_ == null) {
          ReasonReview = new global::GooglePlayStore.ReasonReview();
        }
        ReasonReview.MergeFrom(other.ReasonReview);
      }
      if (other.dismissal_ != null) {
        if (dismissal_ == null) {
          Dismissal = new global::GooglePlayStore.Dismissal();
        }
        Dismissal.MergeFrom(other.Dismissal);
      }
      if (other.reasonUserAction_ != null) {
        if (reasonUserAction_ == null) {
          ReasonUserAction = new global::GooglePlayStore.ReasonUserAction();
        }
        ReasonUserAction.MergeFrom(other.ReasonUserAction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            DescriptionHtml = input.ReadString();
            break;
          }
          case 34: {
            if (reasonPlusOne_ == null) {
              ReasonPlusOne = new global::GooglePlayStore.ReasonPlusOne();
            }
            input.ReadMessage(ReasonPlusOne);
            break;
          }
          case 42: {
            if (reasonReview_ == null) {
              ReasonReview = new global::GooglePlayStore.ReasonReview();
            }
            input.ReadMessage(ReasonReview);
            break;
          }
          case 58: {
            if (dismissal_ == null) {
              Dismissal = new global::GooglePlayStore.Dismissal();
            }
            input.ReadMessage(Dismissal);
            break;
          }
          case 74: {
            if (reasonUserAction_ == null) {
              ReasonUserAction = new global::GooglePlayStore.ReasonUserAction();
            }
            input.ReadMessage(ReasonUserAction);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReasonPlusOne : pb::IMessage<ReasonPlusOne> {
    private static readonly pb::MessageParser<ReasonPlusOne> _parser = new pb::MessageParser<ReasonPlusOne>(() => new ReasonPlusOne());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReasonPlusOne> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[138]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReasonPlusOne() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReasonPlusOne(ReasonPlusOne other) : this() {
      localizedDescriptionHtml_ = other.localizedDescriptionHtml_;
      userProfile_ = other.userProfile_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReasonPlusOne Clone() {
      return new ReasonPlusOne(this);
    }

    /// <summary>Field number for the "localizedDescriptionHtml" field.</summary>
    public const int LocalizedDescriptionHtmlFieldNumber = 1;
    private readonly static string LocalizedDescriptionHtmlDefaultValue = "";

    private string localizedDescriptionHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocalizedDescriptionHtml {
      get { return localizedDescriptionHtml_ ?? LocalizedDescriptionHtmlDefaultValue; }
      set {
        localizedDescriptionHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "localizedDescriptionHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLocalizedDescriptionHtml {
      get { return localizedDescriptionHtml_ != null; }
    }
    /// <summary>Clears the value of the "localizedDescriptionHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLocalizedDescriptionHtml() {
      localizedDescriptionHtml_ = null;
    }

    /// <summary>Field number for the "userProfile" field.</summary>
    public const int UserProfileFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.UserProfile> _repeated_userProfile_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.UserProfile.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.UserProfile> userProfile_ = new pbc::RepeatedField<global::GooglePlayStore.UserProfile>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.UserProfile> UserProfile {
      get { return userProfile_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReasonPlusOne);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReasonPlusOne other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LocalizedDescriptionHtml != other.LocalizedDescriptionHtml) return false;
      if(!userProfile_.Equals(other.userProfile_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLocalizedDescriptionHtml) hash ^= LocalizedDescriptionHtml.GetHashCode();
      hash ^= userProfile_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasLocalizedDescriptionHtml) {
        output.WriteRawTag(10);
        output.WriteString(LocalizedDescriptionHtml);
      }
      userProfile_.WriteTo(output, _repeated_userProfile_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasLocalizedDescriptionHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocalizedDescriptionHtml);
      }
      size += userProfile_.CalculateSize(_repeated_userProfile_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReasonPlusOne other) {
      if (other == null) {
        return;
      }
      if (other.HasLocalizedDescriptionHtml) {
        LocalizedDescriptionHtml = other.LocalizedDescriptionHtml;
      }
      userProfile_.Add(other.userProfile_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LocalizedDescriptionHtml = input.ReadString();
            break;
          }
          case 26: {
            userProfile_.AddEntriesFrom(input, _repeated_userProfile_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReasonReview : pb::IMessage<ReasonReview> {
    private static readonly pb::MessageParser<ReasonReview> _parser = new pb::MessageParser<ReasonReview>(() => new ReasonReview());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReasonReview> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[139]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReasonReview() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReasonReview(ReasonReview other) : this() {
      review_ = other.review_ != null ? other.review_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReasonReview Clone() {
      return new ReasonReview(this);
    }

    /// <summary>Field number for the "review" field.</summary>
    public const int ReviewFieldNumber = 1;
    private global::GooglePlayStore.Review review_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Review Review {
      get { return review_; }
      set {
        review_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReasonReview);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReasonReview other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Review, other.Review)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (review_ != null) hash ^= Review.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (review_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Review);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (review_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Review);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReasonReview other) {
      if (other == null) {
        return;
      }
      if (other.review_ != null) {
        if (review_ == null) {
          Review = new global::GooglePlayStore.Review();
        }
        Review.MergeFrom(other.Review);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (review_ == null) {
              Review = new global::GooglePlayStore.Review();
            }
            input.ReadMessage(Review);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReasonUserAction : pb::IMessage<ReasonUserAction> {
    private static readonly pb::MessageParser<ReasonUserAction> _parser = new pb::MessageParser<ReasonUserAction>(() => new ReasonUserAction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReasonUserAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[140]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReasonUserAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReasonUserAction(ReasonUserAction other) : this() {
      userProfile_ = other.userProfile_ != null ? other.userProfile_.Clone() : null;
      localizedDescriptionHtml_ = other.localizedDescriptionHtml_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReasonUserAction Clone() {
      return new ReasonUserAction(this);
    }

    /// <summary>Field number for the "userProfile" field.</summary>
    public const int UserProfileFieldNumber = 1;
    private global::GooglePlayStore.UserProfile userProfile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.UserProfile UserProfile {
      get { return userProfile_; }
      set {
        userProfile_ = value;
      }
    }

    /// <summary>Field number for the "localizedDescriptionHtml" field.</summary>
    public const int LocalizedDescriptionHtmlFieldNumber = 2;
    private readonly static string LocalizedDescriptionHtmlDefaultValue = "";

    private string localizedDescriptionHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocalizedDescriptionHtml {
      get { return localizedDescriptionHtml_ ?? LocalizedDescriptionHtmlDefaultValue; }
      set {
        localizedDescriptionHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "localizedDescriptionHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLocalizedDescriptionHtml {
      get { return localizedDescriptionHtml_ != null; }
    }
    /// <summary>Clears the value of the "localizedDescriptionHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLocalizedDescriptionHtml() {
      localizedDescriptionHtml_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReasonUserAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReasonUserAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserProfile, other.UserProfile)) return false;
      if (LocalizedDescriptionHtml != other.LocalizedDescriptionHtml) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userProfile_ != null) hash ^= UserProfile.GetHashCode();
      if (HasLocalizedDescriptionHtml) hash ^= LocalizedDescriptionHtml.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userProfile_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserProfile);
      }
      if (HasLocalizedDescriptionHtml) {
        output.WriteRawTag(18);
        output.WriteString(LocalizedDescriptionHtml);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userProfile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserProfile);
      }
      if (HasLocalizedDescriptionHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocalizedDescriptionHtml);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReasonUserAction other) {
      if (other == null) {
        return;
      }
      if (other.userProfile_ != null) {
        if (userProfile_ == null) {
          UserProfile = new global::GooglePlayStore.UserProfile();
        }
        UserProfile.MergeFrom(other.UserProfile);
      }
      if (other.HasLocalizedDescriptionHtml) {
        LocalizedDescriptionHtml = other.LocalizedDescriptionHtml;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userProfile_ == null) {
              UserProfile = new global::GooglePlayStore.UserProfile();
            }
            input.ReadMessage(UserProfile);
            break;
          }
          case 18: {
            LocalizedDescriptionHtml = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Dismissal : pb::IMessage<Dismissal> {
    private static readonly pb::MessageParser<Dismissal> _parser = new pb::MessageParser<Dismissal>(() => new Dismissal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dismissal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[141]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dismissal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dismissal(Dismissal other) : this() {
      url_ = other.url_;
      descriptionHtml_ = other.descriptionHtml_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dismissal Clone() {
      return new Dismissal(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "descriptionHtml" field.</summary>
    public const int DescriptionHtmlFieldNumber = 2;
    private readonly static string DescriptionHtmlDefaultValue = "";

    private string descriptionHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DescriptionHtml {
      get { return descriptionHtml_ ?? DescriptionHtmlDefaultValue; }
      set {
        descriptionHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "descriptionHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescriptionHtml {
      get { return descriptionHtml_ != null; }
    }
    /// <summary>Clears the value of the "descriptionHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescriptionHtml() {
      descriptionHtml_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dismissal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dismissal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (DescriptionHtml != other.DescriptionHtml) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasDescriptionHtml) hash ^= DescriptionHtml.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasDescriptionHtml) {
        output.WriteRawTag(18);
        output.WriteString(DescriptionHtml);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasDescriptionHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionHtml);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dismissal other) {
      if (other == null) {
        return;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasDescriptionHtml) {
        DescriptionHtml = other.DescriptionHtml;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            DescriptionHtml = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Snippet : pb::IMessage<Snippet> {
    private static readonly pb::MessageParser<Snippet> _parser = new pb::MessageParser<Snippet>(() => new Snippet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Snippet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[142]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Snippet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Snippet(Snippet other) : this() {
      snippetHtml_ = other.snippetHtml_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Snippet Clone() {
      return new Snippet(this);
    }

    /// <summary>Field number for the "snippetHtml" field.</summary>
    public const int SnippetHtmlFieldNumber = 1;
    private readonly static string SnippetHtmlDefaultValue = "";

    private string snippetHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SnippetHtml {
      get { return snippetHtml_ ?? SnippetHtmlDefaultValue; }
      set {
        snippetHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "snippetHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSnippetHtml {
      get { return snippetHtml_ != null; }
    }
    /// <summary>Clears the value of the "snippetHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSnippetHtml() {
      snippetHtml_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Snippet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Snippet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SnippetHtml != other.SnippetHtml) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSnippetHtml) hash ^= SnippetHtml.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasSnippetHtml) {
        output.WriteRawTag(10);
        output.WriteString(SnippetHtml);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSnippetHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SnippetHtml);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Snippet other) {
      if (other == null) {
        return;
      }
      if (other.HasSnippetHtml) {
        SnippetHtml = other.SnippetHtml;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SnippetHtml = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MyRewardDetails : pb::IMessage<MyRewardDetails> {
    private static readonly pb::MessageParser<MyRewardDetails> _parser = new pb::MessageParser<MyRewardDetails>(() => new MyRewardDetails());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MyRewardDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[143]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MyRewardDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MyRewardDetails(MyRewardDetails other) : this() {
      _hasBits0 = other._hasBits0;
      expirationTimeMillis_ = other.expirationTimeMillis_;
      expirationDescription_ = other.expirationDescription_;
      buttonLabel_ = other.buttonLabel_;
      linkAction_ = other.linkAction_ != null ? other.linkAction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MyRewardDetails Clone() {
      return new MyRewardDetails(this);
    }

    /// <summary>Field number for the "expirationTimeMillis" field.</summary>
    public const int ExpirationTimeMillisFieldNumber = 1;
    private readonly static long ExpirationTimeMillisDefaultValue = 0L;

    private long expirationTimeMillis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ExpirationTimeMillis {
      get { if ((_hasBits0 & 1) != 0) { return expirationTimeMillis_; } else { return ExpirationTimeMillisDefaultValue; } }
      set {
        _hasBits0 |= 1;
        expirationTimeMillis_ = value;
      }
    }
    /// <summary>Gets whether the "expirationTimeMillis" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExpirationTimeMillis {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "expirationTimeMillis" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpirationTimeMillis() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "expirationDescription" field.</summary>
    public const int ExpirationDescriptionFieldNumber = 2;
    private readonly static string ExpirationDescriptionDefaultValue = "";

    private string expirationDescription_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExpirationDescription {
      get { return expirationDescription_ ?? ExpirationDescriptionDefaultValue; }
      set {
        expirationDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "expirationDescription" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExpirationDescription {
      get { return expirationDescription_ != null; }
    }
    /// <summary>Clears the value of the "expirationDescription" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpirationDescription() {
      expirationDescription_ = null;
    }

    /// <summary>Field number for the "buttonLabel" field.</summary>
    public const int ButtonLabelFieldNumber = 3;
    private readonly static string ButtonLabelDefaultValue = "";

    private string buttonLabel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ButtonLabel {
      get { return buttonLabel_ ?? ButtonLabelDefaultValue; }
      set {
        buttonLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "buttonLabel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasButtonLabel {
      get { return buttonLabel_ != null; }
    }
    /// <summary>Clears the value of the "buttonLabel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearButtonLabel() {
      buttonLabel_ = null;
    }

    /// <summary>Field number for the "linkAction" field.</summary>
    public const int LinkActionFieldNumber = 4;
    private global::GooglePlayStore.Link linkAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Link LinkAction {
      get { return linkAction_; }
      set {
        linkAction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MyRewardDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MyRewardDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExpirationTimeMillis != other.ExpirationTimeMillis) return false;
      if (ExpirationDescription != other.ExpirationDescription) return false;
      if (ButtonLabel != other.ButtonLabel) return false;
      if (!object.Equals(LinkAction, other.LinkAction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasExpirationTimeMillis) hash ^= ExpirationTimeMillis.GetHashCode();
      if (HasExpirationDescription) hash ^= ExpirationDescription.GetHashCode();
      if (HasButtonLabel) hash ^= ButtonLabel.GetHashCode();
      if (linkAction_ != null) hash ^= LinkAction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasExpirationTimeMillis) {
        output.WriteRawTag(8);
        output.WriteInt64(ExpirationTimeMillis);
      }
      if (HasExpirationDescription) {
        output.WriteRawTag(18);
        output.WriteString(ExpirationDescription);
      }
      if (HasButtonLabel) {
        output.WriteRawTag(26);
        output.WriteString(ButtonLabel);
      }
      if (linkAction_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LinkAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasExpirationTimeMillis) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpirationTimeMillis);
      }
      if (HasExpirationDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpirationDescription);
      }
      if (HasButtonLabel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ButtonLabel);
      }
      if (linkAction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LinkAction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MyRewardDetails other) {
      if (other == null) {
        return;
      }
      if (other.HasExpirationTimeMillis) {
        ExpirationTimeMillis = other.ExpirationTimeMillis;
      }
      if (other.HasExpirationDescription) {
        ExpirationDescription = other.ExpirationDescription;
      }
      if (other.HasButtonLabel) {
        ButtonLabel = other.ButtonLabel;
      }
      if (other.linkAction_ != null) {
        if (linkAction_ == null) {
          LinkAction = new global::GooglePlayStore.Link();
        }
        LinkAction.MergeFrom(other.LinkAction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ExpirationTimeMillis = input.ReadInt64();
            break;
          }
          case 18: {
            ExpirationDescription = input.ReadString();
            break;
          }
          case 26: {
            ButtonLabel = input.ReadString();
            break;
          }
          case 34: {
            if (linkAction_ == null) {
              LinkAction = new global::GooglePlayStore.Link();
            }
            input.ReadMessage(LinkAction);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MySubscriptionDetails : pb::IMessage<MySubscriptionDetails> {
    private static readonly pb::MessageParser<MySubscriptionDetails> _parser = new pb::MessageParser<MySubscriptionDetails>(() => new MySubscriptionDetails());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MySubscriptionDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[144]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MySubscriptionDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MySubscriptionDetails(MySubscriptionDetails other) : this() {
      _hasBits0 = other._hasBits0;
      subscriptionStatusHtml_ = other.subscriptionStatusHtml_;
      title_ = other.title_;
      titleByLineHtml_ = other.titleByLineHtml_;
      formattedPrice_ = other.formattedPrice_;
      priceByLineHtml_ = other.priceByLineHtml_;
      cancelSubscription_ = other.cancelSubscription_;
      paymentDeclinedLearnMoreLink_ = other.paymentDeclinedLearnMoreLink_ != null ? other.paymentDeclinedLearnMoreLink_.Clone() : null;
      inTrialPeriod_ = other.inTrialPeriod_;
      titleByLineIcon_ = other.titleByLineIcon_ != null ? other.titleByLineIcon_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MySubscriptionDetails Clone() {
      return new MySubscriptionDetails(this);
    }

    /// <summary>Field number for the "subscriptionStatusHtml" field.</summary>
    public const int SubscriptionStatusHtmlFieldNumber = 1;
    private readonly static string SubscriptionStatusHtmlDefaultValue = "";

    private string subscriptionStatusHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubscriptionStatusHtml {
      get { return subscriptionStatusHtml_ ?? SubscriptionStatusHtmlDefaultValue; }
      set {
        subscriptionStatusHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "subscriptionStatusHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubscriptionStatusHtml {
      get { return subscriptionStatusHtml_ != null; }
    }
    /// <summary>Clears the value of the "subscriptionStatusHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubscriptionStatusHtml() {
      subscriptionStatusHtml_ = null;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "titleByLineHtml" field.</summary>
    public const int TitleByLineHtmlFieldNumber = 3;
    private readonly static string TitleByLineHtmlDefaultValue = "";

    private string titleByLineHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TitleByLineHtml {
      get { return titleByLineHtml_ ?? TitleByLineHtmlDefaultValue; }
      set {
        titleByLineHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "titleByLineHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitleByLineHtml {
      get { return titleByLineHtml_ != null; }
    }
    /// <summary>Clears the value of the "titleByLineHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitleByLineHtml() {
      titleByLineHtml_ = null;
    }

    /// <summary>Field number for the "formattedPrice" field.</summary>
    public const int FormattedPriceFieldNumber = 4;
    private readonly static string FormattedPriceDefaultValue = "";

    private string formattedPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FormattedPrice {
      get { return formattedPrice_ ?? FormattedPriceDefaultValue; }
      set {
        formattedPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "formattedPrice" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFormattedPrice {
      get { return formattedPrice_ != null; }
    }
    /// <summary>Clears the value of the "formattedPrice" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFormattedPrice() {
      formattedPrice_ = null;
    }

    /// <summary>Field number for the "priceByLineHtml" field.</summary>
    public const int PriceByLineHtmlFieldNumber = 5;
    private readonly static string PriceByLineHtmlDefaultValue = "";

    private string priceByLineHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceByLineHtml {
      get { return priceByLineHtml_ ?? PriceByLineHtmlDefaultValue; }
      set {
        priceByLineHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "priceByLineHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPriceByLineHtml {
      get { return priceByLineHtml_ != null; }
    }
    /// <summary>Clears the value of the "priceByLineHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPriceByLineHtml() {
      priceByLineHtml_ = null;
    }

    /// <summary>Field number for the "cancelSubscription" field.</summary>
    public const int CancelSubscriptionFieldNumber = 6;
    private readonly static bool CancelSubscriptionDefaultValue = false;

    private bool cancelSubscription_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CancelSubscription {
      get { if ((_hasBits0 & 1) != 0) { return cancelSubscription_; } else { return CancelSubscriptionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        cancelSubscription_ = value;
      }
    }
    /// <summary>Gets whether the "cancelSubscription" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCancelSubscription {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "cancelSubscription" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCancelSubscription() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "paymentDeclinedLearnMoreLink" field.</summary>
    public const int PaymentDeclinedLearnMoreLinkFieldNumber = 7;
    private global::GooglePlayStore.Link paymentDeclinedLearnMoreLink_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Link PaymentDeclinedLearnMoreLink {
      get { return paymentDeclinedLearnMoreLink_; }
      set {
        paymentDeclinedLearnMoreLink_ = value;
      }
    }

    /// <summary>Field number for the "inTrialPeriod" field.</summary>
    public const int InTrialPeriodFieldNumber = 8;
    private readonly static bool InTrialPeriodDefaultValue = false;

    private bool inTrialPeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool InTrialPeriod {
      get { if ((_hasBits0 & 2) != 0) { return inTrialPeriod_; } else { return InTrialPeriodDefaultValue; } }
      set {
        _hasBits0 |= 2;
        inTrialPeriod_ = value;
      }
    }
    /// <summary>Gets whether the "inTrialPeriod" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInTrialPeriod {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "inTrialPeriod" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInTrialPeriod() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "titleByLineIcon" field.</summary>
    public const int TitleByLineIconFieldNumber = 9;
    private global::GooglePlayStore.Image titleByLineIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Image TitleByLineIcon {
      get { return titleByLineIcon_; }
      set {
        titleByLineIcon_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MySubscriptionDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MySubscriptionDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubscriptionStatusHtml != other.SubscriptionStatusHtml) return false;
      if (Title != other.Title) return false;
      if (TitleByLineHtml != other.TitleByLineHtml) return false;
      if (FormattedPrice != other.FormattedPrice) return false;
      if (PriceByLineHtml != other.PriceByLineHtml) return false;
      if (CancelSubscription != other.CancelSubscription) return false;
      if (!object.Equals(PaymentDeclinedLearnMoreLink, other.PaymentDeclinedLearnMoreLink)) return false;
      if (InTrialPeriod != other.InTrialPeriod) return false;
      if (!object.Equals(TitleByLineIcon, other.TitleByLineIcon)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSubscriptionStatusHtml) hash ^= SubscriptionStatusHtml.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasTitleByLineHtml) hash ^= TitleByLineHtml.GetHashCode();
      if (HasFormattedPrice) hash ^= FormattedPrice.GetHashCode();
      if (HasPriceByLineHtml) hash ^= PriceByLineHtml.GetHashCode();
      if (HasCancelSubscription) hash ^= CancelSubscription.GetHashCode();
      if (paymentDeclinedLearnMoreLink_ != null) hash ^= PaymentDeclinedLearnMoreLink.GetHashCode();
      if (HasInTrialPeriod) hash ^= InTrialPeriod.GetHashCode();
      if (titleByLineIcon_ != null) hash ^= TitleByLineIcon.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasSubscriptionStatusHtml) {
        output.WriteRawTag(10);
        output.WriteString(SubscriptionStatusHtml);
      }
      if (HasTitle) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (HasTitleByLineHtml) {
        output.WriteRawTag(26);
        output.WriteString(TitleByLineHtml);
      }
      if (HasFormattedPrice) {
        output.WriteRawTag(34);
        output.WriteString(FormattedPrice);
      }
      if (HasPriceByLineHtml) {
        output.WriteRawTag(42);
        output.WriteString(PriceByLineHtml);
      }
      if (HasCancelSubscription) {
        output.WriteRawTag(48);
        output.WriteBool(CancelSubscription);
      }
      if (paymentDeclinedLearnMoreLink_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PaymentDeclinedLearnMoreLink);
      }
      if (HasInTrialPeriod) {
        output.WriteRawTag(64);
        output.WriteBool(InTrialPeriod);
      }
      if (titleByLineIcon_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TitleByLineIcon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSubscriptionStatusHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubscriptionStatusHtml);
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasTitleByLineHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TitleByLineHtml);
      }
      if (HasFormattedPrice) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormattedPrice);
      }
      if (HasPriceByLineHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceByLineHtml);
      }
      if (HasCancelSubscription) {
        size += 1 + 1;
      }
      if (paymentDeclinedLearnMoreLink_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PaymentDeclinedLearnMoreLink);
      }
      if (HasInTrialPeriod) {
        size += 1 + 1;
      }
      if (titleByLineIcon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TitleByLineIcon);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MySubscriptionDetails other) {
      if (other == null) {
        return;
      }
      if (other.HasSubscriptionStatusHtml) {
        SubscriptionStatusHtml = other.SubscriptionStatusHtml;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasTitleByLineHtml) {
        TitleByLineHtml = other.TitleByLineHtml;
      }
      if (other.HasFormattedPrice) {
        FormattedPrice = other.FormattedPrice;
      }
      if (other.HasPriceByLineHtml) {
        PriceByLineHtml = other.PriceByLineHtml;
      }
      if (other.HasCancelSubscription) {
        CancelSubscription = other.CancelSubscription;
      }
      if (other.paymentDeclinedLearnMoreLink_ != null) {
        if (paymentDeclinedLearnMoreLink_ == null) {
          PaymentDeclinedLearnMoreLink = new global::GooglePlayStore.Link();
        }
        PaymentDeclinedLearnMoreLink.MergeFrom(other.PaymentDeclinedLearnMoreLink);
      }
      if (other.HasInTrialPeriod) {
        InTrialPeriod = other.InTrialPeriod;
      }
      if (other.titleByLineIcon_ != null) {
        if (titleByLineIcon_ == null) {
          TitleByLineIcon = new global::GooglePlayStore.Image();
        }
        TitleByLineIcon.MergeFrom(other.TitleByLineIcon);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SubscriptionStatusHtml = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            TitleByLineHtml = input.ReadString();
            break;
          }
          case 34: {
            FormattedPrice = input.ReadString();
            break;
          }
          case 42: {
            PriceByLineHtml = input.ReadString();
            break;
          }
          case 48: {
            CancelSubscription = input.ReadBool();
            break;
          }
          case 58: {
            if (paymentDeclinedLearnMoreLink_ == null) {
              PaymentDeclinedLearnMoreLink = new global::GooglePlayStore.Link();
            }
            input.ReadMessage(PaymentDeclinedLearnMoreLink);
            break;
          }
          case 64: {
            InTrialPeriod = input.ReadBool();
            break;
          }
          case 74: {
            if (titleByLineIcon_ == null) {
              TitleByLineIcon = new global::GooglePlayStore.Image();
            }
            input.ReadMessage(TitleByLineIcon);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VideoAnnotations : pb::IMessage<VideoAnnotations> {
    private static readonly pb::MessageParser<VideoAnnotations> _parser = new pb::MessageParser<VideoAnnotations>(() => new VideoAnnotations());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VideoAnnotations> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[145]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoAnnotations() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoAnnotations(VideoAnnotations other) : this() {
      _hasBits0 = other._hasBits0;
      bundle_ = other.bundle_;
      bundleContentListUrl_ = other.bundleContentListUrl_;
      extrasContentListUrl_ = other.extrasContentListUrl_;
      alsoAvailableInListUrl_ = other.alsoAvailableInListUrl_;
      bundleDocId_ = other.bundleDocId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoAnnotations Clone() {
      return new VideoAnnotations(this);
    }

    /// <summary>Field number for the "bundle" field.</summary>
    public const int BundleFieldNumber = 1;
    private readonly static bool BundleDefaultValue = false;

    private bool bundle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Bundle {
      get { if ((_hasBits0 & 1) != 0) { return bundle_; } else { return BundleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        bundle_ = value;
      }
    }
    /// <summary>Gets whether the "bundle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBundle {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "bundle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBundle() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "bundleContentListUrl" field.</summary>
    public const int BundleContentListUrlFieldNumber = 2;
    private readonly static string BundleContentListUrlDefaultValue = "";

    private string bundleContentListUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BundleContentListUrl {
      get { return bundleContentListUrl_ ?? BundleContentListUrlDefaultValue; }
      set {
        bundleContentListUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bundleContentListUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBundleContentListUrl {
      get { return bundleContentListUrl_ != null; }
    }
    /// <summary>Clears the value of the "bundleContentListUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBundleContentListUrl() {
      bundleContentListUrl_ = null;
    }

    /// <summary>Field number for the "extrasContentListUrl" field.</summary>
    public const int ExtrasContentListUrlFieldNumber = 3;
    private readonly static string ExtrasContentListUrlDefaultValue = "";

    private string extrasContentListUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExtrasContentListUrl {
      get { return extrasContentListUrl_ ?? ExtrasContentListUrlDefaultValue; }
      set {
        extrasContentListUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "extrasContentListUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExtrasContentListUrl {
      get { return extrasContentListUrl_ != null; }
    }
    /// <summary>Clears the value of the "extrasContentListUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExtrasContentListUrl() {
      extrasContentListUrl_ = null;
    }

    /// <summary>Field number for the "alsoAvailableInListUrl" field.</summary>
    public const int AlsoAvailableInListUrlFieldNumber = 4;
    private readonly static string AlsoAvailableInListUrlDefaultValue = "";

    private string alsoAvailableInListUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AlsoAvailableInListUrl {
      get { return alsoAvailableInListUrl_ ?? AlsoAvailableInListUrlDefaultValue; }
      set {
        alsoAvailableInListUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "alsoAvailableInListUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAlsoAvailableInListUrl {
      get { return alsoAvailableInListUrl_ != null; }
    }
    /// <summary>Clears the value of the "alsoAvailableInListUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAlsoAvailableInListUrl() {
      alsoAvailableInListUrl_ = null;
    }

    /// <summary>Field number for the "bundleDocId" field.</summary>
    public const int BundleDocIdFieldNumber = 5;
    private static readonly pb::FieldCodec<global::GooglePlayStore.DocId> _repeated_bundleDocId_codec
        = pb::FieldCodec.ForMessage(42, global::GooglePlayStore.DocId.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.DocId> bundleDocId_ = new pbc::RepeatedField<global::GooglePlayStore.DocId>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.DocId> BundleDocId {
      get { return bundleDocId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VideoAnnotations);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VideoAnnotations other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bundle != other.Bundle) return false;
      if (BundleContentListUrl != other.BundleContentListUrl) return false;
      if (ExtrasContentListUrl != other.ExtrasContentListUrl) return false;
      if (AlsoAvailableInListUrl != other.AlsoAvailableInListUrl) return false;
      if(!bundleDocId_.Equals(other.bundleDocId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBundle) hash ^= Bundle.GetHashCode();
      if (HasBundleContentListUrl) hash ^= BundleContentListUrl.GetHashCode();
      if (HasExtrasContentListUrl) hash ^= ExtrasContentListUrl.GetHashCode();
      if (HasAlsoAvailableInListUrl) hash ^= AlsoAvailableInListUrl.GetHashCode();
      hash ^= bundleDocId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasBundle) {
        output.WriteRawTag(8);
        output.WriteBool(Bundle);
      }
      if (HasBundleContentListUrl) {
        output.WriteRawTag(18);
        output.WriteString(BundleContentListUrl);
      }
      if (HasExtrasContentListUrl) {
        output.WriteRawTag(26);
        output.WriteString(ExtrasContentListUrl);
      }
      if (HasAlsoAvailableInListUrl) {
        output.WriteRawTag(34);
        output.WriteString(AlsoAvailableInListUrl);
      }
      bundleDocId_.WriteTo(output, _repeated_bundleDocId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasBundle) {
        size += 1 + 1;
      }
      if (HasBundleContentListUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BundleContentListUrl);
      }
      if (HasExtrasContentListUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExtrasContentListUrl);
      }
      if (HasAlsoAvailableInListUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AlsoAvailableInListUrl);
      }
      size += bundleDocId_.CalculateSize(_repeated_bundleDocId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VideoAnnotations other) {
      if (other == null) {
        return;
      }
      if (other.HasBundle) {
        Bundle = other.Bundle;
      }
      if (other.HasBundleContentListUrl) {
        BundleContentListUrl = other.BundleContentListUrl;
      }
      if (other.HasExtrasContentListUrl) {
        ExtrasContentListUrl = other.ExtrasContentListUrl;
      }
      if (other.HasAlsoAvailableInListUrl) {
        AlsoAvailableInListUrl = other.AlsoAvailableInListUrl;
      }
      bundleDocId_.Add(other.bundleDocId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Bundle = input.ReadBool();
            break;
          }
          case 18: {
            BundleContentListUrl = input.ReadString();
            break;
          }
          case 26: {
            ExtrasContentListUrl = input.ReadString();
            break;
          }
          case 34: {
            AlsoAvailableInListUrl = input.ReadString();
            break;
          }
          case 42: {
            bundleDocId_.AddEntriesFrom(input, _repeated_bundleDocId_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VoucherInfo : pb::IMessage<VoucherInfo> {
    private static readonly pb::MessageParser<VoucherInfo> _parser = new pb::MessageParser<VoucherInfo>(() => new VoucherInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoucherInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[146]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoucherInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoucherInfo(VoucherInfo other) : this() {
      item_ = other.item_ != null ? other.item_.Clone() : null;
      offer_ = other.offer_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoucherInfo Clone() {
      return new VoucherInfo(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private global::GooglePlayStore.Item item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Item Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "offer" field.</summary>
    public const int OfferFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Offer> _repeated_offer_codec
        = pb::FieldCodec.ForMessage(18, global::GooglePlayStore.Offer.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Offer> offer_ = new pbc::RepeatedField<global::GooglePlayStore.Offer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Offer> Offer {
      get { return offer_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoucherInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoucherInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Item, other.Item)) return false;
      if(!offer_.Equals(other.offer_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (item_ != null) hash ^= Item.GetHashCode();
      hash ^= offer_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      offer_.WriteTo(output, _repeated_offer_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      size += offer_.CalculateSize(_repeated_offer_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoucherInfo other) {
      if (other == null) {
        return;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::GooglePlayStore.Item();
        }
        Item.MergeFrom(other.Item);
      }
      offer_.Add(other.offer_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::GooglePlayStore.Item();
            }
            input.ReadMessage(Item);
            break;
          }
          case 18: {
            offer_.AddEntriesFrom(input, _repeated_offer_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BadgeContainer : pb::IMessage<BadgeContainer> {
    private static readonly pb::MessageParser<BadgeContainer> _parser = new pb::MessageParser<BadgeContainer>(() => new BadgeContainer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BadgeContainer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[147]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BadgeContainer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BadgeContainer(BadgeContainer other) : this() {
      title_ = other.title_;
      image_ = other.image_.Clone();
      badge_ = other.badge_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BadgeContainer Clone() {
      return new BadgeContainer(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Image> _repeated_image_codec
        = pb::FieldCodec.ForMessage(18, global::GooglePlayStore.Image.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Image> image_ = new pbc::RepeatedField<global::GooglePlayStore.Image>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Image> Image {
      get { return image_; }
    }

    /// <summary>Field number for the "badge" field.</summary>
    public const int BadgeFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Badge> _repeated_badge_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.Badge.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Badge> badge_ = new pbc::RepeatedField<global::GooglePlayStore.Badge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Badge> Badge {
      get { return badge_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BadgeContainer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BadgeContainer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if(!image_.Equals(other.image_)) return false;
      if(!badge_.Equals(other.badge_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTitle) hash ^= Title.GetHashCode();
      hash ^= image_.GetHashCode();
      hash ^= badge_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTitle) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      image_.WriteTo(output, _repeated_image_codec);
      badge_.WriteTo(output, _repeated_badge_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      size += image_.CalculateSize(_repeated_image_codec);
      size += badge_.CalculateSize(_repeated_badge_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BadgeContainer other) {
      if (other == null) {
        return;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      image_.Add(other.image_);
      badge_.Add(other.badge_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            image_.AddEntriesFrom(input, _repeated_image_codec);
            break;
          }
          case 26: {
            badge_.AddEntriesFrom(input, _repeated_badge_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OverflowLink : pb::IMessage<OverflowLink> {
    private static readonly pb::MessageParser<OverflowLink> _parser = new pb::MessageParser<OverflowLink>(() => new OverflowLink());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OverflowLink> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[148]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverflowLink() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverflowLink(OverflowLink other) : this() {
      title_ = other.title_;
      link_ = other.link_ != null ? other.link_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverflowLink Clone() {
      return new OverflowLink(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "link" field.</summary>
    public const int LinkFieldNumber = 2;
    private global::GooglePlayStore.Link link_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Link Link {
      get { return link_; }
      set {
        link_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OverflowLink);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OverflowLink other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (!object.Equals(Link, other.Link)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTitle) hash ^= Title.GetHashCode();
      if (link_ != null) hash ^= Link.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTitle) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (link_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Link);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (link_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Link);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OverflowLink other) {
      if (other == null) {
        return;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.link_ != null) {
        if (link_ == null) {
          Link = new global::GooglePlayStore.Link();
        }
        Link.MergeFrom(other.Link);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            if (link_ == null) {
              Link = new global::GooglePlayStore.Link();
            }
            input.ReadMessage(Link);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PromotedDoc : pb::IMessage<PromotedDoc> {
    private static readonly pb::MessageParser<PromotedDoc> _parser = new pb::MessageParser<PromotedDoc>(() => new PromotedDoc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PromotedDoc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[149]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PromotedDoc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PromotedDoc(PromotedDoc other) : this() {
      title_ = other.title_;
      subtitle_ = other.subtitle_;
      image_ = other.image_.Clone();
      description_ = other.description_;
      detailsUrl_ = other.detailsUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PromotedDoc Clone() {
      return new PromotedDoc(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "subtitle" field.</summary>
    public const int SubtitleFieldNumber = 2;
    private readonly static string SubtitleDefaultValue = "";

    private string subtitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subtitle {
      get { return subtitle_ ?? SubtitleDefaultValue; }
      set {
        subtitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "subtitle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubtitle {
      get { return subtitle_ != null; }
    }
    /// <summary>Clears the value of the "subtitle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtitle() {
      subtitle_ = null;
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Image> _repeated_image_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.Image.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Image> image_ = new pbc::RepeatedField<global::GooglePlayStore.Image>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Image> Image {
      get { return image_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "detailsUrl" field.</summary>
    public const int DetailsUrlFieldNumber = 5;
    private readonly static string DetailsUrlDefaultValue = "";

    private string detailsUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DetailsUrl {
      get { return detailsUrl_ ?? DetailsUrlDefaultValue; }
      set {
        detailsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "detailsUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDetailsUrl {
      get { return detailsUrl_ != null; }
    }
    /// <summary>Clears the value of the "detailsUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDetailsUrl() {
      detailsUrl_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PromotedDoc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PromotedDoc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (Subtitle != other.Subtitle) return false;
      if(!image_.Equals(other.image_)) return false;
      if (Description != other.Description) return false;
      if (DetailsUrl != other.DetailsUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasSubtitle) hash ^= Subtitle.GetHashCode();
      hash ^= image_.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasDetailsUrl) hash ^= DetailsUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTitle) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (HasSubtitle) {
        output.WriteRawTag(18);
        output.WriteString(Subtitle);
      }
      image_.WriteTo(output, _repeated_image_codec);
      if (HasDescription) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (HasDetailsUrl) {
        output.WriteRawTag(42);
        output.WriteString(DetailsUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasSubtitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subtitle);
      }
      size += image_.CalculateSize(_repeated_image_codec);
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasDetailsUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DetailsUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PromotedDoc other) {
      if (other == null) {
        return;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasSubtitle) {
        Subtitle = other.Subtitle;
      }
      image_.Add(other.image_);
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasDetailsUrl) {
        DetailsUrl = other.DetailsUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            Subtitle = input.ReadString();
            break;
          }
          case 26: {
            image_.AddEntriesFrom(input, _repeated_image_codec);
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 42: {
            DetailsUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Warning : pb::IMessage<Warning> {
    private static readonly pb::MessageParser<Warning> _parser = new pb::MessageParser<Warning>(() => new Warning());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Warning> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[150]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Warning() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Warning(Warning other) : this() {
      localizedMessage_ = other.localizedMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Warning Clone() {
      return new Warning(this);
    }

    /// <summary>Field number for the "localizedMessage" field.</summary>
    public const int LocalizedMessageFieldNumber = 1;
    private readonly static string LocalizedMessageDefaultValue = "";

    private string localizedMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocalizedMessage {
      get { return localizedMessage_ ?? LocalizedMessageDefaultValue; }
      set {
        localizedMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "localizedMessage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLocalizedMessage {
      get { return localizedMessage_ != null; }
    }
    /// <summary>Clears the value of the "localizedMessage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLocalizedMessage() {
      localizedMessage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Warning);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Warning other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LocalizedMessage != other.LocalizedMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLocalizedMessage) hash ^= LocalizedMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasLocalizedMessage) {
        output.WriteRawTag(10);
        output.WriteString(LocalizedMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasLocalizedMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocalizedMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Warning other) {
      if (other == null) {
        return;
      }
      if (other.HasLocalizedMessage) {
        LocalizedMessage = other.LocalizedMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LocalizedMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AnnotationLink : pb::IMessage<AnnotationLink> {
    private static readonly pb::MessageParser<AnnotationLink> _parser = new pb::MessageParser<AnnotationLink>(() => new AnnotationLink());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnnotationLink> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[151]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotationLink() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotationLink(AnnotationLink other) : this() {
      _hasBits0 = other._hasBits0;
      uri_ = other.uri_;
      resolvedLink_ = other.resolvedLink_ != null ? other.resolvedLink_.Clone() : null;
      uriBackend_ = other.uriBackend_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotationLink Clone() {
      return new AnnotationLink(this);
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 1;
    private readonly static string UriDefaultValue = "";

    private string uri_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return uri_ ?? UriDefaultValue; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uri" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUri {
      get { return uri_ != null; }
    }
    /// <summary>Clears the value of the "uri" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUri() {
      uri_ = null;
    }

    /// <summary>Field number for the "resolvedLink" field.</summary>
    public const int ResolvedLinkFieldNumber = 2;
    private global::GooglePlayStore.ResolvedLink resolvedLink_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ResolvedLink ResolvedLink {
      get { return resolvedLink_; }
      set {
        resolvedLink_ = value;
      }
    }

    /// <summary>Field number for the "uriBackend" field.</summary>
    public const int UriBackendFieldNumber = 3;
    private readonly static int UriBackendDefaultValue = 0;

    private int uriBackend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UriBackend {
      get { if ((_hasBits0 & 1) != 0) { return uriBackend_; } else { return UriBackendDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uriBackend_ = value;
      }
    }
    /// <summary>Gets whether the "uriBackend" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUriBackend {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uriBackend" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUriBackend() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnnotationLink);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnnotationLink other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uri != other.Uri) return false;
      if (!object.Equals(ResolvedLink, other.ResolvedLink)) return false;
      if (UriBackend != other.UriBackend) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUri) hash ^= Uri.GetHashCode();
      if (resolvedLink_ != null) hash ^= ResolvedLink.GetHashCode();
      if (HasUriBackend) hash ^= UriBackend.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasUri) {
        output.WriteRawTag(10);
        output.WriteString(Uri);
      }
      if (resolvedLink_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ResolvedLink);
      }
      if (HasUriBackend) {
        output.WriteRawTag(24);
        output.WriteInt32(UriBackend);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUri) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (resolvedLink_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResolvedLink);
      }
      if (HasUriBackend) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UriBackend);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnnotationLink other) {
      if (other == null) {
        return;
      }
      if (other.HasUri) {
        Uri = other.Uri;
      }
      if (other.resolvedLink_ != null) {
        if (resolvedLink_ == null) {
          ResolvedLink = new global::GooglePlayStore.ResolvedLink();
        }
        ResolvedLink.MergeFrom(other.ResolvedLink);
      }
      if (other.HasUriBackend) {
        UriBackend = other.UriBackend;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uri = input.ReadString();
            break;
          }
          case 18: {
            if (resolvedLink_ == null) {
              ResolvedLink = new global::GooglePlayStore.ResolvedLink();
            }
            input.ReadMessage(ResolvedLink);
            break;
          }
          case 24: {
            UriBackend = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Rated : pb::IMessage<Rated> {
    private static readonly pb::MessageParser<Rated> _parser = new pb::MessageParser<Rated>(() => new Rated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Rated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[152]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rated(Rated other) : this() {
      label_ = other.label_;
      image_ = other.image_ != null ? other.image_.Clone() : null;
      learnMoreHtmlLink_ = other.learnMoreHtmlLink_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rated Clone() {
      return new Rated(this);
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 1;
    private readonly static string LabelDefaultValue = "";

    private string label_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_ ?? LabelDefaultValue; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "label" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLabel {
      get { return label_ != null; }
    }
    /// <summary>Clears the value of the "label" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLabel() {
      label_ = null;
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 2;
    private global::GooglePlayStore.Image image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Image Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    /// <summary>Field number for the "learnMoreHtmlLink" field.</summary>
    public const int LearnMoreHtmlLinkFieldNumber = 4;
    private readonly static string LearnMoreHtmlLinkDefaultValue = "";

    private string learnMoreHtmlLink_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LearnMoreHtmlLink {
      get { return learnMoreHtmlLink_ ?? LearnMoreHtmlLinkDefaultValue; }
      set {
        learnMoreHtmlLink_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "learnMoreHtmlLink" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLearnMoreHtmlLink {
      get { return learnMoreHtmlLink_ != null; }
    }
    /// <summary>Clears the value of the "learnMoreHtmlLink" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLearnMoreHtmlLink() {
      learnMoreHtmlLink_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Rated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Rated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Label != other.Label) return false;
      if (!object.Equals(Image, other.Image)) return false;
      if (LearnMoreHtmlLink != other.LearnMoreHtmlLink) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLabel) hash ^= Label.GetHashCode();
      if (image_ != null) hash ^= Image.GetHashCode();
      if (HasLearnMoreHtmlLink) hash ^= LearnMoreHtmlLink.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasLabel) {
        output.WriteRawTag(10);
        output.WriteString(Label);
      }
      if (image_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Image);
      }
      if (HasLearnMoreHtmlLink) {
        output.WriteRawTag(34);
        output.WriteString(LearnMoreHtmlLink);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasLabel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (HasLearnMoreHtmlLink) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LearnMoreHtmlLink);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Rated other) {
      if (other == null) {
        return;
      }
      if (other.HasLabel) {
        Label = other.Label;
      }
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::GooglePlayStore.Image();
        }
        Image.MergeFrom(other.Image);
      }
      if (other.HasLearnMoreHtmlLink) {
        LearnMoreHtmlLink = other.LearnMoreHtmlLink;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Label = input.ReadString();
            break;
          }
          case 18: {
            if (image_ == null) {
              Image = new global::GooglePlayStore.Image();
            }
            input.ReadMessage(Image);
            break;
          }
          case 34: {
            LearnMoreHtmlLink = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Badge : pb::IMessage<Badge> {
    private static readonly pb::MessageParser<Badge> _parser = new pb::MessageParser<Badge>(() => new Badge());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Badge> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[153]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Badge() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Badge(Badge other) : this() {
      major_ = other.major_;
      image_ = other.image_ != null ? other.image_.Clone() : null;
      minor_ = other.minor_;
      minorHtml_ = other.minorHtml_;
      subBadge_ = other.subBadge_ != null ? other.subBadge_.Clone() : null;
      link_ = other.link_ != null ? other.link_.Clone() : null;
      description_ = other.description_;
      stream_ = other.stream_ != null ? other.stream_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Badge Clone() {
      return new Badge(this);
    }

    /// <summary>Field number for the "major" field.</summary>
    public const int MajorFieldNumber = 1;
    private readonly static string MajorDefaultValue = "";

    private string major_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Major {
      get { return major_ ?? MajorDefaultValue; }
      set {
        major_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "major" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMajor {
      get { return major_ != null; }
    }
    /// <summary>Clears the value of the "major" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMajor() {
      major_ = null;
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 2;
    private global::GooglePlayStore.Image image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Image Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    /// <summary>Field number for the "minor" field.</summary>
    public const int MinorFieldNumber = 3;
    private readonly static string MinorDefaultValue = "";

    private string minor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Minor {
      get { return minor_ ?? MinorDefaultValue; }
      set {
        minor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "minor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMinor {
      get { return minor_ != null; }
    }
    /// <summary>Clears the value of the "minor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMinor() {
      minor_ = null;
    }

    /// <summary>Field number for the "minorHtml" field.</summary>
    public const int MinorHtmlFieldNumber = 4;
    private readonly static string MinorHtmlDefaultValue = "";

    private string minorHtml_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MinorHtml {
      get { return minorHtml_ ?? MinorHtmlDefaultValue; }
      set {
        minorHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "minorHtml" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMinorHtml {
      get { return minorHtml_ != null; }
    }
    /// <summary>Clears the value of the "minorHtml" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMinorHtml() {
      minorHtml_ = null;
    }

    /// <summary>Field number for the "subBadge" field.</summary>
    public const int SubBadgeFieldNumber = 6;
    private global::GooglePlayStore.SubBadge subBadge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SubBadge SubBadge {
      get { return subBadge_; }
      set {
        subBadge_ = value;
      }
    }

    /// <summary>Field number for the "link" field.</summary>
    public const int LinkFieldNumber = 7;
    private global::GooglePlayStore.StreamLink link_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.StreamLink Link {
      get { return link_; }
      set {
        link_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 8;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "stream" field.</summary>
    public const int StreamFieldNumber = 12;
    private global::GooglePlayStore.SubStream stream_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SubStream Stream {
      get { return stream_; }
      set {
        stream_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Badge);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Badge other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Major != other.Major) return false;
      if (!object.Equals(Image, other.Image)) return false;
      if (Minor != other.Minor) return false;
      if (MinorHtml != other.MinorHtml) return false;
      if (!object.Equals(SubBadge, other.SubBadge)) return false;
      if (!object.Equals(Link, other.Link)) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(Stream, other.Stream)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMajor) hash ^= Major.GetHashCode();
      if (image_ != null) hash ^= Image.GetHashCode();
      if (HasMinor) hash ^= Minor.GetHashCode();
      if (HasMinorHtml) hash ^= MinorHtml.GetHashCode();
      if (subBadge_ != null) hash ^= SubBadge.GetHashCode();
      if (link_ != null) hash ^= Link.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (stream_ != null) hash ^= Stream.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasMajor) {
        output.WriteRawTag(10);
        output.WriteString(Major);
      }
      if (image_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Image);
      }
      if (HasMinor) {
        output.WriteRawTag(26);
        output.WriteString(Minor);
      }
      if (HasMinorHtml) {
        output.WriteRawTag(34);
        output.WriteString(MinorHtml);
      }
      if (subBadge_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SubBadge);
      }
      if (link_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Link);
      }
      if (HasDescription) {
        output.WriteRawTag(66);
        output.WriteString(Description);
      }
      if (stream_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Stream);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMajor) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Major);
      }
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (HasMinor) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Minor);
      }
      if (HasMinorHtml) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MinorHtml);
      }
      if (subBadge_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubBadge);
      }
      if (link_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Link);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (stream_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stream);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Badge other) {
      if (other == null) {
        return;
      }
      if (other.HasMajor) {
        Major = other.Major;
      }
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::GooglePlayStore.Image();
        }
        Image.MergeFrom(other.Image);
      }
      if (other.HasMinor) {
        Minor = other.Minor;
      }
      if (other.HasMinorHtml) {
        MinorHtml = other.MinorHtml;
      }
      if (other.subBadge_ != null) {
        if (subBadge_ == null) {
          SubBadge = new global::GooglePlayStore.SubBadge();
        }
        SubBadge.MergeFrom(other.SubBadge);
      }
      if (other.link_ != null) {
        if (link_ == null) {
          Link = new global::GooglePlayStore.StreamLink();
        }
        Link.MergeFrom(other.Link);
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.stream_ != null) {
        if (stream_ == null) {
          Stream = new global::GooglePlayStore.SubStream();
        }
        Stream.MergeFrom(other.Stream);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Major = input.ReadString();
            break;
          }
          case 18: {
            if (image_ == null) {
              Image = new global::GooglePlayStore.Image();
            }
            input.ReadMessage(Image);
            break;
          }
          case 26: {
            Minor = input.ReadString();
            break;
          }
          case 34: {
            MinorHtml = input.ReadString();
            break;
          }
          case 50: {
            if (subBadge_ == null) {
              SubBadge = new global::GooglePlayStore.SubBadge();
            }
            input.ReadMessage(SubBadge);
            break;
          }
          case 58: {
            if (link_ == null) {
              Link = new global::GooglePlayStore.StreamLink();
            }
            input.ReadMessage(Link);
            break;
          }
          case 66: {
            Description = input.ReadString();
            break;
          }
          case 98: {
            if (stream_ == null) {
              Stream = new global::GooglePlayStore.SubStream();
            }
            input.ReadMessage(Stream);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubBadge : pb::IMessage<SubBadge> {
    private static readonly pb::MessageParser<SubBadge> _parser = new pb::MessageParser<SubBadge>(() => new SubBadge());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubBadge> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[154]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubBadge() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubBadge(SubBadge other) : this() {
      image_ = other.image_ != null ? other.image_.Clone() : null;
      description_ = other.description_;
      link_ = other.link_ != null ? other.link_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubBadge Clone() {
      return new SubBadge(this);
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 1;
    private global::GooglePlayStore.Image image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Image Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "link" field.</summary>
    public const int LinkFieldNumber = 5;
    private global::GooglePlayStore.StreamLink link_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.StreamLink Link {
      get { return link_; }
      set {
        link_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubBadge);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubBadge other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Image, other.Image)) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(Link, other.Link)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (image_ != null) hash ^= Image.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (link_ != null) hash ^= Link.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (image_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Image);
      }
      if (HasDescription) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (link_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Link);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (link_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Link);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubBadge other) {
      if (other == null) {
        return;
      }
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::GooglePlayStore.Image();
        }
        Image.MergeFrom(other.Image);
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.link_ != null) {
        if (link_ == null) {
          Link = new global::GooglePlayStore.StreamLink();
        }
        Link.MergeFrom(other.Link);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (image_ == null) {
              Image = new global::GooglePlayStore.Image();
            }
            input.ReadMessage(Image);
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 42: {
            if (link_ == null) {
              Link = new global::GooglePlayStore.StreamLink();
            }
            input.ReadMessage(Link);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Stream : pb::IMessage<Stream> {
    private static readonly pb::MessageParser<Stream> _parser = new pb::MessageParser<Stream>(() => new Stream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Stream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[155]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stream(Stream other) : this() {
      title_ = other.title_;
      stream_ = other.stream_ != null ? other.stream_.Clone() : null;
      subtitle_ = other.subtitle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stream Clone() {
      return new Stream(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "stream" field.</summary>
    public const int Stream_FieldNumber = 2;
    private global::GooglePlayStore.SubStream stream_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SubStream Stream_ {
      get { return stream_; }
      set {
        stream_ = value;
      }
    }

    /// <summary>Field number for the "subtitle" field.</summary>
    public const int SubtitleFieldNumber = 3;
    private readonly static string SubtitleDefaultValue = "";

    private string subtitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subtitle {
      get { return subtitle_ ?? SubtitleDefaultValue; }
      set {
        subtitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "subtitle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubtitle {
      get { return subtitle_ != null; }
    }
    /// <summary>Clears the value of the "subtitle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtitle() {
      subtitle_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Stream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Stream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (!object.Equals(Stream_, other.Stream_)) return false;
      if (Subtitle != other.Subtitle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTitle) hash ^= Title.GetHashCode();
      if (stream_ != null) hash ^= Stream_.GetHashCode();
      if (HasSubtitle) hash ^= Subtitle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTitle) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (stream_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Stream_);
      }
      if (HasSubtitle) {
        output.WriteRawTag(26);
        output.WriteString(Subtitle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (stream_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stream_);
      }
      if (HasSubtitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subtitle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Stream other) {
      if (other == null) {
        return;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.stream_ != null) {
        if (stream_ == null) {
          Stream_ = new global::GooglePlayStore.SubStream();
        }
        Stream_.MergeFrom(other.Stream_);
      }
      if (other.HasSubtitle) {
        Subtitle = other.Subtitle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            if (stream_ == null) {
              Stream_ = new global::GooglePlayStore.SubStream();
            }
            input.ReadMessage(Stream_);
            break;
          }
          case 26: {
            Subtitle = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubStream : pb::IMessage<SubStream> {
    private static readonly pb::MessageParser<SubStream> _parser = new pb::MessageParser<SubStream>(() => new SubStream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubStream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[156]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubStream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubStream(SubStream other) : this() {
      link_ = other.link_ != null ? other.link_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubStream Clone() {
      return new SubStream(this);
    }

    /// <summary>Field number for the "link" field.</summary>
    public const int LinkFieldNumber = 2;
    private global::GooglePlayStore.StreamLink link_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.StreamLink Link {
      get { return link_; }
      set {
        link_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubStream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubStream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Link, other.Link)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (link_ != null) hash ^= Link.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (link_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Link);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (link_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Link);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubStream other) {
      if (other == null) {
        return;
      }
      if (other.link_ != null) {
        if (link_ == null) {
          Link = new global::GooglePlayStore.StreamLink();
        }
        Link.MergeFrom(other.Link);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (link_ == null) {
              Link = new global::GooglePlayStore.StreamLink();
            }
            input.ReadMessage(Link);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Link : pb::IMessage<Link> {
    private static readonly pb::MessageParser<Link> _parser = new pb::MessageParser<Link>(() => new Link());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Link> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[157]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Link() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Link(Link other) : this() {
      _hasBits0 = other._hasBits0;
      uri_ = other.uri_;
      resolvedLink_ = other.resolvedLink_ != null ? other.resolvedLink_.Clone() : null;
      uriBackend_ = other.uriBackend_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Link Clone() {
      return new Link(this);
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 1;
    private readonly static string UriDefaultValue = "";

    private string uri_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return uri_ ?? UriDefaultValue; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uri" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUri {
      get { return uri_ != null; }
    }
    /// <summary>Clears the value of the "uri" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUri() {
      uri_ = null;
    }

    /// <summary>Field number for the "resolvedLink" field.</summary>
    public const int ResolvedLinkFieldNumber = 2;
    private global::GooglePlayStore.ResolvedLink resolvedLink_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ResolvedLink ResolvedLink {
      get { return resolvedLink_; }
      set {
        resolvedLink_ = value;
      }
    }

    /// <summary>Field number for the "uriBackend" field.</summary>
    public const int UriBackendFieldNumber = 3;
    private readonly static int UriBackendDefaultValue = 0;

    private int uriBackend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UriBackend {
      get { if ((_hasBits0 & 1) != 0) { return uriBackend_; } else { return UriBackendDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uriBackend_ = value;
      }
    }
    /// <summary>Gets whether the "uriBackend" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUriBackend {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uriBackend" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUriBackend() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Link);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Link other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uri != other.Uri) return false;
      if (!object.Equals(ResolvedLink, other.ResolvedLink)) return false;
      if (UriBackend != other.UriBackend) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUri) hash ^= Uri.GetHashCode();
      if (resolvedLink_ != null) hash ^= ResolvedLink.GetHashCode();
      if (HasUriBackend) hash ^= UriBackend.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasUri) {
        output.WriteRawTag(10);
        output.WriteString(Uri);
      }
      if (resolvedLink_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ResolvedLink);
      }
      if (HasUriBackend) {
        output.WriteRawTag(24);
        output.WriteInt32(UriBackend);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUri) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (resolvedLink_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResolvedLink);
      }
      if (HasUriBackend) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UriBackend);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Link other) {
      if (other == null) {
        return;
      }
      if (other.HasUri) {
        Uri = other.Uri;
      }
      if (other.resolvedLink_ != null) {
        if (resolvedLink_ == null) {
          ResolvedLink = new global::GooglePlayStore.ResolvedLink();
        }
        ResolvedLink.MergeFrom(other.ResolvedLink);
      }
      if (other.HasUriBackend) {
        UriBackend = other.UriBackend;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uri = input.ReadString();
            break;
          }
          case 18: {
            if (resolvedLink_ == null) {
              ResolvedLink = new global::GooglePlayStore.ResolvedLink();
            }
            input.ReadMessage(ResolvedLink);
            break;
          }
          case 24: {
            UriBackend = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamLink : pb::IMessage<StreamLink> {
    private static readonly pb::MessageParser<StreamLink> _parser = new pb::MessageParser<StreamLink>(() => new StreamLink());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamLink> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[158]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamLink() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamLink(StreamLink other) : this() {
      url_ = other.url_;
      streamUrl_ = other.streamUrl_;
      searchUrl_ = other.searchUrl_;
      subCategoryUrl_ = other.subCategoryUrl_;
      searchQuery_ = other.searchQuery_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamLink Clone() {
      return new StreamLink(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "streamUrl" field.</summary>
    public const int StreamUrlFieldNumber = 2;
    private readonly static string StreamUrlDefaultValue = "";

    private string streamUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StreamUrl {
      get { return streamUrl_ ?? StreamUrlDefaultValue; }
      set {
        streamUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "streamUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamUrl {
      get { return streamUrl_ != null; }
    }
    /// <summary>Clears the value of the "streamUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamUrl() {
      streamUrl_ = null;
    }

    /// <summary>Field number for the "searchUrl" field.</summary>
    public const int SearchUrlFieldNumber = 3;
    private readonly static string SearchUrlDefaultValue = "";

    private string searchUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SearchUrl {
      get { return searchUrl_ ?? SearchUrlDefaultValue; }
      set {
        searchUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "searchUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSearchUrl {
      get { return searchUrl_ != null; }
    }
    /// <summary>Clears the value of the "searchUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSearchUrl() {
      searchUrl_ = null;
    }

    /// <summary>Field number for the "subCategoryUrl" field.</summary>
    public const int SubCategoryUrlFieldNumber = 5;
    private readonly static string SubCategoryUrlDefaultValue = "";

    private string subCategoryUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubCategoryUrl {
      get { return subCategoryUrl_ ?? SubCategoryUrlDefaultValue; }
      set {
        subCategoryUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "subCategoryUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubCategoryUrl {
      get { return subCategoryUrl_ != null; }
    }
    /// <summary>Clears the value of the "subCategoryUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubCategoryUrl() {
      subCategoryUrl_ = null;
    }

    /// <summary>Field number for the "searchQuery" field.</summary>
    public const int SearchQueryFieldNumber = 11;
    private readonly static string SearchQueryDefaultValue = "";

    private string searchQuery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SearchQuery {
      get { return searchQuery_ ?? SearchQueryDefaultValue; }
      set {
        searchQuery_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "searchQuery" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSearchQuery {
      get { return searchQuery_ != null; }
    }
    /// <summary>Clears the value of the "searchQuery" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSearchQuery() {
      searchQuery_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamLink);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamLink other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (StreamUrl != other.StreamUrl) return false;
      if (SearchUrl != other.SearchUrl) return false;
      if (SubCategoryUrl != other.SubCategoryUrl) return false;
      if (SearchQuery != other.SearchQuery) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasStreamUrl) hash ^= StreamUrl.GetHashCode();
      if (HasSearchUrl) hash ^= SearchUrl.GetHashCode();
      if (HasSubCategoryUrl) hash ^= SubCategoryUrl.GetHashCode();
      if (HasSearchQuery) hash ^= SearchQuery.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasStreamUrl) {
        output.WriteRawTag(18);
        output.WriteString(StreamUrl);
      }
      if (HasSearchUrl) {
        output.WriteRawTag(26);
        output.WriteString(SearchUrl);
      }
      if (HasSubCategoryUrl) {
        output.WriteRawTag(42);
        output.WriteString(SubCategoryUrl);
      }
      if (HasSearchQuery) {
        output.WriteRawTag(90);
        output.WriteString(SearchQuery);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasStreamUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StreamUrl);
      }
      if (HasSearchUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SearchUrl);
      }
      if (HasSubCategoryUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubCategoryUrl);
      }
      if (HasSearchQuery) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SearchQuery);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamLink other) {
      if (other == null) {
        return;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasStreamUrl) {
        StreamUrl = other.StreamUrl;
      }
      if (other.HasSearchUrl) {
        SearchUrl = other.SearchUrl;
      }
      if (other.HasSubCategoryUrl) {
        SubCategoryUrl = other.SubCategoryUrl;
      }
      if (other.HasSearchQuery) {
        SearchQuery = other.SearchQuery;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            StreamUrl = input.ReadString();
            break;
          }
          case 26: {
            SearchUrl = input.ReadString();
            break;
          }
          case 42: {
            SubCategoryUrl = input.ReadString();
            break;
          }
          case 90: {
            SearchQuery = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Chip : pb::IMessage<Chip> {
    private static readonly pb::MessageParser<Chip> _parser = new pb::MessageParser<Chip>(() => new Chip());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Chip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[159]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chip(Chip other) : this() {
      title_ = other.title_;
      stream_ = other.stream_ != null ? other.stream_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chip Clone() {
      return new Chip(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "stream" field.</summary>
    public const int StreamFieldNumber = 2;
    private global::GooglePlayStore.SubStream stream_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SubStream Stream {
      get { return stream_; }
      set {
        stream_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Chip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Chip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (!object.Equals(Stream, other.Stream)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTitle) hash ^= Title.GetHashCode();
      if (stream_ != null) hash ^= Stream.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTitle) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (stream_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Stream);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (stream_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stream);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Chip other) {
      if (other == null) {
        return;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.stream_ != null) {
        if (stream_ == null) {
          Stream = new global::GooglePlayStore.SubStream();
        }
        Stream.MergeFrom(other.Stream);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            if (stream_ == null) {
              Stream = new global::GooglePlayStore.SubStream();
            }
            input.ReadMessage(Stream);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CategoryInfo : pb::IMessage<CategoryInfo> {
    private static readonly pb::MessageParser<CategoryInfo> _parser = new pb::MessageParser<CategoryInfo>(() => new CategoryInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CategoryInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[160]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryInfo(CategoryInfo other) : this() {
      category_ = other.category_;
      appCategory_ = other.appCategory_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryInfo Clone() {
      return new CategoryInfo(this);
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 1;
    private readonly static string CategoryDefaultValue = "";

    private string category_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_ ?? CategoryDefaultValue; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "category" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCategory {
      get { return category_ != null; }
    }
    /// <summary>Clears the value of the "category" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCategory() {
      category_ = null;
    }

    /// <summary>Field number for the "appCategory" field.</summary>
    public const int AppCategoryFieldNumber = 2;
    private readonly static string AppCategoryDefaultValue = "";

    private string appCategory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppCategory {
      get { return appCategory_ ?? AppCategoryDefaultValue; }
      set {
        appCategory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "appCategory" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAppCategory {
      get { return appCategory_ != null; }
    }
    /// <summary>Clears the value of the "appCategory" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAppCategory() {
      appCategory_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CategoryInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CategoryInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Category != other.Category) return false;
      if (AppCategory != other.AppCategory) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCategory) hash ^= Category.GetHashCode();
      if (HasAppCategory) hash ^= AppCategory.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasCategory) {
        output.WriteRawTag(10);
        output.WriteString(Category);
      }
      if (HasAppCategory) {
        output.WriteRawTag(18);
        output.WriteString(AppCategory);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCategory) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      if (HasAppCategory) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppCategory);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CategoryInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasCategory) {
        Category = other.Category;
      }
      if (other.HasAppCategory) {
        AppCategory = other.AppCategory;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Category = input.ReadString();
            break;
          }
          case 18: {
            AppCategory = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EncryptedSubscriberInfo : pb::IMessage<EncryptedSubscriberInfo> {
    private static readonly pb::MessageParser<EncryptedSubscriberInfo> _parser = new pb::MessageParser<EncryptedSubscriberInfo>(() => new EncryptedSubscriberInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EncryptedSubscriberInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[161]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptedSubscriberInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptedSubscriberInfo(EncryptedSubscriberInfo other) : this() {
      _hasBits0 = other._hasBits0;
      data_ = other.data_;
      encryptedKey_ = other.encryptedKey_;
      signature_ = other.signature_;
      initVector_ = other.initVector_;
      googleKeyVersion_ = other.googleKeyVersion_;
      carrierKeyVersion_ = other.carrierKeyVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptedSubscriberInfo Clone() {
      return new EncryptedSubscriberInfo(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private readonly static string DataDefaultValue = "";

    private string data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_ ?? DataDefaultValue; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasData {
      get { return data_ != null; }
    }
    /// <summary>Clears the value of the "data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearData() {
      data_ = null;
    }

    /// <summary>Field number for the "encryptedKey" field.</summary>
    public const int EncryptedKeyFieldNumber = 2;
    private readonly static string EncryptedKeyDefaultValue = "";

    private string encryptedKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EncryptedKey {
      get { return encryptedKey_ ?? EncryptedKeyDefaultValue; }
      set {
        encryptedKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "encryptedKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEncryptedKey {
      get { return encryptedKey_ != null; }
    }
    /// <summary>Clears the value of the "encryptedKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEncryptedKey() {
      encryptedKey_ = null;
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 3;
    private readonly static string SignatureDefaultValue = "";

    private string signature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Signature {
      get { return signature_ ?? SignatureDefaultValue; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "signature" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSignature {
      get { return signature_ != null; }
    }
    /// <summary>Clears the value of the "signature" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSignature() {
      signature_ = null;
    }

    /// <summary>Field number for the "initVector" field.</summary>
    public const int InitVectorFieldNumber = 4;
    private readonly static string InitVectorDefaultValue = "";

    private string initVector_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InitVector {
      get { return initVector_ ?? InitVectorDefaultValue; }
      set {
        initVector_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "initVector" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInitVector {
      get { return initVector_ != null; }
    }
    /// <summary>Clears the value of the "initVector" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInitVector() {
      initVector_ = null;
    }

    /// <summary>Field number for the "googleKeyVersion" field.</summary>
    public const int GoogleKeyVersionFieldNumber = 5;
    private readonly static int GoogleKeyVersionDefaultValue = 0;

    private int googleKeyVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoogleKeyVersion {
      get { if ((_hasBits0 & 1) != 0) { return googleKeyVersion_; } else { return GoogleKeyVersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        googleKeyVersion_ = value;
      }
    }
    /// <summary>Gets whether the "googleKeyVersion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGoogleKeyVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "googleKeyVersion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGoogleKeyVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "carrierKeyVersion" field.</summary>
    public const int CarrierKeyVersionFieldNumber = 6;
    private readonly static int CarrierKeyVersionDefaultValue = 0;

    private int carrierKeyVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CarrierKeyVersion {
      get { if ((_hasBits0 & 2) != 0) { return carrierKeyVersion_; } else { return CarrierKeyVersionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        carrierKeyVersion_ = value;
      }
    }
    /// <summary>Gets whether the "carrierKeyVersion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCarrierKeyVersion {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "carrierKeyVersion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCarrierKeyVersion() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EncryptedSubscriberInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EncryptedSubscriberInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      if (EncryptedKey != other.EncryptedKey) return false;
      if (Signature != other.Signature) return false;
      if (InitVector != other.InitVector) return false;
      if (GoogleKeyVersion != other.GoogleKeyVersion) return false;
      if (CarrierKeyVersion != other.CarrierKeyVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasData) hash ^= Data.GetHashCode();
      if (HasEncryptedKey) hash ^= EncryptedKey.GetHashCode();
      if (HasSignature) hash ^= Signature.GetHashCode();
      if (HasInitVector) hash ^= InitVector.GetHashCode();
      if (HasGoogleKeyVersion) hash ^= GoogleKeyVersion.GetHashCode();
      if (HasCarrierKeyVersion) hash ^= CarrierKeyVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasData) {
        output.WriteRawTag(10);
        output.WriteString(Data);
      }
      if (HasEncryptedKey) {
        output.WriteRawTag(18);
        output.WriteString(EncryptedKey);
      }
      if (HasSignature) {
        output.WriteRawTag(26);
        output.WriteString(Signature);
      }
      if (HasInitVector) {
        output.WriteRawTag(34);
        output.WriteString(InitVector);
      }
      if (HasGoogleKeyVersion) {
        output.WriteRawTag(40);
        output.WriteInt32(GoogleKeyVersion);
      }
      if (HasCarrierKeyVersion) {
        output.WriteRawTag(48);
        output.WriteInt32(CarrierKeyVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasData) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (HasEncryptedKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EncryptedKey);
      }
      if (HasSignature) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
      }
      if (HasInitVector) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InitVector);
      }
      if (HasGoogleKeyVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoogleKeyVersion);
      }
      if (HasCarrierKeyVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CarrierKeyVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EncryptedSubscriberInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasData) {
        Data = other.Data;
      }
      if (other.HasEncryptedKey) {
        EncryptedKey = other.EncryptedKey;
      }
      if (other.HasSignature) {
        Signature = other.Signature;
      }
      if (other.HasInitVector) {
        InitVector = other.InitVector;
      }
      if (other.HasGoogleKeyVersion) {
        GoogleKeyVersion = other.GoogleKeyVersion;
      }
      if (other.HasCarrierKeyVersion) {
        CarrierKeyVersion = other.CarrierKeyVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadString();
            break;
          }
          case 18: {
            EncryptedKey = input.ReadString();
            break;
          }
          case 26: {
            Signature = input.ReadString();
            break;
          }
          case 34: {
            InitVector = input.ReadString();
            break;
          }
          case 40: {
            GoogleKeyVersion = input.ReadInt32();
            break;
          }
          case 48: {
            CarrierKeyVersion = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Availability : pb::IMessage<Availability> {
    private static readonly pb::MessageParser<Availability> _parser = new pb::MessageParser<Availability>(() => new Availability());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Availability> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[162]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Availability() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Availability(Availability other) : this() {
      _hasBits0 = other._hasBits0;
      restriction_ = other.restriction_;
      offerType_ = other.offerType_;
      rule_ = other.rule_ != null ? other.rule_.Clone() : null;
      perDeviceAvailabilityRestriction_ = other.perDeviceAvailabilityRestriction_.Clone();
      availableIfOwned_ = other.availableIfOwned_;
      install_ = other.install_.Clone();
      filterInfo_ = other.filterInfo_ != null ? other.filterInfo_.Clone() : null;
      ownershipInfo_ = other.ownershipInfo_ != null ? other.ownershipInfo_.Clone() : null;
      availabilityProblem_ = other.availabilityProblem_.Clone();
      hidden_ = other.hidden_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Availability Clone() {
      return new Availability(this);
    }

    /// <summary>Field number for the "restriction" field.</summary>
    public const int RestrictionFieldNumber = 5;
    private readonly static int RestrictionDefaultValue = 0;

    private int restriction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Restriction {
      get { if ((_hasBits0 & 1) != 0) { return restriction_; } else { return RestrictionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        restriction_ = value;
      }
    }
    /// <summary>Gets whether the "restriction" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRestriction {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "restriction" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRestriction() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "offerType" field.</summary>
    public const int OfferTypeFieldNumber = 6;
    private readonly static int OfferTypeDefaultValue = 0;

    private int offerType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OfferType {
      get { if ((_hasBits0 & 2) != 0) { return offerType_; } else { return OfferTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        offerType_ = value;
      }
    }
    /// <summary>Gets whether the "offerType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOfferType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "offerType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOfferType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "rule" field.</summary>
    public const int RuleFieldNumber = 7;
    private global::GooglePlayStore.Rule rule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Rule Rule {
      get { return rule_; }
      set {
        rule_ = value;
      }
    }

    /// <summary>Field number for the "perdeviceavailabilityrestriction" field.</summary>
    public const int PerDeviceAvailabilityRestrictionFieldNumber = 9;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Availability.Types.PerDeviceAvailabilityRestriction> _repeated_perDeviceAvailabilityRestriction_codec
        = pb::FieldCodec.ForGroup(75, 76, global::GooglePlayStore.Availability.Types.PerDeviceAvailabilityRestriction.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Availability.Types.PerDeviceAvailabilityRestriction> perDeviceAvailabilityRestriction_ = new pbc::RepeatedField<global::GooglePlayStore.Availability.Types.PerDeviceAvailabilityRestriction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Availability.Types.PerDeviceAvailabilityRestriction> PerDeviceAvailabilityRestriction {
      get { return perDeviceAvailabilityRestriction_; }
    }

    /// <summary>Field number for the "availableIfOwned" field.</summary>
    public const int AvailableIfOwnedFieldNumber = 13;
    private readonly static bool AvailableIfOwnedDefaultValue = false;

    private bool availableIfOwned_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AvailableIfOwned {
      get { if ((_hasBits0 & 4) != 0) { return availableIfOwned_; } else { return AvailableIfOwnedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        availableIfOwned_ = value;
      }
    }
    /// <summary>Gets whether the "availableIfOwned" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAvailableIfOwned {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "availableIfOwned" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAvailableIfOwned() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "install" field.</summary>
    public const int InstallFieldNumber = 14;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Install> _repeated_install_codec
        = pb::FieldCodec.ForMessage(114, global::GooglePlayStore.Install.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Install> install_ = new pbc::RepeatedField<global::GooglePlayStore.Install>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Install> Install {
      get { return install_; }
    }

    /// <summary>Field number for the "filterInfo" field.</summary>
    public const int FilterInfoFieldNumber = 16;
    private global::GooglePlayStore.FilterEvaluationInfo filterInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.FilterEvaluationInfo FilterInfo {
      get { return filterInfo_; }
      set {
        filterInfo_ = value;
      }
    }

    /// <summary>Field number for the "ownershipInfo" field.</summary>
    public const int OwnershipInfoFieldNumber = 17;
    private global::GooglePlayStore.OwnershipInfo ownershipInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.OwnershipInfo OwnershipInfo {
      get { return ownershipInfo_; }
      set {
        ownershipInfo_ = value;
      }
    }

    /// <summary>Field number for the "availabilityProblem" field.</summary>
    public const int AvailabilityProblemFieldNumber = 18;
    private static readonly pb::FieldCodec<global::GooglePlayStore.AvailabilityProblem> _repeated_availabilityProblem_codec
        = pb::FieldCodec.ForMessage(146, global::GooglePlayStore.AvailabilityProblem.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.AvailabilityProblem> availabilityProblem_ = new pbc::RepeatedField<global::GooglePlayStore.AvailabilityProblem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.AvailabilityProblem> AvailabilityProblem {
      get { return availabilityProblem_; }
    }

    /// <summary>Field number for the "hidden" field.</summary>
    public const int HiddenFieldNumber = 21;
    private readonly static bool HiddenDefaultValue = false;

    private bool hidden_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Hidden {
      get { if ((_hasBits0 & 8) != 0) { return hidden_; } else { return HiddenDefaultValue; } }
      set {
        _hasBits0 |= 8;
        hidden_ = value;
      }
    }
    /// <summary>Gets whether the "hidden" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHidden {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "hidden" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHidden() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Availability);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Availability other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Restriction != other.Restriction) return false;
      if (OfferType != other.OfferType) return false;
      if (!object.Equals(Rule, other.Rule)) return false;
      if(!perDeviceAvailabilityRestriction_.Equals(other.perDeviceAvailabilityRestriction_)) return false;
      if (AvailableIfOwned != other.AvailableIfOwned) return false;
      if(!install_.Equals(other.install_)) return false;
      if (!object.Equals(FilterInfo, other.FilterInfo)) return false;
      if (!object.Equals(OwnershipInfo, other.OwnershipInfo)) return false;
      if(!availabilityProblem_.Equals(other.availabilityProblem_)) return false;
      if (Hidden != other.Hidden) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRestriction) hash ^= Restriction.GetHashCode();
      if (HasOfferType) hash ^= OfferType.GetHashCode();
      if (rule_ != null) hash ^= Rule.GetHashCode();
      hash ^= perDeviceAvailabilityRestriction_.GetHashCode();
      if (HasAvailableIfOwned) hash ^= AvailableIfOwned.GetHashCode();
      hash ^= install_.GetHashCode();
      if (filterInfo_ != null) hash ^= FilterInfo.GetHashCode();
      if (ownershipInfo_ != null) hash ^= OwnershipInfo.GetHashCode();
      hash ^= availabilityProblem_.GetHashCode();
      if (HasHidden) hash ^= Hidden.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasRestriction) {
        output.WriteRawTag(40);
        output.WriteInt32(Restriction);
      }
      if (HasOfferType) {
        output.WriteRawTag(48);
        output.WriteInt32(OfferType);
      }
      if (rule_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Rule);
      }
      perDeviceAvailabilityRestriction_.WriteTo(output, _repeated_perDeviceAvailabilityRestriction_codec);
      if (HasAvailableIfOwned) {
        output.WriteRawTag(104);
        output.WriteBool(AvailableIfOwned);
      }
      install_.WriteTo(output, _repeated_install_codec);
      if (filterInfo_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(FilterInfo);
      }
      if (ownershipInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(OwnershipInfo);
      }
      availabilityProblem_.WriteTo(output, _repeated_availabilityProblem_codec);
      if (HasHidden) {
        output.WriteRawTag(168, 1);
        output.WriteBool(Hidden);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasRestriction) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Restriction);
      }
      if (HasOfferType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OfferType);
      }
      if (rule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rule);
      }
      size += perDeviceAvailabilityRestriction_.CalculateSize(_repeated_perDeviceAvailabilityRestriction_codec);
      if (HasAvailableIfOwned) {
        size += 1 + 1;
      }
      size += install_.CalculateSize(_repeated_install_codec);
      if (filterInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FilterInfo);
      }
      if (ownershipInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OwnershipInfo);
      }
      size += availabilityProblem_.CalculateSize(_repeated_availabilityProblem_codec);
      if (HasHidden) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Availability other) {
      if (other == null) {
        return;
      }
      if (other.HasRestriction) {
        Restriction = other.Restriction;
      }
      if (other.HasOfferType) {
        OfferType = other.OfferType;
      }
      if (other.rule_ != null) {
        if (rule_ == null) {
          Rule = new global::GooglePlayStore.Rule();
        }
        Rule.MergeFrom(other.Rule);
      }
      perDeviceAvailabilityRestriction_.Add(other.perDeviceAvailabilityRestriction_);
      if (other.HasAvailableIfOwned) {
        AvailableIfOwned = other.AvailableIfOwned;
      }
      install_.Add(other.install_);
      if (other.filterInfo_ != null) {
        if (filterInfo_ == null) {
          FilterInfo = new global::GooglePlayStore.FilterEvaluationInfo();
        }
        FilterInfo.MergeFrom(other.FilterInfo);
      }
      if (other.ownershipInfo_ != null) {
        if (ownershipInfo_ == null) {
          OwnershipInfo = new global::GooglePlayStore.OwnershipInfo();
        }
        OwnershipInfo.MergeFrom(other.OwnershipInfo);
      }
      availabilityProblem_.Add(other.availabilityProblem_);
      if (other.HasHidden) {
        Hidden = other.Hidden;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 40: {
            Restriction = input.ReadInt32();
            break;
          }
          case 48: {
            OfferType = input.ReadInt32();
            break;
          }
          case 58: {
            if (rule_ == null) {
              Rule = new global::GooglePlayStore.Rule();
            }
            input.ReadMessage(Rule);
            break;
          }
          case 75: {
            perDeviceAvailabilityRestriction_.AddEntriesFrom(input, _repeated_perDeviceAvailabilityRestriction_codec);
            break;
          }
          case 104: {
            AvailableIfOwned = input.ReadBool();
            break;
          }
          case 114: {
            install_.AddEntriesFrom(input, _repeated_install_codec);
            break;
          }
          case 130: {
            if (filterInfo_ == null) {
              FilterInfo = new global::GooglePlayStore.FilterEvaluationInfo();
            }
            input.ReadMessage(FilterInfo);
            break;
          }
          case 138: {
            if (ownershipInfo_ == null) {
              OwnershipInfo = new global::GooglePlayStore.OwnershipInfo();
            }
            input.ReadMessage(OwnershipInfo);
            break;
          }
          case 146: {
            availabilityProblem_.AddEntriesFrom(input, _repeated_availabilityProblem_codec);
            break;
          }
          case 168: {
            Hidden = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Availability message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class PerDeviceAvailabilityRestriction : pb::IMessage<PerDeviceAvailabilityRestriction> {
        private static readonly pb::MessageParser<PerDeviceAvailabilityRestriction> _parser = new pb::MessageParser<PerDeviceAvailabilityRestriction>(() => new PerDeviceAvailabilityRestriction());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PerDeviceAvailabilityRestriction> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GooglePlayStore.Availability.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PerDeviceAvailabilityRestriction() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PerDeviceAvailabilityRestriction(PerDeviceAvailabilityRestriction other) : this() {
          _hasBits0 = other._hasBits0;
          androidId_ = other.androidId_;
          deviceRestriction_ = other.deviceRestriction_;
          channelId_ = other.channelId_;
          filterInfo_ = other.filterInfo_ != null ? other.filterInfo_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PerDeviceAvailabilityRestriction Clone() {
          return new PerDeviceAvailabilityRestriction(this);
        }

        /// <summary>Field number for the "androidId" field.</summary>
        public const int AndroidIdFieldNumber = 10;
        private readonly static ulong AndroidIdDefaultValue = 0UL;

        private ulong androidId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong AndroidId {
          get { if ((_hasBits0 & 1) != 0) { return androidId_; } else { return AndroidIdDefaultValue; } }
          set {
            _hasBits0 |= 1;
            androidId_ = value;
          }
        }
        /// <summary>Gets whether the "androidId" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasAndroidId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "androidId" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearAndroidId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "deviceRestriction" field.</summary>
        public const int DeviceRestrictionFieldNumber = 11;
        private readonly static int DeviceRestrictionDefaultValue = 0;

        private int deviceRestriction_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int DeviceRestriction {
          get { if ((_hasBits0 & 2) != 0) { return deviceRestriction_; } else { return DeviceRestrictionDefaultValue; } }
          set {
            _hasBits0 |= 2;
            deviceRestriction_ = value;
          }
        }
        /// <summary>Gets whether the "deviceRestriction" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasDeviceRestriction {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "deviceRestriction" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearDeviceRestriction() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "channelId" field.</summary>
        public const int ChannelIdFieldNumber = 12;
        private readonly static long ChannelIdDefaultValue = 0L;

        private long channelId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ChannelId {
          get { if ((_hasBits0 & 4) != 0) { return channelId_; } else { return ChannelIdDefaultValue; } }
          set {
            _hasBits0 |= 4;
            channelId_ = value;
          }
        }
        /// <summary>Gets whether the "channelId" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasChannelId {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "channelId" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearChannelId() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "filterInfo" field.</summary>
        public const int FilterInfoFieldNumber = 15;
        private global::GooglePlayStore.FilterEvaluationInfo filterInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GooglePlayStore.FilterEvaluationInfo FilterInfo {
          get { return filterInfo_; }
          set {
            filterInfo_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PerDeviceAvailabilityRestriction);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PerDeviceAvailabilityRestriction other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AndroidId != other.AndroidId) return false;
          if (DeviceRestriction != other.DeviceRestriction) return false;
          if (ChannelId != other.ChannelId) return false;
          if (!object.Equals(FilterInfo, other.FilterInfo)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasAndroidId) hash ^= AndroidId.GetHashCode();
          if (HasDeviceRestriction) hash ^= DeviceRestriction.GetHashCode();
          if (HasChannelId) hash ^= ChannelId.GetHashCode();
          if (filterInfo_ != null) hash ^= FilterInfo.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (HasAndroidId) {
            output.WriteRawTag(81);
            output.WriteFixed64(AndroidId);
          }
          if (HasDeviceRestriction) {
            output.WriteRawTag(88);
            output.WriteInt32(DeviceRestriction);
          }
          if (HasChannelId) {
            output.WriteRawTag(96);
            output.WriteInt64(ChannelId);
          }
          if (filterInfo_ != null) {
            output.WriteRawTag(122);
            output.WriteMessage(FilterInfo);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasAndroidId) {
            size += 1 + 8;
          }
          if (HasDeviceRestriction) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeviceRestriction);
          }
          if (HasChannelId) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ChannelId);
          }
          if (filterInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FilterInfo);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PerDeviceAvailabilityRestriction other) {
          if (other == null) {
            return;
          }
          if (other.HasAndroidId) {
            AndroidId = other.AndroidId;
          }
          if (other.HasDeviceRestriction) {
            DeviceRestriction = other.DeviceRestriction;
          }
          if (other.HasChannelId) {
            ChannelId = other.ChannelId;
          }
          if (other.filterInfo_ != null) {
            if (filterInfo_ == null) {
              FilterInfo = new global::GooglePlayStore.FilterEvaluationInfo();
            }
            FilterInfo.MergeFrom(other.FilterInfo);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              case 76:
                return;
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 81: {
                AndroidId = input.ReadFixed64();
                break;
              }
              case 88: {
                DeviceRestriction = input.ReadInt32();
                break;
              }
              case 96: {
                ChannelId = input.ReadInt64();
                break;
              }
              case 122: {
                if (filterInfo_ == null) {
                  FilterInfo = new global::GooglePlayStore.FilterEvaluationInfo();
                }
                input.ReadMessage(FilterInfo);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class AvailabilityProblem : pb::IMessage<AvailabilityProblem> {
    private static readonly pb::MessageParser<AvailabilityProblem> _parser = new pb::MessageParser<AvailabilityProblem>(() => new AvailabilityProblem());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailabilityProblem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[163]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailabilityProblem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailabilityProblem(AvailabilityProblem other) : this() {
      _hasBits0 = other._hasBits0;
      problemType_ = other.problemType_;
      missingValue_ = other.missingValue_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailabilityProblem Clone() {
      return new AvailabilityProblem(this);
    }

    /// <summary>Field number for the "problemType" field.</summary>
    public const int ProblemTypeFieldNumber = 1;
    private readonly static int ProblemTypeDefaultValue = 0;

    private int problemType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProblemType {
      get { if ((_hasBits0 & 1) != 0) { return problemType_; } else { return ProblemTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        problemType_ = value;
      }
    }
    /// <summary>Gets whether the "problemType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProblemType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "problemType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProblemType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "missingValue" field.</summary>
    public const int MissingValueFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_missingValue_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> missingValue_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MissingValue {
      get { return missingValue_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailabilityProblem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailabilityProblem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProblemType != other.ProblemType) return false;
      if(!missingValue_.Equals(other.missingValue_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProblemType) hash ^= ProblemType.GetHashCode();
      hash ^= missingValue_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasProblemType) {
        output.WriteRawTag(8);
        output.WriteInt32(ProblemType);
      }
      missingValue_.WriteTo(output, _repeated_missingValue_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasProblemType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProblemType);
      }
      size += missingValue_.CalculateSize(_repeated_missingValue_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailabilityProblem other) {
      if (other == null) {
        return;
      }
      if (other.HasProblemType) {
        ProblemType = other.ProblemType;
      }
      missingValue_.Add(other.missingValue_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProblemType = input.ReadInt32();
            break;
          }
          case 18: {
            missingValue_.AddEntriesFrom(input, _repeated_missingValue_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FilterEvaluationInfo : pb::IMessage<FilterEvaluationInfo> {
    private static readonly pb::MessageParser<FilterEvaluationInfo> _parser = new pb::MessageParser<FilterEvaluationInfo>(() => new FilterEvaluationInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FilterEvaluationInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[164]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterEvaluationInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterEvaluationInfo(FilterEvaluationInfo other) : this() {
      ruleEvaluation_ = other.ruleEvaluation_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterEvaluationInfo Clone() {
      return new FilterEvaluationInfo(this);
    }

    /// <summary>Field number for the "ruleEvaluation" field.</summary>
    public const int RuleEvaluationFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GooglePlayStore.RuleEvaluation> _repeated_ruleEvaluation_codec
        = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.RuleEvaluation.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.RuleEvaluation> ruleEvaluation_ = new pbc::RepeatedField<global::GooglePlayStore.RuleEvaluation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.RuleEvaluation> RuleEvaluation {
      get { return ruleEvaluation_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FilterEvaluationInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FilterEvaluationInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ruleEvaluation_.Equals(other.ruleEvaluation_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ruleEvaluation_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ruleEvaluation_.WriteTo(output, _repeated_ruleEvaluation_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ruleEvaluation_.CalculateSize(_repeated_ruleEvaluation_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FilterEvaluationInfo other) {
      if (other == null) {
        return;
      }
      ruleEvaluation_.Add(other.ruleEvaluation_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ruleEvaluation_.AddEntriesFrom(input, _repeated_ruleEvaluation_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Rule : pb::IMessage<Rule> {
    private static readonly pb::MessageParser<Rule> _parser = new pb::MessageParser<Rule>(() => new Rule());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Rule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[165]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rule(Rule other) : this() {
      _hasBits0 = other._hasBits0;
      negate_ = other.negate_;
      operator_ = other.operator_;
      key_ = other.key_;
      stringArg_ = other.stringArg_.Clone();
      longArg_ = other.longArg_.Clone();
      doubleArg_ = other.doubleArg_.Clone();
      subRule_ = other.subRule_.Clone();
      responseCode_ = other.responseCode_;
      comment_ = other.comment_;
      stringArgHash_ = other.stringArgHash_.Clone();
      constArg_ = other.constArg_.Clone();
      availabilityProblemType_ = other.availabilityProblemType_;
      includeMissingValues_ = other.includeMissingValues_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rule Clone() {
      return new Rule(this);
    }

    /// <summary>Field number for the "negate" field.</summary>
    public const int NegateFieldNumber = 1;
    private readonly static bool NegateDefaultValue = false;

    private bool negate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Negate {
      get { if ((_hasBits0 & 1) != 0) { return negate_; } else { return NegateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        negate_ = value;
      }
    }
    /// <summary>Gets whether the "negate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNegate {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "negate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNegate() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "operator" field.</summary>
    public const int OperatorFieldNumber = 2;
    private readonly static int OperatorDefaultValue = 0;

    private int operator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Operator {
      get { if ((_hasBits0 & 2) != 0) { return operator_; } else { return OperatorDefaultValue; } }
      set {
        _hasBits0 |= 2;
        operator_ = value;
      }
    }
    /// <summary>Gets whether the "operator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOperator {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "operator" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOperator() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 3;
    private readonly static int KeyDefaultValue = 0;

    private int key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Key {
      get { if ((_hasBits0 & 4) != 0) { return key_; } else { return KeyDefaultValue; } }
      set {
        _hasBits0 |= 4;
        key_ = value;
      }
    }
    /// <summary>Gets whether the "key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasKey {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearKey() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "stringArg" field.</summary>
    public const int StringArgFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_stringArg_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> stringArg_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> StringArg {
      get { return stringArg_; }
    }

    /// <summary>Field number for the "longArg" field.</summary>
    public const int LongArgFieldNumber = 5;
    private static readonly pb::FieldCodec<long> _repeated_longArg_codec
        = pb::FieldCodec.ForInt64(40);
    private readonly pbc::RepeatedField<long> longArg_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> LongArg {
      get { return longArg_; }
    }

    /// <summary>Field number for the "doubleArg" field.</summary>
    public const int DoubleArgFieldNumber = 6;
    private static readonly pb::FieldCodec<double> _repeated_doubleArg_codec
        = pb::FieldCodec.ForDouble(49);
    private readonly pbc::RepeatedField<double> doubleArg_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> DoubleArg {
      get { return doubleArg_; }
    }

    /// <summary>Field number for the "subRule" field.</summary>
    public const int SubRuleFieldNumber = 7;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Rule> _repeated_subRule_codec
        = pb::FieldCodec.ForMessage(58, global::GooglePlayStore.Rule.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Rule> subRule_ = new pbc::RepeatedField<global::GooglePlayStore.Rule>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Rule> SubRule {
      get { return subRule_; }
    }

    /// <summary>Field number for the "responseCode" field.</summary>
    public const int ResponseCodeFieldNumber = 8;
    private readonly static int ResponseCodeDefaultValue = 0;

    private int responseCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ResponseCode {
      get { if ((_hasBits0 & 8) != 0) { return responseCode_; } else { return ResponseCodeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        responseCode_ = value;
      }
    }
    /// <summary>Gets whether the "responseCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResponseCode {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "responseCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponseCode() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 9;
    private readonly static string CommentDefaultValue = "";

    private string comment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Comment {
      get { return comment_ ?? CommentDefaultValue; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "comment" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasComment {
      get { return comment_ != null; }
    }
    /// <summary>Clears the value of the "comment" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearComment() {
      comment_ = null;
    }

    /// <summary>Field number for the "stringArgHash" field.</summary>
    public const int StringArgHashFieldNumber = 10;
    private static readonly pb::FieldCodec<ulong> _repeated_stringArgHash_codec
        = pb::FieldCodec.ForFixed64(81);
    private readonly pbc::RepeatedField<ulong> stringArgHash_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> StringArgHash {
      get { return stringArgHash_; }
    }

    /// <summary>Field number for the "constArg" field.</summary>
    public const int ConstArgFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_constArg_codec
        = pb::FieldCodec.ForInt32(88);
    private readonly pbc::RepeatedField<int> constArg_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ConstArg {
      get { return constArg_; }
    }

    /// <summary>Field number for the "availabilityProblemType" field.</summary>
    public const int AvailabilityProblemTypeFieldNumber = 12;
    private readonly static int AvailabilityProblemTypeDefaultValue = 0;

    private int availabilityProblemType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AvailabilityProblemType {
      get { if ((_hasBits0 & 16) != 0) { return availabilityProblemType_; } else { return AvailabilityProblemTypeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        availabilityProblemType_ = value;
      }
    }
    /// <summary>Gets whether the "availabilityProblemType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAvailabilityProblemType {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "availabilityProblemType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAvailabilityProblemType() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "includeMissingValues" field.</summary>
    public const int IncludeMissingValuesFieldNumber = 13;
    private readonly static bool IncludeMissingValuesDefaultValue = false;

    private bool includeMissingValues_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeMissingValues {
      get { if ((_hasBits0 & 32) != 0) { return includeMissingValues_; } else { return IncludeMissingValuesDefaultValue; } }
      set {
        _hasBits0 |= 32;
        includeMissingValues_ = value;
      }
    }
    /// <summary>Gets whether the "includeMissingValues" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIncludeMissingValues {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "includeMissingValues" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIncludeMissingValues() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Rule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Rule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Negate != other.Negate) return false;
      if (Operator != other.Operator) return false;
      if (Key != other.Key) return false;
      if(!stringArg_.Equals(other.stringArg_)) return false;
      if(!longArg_.Equals(other.longArg_)) return false;
      if(!doubleArg_.Equals(other.doubleArg_)) return false;
      if(!subRule_.Equals(other.subRule_)) return false;
      if (ResponseCode != other.ResponseCode) return false;
      if (Comment != other.Comment) return false;
      if(!stringArgHash_.Equals(other.stringArgHash_)) return false;
      if(!constArg_.Equals(other.constArg_)) return false;
      if (AvailabilityProblemType != other.AvailabilityProblemType) return false;
      if (IncludeMissingValues != other.IncludeMissingValues) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNegate) hash ^= Negate.GetHashCode();
      if (HasOperator) hash ^= Operator.GetHashCode();
      if (HasKey) hash ^= Key.GetHashCode();
      hash ^= stringArg_.GetHashCode();
      hash ^= longArg_.GetHashCode();
      hash ^= doubleArg_.GetHashCode();
      hash ^= subRule_.GetHashCode();
      if (HasResponseCode) hash ^= ResponseCode.GetHashCode();
      if (HasComment) hash ^= Comment.GetHashCode();
      hash ^= stringArgHash_.GetHashCode();
      hash ^= constArg_.GetHashCode();
      if (HasAvailabilityProblemType) hash ^= AvailabilityProblemType.GetHashCode();
      if (HasIncludeMissingValues) hash ^= IncludeMissingValues.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasNegate) {
        output.WriteRawTag(8);
        output.WriteBool(Negate);
      }
      if (HasOperator) {
        output.WriteRawTag(16);
        output.WriteInt32(Operator);
      }
      if (HasKey) {
        output.WriteRawTag(24);
        output.WriteInt32(Key);
      }
      stringArg_.WriteTo(output, _repeated_stringArg_codec);
      longArg_.WriteTo(output, _repeated_longArg_codec);
      doubleArg_.WriteTo(output, _repeated_doubleArg_codec);
      subRule_.WriteTo(output, _repeated_subRule_codec);
      if (HasResponseCode) {
        output.WriteRawTag(64);
        output.WriteInt32(ResponseCode);
      }
      if (HasComment) {
        output.WriteRawTag(74);
        output.WriteString(Comment);
      }
      stringArgHash_.WriteTo(output, _repeated_stringArgHash_codec);
      constArg_.WriteTo(output, _repeated_constArg_codec);
      if (HasAvailabilityProblemType) {
        output.WriteRawTag(96);
        output.WriteInt32(AvailabilityProblemType);
      }
      if (HasIncludeMissingValues) {
        output.WriteRawTag(104);
        output.WriteBool(IncludeMissingValues);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasNegate) {
        size += 1 + 1;
      }
      if (HasOperator) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Operator);
      }
      if (HasKey) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Key);
      }
      size += stringArg_.CalculateSize(_repeated_stringArg_codec);
      size += longArg_.CalculateSize(_repeated_longArg_codec);
      size += doubleArg_.CalculateSize(_repeated_doubleArg_codec);
      size += subRule_.CalculateSize(_repeated_subRule_codec);
      if (HasResponseCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResponseCode);
      }
      if (HasComment) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      size += stringArgHash_.CalculateSize(_repeated_stringArgHash_codec);
      size += constArg_.CalculateSize(_repeated_constArg_codec);
      if (HasAvailabilityProblemType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvailabilityProblemType);
      }
      if (HasIncludeMissingValues) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Rule other) {
      if (other == null) {
        return;
      }
      if (other.HasNegate) {
        Negate = other.Negate;
      }
      if (other.HasOperator) {
        Operator = other.Operator;
      }
      if (other.HasKey) {
        Key = other.Key;
      }
      stringArg_.Add(other.stringArg_);
      longArg_.Add(other.longArg_);
      doubleArg_.Add(other.doubleArg_);
      subRule_.Add(other.subRule_);
      if (other.HasResponseCode) {
        ResponseCode = other.ResponseCode;
      }
      if (other.HasComment) {
        Comment = other.Comment;
      }
      stringArgHash_.Add(other.stringArgHash_);
      constArg_.Add(other.constArg_);
      if (other.HasAvailabilityProblemType) {
        AvailabilityProblemType = other.AvailabilityProblemType;
      }
      if (other.HasIncludeMissingValues) {
        IncludeMissingValues = other.IncludeMissingValues;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Negate = input.ReadBool();
            break;
          }
          case 16: {
            Operator = input.ReadInt32();
            break;
          }
          case 24: {
            Key = input.ReadInt32();
            break;
          }
          case 34: {
            stringArg_.AddEntriesFrom(input, _repeated_stringArg_codec);
            break;
          }
          case 42:
          case 40: {
            longArg_.AddEntriesFrom(input, _repeated_longArg_codec);
            break;
          }
          case 50:
          case 49: {
            doubleArg_.AddEntriesFrom(input, _repeated_doubleArg_codec);
            break;
          }
          case 58: {
            subRule_.AddEntriesFrom(input, _repeated_subRule_codec);
            break;
          }
          case 64: {
            ResponseCode = input.ReadInt32();
            break;
          }
          case 74: {
            Comment = input.ReadString();
            break;
          }
          case 82:
          case 81: {
            stringArgHash_.AddEntriesFrom(input, _repeated_stringArgHash_codec);
            break;
          }
          case 90:
          case 88: {
            constArg_.AddEntriesFrom(input, _repeated_constArg_codec);
            break;
          }
          case 96: {
            AvailabilityProblemType = input.ReadInt32();
            break;
          }
          case 104: {
            IncludeMissingValues = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RuleEvaluation : pb::IMessage<RuleEvaluation> {
    private static readonly pb::MessageParser<RuleEvaluation> _parser = new pb::MessageParser<RuleEvaluation>(() => new RuleEvaluation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RuleEvaluation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[166]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuleEvaluation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuleEvaluation(RuleEvaluation other) : this() {
      rule_ = other.rule_ != null ? other.rule_.Clone() : null;
      actualStringValue_ = other.actualStringValue_.Clone();
      actualLongValue_ = other.actualLongValue_.Clone();
      actualBoolValue_ = other.actualBoolValue_.Clone();
      actualDoubleValue_ = other.actualDoubleValue_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuleEvaluation Clone() {
      return new RuleEvaluation(this);
    }

    /// <summary>Field number for the "rule" field.</summary>
    public const int RuleFieldNumber = 1;
    private global::GooglePlayStore.Rule rule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Rule Rule {
      get { return rule_; }
      set {
        rule_ = value;
      }
    }

    /// <summary>Field number for the "actualStringValue" field.</summary>
    public const int ActualStringValueFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_actualStringValue_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> actualStringValue_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ActualStringValue {
      get { return actualStringValue_; }
    }

    /// <summary>Field number for the "actualLongValue" field.</summary>
    public const int ActualLongValueFieldNumber = 3;
    private static readonly pb::FieldCodec<long> _repeated_actualLongValue_codec
        = pb::FieldCodec.ForInt64(24);
    private readonly pbc::RepeatedField<long> actualLongValue_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> ActualLongValue {
      get { return actualLongValue_; }
    }

    /// <summary>Field number for the "actualBoolValue" field.</summary>
    public const int ActualBoolValueFieldNumber = 4;
    private static readonly pb::FieldCodec<bool> _repeated_actualBoolValue_codec
        = pb::FieldCodec.ForBool(32);
    private readonly pbc::RepeatedField<bool> actualBoolValue_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool> ActualBoolValue {
      get { return actualBoolValue_; }
    }

    /// <summary>Field number for the "actualDoubleValue" field.</summary>
    public const int ActualDoubleValueFieldNumber = 5;
    private static readonly pb::FieldCodec<double> _repeated_actualDoubleValue_codec
        = pb::FieldCodec.ForDouble(41);
    private readonly pbc::RepeatedField<double> actualDoubleValue_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> ActualDoubleValue {
      get { return actualDoubleValue_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RuleEvaluation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RuleEvaluation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Rule, other.Rule)) return false;
      if(!actualStringValue_.Equals(other.actualStringValue_)) return false;
      if(!actualLongValue_.Equals(other.actualLongValue_)) return false;
      if(!actualBoolValue_.Equals(other.actualBoolValue_)) return false;
      if(!actualDoubleValue_.Equals(other.actualDoubleValue_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rule_ != null) hash ^= Rule.GetHashCode();
      hash ^= actualStringValue_.GetHashCode();
      hash ^= actualLongValue_.GetHashCode();
      hash ^= actualBoolValue_.GetHashCode();
      hash ^= actualDoubleValue_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (rule_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Rule);
      }
      actualStringValue_.WriteTo(output, _repeated_actualStringValue_codec);
      actualLongValue_.WriteTo(output, _repeated_actualLongValue_codec);
      actualBoolValue_.WriteTo(output, _repeated_actualBoolValue_codec);
      actualDoubleValue_.WriteTo(output, _repeated_actualDoubleValue_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rule);
      }
      size += actualStringValue_.CalculateSize(_repeated_actualStringValue_codec);
      size += actualLongValue_.CalculateSize(_repeated_actualLongValue_codec);
      size += actualBoolValue_.CalculateSize(_repeated_actualBoolValue_codec);
      size += actualDoubleValue_.CalculateSize(_repeated_actualDoubleValue_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RuleEvaluation other) {
      if (other == null) {
        return;
      }
      if (other.rule_ != null) {
        if (rule_ == null) {
          Rule = new global::GooglePlayStore.Rule();
        }
        Rule.MergeFrom(other.Rule);
      }
      actualStringValue_.Add(other.actualStringValue_);
      actualLongValue_.Add(other.actualLongValue_);
      actualBoolValue_.Add(other.actualBoolValue_);
      actualDoubleValue_.Add(other.actualDoubleValue_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (rule_ == null) {
              Rule = new global::GooglePlayStore.Rule();
            }
            input.ReadMessage(Rule);
            break;
          }
          case 18: {
            actualStringValue_.AddEntriesFrom(input, _repeated_actualStringValue_codec);
            break;
          }
          case 26:
          case 24: {
            actualLongValue_.AddEntriesFrom(input, _repeated_actualLongValue_codec);
            break;
          }
          case 34:
          case 32: {
            actualBoolValue_.AddEntriesFrom(input, _repeated_actualBoolValue_codec);
            break;
          }
          case 42:
          case 41: {
            actualDoubleValue_.AddEntriesFrom(input, _repeated_actualDoubleValue_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LibraryAppDetails : pb::IMessage<LibraryAppDetails> {
    private static readonly pb::MessageParser<LibraryAppDetails> _parser = new pb::MessageParser<LibraryAppDetails>(() => new LibraryAppDetails());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LibraryAppDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[167]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryAppDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryAppDetails(LibraryAppDetails other) : this() {
      _hasBits0 = other._hasBits0;
      certificateHash_ = other.certificateHash_;
      refundTimeoutTimestamp_ = other.refundTimeoutTimestamp_;
      postDeliveryRefundWindowMillis_ = other.postDeliveryRefundWindowMillis_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryAppDetails Clone() {
      return new LibraryAppDetails(this);
    }

    /// <summary>Field number for the "certificateHash" field.</summary>
    public const int CertificateHashFieldNumber = 2;
    private readonly static string CertificateHashDefaultValue = "";

    private string certificateHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CertificateHash {
      get { return certificateHash_ ?? CertificateHashDefaultValue; }
      set {
        certificateHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "certificateHash" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCertificateHash {
      get { return certificateHash_ != null; }
    }
    /// <summary>Clears the value of the "certificateHash" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCertificateHash() {
      certificateHash_ = null;
    }

    /// <summary>Field number for the "refundTimeoutTimestamp" field.</summary>
    public const int RefundTimeoutTimestampFieldNumber = 3;
    private readonly static long RefundTimeoutTimestampDefaultValue = 0L;

    private long refundTimeoutTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RefundTimeoutTimestamp {
      get { if ((_hasBits0 & 1) != 0) { return refundTimeoutTimestamp_; } else { return RefundTimeoutTimestampDefaultValue; } }
      set {
        _hasBits0 |= 1;
        refundTimeoutTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "refundTimeoutTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRefundTimeoutTimestamp {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "refundTimeoutTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRefundTimeoutTimestamp() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "postDeliveryRefundWindowMillis" field.</summary>
    public const int PostDeliveryRefundWindowMillisFieldNumber = 4;
    private readonly static long PostDeliveryRefundWindowMillisDefaultValue = 0L;

    private long postDeliveryRefundWindowMillis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PostDeliveryRefundWindowMillis {
      get { if ((_hasBits0 & 2) != 0) { return postDeliveryRefundWindowMillis_; } else { return PostDeliveryRefundWindowMillisDefaultValue; } }
      set {
        _hasBits0 |= 2;
        postDeliveryRefundWindowMillis_ = value;
      }
    }
    /// <summary>Gets whether the "postDeliveryRefundWindowMillis" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPostDeliveryRefundWindowMillis {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "postDeliveryRefundWindowMillis" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPostDeliveryRefundWindowMillis() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LibraryAppDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LibraryAppDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CertificateHash != other.CertificateHash) return false;
      if (RefundTimeoutTimestamp != other.RefundTimeoutTimestamp) return false;
      if (PostDeliveryRefundWindowMillis != other.PostDeliveryRefundWindowMillis) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCertificateHash) hash ^= CertificateHash.GetHashCode();
      if (HasRefundTimeoutTimestamp) hash ^= RefundTimeoutTimestamp.GetHashCode();
      if (HasPostDeliveryRefundWindowMillis) hash ^= PostDeliveryRefundWindowMillis.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasCertificateHash) {
        output.WriteRawTag(18);
        output.WriteString(CertificateHash);
      }
      if (HasRefundTimeoutTimestamp) {
        output.WriteRawTag(24);
        output.WriteInt64(RefundTimeoutTimestamp);
      }
      if (HasPostDeliveryRefundWindowMillis) {
        output.WriteRawTag(32);
        output.WriteInt64(PostDeliveryRefundWindowMillis);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCertificateHash) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CertificateHash);
      }
      if (HasRefundTimeoutTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RefundTimeoutTimestamp);
      }
      if (HasPostDeliveryRefundWindowMillis) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PostDeliveryRefundWindowMillis);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LibraryAppDetails other) {
      if (other == null) {
        return;
      }
      if (other.HasCertificateHash) {
        CertificateHash = other.CertificateHash;
      }
      if (other.HasRefundTimeoutTimestamp) {
        RefundTimeoutTimestamp = other.RefundTimeoutTimestamp;
      }
      if (other.HasPostDeliveryRefundWindowMillis) {
        PostDeliveryRefundWindowMillis = other.PostDeliveryRefundWindowMillis;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            CertificateHash = input.ReadString();
            break;
          }
          case 24: {
            RefundTimeoutTimestamp = input.ReadInt64();
            break;
          }
          case 32: {
            PostDeliveryRefundWindowMillis = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LibraryInAppDetails : pb::IMessage<LibraryInAppDetails> {
    private static readonly pb::MessageParser<LibraryInAppDetails> _parser = new pb::MessageParser<LibraryInAppDetails>(() => new LibraryInAppDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LibraryInAppDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[168]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryInAppDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryInAppDetails(LibraryInAppDetails other) : this() {
      signedPurchaseData_ = other.signedPurchaseData_;
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryInAppDetails Clone() {
      return new LibraryInAppDetails(this);
    }

    /// <summary>Field number for the "signedPurchaseData" field.</summary>
    public const int SignedPurchaseDataFieldNumber = 1;
    private readonly static string SignedPurchaseDataDefaultValue = "";

    private string signedPurchaseData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SignedPurchaseData {
      get { return signedPurchaseData_ ?? SignedPurchaseDataDefaultValue; }
      set {
        signedPurchaseData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "signedPurchaseData" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSignedPurchaseData {
      get { return signedPurchaseData_ != null; }
    }
    /// <summary>Clears the value of the "signedPurchaseData" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSignedPurchaseData() {
      signedPurchaseData_ = null;
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private readonly static string SignatureDefaultValue = "";

    private string signature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Signature {
      get { return signature_ ?? SignatureDefaultValue; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "signature" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSignature {
      get { return signature_ != null; }
    }
    /// <summary>Clears the value of the "signature" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSignature() {
      signature_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LibraryInAppDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LibraryInAppDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SignedPurchaseData != other.SignedPurchaseData) return false;
      if (Signature != other.Signature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSignedPurchaseData) hash ^= SignedPurchaseData.GetHashCode();
      if (HasSignature) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasSignedPurchaseData) {
        output.WriteRawTag(10);
        output.WriteString(SignedPurchaseData);
      }
      if (HasSignature) {
        output.WriteRawTag(18);
        output.WriteString(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSignedPurchaseData) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SignedPurchaseData);
      }
      if (HasSignature) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LibraryInAppDetails other) {
      if (other == null) {
        return;
      }
      if (other.HasSignedPurchaseData) {
        SignedPurchaseData = other.SignedPurchaseData;
      }
      if (other.HasSignature) {
        Signature = other.Signature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SignedPurchaseData = input.ReadString();
            break;
          }
          case 18: {
            Signature = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LibraryMutation : pb::IMessage<LibraryMutation> {
    private static readonly pb::MessageParser<LibraryMutation> _parser = new pb::MessageParser<LibraryMutation>(() => new LibraryMutation());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LibraryMutation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[169]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryMutation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryMutation(LibraryMutation other) : this() {
      _hasBits0 = other._hasBits0;
      docId_ = other.docId_ != null ? other.docId_.Clone() : null;
      offerType_ = other.offerType_;
      documentHash_ = other.documentHash_;
      deleted_ = other.deleted_;
      appDetails_ = other.appDetails_ != null ? other.appDetails_.Clone() : null;
      subscriptionDetails_ = other.subscriptionDetails_ != null ? other.subscriptionDetails_.Clone() : null;
      inAppDetails_ = other.inAppDetails_ != null ? other.inAppDetails_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryMutation Clone() {
      return new LibraryMutation(this);
    }

    /// <summary>Field number for the "DocId" field.</summary>
    public const int DocIdFieldNumber = 1;
    private global::GooglePlayStore.DocId docId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DocId DocId {
      get { return docId_; }
      set {
        docId_ = value;
      }
    }

    /// <summary>Field number for the "offerType" field.</summary>
    public const int OfferTypeFieldNumber = 2;
    private readonly static int OfferTypeDefaultValue = 0;

    private int offerType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OfferType {
      get { if ((_hasBits0 & 1) != 0) { return offerType_; } else { return OfferTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        offerType_ = value;
      }
    }
    /// <summary>Gets whether the "offerType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOfferType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "offerType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOfferType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "documentHash" field.</summary>
    public const int DocumentHashFieldNumber = 3;
    private readonly static long DocumentHashDefaultValue = 0L;

    private long documentHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DocumentHash {
      get { if ((_hasBits0 & 2) != 0) { return documentHash_; } else { return DocumentHashDefaultValue; } }
      set {
        _hasBits0 |= 2;
        documentHash_ = value;
      }
    }
    /// <summary>Gets whether the "documentHash" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDocumentHash {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "documentHash" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDocumentHash() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "deleted" field.</summary>
    public const int DeletedFieldNumber = 4;
    private readonly static bool DeletedDefaultValue = false;

    private bool deleted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Deleted {
      get { if ((_hasBits0 & 4) != 0) { return deleted_; } else { return DeletedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        deleted_ = value;
      }
    }
    /// <summary>Gets whether the "deleted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeleted {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "deleted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeleted() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "appDetails" field.</summary>
    public const int AppDetailsFieldNumber = 5;
    private global::GooglePlayStore.LibraryAppDetails appDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.LibraryAppDetails AppDetails {
      get { return appDetails_; }
      set {
        appDetails_ = value;
      }
    }

    /// <summary>Field number for the "subscriptionDetails" field.</summary>
    public const int SubscriptionDetailsFieldNumber = 6;
    private global::GooglePlayStore.LibrarySubscriptionDetails subscriptionDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.LibrarySubscriptionDetails SubscriptionDetails {
      get { return subscriptionDetails_; }
      set {
        subscriptionDetails_ = value;
      }
    }

    /// <summary>Field number for the "inAppDetails" field.</summary>
    public const int InAppDetailsFieldNumber = 7;
    private global::GooglePlayStore.LibraryInAppDetails inAppDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.LibraryInAppDetails InAppDetails {
      get { return inAppDetails_; }
      set {
        inAppDetails_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LibraryMutation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LibraryMutation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DocId, other.DocId)) return false;
      if (OfferType != other.OfferType) return false;
      if (DocumentHash != other.DocumentHash) return false;
      if (Deleted != other.Deleted) return false;
      if (!object.Equals(AppDetails, other.AppDetails)) return false;
      if (!object.Equals(SubscriptionDetails, other.SubscriptionDetails)) return false;
      if (!object.Equals(InAppDetails, other.InAppDetails)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (docId_ != null) hash ^= DocId.GetHashCode();
      if (HasOfferType) hash ^= OfferType.GetHashCode();
      if (HasDocumentHash) hash ^= DocumentHash.GetHashCode();
      if (HasDeleted) hash ^= Deleted.GetHashCode();
      if (appDetails_ != null) hash ^= AppDetails.GetHashCode();
      if (subscriptionDetails_ != null) hash ^= SubscriptionDetails.GetHashCode();
      if (inAppDetails_ != null) hash ^= InAppDetails.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (docId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DocId);
      }
      if (HasOfferType) {
        output.WriteRawTag(16);
        output.WriteInt32(OfferType);
      }
      if (HasDocumentHash) {
        output.WriteRawTag(24);
        output.WriteInt64(DocumentHash);
      }
      if (HasDeleted) {
        output.WriteRawTag(32);
        output.WriteBool(Deleted);
      }
      if (appDetails_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(AppDetails);
      }
      if (subscriptionDetails_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SubscriptionDetails);
      }
      if (inAppDetails_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(InAppDetails);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (docId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DocId);
      }
      if (HasOfferType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OfferType);
      }
      if (HasDocumentHash) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DocumentHash);
      }
      if (HasDeleted) {
        size += 1 + 1;
      }
      if (appDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppDetails);
      }
      if (subscriptionDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscriptionDetails);
      }
      if (inAppDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InAppDetails);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LibraryMutation other) {
      if (other == null) {
        return;
      }
      if (other.docId_ != null) {
        if (docId_ == null) {
          DocId = new global::GooglePlayStore.DocId();
        }
        DocId.MergeFrom(other.DocId);
      }
      if (other.HasOfferType) {
        OfferType = other.OfferType;
      }
      if (other.HasDocumentHash) {
        DocumentHash = other.DocumentHash;
      }
      if (other.HasDeleted) {
        Deleted = other.Deleted;
      }
      if (other.appDetails_ != null) {
        if (appDetails_ == null) {
          AppDetails = new global::GooglePlayStore.LibraryAppDetails();
        }
        AppDetails.MergeFrom(other.AppDetails);
      }
      if (other.subscriptionDetails_ != null) {
        if (subscriptionDetails_ == null) {
          SubscriptionDetails = new global::GooglePlayStore.LibrarySubscriptionDetails();
        }
        SubscriptionDetails.MergeFrom(other.SubscriptionDetails);
      }
      if (other.inAppDetails_ != null) {
        if (inAppDetails_ == null) {
          InAppDetails = new global::GooglePlayStore.LibraryInAppDetails();
        }
        InAppDetails.MergeFrom(other.InAppDetails);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (docId_ == null) {
              DocId = new global::GooglePlayStore.DocId();
            }
            input.ReadMessage(DocId);
            break;
          }
          case 16: {
            OfferType = input.ReadInt32();
            break;
          }
          case 24: {
            DocumentHash = input.ReadInt64();
            break;
          }
          case 32: {
            Deleted = input.ReadBool();
            break;
          }
          case 42: {
            if (appDetails_ == null) {
              AppDetails = new global::GooglePlayStore.LibraryAppDetails();
            }
            input.ReadMessage(AppDetails);
            break;
          }
          case 50: {
            if (subscriptionDetails_ == null) {
              SubscriptionDetails = new global::GooglePlayStore.LibrarySubscriptionDetails();
            }
            input.ReadMessage(SubscriptionDetails);
            break;
          }
          case 58: {
            if (inAppDetails_ == null) {
              InAppDetails = new global::GooglePlayStore.LibraryInAppDetails();
            }
            input.ReadMessage(InAppDetails);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LibrarySubscriptionDetails : pb::IMessage<LibrarySubscriptionDetails> {
    private static readonly pb::MessageParser<LibrarySubscriptionDetails> _parser = new pb::MessageParser<LibrarySubscriptionDetails>(() => new LibrarySubscriptionDetails());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LibrarySubscriptionDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[170]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibrarySubscriptionDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibrarySubscriptionDetails(LibrarySubscriptionDetails other) : this() {
      _hasBits0 = other._hasBits0;
      initiationTimestamp_ = other.initiationTimestamp_;
      validUntilTimestamp_ = other.validUntilTimestamp_;
      autoRenewing_ = other.autoRenewing_;
      trialUntilTimestamp_ = other.trialUntilTimestamp_;
      signedPurchaseData_ = other.signedPurchaseData_;
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibrarySubscriptionDetails Clone() {
      return new LibrarySubscriptionDetails(this);
    }

    /// <summary>Field number for the "initiationTimestamp" field.</summary>
    public const int InitiationTimestampFieldNumber = 1;
    private readonly static long InitiationTimestampDefaultValue = 0L;

    private long initiationTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InitiationTimestamp {
      get { if ((_hasBits0 & 1) != 0) { return initiationTimestamp_; } else { return InitiationTimestampDefaultValue; } }
      set {
        _hasBits0 |= 1;
        initiationTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "initiationTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInitiationTimestamp {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "initiationTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInitiationTimestamp() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "validUntilTimestamp" field.</summary>
    public const int ValidUntilTimestampFieldNumber = 2;
    private readonly static long ValidUntilTimestampDefaultValue = 0L;

    private long validUntilTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ValidUntilTimestamp {
      get { if ((_hasBits0 & 2) != 0) { return validUntilTimestamp_; } else { return ValidUntilTimestampDefaultValue; } }
      set {
        _hasBits0 |= 2;
        validUntilTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "validUntilTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasValidUntilTimestamp {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "validUntilTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValidUntilTimestamp() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "autoRenewing" field.</summary>
    public const int AutoRenewingFieldNumber = 3;
    private readonly static bool AutoRenewingDefaultValue = false;

    private bool autoRenewing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AutoRenewing {
      get { if ((_hasBits0 & 4) != 0) { return autoRenewing_; } else { return AutoRenewingDefaultValue; } }
      set {
        _hasBits0 |= 4;
        autoRenewing_ = value;
      }
    }
    /// <summary>Gets whether the "autoRenewing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAutoRenewing {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "autoRenewing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAutoRenewing() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "trialUntilTimestamp" field.</summary>
    public const int TrialUntilTimestampFieldNumber = 4;
    private readonly static long TrialUntilTimestampDefaultValue = 0L;

    private long trialUntilTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TrialUntilTimestamp {
      get { if ((_hasBits0 & 8) != 0) { return trialUntilTimestamp_; } else { return TrialUntilTimestampDefaultValue; } }
      set {
        _hasBits0 |= 8;
        trialUntilTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "trialUntilTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTrialUntilTimestamp {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "trialUntilTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTrialUntilTimestamp() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "signedPurchaseData" field.</summary>
    public const int SignedPurchaseDataFieldNumber = 5;
    private readonly static string SignedPurchaseDataDefaultValue = "";

    private string signedPurchaseData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SignedPurchaseData {
      get { return signedPurchaseData_ ?? SignedPurchaseDataDefaultValue; }
      set {
        signedPurchaseData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "signedPurchaseData" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSignedPurchaseData {
      get { return signedPurchaseData_ != null; }
    }
    /// <summary>Clears the value of the "signedPurchaseData" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSignedPurchaseData() {
      signedPurchaseData_ = null;
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 6;
    private readonly static string SignatureDefaultValue = "";

    private string signature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Signature {
      get { return signature_ ?? SignatureDefaultValue; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "signature" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSignature {
      get { return signature_ != null; }
    }
    /// <summary>Clears the value of the "signature" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSignature() {
      signature_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LibrarySubscriptionDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LibrarySubscriptionDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InitiationTimestamp != other.InitiationTimestamp) return false;
      if (ValidUntilTimestamp != other.ValidUntilTimestamp) return false;
      if (AutoRenewing != other.AutoRenewing) return false;
      if (TrialUntilTimestamp != other.TrialUntilTimestamp) return false;
      if (SignedPurchaseData != other.SignedPurchaseData) return false;
      if (Signature != other.Signature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInitiationTimestamp) hash ^= InitiationTimestamp.GetHashCode();
      if (HasValidUntilTimestamp) hash ^= ValidUntilTimestamp.GetHashCode();
      if (HasAutoRenewing) hash ^= AutoRenewing.GetHashCode();
      if (HasTrialUntilTimestamp) hash ^= TrialUntilTimestamp.GetHashCode();
      if (HasSignedPurchaseData) hash ^= SignedPurchaseData.GetHashCode();
      if (HasSignature) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasInitiationTimestamp) {
        output.WriteRawTag(8);
        output.WriteInt64(InitiationTimestamp);
      }
      if (HasValidUntilTimestamp) {
        output.WriteRawTag(16);
        output.WriteInt64(ValidUntilTimestamp);
      }
      if (HasAutoRenewing) {
        output.WriteRawTag(24);
        output.WriteBool(AutoRenewing);
      }
      if (HasTrialUntilTimestamp) {
        output.WriteRawTag(32);
        output.WriteInt64(TrialUntilTimestamp);
      }
      if (HasSignedPurchaseData) {
        output.WriteRawTag(42);
        output.WriteString(SignedPurchaseData);
      }
      if (HasSignature) {
        output.WriteRawTag(50);
        output.WriteString(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasInitiationTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InitiationTimestamp);
      }
      if (HasValidUntilTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ValidUntilTimestamp);
      }
      if (HasAutoRenewing) {
        size += 1 + 1;
      }
      if (HasTrialUntilTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TrialUntilTimestamp);
      }
      if (HasSignedPurchaseData) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SignedPurchaseData);
      }
      if (HasSignature) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LibrarySubscriptionDetails other) {
      if (other == null) {
        return;
      }
      if (other.HasInitiationTimestamp) {
        InitiationTimestamp = other.InitiationTimestamp;
      }
      if (other.HasValidUntilTimestamp) {
        ValidUntilTimestamp = other.ValidUntilTimestamp;
      }
      if (other.HasAutoRenewing) {
        AutoRenewing = other.AutoRenewing;
      }
      if (other.HasTrialUntilTimestamp) {
        TrialUntilTimestamp = other.TrialUntilTimestamp;
      }
      if (other.HasSignedPurchaseData) {
        SignedPurchaseData = other.SignedPurchaseData;
      }
      if (other.HasSignature) {
        Signature = other.Signature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InitiationTimestamp = input.ReadInt64();
            break;
          }
          case 16: {
            ValidUntilTimestamp = input.ReadInt64();
            break;
          }
          case 24: {
            AutoRenewing = input.ReadBool();
            break;
          }
          case 32: {
            TrialUntilTimestamp = input.ReadInt64();
            break;
          }
          case 42: {
            SignedPurchaseData = input.ReadString();
            break;
          }
          case 50: {
            Signature = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LibraryUpdate : pb::IMessage<LibraryUpdate> {
    private static readonly pb::MessageParser<LibraryUpdate> _parser = new pb::MessageParser<LibraryUpdate>(() => new LibraryUpdate());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LibraryUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[171]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryUpdate(LibraryUpdate other) : this() {
      _hasBits0 = other._hasBits0;
      status_ = other.status_;
      corpus_ = other.corpus_;
      serverToken_ = other.serverToken_;
      mutation_ = other.mutation_.Clone();
      hasMore_ = other.hasMore_;
      libraryId_ = other.libraryId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryUpdate Clone() {
      return new LibraryUpdate(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private readonly static int StatusDefaultValue = 0;

    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { if ((_hasBits0 & 1) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 1;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "corpus" field.</summary>
    public const int CorpusFieldNumber = 2;
    private readonly static int CorpusDefaultValue = 0;

    private int corpus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Corpus {
      get { if ((_hasBits0 & 2) != 0) { return corpus_; } else { return CorpusDefaultValue; } }
      set {
        _hasBits0 |= 2;
        corpus_ = value;
      }
    }
    /// <summary>Gets whether the "corpus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCorpus {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "corpus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCorpus() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "serverToken" field.</summary>
    public const int ServerTokenFieldNumber = 3;
    private readonly static pb::ByteString ServerTokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString serverToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ServerToken {
      get { return serverToken_ ?? ServerTokenDefaultValue; }
      set {
        serverToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serverToken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServerToken {
      get { return serverToken_ != null; }
    }
    /// <summary>Clears the value of the "serverToken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServerToken() {
      serverToken_ = null;
    }

    /// <summary>Field number for the "mutation" field.</summary>
    public const int MutationFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.LibraryMutation> _repeated_mutation_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.LibraryMutation.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.LibraryMutation> mutation_ = new pbc::RepeatedField<global::GooglePlayStore.LibraryMutation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.LibraryMutation> Mutation {
      get { return mutation_; }
    }

    /// <summary>Field number for the "hasMore" field.</summary>
    public const int HasMoreFieldNumber = 5;
    private readonly static bool HasMoreDefaultValue = false;

    private bool hasMore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMore {
      get { if ((_hasBits0 & 4) != 0) { return hasMore_; } else { return HasMoreDefaultValue; } }
      set {
        _hasBits0 |= 4;
        hasMore_ = value;
      }
    }
    /// <summary>Gets whether the "hasMore" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHasMore {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "hasMore" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHasMore() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "libraryId" field.</summary>
    public const int LibraryIdFieldNumber = 6;
    private readonly static string LibraryIdDefaultValue = "";

    private string libraryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LibraryId {
      get { return libraryId_ ?? LibraryIdDefaultValue; }
      set {
        libraryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "libraryId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLibraryId {
      get { return libraryId_ != null; }
    }
    /// <summary>Clears the value of the "libraryId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLibraryId() {
      libraryId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LibraryUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LibraryUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Corpus != other.Corpus) return false;
      if (ServerToken != other.ServerToken) return false;
      if(!mutation_.Equals(other.mutation_)) return false;
      if (HasMore != other.HasMore) return false;
      if (LibraryId != other.LibraryId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStatus) hash ^= Status.GetHashCode();
      if (HasCorpus) hash ^= Corpus.GetHashCode();
      if (HasServerToken) hash ^= ServerToken.GetHashCode();
      hash ^= mutation_.GetHashCode();
      if (HasHasMore) hash ^= HasMore.GetHashCode();
      if (HasLibraryId) hash ^= LibraryId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasStatus) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (HasCorpus) {
        output.WriteRawTag(16);
        output.WriteInt32(Corpus);
      }
      if (HasServerToken) {
        output.WriteRawTag(26);
        output.WriteBytes(ServerToken);
      }
      mutation_.WriteTo(output, _repeated_mutation_codec);
      if (HasHasMore) {
        output.WriteRawTag(40);
        output.WriteBool(HasMore);
      }
      if (HasLibraryId) {
        output.WriteRawTag(50);
        output.WriteString(LibraryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (HasCorpus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Corpus);
      }
      if (HasServerToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ServerToken);
      }
      size += mutation_.CalculateSize(_repeated_mutation_codec);
      if (HasHasMore) {
        size += 1 + 1;
      }
      if (HasLibraryId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LibraryId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LibraryUpdate other) {
      if (other == null) {
        return;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.HasCorpus) {
        Corpus = other.Corpus;
      }
      if (other.HasServerToken) {
        ServerToken = other.ServerToken;
      }
      mutation_.Add(other.mutation_);
      if (other.HasHasMore) {
        HasMore = other.HasMore;
      }
      if (other.HasLibraryId) {
        LibraryId = other.LibraryId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 16: {
            Corpus = input.ReadInt32();
            break;
          }
          case 26: {
            ServerToken = input.ReadBytes();
            break;
          }
          case 34: {
            mutation_.AddEntriesFrom(input, _repeated_mutation_codec);
            break;
          }
          case 40: {
            HasMore = input.ReadBool();
            break;
          }
          case 50: {
            LibraryId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AndroidAppNotificationData : pb::IMessage<AndroidAppNotificationData> {
    private static readonly pb::MessageParser<AndroidAppNotificationData> _parser = new pb::MessageParser<AndroidAppNotificationData>(() => new AndroidAppNotificationData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidAppNotificationData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[172]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidAppNotificationData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidAppNotificationData(AndroidAppNotificationData other) : this() {
      _hasBits0 = other._hasBits0;
      versionCode_ = other.versionCode_;
      assetId_ = other.assetId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidAppNotificationData Clone() {
      return new AndroidAppNotificationData(this);
    }

    /// <summary>Field number for the "versionCode" field.</summary>
    public const int VersionCodeFieldNumber = 1;
    private readonly static int VersionCodeDefaultValue = 0;

    private int versionCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VersionCode {
      get { if ((_hasBits0 & 1) != 0) { return versionCode_; } else { return VersionCodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        versionCode_ = value;
      }
    }
    /// <summary>Gets whether the "versionCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "versionCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "assetId" field.</summary>
    public const int AssetIdFieldNumber = 2;
    private readonly static string AssetIdDefaultValue = "";

    private string assetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetId {
      get { return assetId_ ?? AssetIdDefaultValue; }
      set {
        assetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "assetId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAssetId {
      get { return assetId_ != null; }
    }
    /// <summary>Clears the value of the "assetId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAssetId() {
      assetId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidAppNotificationData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidAppNotificationData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VersionCode != other.VersionCode) return false;
      if (AssetId != other.AssetId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVersionCode) hash ^= VersionCode.GetHashCode();
      if (HasAssetId) hash ^= AssetId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasVersionCode) {
        output.WriteRawTag(8);
        output.WriteInt32(VersionCode);
      }
      if (HasAssetId) {
        output.WriteRawTag(18);
        output.WriteString(AssetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasVersionCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VersionCode);
      }
      if (HasAssetId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidAppNotificationData other) {
      if (other == null) {
        return;
      }
      if (other.HasVersionCode) {
        VersionCode = other.VersionCode;
      }
      if (other.HasAssetId) {
        AssetId = other.AssetId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            VersionCode = input.ReadInt32();
            break;
          }
          case 18: {
            AssetId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InAppNotificationData : pb::IMessage<InAppNotificationData> {
    private static readonly pb::MessageParser<InAppNotificationData> _parser = new pb::MessageParser<InAppNotificationData>(() => new InAppNotificationData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InAppNotificationData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[173]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InAppNotificationData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InAppNotificationData(InAppNotificationData other) : this() {
      checkoutOrderId_ = other.checkoutOrderId_;
      inAppNotificationId_ = other.inAppNotificationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InAppNotificationData Clone() {
      return new InAppNotificationData(this);
    }

    /// <summary>Field number for the "checkoutOrderId" field.</summary>
    public const int CheckoutOrderIdFieldNumber = 1;
    private readonly static string CheckoutOrderIdDefaultValue = "";

    private string checkoutOrderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CheckoutOrderId {
      get { return checkoutOrderId_ ?? CheckoutOrderIdDefaultValue; }
      set {
        checkoutOrderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "checkoutOrderId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCheckoutOrderId {
      get { return checkoutOrderId_ != null; }
    }
    /// <summary>Clears the value of the "checkoutOrderId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCheckoutOrderId() {
      checkoutOrderId_ = null;
    }

    /// <summary>Field number for the "inAppNotificationId" field.</summary>
    public const int InAppNotificationIdFieldNumber = 2;
    private readonly static string InAppNotificationIdDefaultValue = "";

    private string inAppNotificationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InAppNotificationId {
      get { return inAppNotificationId_ ?? InAppNotificationIdDefaultValue; }
      set {
        inAppNotificationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "inAppNotificationId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInAppNotificationId {
      get { return inAppNotificationId_ != null; }
    }
    /// <summary>Clears the value of the "inAppNotificationId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInAppNotificationId() {
      inAppNotificationId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InAppNotificationData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InAppNotificationData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CheckoutOrderId != other.CheckoutOrderId) return false;
      if (InAppNotificationId != other.InAppNotificationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCheckoutOrderId) hash ^= CheckoutOrderId.GetHashCode();
      if (HasInAppNotificationId) hash ^= InAppNotificationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasCheckoutOrderId) {
        output.WriteRawTag(10);
        output.WriteString(CheckoutOrderId);
      }
      if (HasInAppNotificationId) {
        output.WriteRawTag(18);
        output.WriteString(InAppNotificationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCheckoutOrderId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CheckoutOrderId);
      }
      if (HasInAppNotificationId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InAppNotificationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InAppNotificationData other) {
      if (other == null) {
        return;
      }
      if (other.HasCheckoutOrderId) {
        CheckoutOrderId = other.CheckoutOrderId;
      }
      if (other.HasInAppNotificationId) {
        InAppNotificationId = other.InAppNotificationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CheckoutOrderId = input.ReadString();
            break;
          }
          case 18: {
            InAppNotificationId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LibraryDirtyData : pb::IMessage<LibraryDirtyData> {
    private static readonly pb::MessageParser<LibraryDirtyData> _parser = new pb::MessageParser<LibraryDirtyData>(() => new LibraryDirtyData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LibraryDirtyData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[174]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryDirtyData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryDirtyData(LibraryDirtyData other) : this() {
      _hasBits0 = other._hasBits0;
      backend_ = other.backend_;
      libraryId_ = other.libraryId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryDirtyData Clone() {
      return new LibraryDirtyData(this);
    }

    /// <summary>Field number for the "backend" field.</summary>
    public const int BackendFieldNumber = 1;
    private readonly static int BackendDefaultValue = 0;

    private int backend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Backend {
      get { if ((_hasBits0 & 1) != 0) { return backend_; } else { return BackendDefaultValue; } }
      set {
        _hasBits0 |= 1;
        backend_ = value;
      }
    }
    /// <summary>Gets whether the "backend" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBackend {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "backend" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBackend() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "libraryId" field.</summary>
    public const int LibraryIdFieldNumber = 2;
    private readonly static string LibraryIdDefaultValue = "";

    private string libraryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LibraryId {
      get { return libraryId_ ?? LibraryIdDefaultValue; }
      set {
        libraryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "libraryId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLibraryId {
      get { return libraryId_ != null; }
    }
    /// <summary>Clears the value of the "libraryId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLibraryId() {
      libraryId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LibraryDirtyData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LibraryDirtyData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Backend != other.Backend) return false;
      if (LibraryId != other.LibraryId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBackend) hash ^= Backend.GetHashCode();
      if (HasLibraryId) hash ^= LibraryId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasBackend) {
        output.WriteRawTag(8);
        output.WriteInt32(Backend);
      }
      if (HasLibraryId) {
        output.WriteRawTag(18);
        output.WriteString(LibraryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasBackend) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Backend);
      }
      if (HasLibraryId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LibraryId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LibraryDirtyData other) {
      if (other == null) {
        return;
      }
      if (other.HasBackend) {
        Backend = other.Backend;
      }
      if (other.HasLibraryId) {
        LibraryId = other.LibraryId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Backend = input.ReadInt32();
            break;
          }
          case 18: {
            LibraryId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Notification : pb::IMessage<Notification> {
    private static readonly pb::MessageParser<Notification> _parser = new pb::MessageParser<Notification>(() => new Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[175]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notification(Notification other) : this() {
      _hasBits0 = other._hasBits0;
      notificationType_ = other.notificationType_;
      timestamp_ = other.timestamp_;
      docId_ = other.docId_ != null ? other.docId_.Clone() : null;
      docTitle_ = other.docTitle_;
      userEmail_ = other.userEmail_;
      appData_ = other.appData_ != null ? other.appData_.Clone() : null;
      appDeliveryData_ = other.appDeliveryData_ != null ? other.appDeliveryData_.Clone() : null;
      purchaseRemovalData_ = other.purchaseRemovalData_ != null ? other.purchaseRemovalData_.Clone() : null;
      userNotificationData_ = other.userNotificationData_ != null ? other.userNotificationData_.Clone() : null;
      inAppNotificationData_ = other.inAppNotificationData_ != null ? other.inAppNotificationData_.Clone() : null;
      purchaseDeclinedData_ = other.purchaseDeclinedData_ != null ? other.purchaseDeclinedData_.Clone() : null;
      notificationId_ = other.notificationId_;
      libraryUpdate_ = other.libraryUpdate_ != null ? other.libraryUpdate_.Clone() : null;
      libraryDirtyData_ = other.libraryDirtyData_ != null ? other.libraryDirtyData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notification Clone() {
      return new Notification(this);
    }

    /// <summary>Field number for the "notificationType" field.</summary>
    public const int NotificationTypeFieldNumber = 1;
    private readonly static int NotificationTypeDefaultValue = 0;

    private int notificationType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NotificationType {
      get { if ((_hasBits0 & 1) != 0) { return notificationType_; } else { return NotificationTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        notificationType_ = value;
      }
    }
    /// <summary>Gets whether the "notificationType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNotificationType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "notificationType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNotificationType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private readonly static long TimestampDefaultValue = 0L;

    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { if ((_hasBits0 & 2) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
      set {
        _hasBits0 |= 2;
        timestamp_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTimestamp {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimestamp() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "DocId" field.</summary>
    public const int DocIdFieldNumber = 4;
    private global::GooglePlayStore.DocId docId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DocId DocId {
      get { return docId_; }
      set {
        docId_ = value;
      }
    }

    /// <summary>Field number for the "docTitle" field.</summary>
    public const int DocTitleFieldNumber = 5;
    private readonly static string DocTitleDefaultValue = "";

    private string docTitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DocTitle {
      get { return docTitle_ ?? DocTitleDefaultValue; }
      set {
        docTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "docTitle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDocTitle {
      get { return docTitle_ != null; }
    }
    /// <summary>Clears the value of the "docTitle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDocTitle() {
      docTitle_ = null;
    }

    /// <summary>Field number for the "userEmail" field.</summary>
    public const int UserEmailFieldNumber = 6;
    private readonly static string UserEmailDefaultValue = "";

    private string userEmail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserEmail {
      get { return userEmail_ ?? UserEmailDefaultValue; }
      set {
        userEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userEmail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserEmail {
      get { return userEmail_ != null; }
    }
    /// <summary>Clears the value of the "userEmail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserEmail() {
      userEmail_ = null;
    }

    /// <summary>Field number for the "appData" field.</summary>
    public const int AppDataFieldNumber = 7;
    private global::GooglePlayStore.AndroidAppNotificationData appData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AndroidAppNotificationData AppData {
      get { return appData_; }
      set {
        appData_ = value;
      }
    }

    /// <summary>Field number for the "appDeliveryData" field.</summary>
    public const int AppDeliveryDataFieldNumber = 8;
    private global::GooglePlayStore.AndroidAppDeliveryData appDeliveryData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AndroidAppDeliveryData AppDeliveryData {
      get { return appDeliveryData_; }
      set {
        appDeliveryData_ = value;
      }
    }

    /// <summary>Field number for the "purchaseRemovalData" field.</summary>
    public const int PurchaseRemovalDataFieldNumber = 9;
    private global::GooglePlayStore.PurchaseRemovalData purchaseRemovalData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.PurchaseRemovalData PurchaseRemovalData {
      get { return purchaseRemovalData_; }
      set {
        purchaseRemovalData_ = value;
      }
    }

    /// <summary>Field number for the "userNotificationData" field.</summary>
    public const int UserNotificationDataFieldNumber = 10;
    private global::GooglePlayStore.UserNotificationData userNotificationData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.UserNotificationData UserNotificationData {
      get { return userNotificationData_; }
      set {
        userNotificationData_ = value;
      }
    }

    /// <summary>Field number for the "inAppNotificationData" field.</summary>
    public const int InAppNotificationDataFieldNumber = 11;
    private global::GooglePlayStore.InAppNotificationData inAppNotificationData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.InAppNotificationData InAppNotificationData {
      get { return inAppNotificationData_; }
      set {
        inAppNotificationData_ = value;
      }
    }

    /// <summary>Field number for the "purchaseDeclinedData" field.</summary>
    public const int PurchaseDeclinedDataFieldNumber = 12;
    private global::GooglePlayStore.PurchaseDeclinedData purchaseDeclinedData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.PurchaseDeclinedData PurchaseDeclinedData {
      get { return purchaseDeclinedData_; }
      set {
        purchaseDeclinedData_ = value;
      }
    }

    /// <summary>Field number for the "notificationId" field.</summary>
    public const int NotificationIdFieldNumber = 13;
    private readonly static string NotificationIdDefaultValue = "";

    private string notificationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotificationId {
      get { return notificationId_ ?? NotificationIdDefaultValue; }
      set {
        notificationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "notificationId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNotificationId {
      get { return notificationId_ != null; }
    }
    /// <summary>Clears the value of the "notificationId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNotificationId() {
      notificationId_ = null;
    }

    /// <summary>Field number for the "libraryUpdate" field.</summary>
    public const int LibraryUpdateFieldNumber = 14;
    private global::GooglePlayStore.LibraryUpdate libraryUpdate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.LibraryUpdate LibraryUpdate {
      get { return libraryUpdate_; }
      set {
        libraryUpdate_ = value;
      }
    }

    /// <summary>Field number for the "libraryDirtyData" field.</summary>
    public const int LibraryDirtyDataFieldNumber = 15;
    private global::GooglePlayStore.LibraryDirtyData libraryDirtyData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.LibraryDirtyData LibraryDirtyData {
      get { return libraryDirtyData_; }
      set {
        libraryDirtyData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NotificationType != other.NotificationType) return false;
      if (Timestamp != other.Timestamp) return false;
      if (!object.Equals(DocId, other.DocId)) return false;
      if (DocTitle != other.DocTitle) return false;
      if (UserEmail != other.UserEmail) return false;
      if (!object.Equals(AppData, other.AppData)) return false;
      if (!object.Equals(AppDeliveryData, other.AppDeliveryData)) return false;
      if (!object.Equals(PurchaseRemovalData, other.PurchaseRemovalData)) return false;
      if (!object.Equals(UserNotificationData, other.UserNotificationData)) return false;
      if (!object.Equals(InAppNotificationData, other.InAppNotificationData)) return false;
      if (!object.Equals(PurchaseDeclinedData, other.PurchaseDeclinedData)) return false;
      if (NotificationId != other.NotificationId) return false;
      if (!object.Equals(LibraryUpdate, other.LibraryUpdate)) return false;
      if (!object.Equals(LibraryDirtyData, other.LibraryDirtyData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNotificationType) hash ^= NotificationType.GetHashCode();
      if (HasTimestamp) hash ^= Timestamp.GetHashCode();
      if (docId_ != null) hash ^= DocId.GetHashCode();
      if (HasDocTitle) hash ^= DocTitle.GetHashCode();
      if (HasUserEmail) hash ^= UserEmail.GetHashCode();
      if (appData_ != null) hash ^= AppData.GetHashCode();
      if (appDeliveryData_ != null) hash ^= AppDeliveryData.GetHashCode();
      if (purchaseRemovalData_ != null) hash ^= PurchaseRemovalData.GetHashCode();
      if (userNotificationData_ != null) hash ^= UserNotificationData.GetHashCode();
      if (inAppNotificationData_ != null) hash ^= InAppNotificationData.GetHashCode();
      if (purchaseDeclinedData_ != null) hash ^= PurchaseDeclinedData.GetHashCode();
      if (HasNotificationId) hash ^= NotificationId.GetHashCode();
      if (libraryUpdate_ != null) hash ^= LibraryUpdate.GetHashCode();
      if (libraryDirtyData_ != null) hash ^= LibraryDirtyData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasNotificationType) {
        output.WriteRawTag(8);
        output.WriteInt32(NotificationType);
      }
      if (HasTimestamp) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (docId_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DocId);
      }
      if (HasDocTitle) {
        output.WriteRawTag(42);
        output.WriteString(DocTitle);
      }
      if (HasUserEmail) {
        output.WriteRawTag(50);
        output.WriteString(UserEmail);
      }
      if (appData_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AppData);
      }
      if (appDeliveryData_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(AppDeliveryData);
      }
      if (purchaseRemovalData_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PurchaseRemovalData);
      }
      if (userNotificationData_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(UserNotificationData);
      }
      if (inAppNotificationData_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(InAppNotificationData);
      }
      if (purchaseDeclinedData_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(PurchaseDeclinedData);
      }
      if (HasNotificationId) {
        output.WriteRawTag(106);
        output.WriteString(NotificationId);
      }
      if (libraryUpdate_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(LibraryUpdate);
      }
      if (libraryDirtyData_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(LibraryDirtyData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasNotificationType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NotificationType);
      }
      if (HasTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (docId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DocId);
      }
      if (HasDocTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DocTitle);
      }
      if (HasUserEmail) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserEmail);
      }
      if (appData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppData);
      }
      if (appDeliveryData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppDeliveryData);
      }
      if (purchaseRemovalData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PurchaseRemovalData);
      }
      if (userNotificationData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserNotificationData);
      }
      if (inAppNotificationData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InAppNotificationData);
      }
      if (purchaseDeclinedData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PurchaseDeclinedData);
      }
      if (HasNotificationId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotificationId);
      }
      if (libraryUpdate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LibraryUpdate);
      }
      if (libraryDirtyData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LibraryDirtyData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasNotificationType) {
        NotificationType = other.NotificationType;
      }
      if (other.HasTimestamp) {
        Timestamp = other.Timestamp;
      }
      if (other.docId_ != null) {
        if (docId_ == null) {
          DocId = new global::GooglePlayStore.DocId();
        }
        DocId.MergeFrom(other.DocId);
      }
      if (other.HasDocTitle) {
        DocTitle = other.DocTitle;
      }
      if (other.HasUserEmail) {
        UserEmail = other.UserEmail;
      }
      if (other.appData_ != null) {
        if (appData_ == null) {
          AppData = new global::GooglePlayStore.AndroidAppNotificationData();
        }
        AppData.MergeFrom(other.AppData);
      }
      if (other.appDeliveryData_ != null) {
        if (appDeliveryData_ == null) {
          AppDeliveryData = new global::GooglePlayStore.AndroidAppDeliveryData();
        }
        AppDeliveryData.MergeFrom(other.AppDeliveryData);
      }
      if (other.purchaseRemovalData_ != null) {
        if (purchaseRemovalData_ == null) {
          PurchaseRemovalData = new global::GooglePlayStore.PurchaseRemovalData();
        }
        PurchaseRemovalData.MergeFrom(other.PurchaseRemovalData);
      }
      if (other.userNotificationData_ != null) {
        if (userNotificationData_ == null) {
          UserNotificationData = new global::GooglePlayStore.UserNotificationData();
        }
        UserNotificationData.MergeFrom(other.UserNotificationData);
      }
      if (other.inAppNotificationData_ != null) {
        if (inAppNotificationData_ == null) {
          InAppNotificationData = new global::GooglePlayStore.InAppNotificationData();
        }
        InAppNotificationData.MergeFrom(other.InAppNotificationData);
      }
      if (other.purchaseDeclinedData_ != null) {
        if (purchaseDeclinedData_ == null) {
          PurchaseDeclinedData = new global::GooglePlayStore.PurchaseDeclinedData();
        }
        PurchaseDeclinedData.MergeFrom(other.PurchaseDeclinedData);
      }
      if (other.HasNotificationId) {
        NotificationId = other.NotificationId;
      }
      if (other.libraryUpdate_ != null) {
        if (libraryUpdate_ == null) {
          LibraryUpdate = new global::GooglePlayStore.LibraryUpdate();
        }
        LibraryUpdate.MergeFrom(other.LibraryUpdate);
      }
      if (other.libraryDirtyData_ != null) {
        if (libraryDirtyData_ == null) {
          LibraryDirtyData = new global::GooglePlayStore.LibraryDirtyData();
        }
        LibraryDirtyData.MergeFrom(other.LibraryDirtyData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NotificationType = input.ReadInt32();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 34: {
            if (docId_ == null) {
              DocId = new global::GooglePlayStore.DocId();
            }
            input.ReadMessage(DocId);
            break;
          }
          case 42: {
            DocTitle = input.ReadString();
            break;
          }
          case 50: {
            UserEmail = input.ReadString();
            break;
          }
          case 58: {
            if (appData_ == null) {
              AppData = new global::GooglePlayStore.AndroidAppNotificationData();
            }
            input.ReadMessage(AppData);
            break;
          }
          case 66: {
            if (appDeliveryData_ == null) {
              AppDeliveryData = new global::GooglePlayStore.AndroidAppDeliveryData();
            }
            input.ReadMessage(AppDeliveryData);
            break;
          }
          case 74: {
            if (purchaseRemovalData_ == null) {
              PurchaseRemovalData = new global::GooglePlayStore.PurchaseRemovalData();
            }
            input.ReadMessage(PurchaseRemovalData);
            break;
          }
          case 82: {
            if (userNotificationData_ == null) {
              UserNotificationData = new global::GooglePlayStore.UserNotificationData();
            }
            input.ReadMessage(UserNotificationData);
            break;
          }
          case 90: {
            if (inAppNotificationData_ == null) {
              InAppNotificationData = new global::GooglePlayStore.InAppNotificationData();
            }
            input.ReadMessage(InAppNotificationData);
            break;
          }
          case 98: {
            if (purchaseDeclinedData_ == null) {
              PurchaseDeclinedData = new global::GooglePlayStore.PurchaseDeclinedData();
            }
            input.ReadMessage(PurchaseDeclinedData);
            break;
          }
          case 106: {
            NotificationId = input.ReadString();
            break;
          }
          case 114: {
            if (libraryUpdate_ == null) {
              LibraryUpdate = new global::GooglePlayStore.LibraryUpdate();
            }
            input.ReadMessage(LibraryUpdate);
            break;
          }
          case 122: {
            if (libraryDirtyData_ == null) {
              LibraryDirtyData = new global::GooglePlayStore.LibraryDirtyData();
            }
            input.ReadMessage(LibraryDirtyData);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PurchaseDeclinedData : pb::IMessage<PurchaseDeclinedData> {
    private static readonly pb::MessageParser<PurchaseDeclinedData> _parser = new pb::MessageParser<PurchaseDeclinedData>(() => new PurchaseDeclinedData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PurchaseDeclinedData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[176]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseDeclinedData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseDeclinedData(PurchaseDeclinedData other) : this() {
      _hasBits0 = other._hasBits0;
      reason_ = other.reason_;
      showNotification_ = other.showNotification_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseDeclinedData Clone() {
      return new PurchaseDeclinedData(this);
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 1;
    private readonly static int ReasonDefaultValue = 0;

    private int reason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Reason {
      get { if ((_hasBits0 & 1) != 0) { return reason_; } else { return ReasonDefaultValue; } }
      set {
        _hasBits0 |= 1;
        reason_ = value;
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "showNotification" field.</summary>
    public const int ShowNotificationFieldNumber = 2;
    private readonly static bool ShowNotificationDefaultValue = false;

    private bool showNotification_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShowNotification {
      get { if ((_hasBits0 & 2) != 0) { return showNotification_; } else { return ShowNotificationDefaultValue; } }
      set {
        _hasBits0 |= 2;
        showNotification_ = value;
      }
    }
    /// <summary>Gets whether the "showNotification" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasShowNotification {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "showNotification" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearShowNotification() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PurchaseDeclinedData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PurchaseDeclinedData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Reason != other.Reason) return false;
      if (ShowNotification != other.ShowNotification) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasShowNotification) hash ^= ShowNotification.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasReason) {
        output.WriteRawTag(8);
        output.WriteInt32(Reason);
      }
      if (HasShowNotification) {
        output.WriteRawTag(16);
        output.WriteBool(ShowNotification);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Reason);
      }
      if (HasShowNotification) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PurchaseDeclinedData other) {
      if (other == null) {
        return;
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasShowNotification) {
        ShowNotification = other.ShowNotification;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Reason = input.ReadInt32();
            break;
          }
          case 16: {
            ShowNotification = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PurchaseRemovalData : pb::IMessage<PurchaseRemovalData> {
    private static readonly pb::MessageParser<PurchaseRemovalData> _parser = new pb::MessageParser<PurchaseRemovalData>(() => new PurchaseRemovalData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PurchaseRemovalData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[177]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseRemovalData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseRemovalData(PurchaseRemovalData other) : this() {
      _hasBits0 = other._hasBits0;
      malicious_ = other.malicious_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseRemovalData Clone() {
      return new PurchaseRemovalData(this);
    }

    /// <summary>Field number for the "malicious" field.</summary>
    public const int MaliciousFieldNumber = 1;
    private readonly static bool MaliciousDefaultValue = false;

    private bool malicious_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Malicious {
      get { if ((_hasBits0 & 1) != 0) { return malicious_; } else { return MaliciousDefaultValue; } }
      set {
        _hasBits0 |= 1;
        malicious_ = value;
      }
    }
    /// <summary>Gets whether the "malicious" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMalicious {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "malicious" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMalicious() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PurchaseRemovalData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PurchaseRemovalData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Malicious != other.Malicious) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMalicious) hash ^= Malicious.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasMalicious) {
        output.WriteRawTag(8);
        output.WriteBool(Malicious);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMalicious) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PurchaseRemovalData other) {
      if (other == null) {
        return;
      }
      if (other.HasMalicious) {
        Malicious = other.Malicious;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Malicious = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserNotificationData : pb::IMessage<UserNotificationData> {
    private static readonly pb::MessageParser<UserNotificationData> _parser = new pb::MessageParser<UserNotificationData>(() => new UserNotificationData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserNotificationData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[178]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserNotificationData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserNotificationData(UserNotificationData other) : this() {
      notificationTitle_ = other.notificationTitle_;
      notificationText_ = other.notificationText_;
      tickerText_ = other.tickerText_;
      dialogTitle_ = other.dialogTitle_;
      dialogText_ = other.dialogText_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserNotificationData Clone() {
      return new UserNotificationData(this);
    }

    /// <summary>Field number for the "notificationTitle" field.</summary>
    public const int NotificationTitleFieldNumber = 1;
    private readonly static string NotificationTitleDefaultValue = "";

    private string notificationTitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotificationTitle {
      get { return notificationTitle_ ?? NotificationTitleDefaultValue; }
      set {
        notificationTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "notificationTitle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNotificationTitle {
      get { return notificationTitle_ != null; }
    }
    /// <summary>Clears the value of the "notificationTitle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNotificationTitle() {
      notificationTitle_ = null;
    }

    /// <summary>Field number for the "notificationText" field.</summary>
    public const int NotificationTextFieldNumber = 2;
    private readonly static string NotificationTextDefaultValue = "";

    private string notificationText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotificationText {
      get { return notificationText_ ?? NotificationTextDefaultValue; }
      set {
        notificationText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "notificationText" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNotificationText {
      get { return notificationText_ != null; }
    }
    /// <summary>Clears the value of the "notificationText" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNotificationText() {
      notificationText_ = null;
    }

    /// <summary>Field number for the "tickerText" field.</summary>
    public const int TickerTextFieldNumber = 3;
    private readonly static string TickerTextDefaultValue = "";

    private string tickerText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TickerText {
      get { return tickerText_ ?? TickerTextDefaultValue; }
      set {
        tickerText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tickerText" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTickerText {
      get { return tickerText_ != null; }
    }
    /// <summary>Clears the value of the "tickerText" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTickerText() {
      tickerText_ = null;
    }

    /// <summary>Field number for the "dialogTitle" field.</summary>
    public const int DialogTitleFieldNumber = 4;
    private readonly static string DialogTitleDefaultValue = "";

    private string dialogTitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DialogTitle {
      get { return dialogTitle_ ?? DialogTitleDefaultValue; }
      set {
        dialogTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "dialogTitle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDialogTitle {
      get { return dialogTitle_ != null; }
    }
    /// <summary>Clears the value of the "dialogTitle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDialogTitle() {
      dialogTitle_ = null;
    }

    /// <summary>Field number for the "dialogText" field.</summary>
    public const int DialogTextFieldNumber = 5;
    private readonly static string DialogTextDefaultValue = "";

    private string dialogText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DialogText {
      get { return dialogText_ ?? DialogTextDefaultValue; }
      set {
        dialogText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "dialogText" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDialogText {
      get { return dialogText_ != null; }
    }
    /// <summary>Clears the value of the "dialogText" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDialogText() {
      dialogText_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserNotificationData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserNotificationData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NotificationTitle != other.NotificationTitle) return false;
      if (NotificationText != other.NotificationText) return false;
      if (TickerText != other.TickerText) return false;
      if (DialogTitle != other.DialogTitle) return false;
      if (DialogText != other.DialogText) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNotificationTitle) hash ^= NotificationTitle.GetHashCode();
      if (HasNotificationText) hash ^= NotificationText.GetHashCode();
      if (HasTickerText) hash ^= TickerText.GetHashCode();
      if (HasDialogTitle) hash ^= DialogTitle.GetHashCode();
      if (HasDialogText) hash ^= DialogText.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasNotificationTitle) {
        output.WriteRawTag(10);
        output.WriteString(NotificationTitle);
      }
      if (HasNotificationText) {
        output.WriteRawTag(18);
        output.WriteString(NotificationText);
      }
      if (HasTickerText) {
        output.WriteRawTag(26);
        output.WriteString(TickerText);
      }
      if (HasDialogTitle) {
        output.WriteRawTag(34);
        output.WriteString(DialogTitle);
      }
      if (HasDialogText) {
        output.WriteRawTag(42);
        output.WriteString(DialogText);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasNotificationTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotificationTitle);
      }
      if (HasNotificationText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotificationText);
      }
      if (HasTickerText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TickerText);
      }
      if (HasDialogTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DialogTitle);
      }
      if (HasDialogText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DialogText);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserNotificationData other) {
      if (other == null) {
        return;
      }
      if (other.HasNotificationTitle) {
        NotificationTitle = other.NotificationTitle;
      }
      if (other.HasNotificationText) {
        NotificationText = other.NotificationText;
      }
      if (other.HasTickerText) {
        TickerText = other.TickerText;
      }
      if (other.HasDialogTitle) {
        DialogTitle = other.DialogTitle;
      }
      if (other.HasDialogText) {
        DialogText = other.DialogText;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NotificationTitle = input.ReadString();
            break;
          }
          case 18: {
            NotificationText = input.ReadString();
            break;
          }
          case 26: {
            TickerText = input.ReadString();
            break;
          }
          case 34: {
            DialogTitle = input.ReadString();
            break;
          }
          case 42: {
            DialogText = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AggregateRating : pb::IMessage<AggregateRating> {
    private static readonly pb::MessageParser<AggregateRating> _parser = new pb::MessageParser<AggregateRating>(() => new AggregateRating());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AggregateRating> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[179]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregateRating() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregateRating(AggregateRating other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      starRating_ = other.starRating_;
      ratingsCount_ = other.ratingsCount_;
      oneStarRatings_ = other.oneStarRatings_;
      twoStarRatings_ = other.twoStarRatings_;
      threeStarRatings_ = other.threeStarRatings_;
      fourStarRatings_ = other.fourStarRatings_;
      fiveStarRatings_ = other.fiveStarRatings_;
      thumbsUpCount_ = other.thumbsUpCount_;
      thumbsDownCount_ = other.thumbsDownCount_;
      commentCount_ = other.commentCount_;
      bayesianMeanRating_ = other.bayesianMeanRating_;
      tip_ = other.tip_.Clone();
      ratingLabel_ = other.ratingLabel_;
      ratingCountLabelAbbreviated_ = other.ratingCountLabelAbbreviated_;
      ratingCountLabel_ = other.ratingCountLabel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregateRating Clone() {
      return new AggregateRating(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 1;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "starRating" field.</summary>
    public const int StarRatingFieldNumber = 2;
    private readonly static float StarRatingDefaultValue = 0F;

    private float starRating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float StarRating {
      get { if ((_hasBits0 & 2) != 0) { return starRating_; } else { return StarRatingDefaultValue; } }
      set {
        _hasBits0 |= 2;
        starRating_ = value;
      }
    }
    /// <summary>Gets whether the "starRating" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStarRating {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "starRating" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStarRating() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "ratingsCount" field.</summary>
    public const int RatingsCountFieldNumber = 3;
    private readonly static ulong RatingsCountDefaultValue = 0UL;

    private ulong ratingsCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RatingsCount {
      get { if ((_hasBits0 & 4) != 0) { return ratingsCount_; } else { return RatingsCountDefaultValue; } }
      set {
        _hasBits0 |= 4;
        ratingsCount_ = value;
      }
    }
    /// <summary>Gets whether the "ratingsCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRatingsCount {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ratingsCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRatingsCount() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "oneStarRatings" field.</summary>
    public const int OneStarRatingsFieldNumber = 4;
    private readonly static ulong OneStarRatingsDefaultValue = 0UL;

    private ulong oneStarRatings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong OneStarRatings {
      get { if ((_hasBits0 & 8) != 0) { return oneStarRatings_; } else { return OneStarRatingsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        oneStarRatings_ = value;
      }
    }
    /// <summary>Gets whether the "oneStarRatings" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOneStarRatings {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "oneStarRatings" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneStarRatings() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "twoStarRatings" field.</summary>
    public const int TwoStarRatingsFieldNumber = 5;
    private readonly static ulong TwoStarRatingsDefaultValue = 0UL;

    private ulong twoStarRatings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TwoStarRatings {
      get { if ((_hasBits0 & 16) != 0) { return twoStarRatings_; } else { return TwoStarRatingsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        twoStarRatings_ = value;
      }
    }
    /// <summary>Gets whether the "twoStarRatings" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTwoStarRatings {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "twoStarRatings" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTwoStarRatings() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "threeStarRatings" field.</summary>
    public const int ThreeStarRatingsFieldNumber = 6;
    private readonly static ulong ThreeStarRatingsDefaultValue = 0UL;

    private ulong threeStarRatings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ThreeStarRatings {
      get { if ((_hasBits0 & 32) != 0) { return threeStarRatings_; } else { return ThreeStarRatingsDefaultValue; } }
      set {
        _hasBits0 |= 32;
        threeStarRatings_ = value;
      }
    }
    /// <summary>Gets whether the "threeStarRatings" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasThreeStarRatings {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "threeStarRatings" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearThreeStarRatings() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "fourStarRatings" field.</summary>
    public const int FourStarRatingsFieldNumber = 7;
    private readonly static ulong FourStarRatingsDefaultValue = 0UL;

    private ulong fourStarRatings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FourStarRatings {
      get { if ((_hasBits0 & 64) != 0) { return fourStarRatings_; } else { return FourStarRatingsDefaultValue; } }
      set {
        _hasBits0 |= 64;
        fourStarRatings_ = value;
      }
    }
    /// <summary>Gets whether the "fourStarRatings" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFourStarRatings {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "fourStarRatings" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFourStarRatings() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "fiveStarRatings" field.</summary>
    public const int FiveStarRatingsFieldNumber = 8;
    private readonly static ulong FiveStarRatingsDefaultValue = 0UL;

    private ulong fiveStarRatings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FiveStarRatings {
      get { if ((_hasBits0 & 128) != 0) { return fiveStarRatings_; } else { return FiveStarRatingsDefaultValue; } }
      set {
        _hasBits0 |= 128;
        fiveStarRatings_ = value;
      }
    }
    /// <summary>Gets whether the "fiveStarRatings" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFiveStarRatings {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "fiveStarRatings" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFiveStarRatings() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "thumbsUpCount" field.</summary>
    public const int ThumbsUpCountFieldNumber = 9;
    private readonly static ulong ThumbsUpCountDefaultValue = 0UL;

    private ulong thumbsUpCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ThumbsUpCount {
      get { if ((_hasBits0 & 256) != 0) { return thumbsUpCount_; } else { return ThumbsUpCountDefaultValue; } }
      set {
        _hasBits0 |= 256;
        thumbsUpCount_ = value;
      }
    }
    /// <summary>Gets whether the "thumbsUpCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasThumbsUpCount {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "thumbsUpCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearThumbsUpCount() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "thumbsDownCount" field.</summary>
    public const int ThumbsDownCountFieldNumber = 10;
    private readonly static ulong ThumbsDownCountDefaultValue = 0UL;

    private ulong thumbsDownCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ThumbsDownCount {
      get { if ((_hasBits0 & 512) != 0) { return thumbsDownCount_; } else { return ThumbsDownCountDefaultValue; } }
      set {
        _hasBits0 |= 512;
        thumbsDownCount_ = value;
      }
    }
    /// <summary>Gets whether the "thumbsDownCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasThumbsDownCount {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "thumbsDownCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearThumbsDownCount() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "commentCount" field.</summary>
    public const int CommentCountFieldNumber = 11;
    private readonly static ulong CommentCountDefaultValue = 0UL;

    private ulong commentCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CommentCount {
      get { if ((_hasBits0 & 1024) != 0) { return commentCount_; } else { return CommentCountDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        commentCount_ = value;
      }
    }
    /// <summary>Gets whether the "commentCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCommentCount {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "commentCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCommentCount() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "bayesianMeanRating" field.</summary>
    public const int BayesianMeanRatingFieldNumber = 12;
    private readonly static double BayesianMeanRatingDefaultValue = 0D;

    private double bayesianMeanRating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BayesianMeanRating {
      get { if ((_hasBits0 & 2048) != 0) { return bayesianMeanRating_; } else { return BayesianMeanRatingDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        bayesianMeanRating_ = value;
      }
    }
    /// <summary>Gets whether the "bayesianMeanRating" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBayesianMeanRating {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "bayesianMeanRating" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBayesianMeanRating() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "tip" field.</summary>
    public const int TipFieldNumber = 13;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Tip> _repeated_tip_codec
        = pb::FieldCodec.ForMessage(106, global::GooglePlayStore.Tip.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Tip> tip_ = new pbc::RepeatedField<global::GooglePlayStore.Tip>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Tip> Tip {
      get { return tip_; }
    }

    /// <summary>Field number for the "ratingLabel" field.</summary>
    public const int RatingLabelFieldNumber = 17;
    private readonly static string RatingLabelDefaultValue = "";

    private string ratingLabel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RatingLabel {
      get { return ratingLabel_ ?? RatingLabelDefaultValue; }
      set {
        ratingLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ratingLabel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRatingLabel {
      get { return ratingLabel_ != null; }
    }
    /// <summary>Clears the value of the "ratingLabel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRatingLabel() {
      ratingLabel_ = null;
    }

    /// <summary>Field number for the "ratingCountLabelAbbreviated" field.</summary>
    public const int RatingCountLabelAbbreviatedFieldNumber = 18;
    private readonly static string RatingCountLabelAbbreviatedDefaultValue = "";

    private string ratingCountLabelAbbreviated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RatingCountLabelAbbreviated {
      get { return ratingCountLabelAbbreviated_ ?? RatingCountLabelAbbreviatedDefaultValue; }
      set {
        ratingCountLabelAbbreviated_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ratingCountLabelAbbreviated" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRatingCountLabelAbbreviated {
      get { return ratingCountLabelAbbreviated_ != null; }
    }
    /// <summary>Clears the value of the "ratingCountLabelAbbreviated" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRatingCountLabelAbbreviated() {
      ratingCountLabelAbbreviated_ = null;
    }

    /// <summary>Field number for the "ratingCountLabel" field.</summary>
    public const int RatingCountLabelFieldNumber = 19;
    private readonly static string RatingCountLabelDefaultValue = "";

    private string ratingCountLabel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RatingCountLabel {
      get { return ratingCountLabel_ ?? RatingCountLabelDefaultValue; }
      set {
        ratingCountLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ratingCountLabel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRatingCountLabel {
      get { return ratingCountLabel_ != null; }
    }
    /// <summary>Clears the value of the "ratingCountLabel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRatingCountLabel() {
      ratingCountLabel_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AggregateRating);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AggregateRating other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(StarRating, other.StarRating)) return false;
      if (RatingsCount != other.RatingsCount) return false;
      if (OneStarRatings != other.OneStarRatings) return false;
      if (TwoStarRatings != other.TwoStarRatings) return false;
      if (ThreeStarRatings != other.ThreeStarRatings) return false;
      if (FourStarRatings != other.FourStarRatings) return false;
      if (FiveStarRatings != other.FiveStarRatings) return false;
      if (ThumbsUpCount != other.ThumbsUpCount) return false;
      if (ThumbsDownCount != other.ThumbsDownCount) return false;
      if (CommentCount != other.CommentCount) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BayesianMeanRating, other.BayesianMeanRating)) return false;
      if(!tip_.Equals(other.tip_)) return false;
      if (RatingLabel != other.RatingLabel) return false;
      if (RatingCountLabelAbbreviated != other.RatingCountLabelAbbreviated) return false;
      if (RatingCountLabel != other.RatingCountLabel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStarRating) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(StarRating);
      if (HasRatingsCount) hash ^= RatingsCount.GetHashCode();
      if (HasOneStarRatings) hash ^= OneStarRatings.GetHashCode();
      if (HasTwoStarRatings) hash ^= TwoStarRatings.GetHashCode();
      if (HasThreeStarRatings) hash ^= ThreeStarRatings.GetHashCode();
      if (HasFourStarRatings) hash ^= FourStarRatings.GetHashCode();
      if (HasFiveStarRatings) hash ^= FiveStarRatings.GetHashCode();
      if (HasThumbsUpCount) hash ^= ThumbsUpCount.GetHashCode();
      if (HasThumbsDownCount) hash ^= ThumbsDownCount.GetHashCode();
      if (HasCommentCount) hash ^= CommentCount.GetHashCode();
      if (HasBayesianMeanRating) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BayesianMeanRating);
      hash ^= tip_.GetHashCode();
      if (HasRatingLabel) hash ^= RatingLabel.GetHashCode();
      if (HasRatingCountLabelAbbreviated) hash ^= RatingCountLabelAbbreviated.GetHashCode();
      if (HasRatingCountLabel) hash ^= RatingCountLabel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasStarRating) {
        output.WriteRawTag(21);
        output.WriteFloat(StarRating);
      }
      if (HasRatingsCount) {
        output.WriteRawTag(24);
        output.WriteUInt64(RatingsCount);
      }
      if (HasOneStarRatings) {
        output.WriteRawTag(32);
        output.WriteUInt64(OneStarRatings);
      }
      if (HasTwoStarRatings) {
        output.WriteRawTag(40);
        output.WriteUInt64(TwoStarRatings);
      }
      if (HasThreeStarRatings) {
        output.WriteRawTag(48);
        output.WriteUInt64(ThreeStarRatings);
      }
      if (HasFourStarRatings) {
        output.WriteRawTag(56);
        output.WriteUInt64(FourStarRatings);
      }
      if (HasFiveStarRatings) {
        output.WriteRawTag(64);
        output.WriteUInt64(FiveStarRatings);
      }
      if (HasThumbsUpCount) {
        output.WriteRawTag(72);
        output.WriteUInt64(ThumbsUpCount);
      }
      if (HasThumbsDownCount) {
        output.WriteRawTag(80);
        output.WriteUInt64(ThumbsDownCount);
      }
      if (HasCommentCount) {
        output.WriteRawTag(88);
        output.WriteUInt64(CommentCount);
      }
      if (HasBayesianMeanRating) {
        output.WriteRawTag(97);
        output.WriteDouble(BayesianMeanRating);
      }
      tip_.WriteTo(output, _repeated_tip_codec);
      if (HasRatingLabel) {
        output.WriteRawTag(138, 1);
        output.WriteString(RatingLabel);
      }
      if (HasRatingCountLabelAbbreviated) {
        output.WriteRawTag(146, 1);
        output.WriteString(RatingCountLabelAbbreviated);
      }
      if (HasRatingCountLabel) {
        output.WriteRawTag(154, 1);
        output.WriteString(RatingCountLabel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasStarRating) {
        size += 1 + 4;
      }
      if (HasRatingsCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RatingsCount);
      }
      if (HasOneStarRatings) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(OneStarRatings);
      }
      if (HasTwoStarRatings) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TwoStarRatings);
      }
      if (HasThreeStarRatings) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ThreeStarRatings);
      }
      if (HasFourStarRatings) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FourStarRatings);
      }
      if (HasFiveStarRatings) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FiveStarRatings);
      }
      if (HasThumbsUpCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ThumbsUpCount);
      }
      if (HasThumbsDownCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ThumbsDownCount);
      }
      if (HasCommentCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CommentCount);
      }
      if (HasBayesianMeanRating) {
        size += 1 + 8;
      }
      size += tip_.CalculateSize(_repeated_tip_codec);
      if (HasRatingLabel) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RatingLabel);
      }
      if (HasRatingCountLabelAbbreviated) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RatingCountLabelAbbreviated);
      }
      if (HasRatingCountLabel) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RatingCountLabel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AggregateRating other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStarRating) {
        StarRating = other.StarRating;
      }
      if (other.HasRatingsCount) {
        RatingsCount = other.RatingsCount;
      }
      if (other.HasOneStarRatings) {
        OneStarRatings = other.OneStarRatings;
      }
      if (other.HasTwoStarRatings) {
        TwoStarRatings = other.TwoStarRatings;
      }
      if (other.HasThreeStarRatings) {
        ThreeStarRatings = other.ThreeStarRatings;
      }
      if (other.HasFourStarRatings) {
        FourStarRatings = other.FourStarRatings;
      }
      if (other.HasFiveStarRatings) {
        FiveStarRatings = other.FiveStarRatings;
      }
      if (other.HasThumbsUpCount) {
        ThumbsUpCount = other.ThumbsUpCount;
      }
      if (other.HasThumbsDownCount) {
        ThumbsDownCount = other.ThumbsDownCount;
      }
      if (other.HasCommentCount) {
        CommentCount = other.CommentCount;
      }
      if (other.HasBayesianMeanRating) {
        BayesianMeanRating = other.BayesianMeanRating;
      }
      tip_.Add(other.tip_);
      if (other.HasRatingLabel) {
        RatingLabel = other.RatingLabel;
      }
      if (other.HasRatingCountLabelAbbreviated) {
        RatingCountLabelAbbreviated = other.RatingCountLabelAbbreviated;
      }
      if (other.HasRatingCountLabel) {
        RatingCountLabel = other.RatingCountLabel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 21: {
            StarRating = input.ReadFloat();
            break;
          }
          case 24: {
            RatingsCount = input.ReadUInt64();
            break;
          }
          case 32: {
            OneStarRatings = input.ReadUInt64();
            break;
          }
          case 40: {
            TwoStarRatings = input.ReadUInt64();
            break;
          }
          case 48: {
            ThreeStarRatings = input.ReadUInt64();
            break;
          }
          case 56: {
            FourStarRatings = input.ReadUInt64();
            break;
          }
          case 64: {
            FiveStarRatings = input.ReadUInt64();
            break;
          }
          case 72: {
            ThumbsUpCount = input.ReadUInt64();
            break;
          }
          case 80: {
            ThumbsDownCount = input.ReadUInt64();
            break;
          }
          case 88: {
            CommentCount = input.ReadUInt64();
            break;
          }
          case 97: {
            BayesianMeanRating = input.ReadDouble();
            break;
          }
          case 106: {
            tip_.AddEntriesFrom(input, _repeated_tip_codec);
            break;
          }
          case 138: {
            RatingLabel = input.ReadString();
            break;
          }
          case 146: {
            RatingCountLabelAbbreviated = input.ReadString();
            break;
          }
          case 154: {
            RatingCountLabel = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Tip : pb::IMessage<Tip> {
    private static readonly pb::MessageParser<Tip> _parser = new pb::MessageParser<Tip>(() => new Tip());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Tip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[180]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tip(Tip other) : this() {
      _hasBits0 = other._hasBits0;
      tipId_ = other.tipId_;
      text_ = other.text_;
      polarity_ = other.polarity_;
      reviewCount_ = other.reviewCount_;
      language_ = other.language_;
      snippetReviewId_ = other.snippetReviewId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tip Clone() {
      return new Tip(this);
    }

    /// <summary>Field number for the "tipId" field.</summary>
    public const int TipIdFieldNumber = 1;
    private readonly static string TipIdDefaultValue = "";

    private string tipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TipId {
      get { return tipId_ ?? TipIdDefaultValue; }
      set {
        tipId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tipId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTipId {
      get { return tipId_ != null; }
    }
    /// <summary>Clears the value of the "tipId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTipId() {
      tipId_ = null;
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private readonly static string TextDefaultValue = "";

    private string text_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_ ?? TextDefaultValue; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasText {
      get { return text_ != null; }
    }
    /// <summary>Clears the value of the "text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearText() {
      text_ = null;
    }

    /// <summary>Field number for the "polarity" field.</summary>
    public const int PolarityFieldNumber = 3;
    private readonly static int PolarityDefaultValue = 0;

    private int polarity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Polarity {
      get { if ((_hasBits0 & 1) != 0) { return polarity_; } else { return PolarityDefaultValue; } }
      set {
        _hasBits0 |= 1;
        polarity_ = value;
      }
    }
    /// <summary>Gets whether the "polarity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPolarity {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "polarity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPolarity() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "reviewCount" field.</summary>
    public const int ReviewCountFieldNumber = 4;
    private readonly static long ReviewCountDefaultValue = 0L;

    private long reviewCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ReviewCount {
      get { if ((_hasBits0 & 2) != 0) { return reviewCount_; } else { return ReviewCountDefaultValue; } }
      set {
        _hasBits0 |= 2;
        reviewCount_ = value;
      }
    }
    /// <summary>Gets whether the "reviewCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReviewCount {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "reviewCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReviewCount() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 5;
    private readonly static string LanguageDefaultValue = "";

    private string language_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Language {
      get { return language_ ?? LanguageDefaultValue; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "language" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLanguage {
      get { return language_ != null; }
    }
    /// <summary>Clears the value of the "language" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLanguage() {
      language_ = null;
    }

    /// <summary>Field number for the "snippetReviewId" field.</summary>
    public const int SnippetReviewIdFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_snippetReviewId_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> snippetReviewId_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SnippetReviewId {
      get { return snippetReviewId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Tip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Tip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TipId != other.TipId) return false;
      if (Text != other.Text) return false;
      if (Polarity != other.Polarity) return false;
      if (ReviewCount != other.ReviewCount) return false;
      if (Language != other.Language) return false;
      if(!snippetReviewId_.Equals(other.snippetReviewId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTipId) hash ^= TipId.GetHashCode();
      if (HasText) hash ^= Text.GetHashCode();
      if (HasPolarity) hash ^= Polarity.GetHashCode();
      if (HasReviewCount) hash ^= ReviewCount.GetHashCode();
      if (HasLanguage) hash ^= Language.GetHashCode();
      hash ^= snippetReviewId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTipId) {
        output.WriteRawTag(10);
        output.WriteString(TipId);
      }
      if (HasText) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (HasPolarity) {
        output.WriteRawTag(24);
        output.WriteInt32(Polarity);
      }
      if (HasReviewCount) {
        output.WriteRawTag(32);
        output.WriteInt64(ReviewCount);
      }
      if (HasLanguage) {
        output.WriteRawTag(42);
        output.WriteString(Language);
      }
      snippetReviewId_.WriteTo(output, _repeated_snippetReviewId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTipId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TipId);
      }
      if (HasText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (HasPolarity) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Polarity);
      }
      if (HasReviewCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReviewCount);
      }
      if (HasLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      size += snippetReviewId_.CalculateSize(_repeated_snippetReviewId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Tip other) {
      if (other == null) {
        return;
      }
      if (other.HasTipId) {
        TipId = other.TipId;
      }
      if (other.HasText) {
        Text = other.Text;
      }
      if (other.HasPolarity) {
        Polarity = other.Polarity;
      }
      if (other.HasReviewCount) {
        ReviewCount = other.ReviewCount;
      }
      if (other.HasLanguage) {
        Language = other.Language;
      }
      snippetReviewId_.Add(other.snippetReviewId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TipId = input.ReadString();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 24: {
            Polarity = input.ReadInt32();
            break;
          }
          case 32: {
            ReviewCount = input.ReadInt64();
            break;
          }
          case 42: {
            Language = input.ReadString();
            break;
          }
          case 50: {
            snippetReviewId_.AddEntriesFrom(input, _repeated_snippetReviewId_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReviewTip : pb::IMessage<ReviewTip> {
    private static readonly pb::MessageParser<ReviewTip> _parser = new pb::MessageParser<ReviewTip>(() => new ReviewTip());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReviewTip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[181]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReviewTip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReviewTip(ReviewTip other) : this() {
      _hasBits0 = other._hasBits0;
      tipUrl_ = other.tipUrl_;
      text_ = other.text_;
      polarity_ = other.polarity_;
      reviewCount_ = other.reviewCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReviewTip Clone() {
      return new ReviewTip(this);
    }

    /// <summary>Field number for the "tipUrl" field.</summary>
    public const int TipUrlFieldNumber = 1;
    private readonly static string TipUrlDefaultValue = "";

    private string tipUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TipUrl {
      get { return tipUrl_ ?? TipUrlDefaultValue; }
      set {
        tipUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tipUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTipUrl {
      get { return tipUrl_ != null; }
    }
    /// <summary>Clears the value of the "tipUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTipUrl() {
      tipUrl_ = null;
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private readonly static string TextDefaultValue = "";

    private string text_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_ ?? TextDefaultValue; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasText {
      get { return text_ != null; }
    }
    /// <summary>Clears the value of the "text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearText() {
      text_ = null;
    }

    /// <summary>Field number for the "polarity" field.</summary>
    public const int PolarityFieldNumber = 3;
    private readonly static int PolarityDefaultValue = 0;

    private int polarity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Polarity {
      get { if ((_hasBits0 & 1) != 0) { return polarity_; } else { return PolarityDefaultValue; } }
      set {
        _hasBits0 |= 1;
        polarity_ = value;
      }
    }
    /// <summary>Gets whether the "polarity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPolarity {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "polarity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPolarity() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "reviewCount" field.</summary>
    public const int ReviewCountFieldNumber = 4;
    private readonly static long ReviewCountDefaultValue = 0L;

    private long reviewCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ReviewCount {
      get { if ((_hasBits0 & 2) != 0) { return reviewCount_; } else { return ReviewCountDefaultValue; } }
      set {
        _hasBits0 |= 2;
        reviewCount_ = value;
      }
    }
    /// <summary>Gets whether the "reviewCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReviewCount {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "reviewCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReviewCount() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReviewTip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReviewTip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TipUrl != other.TipUrl) return false;
      if (Text != other.Text) return false;
      if (Polarity != other.Polarity) return false;
      if (ReviewCount != other.ReviewCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTipUrl) hash ^= TipUrl.GetHashCode();
      if (HasText) hash ^= Text.GetHashCode();
      if (HasPolarity) hash ^= Polarity.GetHashCode();
      if (HasReviewCount) hash ^= ReviewCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTipUrl) {
        output.WriteRawTag(10);
        output.WriteString(TipUrl);
      }
      if (HasText) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (HasPolarity) {
        output.WriteRawTag(24);
        output.WriteInt32(Polarity);
      }
      if (HasReviewCount) {
        output.WriteRawTag(32);
        output.WriteInt64(ReviewCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTipUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TipUrl);
      }
      if (HasText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (HasPolarity) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Polarity);
      }
      if (HasReviewCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReviewCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReviewTip other) {
      if (other == null) {
        return;
      }
      if (other.HasTipUrl) {
        TipUrl = other.TipUrl;
      }
      if (other.HasText) {
        Text = other.Text;
      }
      if (other.HasPolarity) {
        Polarity = other.Polarity;
      }
      if (other.HasReviewCount) {
        ReviewCount = other.ReviewCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TipUrl = input.ReadString();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 24: {
            Polarity = input.ReadInt32();
            break;
          }
          case 32: {
            ReviewCount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AcceptTosResponse : pb::IMessage<AcceptTosResponse> {
    private static readonly pb::MessageParser<AcceptTosResponse> _parser = new pb::MessageParser<AcceptTosResponse>(() => new AcceptTosResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AcceptTosResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[182]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptTosResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptTosResponse(AcceptTosResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptTosResponse Clone() {
      return new AcceptTosResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AcceptTosResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AcceptTosResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AcceptTosResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class CarrierBillingConfig : pb::IMessage<CarrierBillingConfig> {
    private static readonly pb::MessageParser<CarrierBillingConfig> _parser = new pb::MessageParser<CarrierBillingConfig>(() => new CarrierBillingConfig());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CarrierBillingConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[183]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingConfig(CarrierBillingConfig other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      name_ = other.name_;
      apiVersion_ = other.apiVersion_;
      provisioningUrl_ = other.provisioningUrl_;
      credentialsUrl_ = other.credentialsUrl_;
      tosRequired_ = other.tosRequired_;
      perTransactionCredentialsRequired_ = other.perTransactionCredentialsRequired_;
      sendSubscriberIdWithCarrierBillingRequests_ = other.sendSubscriberIdWithCarrierBillingRequests_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingConfig Clone() {
      return new CarrierBillingConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static string IdDefaultValue = "";

    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "apiVersion" field.</summary>
    public const int ApiVersionFieldNumber = 3;
    private readonly static int ApiVersionDefaultValue = 0;

    private int apiVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApiVersion {
      get { if ((_hasBits0 & 1) != 0) { return apiVersion_; } else { return ApiVersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        apiVersion_ = value;
      }
    }
    /// <summary>Gets whether the "apiVersion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasApiVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "apiVersion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearApiVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "provisioningUrl" field.</summary>
    public const int ProvisioningUrlFieldNumber = 4;
    private readonly static string ProvisioningUrlDefaultValue = "";

    private string provisioningUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProvisioningUrl {
      get { return provisioningUrl_ ?? ProvisioningUrlDefaultValue; }
      set {
        provisioningUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "provisioningUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProvisioningUrl {
      get { return provisioningUrl_ != null; }
    }
    /// <summary>Clears the value of the "provisioningUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProvisioningUrl() {
      provisioningUrl_ = null;
    }

    /// <summary>Field number for the "credentialsUrl" field.</summary>
    public const int CredentialsUrlFieldNumber = 5;
    private readonly static string CredentialsUrlDefaultValue = "";

    private string credentialsUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CredentialsUrl {
      get { return credentialsUrl_ ?? CredentialsUrlDefaultValue; }
      set {
        credentialsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "credentialsUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCredentialsUrl {
      get { return credentialsUrl_ != null; }
    }
    /// <summary>Clears the value of the "credentialsUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCredentialsUrl() {
      credentialsUrl_ = null;
    }

    /// <summary>Field number for the "tosRequired" field.</summary>
    public const int TosRequiredFieldNumber = 6;
    private readonly static bool TosRequiredDefaultValue = false;

    private bool tosRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TosRequired {
      get { if ((_hasBits0 & 2) != 0) { return tosRequired_; } else { return TosRequiredDefaultValue; } }
      set {
        _hasBits0 |= 2;
        tosRequired_ = value;
      }
    }
    /// <summary>Gets whether the "tosRequired" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTosRequired {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "tosRequired" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTosRequired() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "perTransactionCredentialsRequired" field.</summary>
    public const int PerTransactionCredentialsRequiredFieldNumber = 7;
    private readonly static bool PerTransactionCredentialsRequiredDefaultValue = false;

    private bool perTransactionCredentialsRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PerTransactionCredentialsRequired {
      get { if ((_hasBits0 & 4) != 0) { return perTransactionCredentialsRequired_; } else { return PerTransactionCredentialsRequiredDefaultValue; } }
      set {
        _hasBits0 |= 4;
        perTransactionCredentialsRequired_ = value;
      }
    }
    /// <summary>Gets whether the "perTransactionCredentialsRequired" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPerTransactionCredentialsRequired {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "perTransactionCredentialsRequired" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPerTransactionCredentialsRequired() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "sendSubscriberIdWithCarrierBillingRequests" field.</summary>
    public const int SendSubscriberIdWithCarrierBillingRequestsFieldNumber = 8;
    private readonly static bool SendSubscriberIdWithCarrierBillingRequestsDefaultValue = false;

    private bool sendSubscriberIdWithCarrierBillingRequests_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SendSubscriberIdWithCarrierBillingRequests {
      get { if ((_hasBits0 & 8) != 0) { return sendSubscriberIdWithCarrierBillingRequests_; } else { return SendSubscriberIdWithCarrierBillingRequestsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        sendSubscriberIdWithCarrierBillingRequests_ = value;
      }
    }
    /// <summary>Gets whether the "sendSubscriberIdWithCarrierBillingRequests" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSendSubscriberIdWithCarrierBillingRequests {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "sendSubscriberIdWithCarrierBillingRequests" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSendSubscriberIdWithCarrierBillingRequests() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CarrierBillingConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CarrierBillingConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (ApiVersion != other.ApiVersion) return false;
      if (ProvisioningUrl != other.ProvisioningUrl) return false;
      if (CredentialsUrl != other.CredentialsUrl) return false;
      if (TosRequired != other.TosRequired) return false;
      if (PerTransactionCredentialsRequired != other.PerTransactionCredentialsRequired) return false;
      if (SendSubscriberIdWithCarrierBillingRequests != other.SendSubscriberIdWithCarrierBillingRequests) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasApiVersion) hash ^= ApiVersion.GetHashCode();
      if (HasProvisioningUrl) hash ^= ProvisioningUrl.GetHashCode();
      if (HasCredentialsUrl) hash ^= CredentialsUrl.GetHashCode();
      if (HasTosRequired) hash ^= TosRequired.GetHashCode();
      if (HasPerTransactionCredentialsRequired) hash ^= PerTransactionCredentialsRequired.GetHashCode();
      if (HasSendSubscriberIdWithCarrierBillingRequests) hash ^= SendSubscriberIdWithCarrierBillingRequests.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasApiVersion) {
        output.WriteRawTag(24);
        output.WriteInt32(ApiVersion);
      }
      if (HasProvisioningUrl) {
        output.WriteRawTag(34);
        output.WriteString(ProvisioningUrl);
      }
      if (HasCredentialsUrl) {
        output.WriteRawTag(42);
        output.WriteString(CredentialsUrl);
      }
      if (HasTosRequired) {
        output.WriteRawTag(48);
        output.WriteBool(TosRequired);
      }
      if (HasPerTransactionCredentialsRequired) {
        output.WriteRawTag(56);
        output.WriteBool(PerTransactionCredentialsRequired);
      }
      if (HasSendSubscriberIdWithCarrierBillingRequests) {
        output.WriteRawTag(64);
        output.WriteBool(SendSubscriberIdWithCarrierBillingRequests);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasApiVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApiVersion);
      }
      if (HasProvisioningUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProvisioningUrl);
      }
      if (HasCredentialsUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CredentialsUrl);
      }
      if (HasTosRequired) {
        size += 1 + 1;
      }
      if (HasPerTransactionCredentialsRequired) {
        size += 1 + 1;
      }
      if (HasSendSubscriberIdWithCarrierBillingRequests) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CarrierBillingConfig other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasApiVersion) {
        ApiVersion = other.ApiVersion;
      }
      if (other.HasProvisioningUrl) {
        ProvisioningUrl = other.ProvisioningUrl;
      }
      if (other.HasCredentialsUrl) {
        CredentialsUrl = other.CredentialsUrl;
      }
      if (other.HasTosRequired) {
        TosRequired = other.TosRequired;
      }
      if (other.HasPerTransactionCredentialsRequired) {
        PerTransactionCredentialsRequired = other.PerTransactionCredentialsRequired;
      }
      if (other.HasSendSubscriberIdWithCarrierBillingRequests) {
        SendSubscriberIdWithCarrierBillingRequests = other.SendSubscriberIdWithCarrierBillingRequests;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            ApiVersion = input.ReadInt32();
            break;
          }
          case 34: {
            ProvisioningUrl = input.ReadString();
            break;
          }
          case 42: {
            CredentialsUrl = input.ReadString();
            break;
          }
          case 48: {
            TosRequired = input.ReadBool();
            break;
          }
          case 56: {
            PerTransactionCredentialsRequired = input.ReadBool();
            break;
          }
          case 64: {
            SendSubscriberIdWithCarrierBillingRequests = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BillingConfig : pb::IMessage<BillingConfig> {
    private static readonly pb::MessageParser<BillingConfig> _parser = new pb::MessageParser<BillingConfig>(() => new BillingConfig());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BillingConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[184]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingConfig(BillingConfig other) : this() {
      _hasBits0 = other._hasBits0;
      carrierBillingConfig_ = other.carrierBillingConfig_ != null ? other.carrierBillingConfig_.Clone() : null;
      maxIabApiVersion_ = other.maxIabApiVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingConfig Clone() {
      return new BillingConfig(this);
    }

    /// <summary>Field number for the "carrierBillingConfig" field.</summary>
    public const int CarrierBillingConfigFieldNumber = 1;
    private global::GooglePlayStore.CarrierBillingConfig carrierBillingConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CarrierBillingConfig CarrierBillingConfig {
      get { return carrierBillingConfig_; }
      set {
        carrierBillingConfig_ = value;
      }
    }

    /// <summary>Field number for the "maxIabApiVersion" field.</summary>
    public const int MaxIabApiVersionFieldNumber = 2;
    private readonly static int MaxIabApiVersionDefaultValue = 0;

    private int maxIabApiVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxIabApiVersion {
      get { if ((_hasBits0 & 1) != 0) { return maxIabApiVersion_; } else { return MaxIabApiVersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        maxIabApiVersion_ = value;
      }
    }
    /// <summary>Gets whether the "maxIabApiVersion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMaxIabApiVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "maxIabApiVersion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMaxIabApiVersion() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BillingConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BillingConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CarrierBillingConfig, other.CarrierBillingConfig)) return false;
      if (MaxIabApiVersion != other.MaxIabApiVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (carrierBillingConfig_ != null) hash ^= CarrierBillingConfig.GetHashCode();
      if (HasMaxIabApiVersion) hash ^= MaxIabApiVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (carrierBillingConfig_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CarrierBillingConfig);
      }
      if (HasMaxIabApiVersion) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxIabApiVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (carrierBillingConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CarrierBillingConfig);
      }
      if (HasMaxIabApiVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxIabApiVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BillingConfig other) {
      if (other == null) {
        return;
      }
      if (other.carrierBillingConfig_ != null) {
        if (carrierBillingConfig_ == null) {
          CarrierBillingConfig = new global::GooglePlayStore.CarrierBillingConfig();
        }
        CarrierBillingConfig.MergeFrom(other.CarrierBillingConfig);
      }
      if (other.HasMaxIabApiVersion) {
        MaxIabApiVersion = other.MaxIabApiVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (carrierBillingConfig_ == null) {
              CarrierBillingConfig = new global::GooglePlayStore.CarrierBillingConfig();
            }
            input.ReadMessage(CarrierBillingConfig);
            break;
          }
          case 16: {
            MaxIabApiVersion = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CorpusMetadata : pb::IMessage<CorpusMetadata> {
    private static readonly pb::MessageParser<CorpusMetadata> _parser = new pb::MessageParser<CorpusMetadata>(() => new CorpusMetadata());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CorpusMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[185]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CorpusMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CorpusMetadata(CorpusMetadata other) : this() {
      _hasBits0 = other._hasBits0;
      backend_ = other.backend_;
      name_ = other.name_;
      landingUrl_ = other.landingUrl_;
      libraryName_ = other.libraryName_;
      recsWidgetUrl_ = other.recsWidgetUrl_;
      shopName_ = other.shopName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CorpusMetadata Clone() {
      return new CorpusMetadata(this);
    }

    /// <summary>Field number for the "backend" field.</summary>
    public const int BackendFieldNumber = 1;
    private readonly static int BackendDefaultValue = 0;

    private int backend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Backend {
      get { if ((_hasBits0 & 1) != 0) { return backend_; } else { return BackendDefaultValue; } }
      set {
        _hasBits0 |= 1;
        backend_ = value;
      }
    }
    /// <summary>Gets whether the "backend" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBackend {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "backend" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBackend() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "landingUrl" field.</summary>
    public const int LandingUrlFieldNumber = 3;
    private readonly static string LandingUrlDefaultValue = "";

    private string landingUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LandingUrl {
      get { return landingUrl_ ?? LandingUrlDefaultValue; }
      set {
        landingUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "landingUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLandingUrl {
      get { return landingUrl_ != null; }
    }
    /// <summary>Clears the value of the "landingUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLandingUrl() {
      landingUrl_ = null;
    }

    /// <summary>Field number for the "libraryName" field.</summary>
    public const int LibraryNameFieldNumber = 4;
    private readonly static string LibraryNameDefaultValue = "";

    private string libraryName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LibraryName {
      get { return libraryName_ ?? LibraryNameDefaultValue; }
      set {
        libraryName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "libraryName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLibraryName {
      get { return libraryName_ != null; }
    }
    /// <summary>Clears the value of the "libraryName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLibraryName() {
      libraryName_ = null;
    }

    /// <summary>Field number for the "recsWidgetUrl" field.</summary>
    public const int RecsWidgetUrlFieldNumber = 6;
    private readonly static string RecsWidgetUrlDefaultValue = "";

    private string recsWidgetUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RecsWidgetUrl {
      get { return recsWidgetUrl_ ?? RecsWidgetUrlDefaultValue; }
      set {
        recsWidgetUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "recsWidgetUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRecsWidgetUrl {
      get { return recsWidgetUrl_ != null; }
    }
    /// <summary>Clears the value of the "recsWidgetUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRecsWidgetUrl() {
      recsWidgetUrl_ = null;
    }

    /// <summary>Field number for the "shopName" field.</summary>
    public const int ShopNameFieldNumber = 7;
    private readonly static string ShopNameDefaultValue = "";

    private string shopName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShopName {
      get { return shopName_ ?? ShopNameDefaultValue; }
      set {
        shopName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "shopName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasShopName {
      get { return shopName_ != null; }
    }
    /// <summary>Clears the value of the "shopName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearShopName() {
      shopName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CorpusMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CorpusMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Backend != other.Backend) return false;
      if (Name != other.Name) return false;
      if (LandingUrl != other.LandingUrl) return false;
      if (LibraryName != other.LibraryName) return false;
      if (RecsWidgetUrl != other.RecsWidgetUrl) return false;
      if (ShopName != other.ShopName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBackend) hash ^= Backend.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasLandingUrl) hash ^= LandingUrl.GetHashCode();
      if (HasLibraryName) hash ^= LibraryName.GetHashCode();
      if (HasRecsWidgetUrl) hash ^= RecsWidgetUrl.GetHashCode();
      if (HasShopName) hash ^= ShopName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasBackend) {
        output.WriteRawTag(8);
        output.WriteInt32(Backend);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasLandingUrl) {
        output.WriteRawTag(26);
        output.WriteString(LandingUrl);
      }
      if (HasLibraryName) {
        output.WriteRawTag(34);
        output.WriteString(LibraryName);
      }
      if (HasRecsWidgetUrl) {
        output.WriteRawTag(50);
        output.WriteString(RecsWidgetUrl);
      }
      if (HasShopName) {
        output.WriteRawTag(58);
        output.WriteString(ShopName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasBackend) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Backend);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasLandingUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LandingUrl);
      }
      if (HasLibraryName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LibraryName);
      }
      if (HasRecsWidgetUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RecsWidgetUrl);
      }
      if (HasShopName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShopName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CorpusMetadata other) {
      if (other == null) {
        return;
      }
      if (other.HasBackend) {
        Backend = other.Backend;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasLandingUrl) {
        LandingUrl = other.LandingUrl;
      }
      if (other.HasLibraryName) {
        LibraryName = other.LibraryName;
      }
      if (other.HasRecsWidgetUrl) {
        RecsWidgetUrl = other.RecsWidgetUrl;
      }
      if (other.HasShopName) {
        ShopName = other.ShopName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Backend = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            LandingUrl = input.ReadString();
            break;
          }
          case 34: {
            LibraryName = input.ReadString();
            break;
          }
          case 50: {
            RecsWidgetUrl = input.ReadString();
            break;
          }
          case 58: {
            ShopName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Experiments : pb::IMessage<Experiments> {
    private static readonly pb::MessageParser<Experiments> _parser = new pb::MessageParser<Experiments>(() => new Experiments());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Experiments> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[186]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Experiments() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Experiments(Experiments other) : this() {
      experimentId_ = other.experimentId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Experiments Clone() {
      return new Experiments(this);
    }

    /// <summary>Field number for the "experimentId" field.</summary>
    public const int ExperimentIdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_experimentId_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> experimentId_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ExperimentId {
      get { return experimentId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Experiments);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Experiments other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!experimentId_.Equals(other.experimentId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= experimentId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      experimentId_.WriteTo(output, _repeated_experimentId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += experimentId_.CalculateSize(_repeated_experimentId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Experiments other) {
      if (other == null) {
        return;
      }
      experimentId_.Add(other.experimentId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            experimentId_.AddEntriesFrom(input, _repeated_experimentId_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SelfUpdateConfig : pb::IMessage<SelfUpdateConfig> {
    private static readonly pb::MessageParser<SelfUpdateConfig> _parser = new pb::MessageParser<SelfUpdateConfig>(() => new SelfUpdateConfig());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SelfUpdateConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[187]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelfUpdateConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelfUpdateConfig(SelfUpdateConfig other) : this() {
      _hasBits0 = other._hasBits0;
      latestClientVersionCode_ = other.latestClientVersionCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelfUpdateConfig Clone() {
      return new SelfUpdateConfig(this);
    }

    /// <summary>Field number for the "latestClientVersionCode" field.</summary>
    public const int LatestClientVersionCodeFieldNumber = 1;
    private readonly static int LatestClientVersionCodeDefaultValue = 0;

    private int latestClientVersionCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LatestClientVersionCode {
      get { if ((_hasBits0 & 1) != 0) { return latestClientVersionCode_; } else { return LatestClientVersionCodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        latestClientVersionCode_ = value;
      }
    }
    /// <summary>Gets whether the "latestClientVersionCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLatestClientVersionCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "latestClientVersionCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLatestClientVersionCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SelfUpdateConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SelfUpdateConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LatestClientVersionCode != other.LatestClientVersionCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLatestClientVersionCode) hash ^= LatestClientVersionCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasLatestClientVersionCode) {
        output.WriteRawTag(8);
        output.WriteInt32(LatestClientVersionCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasLatestClientVersionCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LatestClientVersionCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SelfUpdateConfig other) {
      if (other == null) {
        return;
      }
      if (other.HasLatestClientVersionCode) {
        LatestClientVersionCode = other.LatestClientVersionCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LatestClientVersionCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TocResponse : pb::IMessage<TocResponse> {
    private static readonly pb::MessageParser<TocResponse> _parser = new pb::MessageParser<TocResponse>(() => new TocResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TocResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[188]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TocResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TocResponse(TocResponse other) : this() {
      _hasBits0 = other._hasBits0;
      corpus_ = other.corpus_.Clone();
      tosVersionDeprecated_ = other.tosVersionDeprecated_;
      tosContent_ = other.tosContent_;
      homeUrl_ = other.homeUrl_;
      experiments_ = other.experiments_ != null ? other.experiments_.Clone() : null;
      tosCheckboxTextMarketingEmails_ = other.tosCheckboxTextMarketingEmails_;
      tosToken_ = other.tosToken_;
      userSettings_ = other.userSettings_ != null ? other.userSettings_.Clone() : null;
      iconOverrideUrl_ = other.iconOverrideUrl_;
      selfUpdateConfig_ = other.selfUpdateConfig_ != null ? other.selfUpdateConfig_.Clone() : null;
      requiresUploadDeviceConfig_ = other.requiresUploadDeviceConfig_;
      billingConfig_ = other.billingConfig_ != null ? other.billingConfig_.Clone() : null;
      recsWidgetUrl_ = other.recsWidgetUrl_;
      socialHomeUrl_ = other.socialHomeUrl_;
      ageVerificationRequired_ = other.ageVerificationRequired_;
      gPlusSignupEnabled_ = other.gPlusSignupEnabled_;
      redeemEnabled_ = other.redeemEnabled_;
      helpUrl_ = other.helpUrl_;
      themeId_ = other.themeId_;
      entertainmentHomeUrl_ = other.entertainmentHomeUrl_;
      cookie_ = other.cookie_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TocResponse Clone() {
      return new TocResponse(this);
    }

    /// <summary>Field number for the "corpus" field.</summary>
    public const int CorpusFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GooglePlayStore.CorpusMetadata> _repeated_corpus_codec
        = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.CorpusMetadata.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.CorpusMetadata> corpus_ = new pbc::RepeatedField<global::GooglePlayStore.CorpusMetadata>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.CorpusMetadata> Corpus {
      get { return corpus_; }
    }

    /// <summary>Field number for the "tosVersionDeprecated" field.</summary>
    public const int TosVersionDeprecatedFieldNumber = 2;
    private readonly static int TosVersionDeprecatedDefaultValue = 0;

    private int tosVersionDeprecated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TosVersionDeprecated {
      get { if ((_hasBits0 & 1) != 0) { return tosVersionDeprecated_; } else { return TosVersionDeprecatedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        tosVersionDeprecated_ = value;
      }
    }
    /// <summary>Gets whether the "tosVersionDeprecated" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTosVersionDeprecated {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "tosVersionDeprecated" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTosVersionDeprecated() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "tosContent" field.</summary>
    public const int TosContentFieldNumber = 3;
    private readonly static string TosContentDefaultValue = "";

    private string tosContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TosContent {
      get { return tosContent_ ?? TosContentDefaultValue; }
      set {
        tosContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tosContent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTosContent {
      get { return tosContent_ != null; }
    }
    /// <summary>Clears the value of the "tosContent" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTosContent() {
      tosContent_ = null;
    }

    /// <summary>Field number for the "homeUrl" field.</summary>
    public const int HomeUrlFieldNumber = 4;
    private readonly static string HomeUrlDefaultValue = "";

    private string homeUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HomeUrl {
      get { return homeUrl_ ?? HomeUrlDefaultValue; }
      set {
        homeUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "homeUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHomeUrl {
      get { return homeUrl_ != null; }
    }
    /// <summary>Clears the value of the "homeUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHomeUrl() {
      homeUrl_ = null;
    }

    /// <summary>Field number for the "experiments" field.</summary>
    public const int ExperimentsFieldNumber = 5;
    private global::GooglePlayStore.Experiments experiments_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Experiments Experiments {
      get { return experiments_; }
      set {
        experiments_ = value;
      }
    }

    /// <summary>Field number for the "tosCheckboxTextMarketingEmails" field.</summary>
    public const int TosCheckboxTextMarketingEmailsFieldNumber = 6;
    private readonly static string TosCheckboxTextMarketingEmailsDefaultValue = "";

    private string tosCheckboxTextMarketingEmails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TosCheckboxTextMarketingEmails {
      get { return tosCheckboxTextMarketingEmails_ ?? TosCheckboxTextMarketingEmailsDefaultValue; }
      set {
        tosCheckboxTextMarketingEmails_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tosCheckboxTextMarketingEmails" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTosCheckboxTextMarketingEmails {
      get { return tosCheckboxTextMarketingEmails_ != null; }
    }
    /// <summary>Clears the value of the "tosCheckboxTextMarketingEmails" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTosCheckboxTextMarketingEmails() {
      tosCheckboxTextMarketingEmails_ = null;
    }

    /// <summary>Field number for the "tosToken" field.</summary>
    public const int TosTokenFieldNumber = 7;
    private readonly static string TosTokenDefaultValue = "";

    private string tosToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TosToken {
      get { return tosToken_ ?? TosTokenDefaultValue; }
      set {
        tosToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tosToken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTosToken {
      get { return tosToken_ != null; }
    }
    /// <summary>Clears the value of the "tosToken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTosToken() {
      tosToken_ = null;
    }

    /// <summary>Field number for the "userSettings" field.</summary>
    public const int UserSettingsFieldNumber = 8;
    private global::GooglePlayStore.UserSettings userSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.UserSettings UserSettings {
      get { return userSettings_; }
      set {
        userSettings_ = value;
      }
    }

    /// <summary>Field number for the "iconOverrideUrl" field.</summary>
    public const int IconOverrideUrlFieldNumber = 9;
    private readonly static string IconOverrideUrlDefaultValue = "";

    private string iconOverrideUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IconOverrideUrl {
      get { return iconOverrideUrl_ ?? IconOverrideUrlDefaultValue; }
      set {
        iconOverrideUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "iconOverrideUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIconOverrideUrl {
      get { return iconOverrideUrl_ != null; }
    }
    /// <summary>Clears the value of the "iconOverrideUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIconOverrideUrl() {
      iconOverrideUrl_ = null;
    }

    /// <summary>Field number for the "selfUpdateConfig" field.</summary>
    public const int SelfUpdateConfigFieldNumber = 10;
    private global::GooglePlayStore.SelfUpdateConfig selfUpdateConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SelfUpdateConfig SelfUpdateConfig {
      get { return selfUpdateConfig_; }
      set {
        selfUpdateConfig_ = value;
      }
    }

    /// <summary>Field number for the "requiresUploadDeviceConfig" field.</summary>
    public const int RequiresUploadDeviceConfigFieldNumber = 11;
    private readonly static bool RequiresUploadDeviceConfigDefaultValue = false;

    private bool requiresUploadDeviceConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RequiresUploadDeviceConfig {
      get { if ((_hasBits0 & 2) != 0) { return requiresUploadDeviceConfig_; } else { return RequiresUploadDeviceConfigDefaultValue; } }
      set {
        _hasBits0 |= 2;
        requiresUploadDeviceConfig_ = value;
      }
    }
    /// <summary>Gets whether the "requiresUploadDeviceConfig" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRequiresUploadDeviceConfig {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "requiresUploadDeviceConfig" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequiresUploadDeviceConfig() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "billingConfig" field.</summary>
    public const int BillingConfigFieldNumber = 12;
    private global::GooglePlayStore.BillingConfig billingConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.BillingConfig BillingConfig {
      get { return billingConfig_; }
      set {
        billingConfig_ = value;
      }
    }

    /// <summary>Field number for the "recsWidgetUrl" field.</summary>
    public const int RecsWidgetUrlFieldNumber = 13;
    private readonly static string RecsWidgetUrlDefaultValue = "";

    private string recsWidgetUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RecsWidgetUrl {
      get { return recsWidgetUrl_ ?? RecsWidgetUrlDefaultValue; }
      set {
        recsWidgetUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "recsWidgetUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRecsWidgetUrl {
      get { return recsWidgetUrl_ != null; }
    }
    /// <summary>Clears the value of the "recsWidgetUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRecsWidgetUrl() {
      recsWidgetUrl_ = null;
    }

    /// <summary>Field number for the "socialHomeUrl" field.</summary>
    public const int SocialHomeUrlFieldNumber = 15;
    private readonly static string SocialHomeUrlDefaultValue = "";

    private string socialHomeUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SocialHomeUrl {
      get { return socialHomeUrl_ ?? SocialHomeUrlDefaultValue; }
      set {
        socialHomeUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "socialHomeUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSocialHomeUrl {
      get { return socialHomeUrl_ != null; }
    }
    /// <summary>Clears the value of the "socialHomeUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSocialHomeUrl() {
      socialHomeUrl_ = null;
    }

    /// <summary>Field number for the "ageVerificationRequired" field.</summary>
    public const int AgeVerificationRequiredFieldNumber = 16;
    private readonly static bool AgeVerificationRequiredDefaultValue = false;

    private bool ageVerificationRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AgeVerificationRequired {
      get { if ((_hasBits0 & 4) != 0) { return ageVerificationRequired_; } else { return AgeVerificationRequiredDefaultValue; } }
      set {
        _hasBits0 |= 4;
        ageVerificationRequired_ = value;
      }
    }
    /// <summary>Gets whether the "ageVerificationRequired" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgeVerificationRequired {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ageVerificationRequired" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgeVerificationRequired() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "gPlusSignupEnabled" field.</summary>
    public const int GPlusSignupEnabledFieldNumber = 17;
    private readonly static bool GPlusSignupEnabledDefaultValue = false;

    private bool gPlusSignupEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool GPlusSignupEnabled {
      get { if ((_hasBits0 & 8) != 0) { return gPlusSignupEnabled_; } else { return GPlusSignupEnabledDefaultValue; } }
      set {
        _hasBits0 |= 8;
        gPlusSignupEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "gPlusSignupEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGPlusSignupEnabled {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "gPlusSignupEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGPlusSignupEnabled() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "redeemEnabled" field.</summary>
    public const int RedeemEnabledFieldNumber = 18;
    private readonly static bool RedeemEnabledDefaultValue = false;

    private bool redeemEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RedeemEnabled {
      get { if ((_hasBits0 & 16) != 0) { return redeemEnabled_; } else { return RedeemEnabledDefaultValue; } }
      set {
        _hasBits0 |= 16;
        redeemEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "redeemEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRedeemEnabled {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "redeemEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRedeemEnabled() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "helpUrl" field.</summary>
    public const int HelpUrlFieldNumber = 19;
    private readonly static string HelpUrlDefaultValue = "";

    private string helpUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HelpUrl {
      get { return helpUrl_ ?? HelpUrlDefaultValue; }
      set {
        helpUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "helpUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHelpUrl {
      get { return helpUrl_ != null; }
    }
    /// <summary>Clears the value of the "helpUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHelpUrl() {
      helpUrl_ = null;
    }

    /// <summary>Field number for the "themeId" field.</summary>
    public const int ThemeIdFieldNumber = 20;
    private readonly static int ThemeIdDefaultValue = 0;

    private int themeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ThemeId {
      get { if ((_hasBits0 & 32) != 0) { return themeId_; } else { return ThemeIdDefaultValue; } }
      set {
        _hasBits0 |= 32;
        themeId_ = value;
      }
    }
    /// <summary>Gets whether the "themeId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasThemeId {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "themeId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearThemeId() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "entertainmentHomeUrl" field.</summary>
    public const int EntertainmentHomeUrlFieldNumber = 21;
    private readonly static string EntertainmentHomeUrlDefaultValue = "";

    private string entertainmentHomeUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EntertainmentHomeUrl {
      get { return entertainmentHomeUrl_ ?? EntertainmentHomeUrlDefaultValue; }
      set {
        entertainmentHomeUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "entertainmentHomeUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEntertainmentHomeUrl {
      get { return entertainmentHomeUrl_ != null; }
    }
    /// <summary>Clears the value of the "entertainmentHomeUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEntertainmentHomeUrl() {
      entertainmentHomeUrl_ = null;
    }

    /// <summary>Field number for the "cookie" field.</summary>
    public const int CookieFieldNumber = 22;
    private readonly static string CookieDefaultValue = "";

    private string cookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cookie {
      get { return cookie_ ?? CookieDefaultValue; }
      set {
        cookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cookie" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCookie {
      get { return cookie_ != null; }
    }
    /// <summary>Clears the value of the "cookie" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCookie() {
      cookie_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TocResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TocResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!corpus_.Equals(other.corpus_)) return false;
      if (TosVersionDeprecated != other.TosVersionDeprecated) return false;
      if (TosContent != other.TosContent) return false;
      if (HomeUrl != other.HomeUrl) return false;
      if (!object.Equals(Experiments, other.Experiments)) return false;
      if (TosCheckboxTextMarketingEmails != other.TosCheckboxTextMarketingEmails) return false;
      if (TosToken != other.TosToken) return false;
      if (!object.Equals(UserSettings, other.UserSettings)) return false;
      if (IconOverrideUrl != other.IconOverrideUrl) return false;
      if (!object.Equals(SelfUpdateConfig, other.SelfUpdateConfig)) return false;
      if (RequiresUploadDeviceConfig != other.RequiresUploadDeviceConfig) return false;
      if (!object.Equals(BillingConfig, other.BillingConfig)) return false;
      if (RecsWidgetUrl != other.RecsWidgetUrl) return false;
      if (SocialHomeUrl != other.SocialHomeUrl) return false;
      if (AgeVerificationRequired != other.AgeVerificationRequired) return false;
      if (GPlusSignupEnabled != other.GPlusSignupEnabled) return false;
      if (RedeemEnabled != other.RedeemEnabled) return false;
      if (HelpUrl != other.HelpUrl) return false;
      if (ThemeId != other.ThemeId) return false;
      if (EntertainmentHomeUrl != other.EntertainmentHomeUrl) return false;
      if (Cookie != other.Cookie) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= corpus_.GetHashCode();
      if (HasTosVersionDeprecated) hash ^= TosVersionDeprecated.GetHashCode();
      if (HasTosContent) hash ^= TosContent.GetHashCode();
      if (HasHomeUrl) hash ^= HomeUrl.GetHashCode();
      if (experiments_ != null) hash ^= Experiments.GetHashCode();
      if (HasTosCheckboxTextMarketingEmails) hash ^= TosCheckboxTextMarketingEmails.GetHashCode();
      if (HasTosToken) hash ^= TosToken.GetHashCode();
      if (userSettings_ != null) hash ^= UserSettings.GetHashCode();
      if (HasIconOverrideUrl) hash ^= IconOverrideUrl.GetHashCode();
      if (selfUpdateConfig_ != null) hash ^= SelfUpdateConfig.GetHashCode();
      if (HasRequiresUploadDeviceConfig) hash ^= RequiresUploadDeviceConfig.GetHashCode();
      if (billingConfig_ != null) hash ^= BillingConfig.GetHashCode();
      if (HasRecsWidgetUrl) hash ^= RecsWidgetUrl.GetHashCode();
      if (HasSocialHomeUrl) hash ^= SocialHomeUrl.GetHashCode();
      if (HasAgeVerificationRequired) hash ^= AgeVerificationRequired.GetHashCode();
      if (HasGPlusSignupEnabled) hash ^= GPlusSignupEnabled.GetHashCode();
      if (HasRedeemEnabled) hash ^= RedeemEnabled.GetHashCode();
      if (HasHelpUrl) hash ^= HelpUrl.GetHashCode();
      if (HasThemeId) hash ^= ThemeId.GetHashCode();
      if (HasEntertainmentHomeUrl) hash ^= EntertainmentHomeUrl.GetHashCode();
      if (HasCookie) hash ^= Cookie.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      corpus_.WriteTo(output, _repeated_corpus_codec);
      if (HasTosVersionDeprecated) {
        output.WriteRawTag(16);
        output.WriteInt32(TosVersionDeprecated);
      }
      if (HasTosContent) {
        output.WriteRawTag(26);
        output.WriteString(TosContent);
      }
      if (HasHomeUrl) {
        output.WriteRawTag(34);
        output.WriteString(HomeUrl);
      }
      if (experiments_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Experiments);
      }
      if (HasTosCheckboxTextMarketingEmails) {
        output.WriteRawTag(50);
        output.WriteString(TosCheckboxTextMarketingEmails);
      }
      if (HasTosToken) {
        output.WriteRawTag(58);
        output.WriteString(TosToken);
      }
      if (userSettings_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(UserSettings);
      }
      if (HasIconOverrideUrl) {
        output.WriteRawTag(74);
        output.WriteString(IconOverrideUrl);
      }
      if (selfUpdateConfig_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(SelfUpdateConfig);
      }
      if (HasRequiresUploadDeviceConfig) {
        output.WriteRawTag(88);
        output.WriteBool(RequiresUploadDeviceConfig);
      }
      if (billingConfig_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(BillingConfig);
      }
      if (HasRecsWidgetUrl) {
        output.WriteRawTag(106);
        output.WriteString(RecsWidgetUrl);
      }
      if (HasSocialHomeUrl) {
        output.WriteRawTag(122);
        output.WriteString(SocialHomeUrl);
      }
      if (HasAgeVerificationRequired) {
        output.WriteRawTag(128, 1);
        output.WriteBool(AgeVerificationRequired);
      }
      if (HasGPlusSignupEnabled) {
        output.WriteRawTag(136, 1);
        output.WriteBool(GPlusSignupEnabled);
      }
      if (HasRedeemEnabled) {
        output.WriteRawTag(144, 1);
        output.WriteBool(RedeemEnabled);
      }
      if (HasHelpUrl) {
        output.WriteRawTag(154, 1);
        output.WriteString(HelpUrl);
      }
      if (HasThemeId) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(ThemeId);
      }
      if (HasEntertainmentHomeUrl) {
        output.WriteRawTag(170, 1);
        output.WriteString(EntertainmentHomeUrl);
      }
      if (HasCookie) {
        output.WriteRawTag(178, 1);
        output.WriteString(Cookie);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += corpus_.CalculateSize(_repeated_corpus_codec);
      if (HasTosVersionDeprecated) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TosVersionDeprecated);
      }
      if (HasTosContent) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TosContent);
      }
      if (HasHomeUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeUrl);
      }
      if (experiments_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Experiments);
      }
      if (HasTosCheckboxTextMarketingEmails) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TosCheckboxTextMarketingEmails);
      }
      if (HasTosToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TosToken);
      }
      if (userSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserSettings);
      }
      if (HasIconOverrideUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconOverrideUrl);
      }
      if (selfUpdateConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelfUpdateConfig);
      }
      if (HasRequiresUploadDeviceConfig) {
        size += 1 + 1;
      }
      if (billingConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BillingConfig);
      }
      if (HasRecsWidgetUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RecsWidgetUrl);
      }
      if (HasSocialHomeUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SocialHomeUrl);
      }
      if (HasAgeVerificationRequired) {
        size += 2 + 1;
      }
      if (HasGPlusSignupEnabled) {
        size += 2 + 1;
      }
      if (HasRedeemEnabled) {
        size += 2 + 1;
      }
      if (HasHelpUrl) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HelpUrl);
      }
      if (HasThemeId) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ThemeId);
      }
      if (HasEntertainmentHomeUrl) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EntertainmentHomeUrl);
      }
      if (HasCookie) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Cookie);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TocResponse other) {
      if (other == null) {
        return;
      }
      corpus_.Add(other.corpus_);
      if (other.HasTosVersionDeprecated) {
        TosVersionDeprecated = other.TosVersionDeprecated;
      }
      if (other.HasTosContent) {
        TosContent = other.TosContent;
      }
      if (other.HasHomeUrl) {
        HomeUrl = other.HomeUrl;
      }
      if (other.experiments_ != null) {
        if (experiments_ == null) {
          Experiments = new global::GooglePlayStore.Experiments();
        }
        Experiments.MergeFrom(other.Experiments);
      }
      if (other.HasTosCheckboxTextMarketingEmails) {
        TosCheckboxTextMarketingEmails = other.TosCheckboxTextMarketingEmails;
      }
      if (other.HasTosToken) {
        TosToken = other.TosToken;
      }
      if (other.userSettings_ != null) {
        if (userSettings_ == null) {
          UserSettings = new global::GooglePlayStore.UserSettings();
        }
        UserSettings.MergeFrom(other.UserSettings);
      }
      if (other.HasIconOverrideUrl) {
        IconOverrideUrl = other.IconOverrideUrl;
      }
      if (other.selfUpdateConfig_ != null) {
        if (selfUpdateConfig_ == null) {
          SelfUpdateConfig = new global::GooglePlayStore.SelfUpdateConfig();
        }
        SelfUpdateConfig.MergeFrom(other.SelfUpdateConfig);
      }
      if (other.HasRequiresUploadDeviceConfig) {
        RequiresUploadDeviceConfig = other.RequiresUploadDeviceConfig;
      }
      if (other.billingConfig_ != null) {
        if (billingConfig_ == null) {
          BillingConfig = new global::GooglePlayStore.BillingConfig();
        }
        BillingConfig.MergeFrom(other.BillingConfig);
      }
      if (other.HasRecsWidgetUrl) {
        RecsWidgetUrl = other.RecsWidgetUrl;
      }
      if (other.HasSocialHomeUrl) {
        SocialHomeUrl = other.SocialHomeUrl;
      }
      if (other.HasAgeVerificationRequired) {
        AgeVerificationRequired = other.AgeVerificationRequired;
      }
      if (other.HasGPlusSignupEnabled) {
        GPlusSignupEnabled = other.GPlusSignupEnabled;
      }
      if (other.HasRedeemEnabled) {
        RedeemEnabled = other.RedeemEnabled;
      }
      if (other.HasHelpUrl) {
        HelpUrl = other.HelpUrl;
      }
      if (other.HasThemeId) {
        ThemeId = other.ThemeId;
      }
      if (other.HasEntertainmentHomeUrl) {
        EntertainmentHomeUrl = other.EntertainmentHomeUrl;
      }
      if (other.HasCookie) {
        Cookie = other.Cookie;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            corpus_.AddEntriesFrom(input, _repeated_corpus_codec);
            break;
          }
          case 16: {
            TosVersionDeprecated = input.ReadInt32();
            break;
          }
          case 26: {
            TosContent = input.ReadString();
            break;
          }
          case 34: {
            HomeUrl = input.ReadString();
            break;
          }
          case 42: {
            if (experiments_ == null) {
              Experiments = new global::GooglePlayStore.Experiments();
            }
            input.ReadMessage(Experiments);
            break;
          }
          case 50: {
            TosCheckboxTextMarketingEmails = input.ReadString();
            break;
          }
          case 58: {
            TosToken = input.ReadString();
            break;
          }
          case 66: {
            if (userSettings_ == null) {
              UserSettings = new global::GooglePlayStore.UserSettings();
            }
            input.ReadMessage(UserSettings);
            break;
          }
          case 74: {
            IconOverrideUrl = input.ReadString();
            break;
          }
          case 82: {
            if (selfUpdateConfig_ == null) {
              SelfUpdateConfig = new global::GooglePlayStore.SelfUpdateConfig();
            }
            input.ReadMessage(SelfUpdateConfig);
            break;
          }
          case 88: {
            RequiresUploadDeviceConfig = input.ReadBool();
            break;
          }
          case 98: {
            if (billingConfig_ == null) {
              BillingConfig = new global::GooglePlayStore.BillingConfig();
            }
            input.ReadMessage(BillingConfig);
            break;
          }
          case 106: {
            RecsWidgetUrl = input.ReadString();
            break;
          }
          case 122: {
            SocialHomeUrl = input.ReadString();
            break;
          }
          case 128: {
            AgeVerificationRequired = input.ReadBool();
            break;
          }
          case 136: {
            GPlusSignupEnabled = input.ReadBool();
            break;
          }
          case 144: {
            RedeemEnabled = input.ReadBool();
            break;
          }
          case 154: {
            HelpUrl = input.ReadString();
            break;
          }
          case 160: {
            ThemeId = input.ReadInt32();
            break;
          }
          case 170: {
            EntertainmentHomeUrl = input.ReadString();
            break;
          }
          case 178: {
            Cookie = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserSettings : pb::IMessage<UserSettings> {
    private static readonly pb::MessageParser<UserSettings> _parser = new pb::MessageParser<UserSettings>(() => new UserSettings());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[189]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSettings(UserSettings other) : this() {
      _hasBits0 = other._hasBits0;
      tosCheckboxMarketingEmailsOptedIn_ = other.tosCheckboxMarketingEmailsOptedIn_;
      privacySetting_ = other.privacySetting_ != null ? other.privacySetting_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSettings Clone() {
      return new UserSettings(this);
    }

    /// <summary>Field number for the "tosCheckboxMarketingEmailsOptedIn" field.</summary>
    public const int TosCheckboxMarketingEmailsOptedInFieldNumber = 1;
    private readonly static bool TosCheckboxMarketingEmailsOptedInDefaultValue = false;

    private bool tosCheckboxMarketingEmailsOptedIn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TosCheckboxMarketingEmailsOptedIn {
      get { if ((_hasBits0 & 1) != 0) { return tosCheckboxMarketingEmailsOptedIn_; } else { return TosCheckboxMarketingEmailsOptedInDefaultValue; } }
      set {
        _hasBits0 |= 1;
        tosCheckboxMarketingEmailsOptedIn_ = value;
      }
    }
    /// <summary>Gets whether the "tosCheckboxMarketingEmailsOptedIn" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTosCheckboxMarketingEmailsOptedIn {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "tosCheckboxMarketingEmailsOptedIn" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTosCheckboxMarketingEmailsOptedIn() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "privacySetting" field.</summary>
    public const int PrivacySettingFieldNumber = 2;
    private global::GooglePlayStore.PrivacySetting privacySetting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.PrivacySetting PrivacySetting {
      get { return privacySetting_; }
      set {
        privacySetting_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TosCheckboxMarketingEmailsOptedIn != other.TosCheckboxMarketingEmailsOptedIn) return false;
      if (!object.Equals(PrivacySetting, other.PrivacySetting)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTosCheckboxMarketingEmailsOptedIn) hash ^= TosCheckboxMarketingEmailsOptedIn.GetHashCode();
      if (privacySetting_ != null) hash ^= PrivacySetting.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTosCheckboxMarketingEmailsOptedIn) {
        output.WriteRawTag(8);
        output.WriteBool(TosCheckboxMarketingEmailsOptedIn);
      }
      if (privacySetting_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PrivacySetting);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTosCheckboxMarketingEmailsOptedIn) {
        size += 1 + 1;
      }
      if (privacySetting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrivacySetting);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserSettings other) {
      if (other == null) {
        return;
      }
      if (other.HasTosCheckboxMarketingEmailsOptedIn) {
        TosCheckboxMarketingEmailsOptedIn = other.TosCheckboxMarketingEmailsOptedIn;
      }
      if (other.privacySetting_ != null) {
        if (privacySetting_ == null) {
          PrivacySetting = new global::GooglePlayStore.PrivacySetting();
        }
        PrivacySetting.MergeFrom(other.PrivacySetting);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TosCheckboxMarketingEmailsOptedIn = input.ReadBool();
            break;
          }
          case 18: {
            if (privacySetting_ == null) {
              PrivacySetting = new global::GooglePlayStore.PrivacySetting();
            }
            input.ReadMessage(PrivacySetting);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PrivacySetting : pb::IMessage<PrivacySetting> {
    private static readonly pb::MessageParser<PrivacySetting> _parser = new pb::MessageParser<PrivacySetting>(() => new PrivacySetting());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrivacySetting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[190]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivacySetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivacySetting(PrivacySetting other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      currentStatus_ = other.currentStatus_;
      enabledByDefault_ = other.enabledByDefault_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivacySetting Clone() {
      return new PrivacySetting(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "currentStatus" field.</summary>
    public const int CurrentStatusFieldNumber = 2;
    private readonly static int CurrentStatusDefaultValue = 0;

    private int currentStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentStatus {
      get { if ((_hasBits0 & 2) != 0) { return currentStatus_; } else { return CurrentStatusDefaultValue; } }
      set {
        _hasBits0 |= 2;
        currentStatus_ = value;
      }
    }
    /// <summary>Gets whether the "currentStatus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCurrentStatus {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "currentStatus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCurrentStatus() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "enabledByDefault" field.</summary>
    public const int EnabledByDefaultFieldNumber = 3;
    private readonly static bool EnabledByDefaultDefaultValue = false;

    private bool enabledByDefault_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnabledByDefault {
      get { if ((_hasBits0 & 4) != 0) { return enabledByDefault_; } else { return EnabledByDefaultDefaultValue; } }
      set {
        _hasBits0 |= 4;
        enabledByDefault_ = value;
      }
    }
    /// <summary>Gets whether the "enabledByDefault" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEnabledByDefault {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "enabledByDefault" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEnabledByDefault() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrivacySetting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrivacySetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (CurrentStatus != other.CurrentStatus) return false;
      if (EnabledByDefault != other.EnabledByDefault) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasCurrentStatus) hash ^= CurrentStatus.GetHashCode();
      if (HasEnabledByDefault) hash ^= EnabledByDefault.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasCurrentStatus) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrentStatus);
      }
      if (HasEnabledByDefault) {
        output.WriteRawTag(24);
        output.WriteBool(EnabledByDefault);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasCurrentStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentStatus);
      }
      if (HasEnabledByDefault) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrivacySetting other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasCurrentStatus) {
        CurrentStatus = other.CurrentStatus;
      }
      if (other.HasEnabledByDefault) {
        EnabledByDefault = other.EnabledByDefault;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            CurrentStatus = input.ReadInt32();
            break;
          }
          case 24: {
            EnabledByDefault = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Payload : pb::IMessage<Payload> {
    private static readonly pb::MessageParser<Payload> _parser = new pb::MessageParser<Payload>(() => new Payload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Payload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[191]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payload(Payload other) : this() {
      listResponse_ = other.listResponse_ != null ? other.listResponse_.Clone() : null;
      detailsResponse_ = other.detailsResponse_ != null ? other.detailsResponse_.Clone() : null;
      reviewResponse_ = other.reviewResponse_ != null ? other.reviewResponse_.Clone() : null;
      buyResponse_ = other.buyResponse_ != null ? other.buyResponse_.Clone() : null;
      searchResponse_ = other.searchResponse_ != null ? other.searchResponse_.Clone() : null;
      tocResponse_ = other.tocResponse_ != null ? other.tocResponse_.Clone() : null;
      browseResponse_ = other.browseResponse_ != null ? other.browseResponse_.Clone() : null;
      purchaseStatusResponse_ = other.purchaseStatusResponse_ != null ? other.purchaseStatusResponse_.Clone() : null;
      logResponse_ = other.logResponse_;
      flagContentResponse_ = other.flagContentResponse_;
      bulkDetailsResponse_ = other.bulkDetailsResponse_ != null ? other.bulkDetailsResponse_.Clone() : null;
      deliveryResponse_ = other.deliveryResponse_ != null ? other.deliveryResponse_.Clone() : null;
      acceptTosResponse_ = other.acceptTosResponse_ != null ? other.acceptTosResponse_.Clone() : null;
      checkPromoOfferResponse_ = other.checkPromoOfferResponse_ != null ? other.checkPromoOfferResponse_.Clone() : null;
      instrumentSetupInfoResponse_ = other.instrumentSetupInfoResponse_ != null ? other.instrumentSetupInfoResponse_.Clone() : null;
      androidCheckinResponse_ = other.androidCheckinResponse_ != null ? other.androidCheckinResponse_.Clone() : null;
      uploadDeviceConfigResponse_ = other.uploadDeviceConfigResponse_ != null ? other.uploadDeviceConfigResponse_.Clone() : null;
      searchSuggestResponse_ = other.searchSuggestResponse_ != null ? other.searchSuggestResponse_.Clone() : null;
      consumePurchaseResponse_ = other.consumePurchaseResponse_ != null ? other.consumePurchaseResponse_.Clone() : null;
      billingProfileResponse_ = other.billingProfileResponse_ != null ? other.billingProfileResponse_.Clone() : null;
      debugSettingsResponse_ = other.debugSettingsResponse_ != null ? other.debugSettingsResponse_.Clone() : null;
      checkIabPromoResponse_ = other.checkIabPromoResponse_ != null ? other.checkIabPromoResponse_.Clone() : null;
      userActivitySettingsResponse_ = other.userActivitySettingsResponse_ != null ? other.userActivitySettingsResponse_.Clone() : null;
      recordUserActivityResponse_ = other.recordUserActivityResponse_ != null ? other.recordUserActivityResponse_.Clone() : null;
      redeemCodeResponse_ = other.redeemCodeResponse_ != null ? other.redeemCodeResponse_.Clone() : null;
      selfUpdateResponse_ = other.selfUpdateResponse_ != null ? other.selfUpdateResponse_.Clone() : null;
      getInitialInstrumentFlowStateResponse_ = other.getInitialInstrumentFlowStateResponse_ != null ? other.getInitialInstrumentFlowStateResponse_.Clone() : null;
      createInstrumentResponse_ = other.createInstrumentResponse_ != null ? other.createInstrumentResponse_.Clone() : null;
      challengeResponse_ = other.challengeResponse_ != null ? other.challengeResponse_.Clone() : null;
      backupDeviceChoicesResponse_ = other.backupDeviceChoicesResponse_ != null ? other.backupDeviceChoicesResponse_.Clone() : null;
      backupDocumentChoicesResponse_ = other.backupDocumentChoicesResponse_ != null ? other.backupDocumentChoicesResponse_.Clone() : null;
      earlyUpdateResponse_ = other.earlyUpdateResponse_ != null ? other.earlyUpdateResponse_.Clone() : null;
      preloadsResponse_ = other.preloadsResponse_ != null ? other.preloadsResponse_.Clone() : null;
      myAccountsResponse_ = other.myAccountsResponse_ != null ? other.myAccountsResponse_.Clone() : null;
      contentFilterResponse_ = other.contentFilterResponse_ != null ? other.contentFilterResponse_.Clone() : null;
      experimentsResponse_ = other.experimentsResponse_ != null ? other.experimentsResponse_.Clone() : null;
      surveyResponse_ = other.surveyResponse_ != null ? other.surveyResponse_.Clone() : null;
      pingResponse_ = other.pingResponse_ != null ? other.pingResponse_.Clone() : null;
      updateUserSettingResponse_ = other.updateUserSettingResponse_ != null ? other.updateUserSettingResponse_.Clone() : null;
      getUserSettingsResponse_ = other.getUserSettingsResponse_ != null ? other.getUserSettingsResponse_.Clone() : null;
      getSharingSettingsResponse_ = other.getSharingSettingsResponse_ != null ? other.getSharingSettingsResponse_.Clone() : null;
      updateSharingSettingsResponse_ = other.updateSharingSettingsResponse_ != null ? other.updateSharingSettingsResponse_.Clone() : null;
      reviewSnippetsResponse_ = other.reviewSnippetsResponse_ != null ? other.reviewSnippetsResponse_.Clone() : null;
      documentSharingStateResponse_ = other.documentSharingStateResponse_ != null ? other.documentSharingStateResponse_.Clone() : null;
      moduleDeliveryResponse_ = other.moduleDeliveryResponse_ != null ? other.moduleDeliveryResponse_.Clone() : null;
      testingProgramResponse_ = other.testingProgramResponse_ != null ? other.testingProgramResponse_.Clone() : null;
      reviewSummaryResponse_ = other.reviewSummaryResponse_ != null ? other.reviewSummaryResponse_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payload Clone() {
      return new Payload(this);
    }

    /// <summary>Field number for the "listResponse" field.</summary>
    public const int ListResponseFieldNumber = 1;
    private global::GooglePlayStore.ListResponse listResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ListResponse ListResponse {
      get { return listResponse_; }
      set {
        listResponse_ = value;
      }
    }

    /// <summary>Field number for the "detailsResponse" field.</summary>
    public const int DetailsResponseFieldNumber = 2;
    private global::GooglePlayStore.DetailsResponse detailsResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DetailsResponse DetailsResponse {
      get { return detailsResponse_; }
      set {
        detailsResponse_ = value;
      }
    }

    /// <summary>Field number for the "reviewResponse" field.</summary>
    public const int ReviewResponseFieldNumber = 3;
    private global::GooglePlayStore.ReviewResponse reviewResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ReviewResponse ReviewResponse {
      get { return reviewResponse_; }
      set {
        reviewResponse_ = value;
      }
    }

    /// <summary>Field number for the "buyResponse" field.</summary>
    public const int BuyResponseFieldNumber = 4;
    private global::GooglePlayStore.BuyResponse buyResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.BuyResponse BuyResponse {
      get { return buyResponse_; }
      set {
        buyResponse_ = value;
      }
    }

    /// <summary>Field number for the "searchResponse" field.</summary>
    public const int SearchResponseFieldNumber = 5;
    private global::GooglePlayStore.SearchResponse searchResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SearchResponse SearchResponse {
      get { return searchResponse_; }
      set {
        searchResponse_ = value;
      }
    }

    /// <summary>Field number for the "tocResponse" field.</summary>
    public const int TocResponseFieldNumber = 6;
    private global::GooglePlayStore.TocResponse tocResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TocResponse TocResponse {
      get { return tocResponse_; }
      set {
        tocResponse_ = value;
      }
    }

    /// <summary>Field number for the "browseResponse" field.</summary>
    public const int BrowseResponseFieldNumber = 7;
    private global::GooglePlayStore.BrowseResponse browseResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.BrowseResponse BrowseResponse {
      get { return browseResponse_; }
      set {
        browseResponse_ = value;
      }
    }

    /// <summary>Field number for the "purchaseStatusResponse" field.</summary>
    public const int PurchaseStatusResponseFieldNumber = 8;
    private global::GooglePlayStore.PurchaseStatusResponse purchaseStatusResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.PurchaseStatusResponse PurchaseStatusResponse {
      get { return purchaseStatusResponse_; }
      set {
        purchaseStatusResponse_ = value;
      }
    }

    /// <summary>Field number for the "logResponse" field.</summary>
    public const int LogResponseFieldNumber = 10;
    private readonly static string LogResponseDefaultValue = "";

    private string logResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LogResponse {
      get { return logResponse_ ?? LogResponseDefaultValue; }
      set {
        logResponse_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "logResponse" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLogResponse {
      get { return logResponse_ != null; }
    }
    /// <summary>Clears the value of the "logResponse" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLogResponse() {
      logResponse_ = null;
    }

    /// <summary>Field number for the "flagContentResponse" field.</summary>
    public const int FlagContentResponseFieldNumber = 13;
    private readonly static string FlagContentResponseDefaultValue = "";

    private string flagContentResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FlagContentResponse {
      get { return flagContentResponse_ ?? FlagContentResponseDefaultValue; }
      set {
        flagContentResponse_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "flagContentResponse" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFlagContentResponse {
      get { return flagContentResponse_ != null; }
    }
    /// <summary>Clears the value of the "flagContentResponse" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFlagContentResponse() {
      flagContentResponse_ = null;
    }

    /// <summary>Field number for the "bulkDetailsResponse" field.</summary>
    public const int BulkDetailsResponseFieldNumber = 19;
    private global::GooglePlayStore.BulkDetailsResponse bulkDetailsResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.BulkDetailsResponse BulkDetailsResponse {
      get { return bulkDetailsResponse_; }
      set {
        bulkDetailsResponse_ = value;
      }
    }

    /// <summary>Field number for the "deliveryResponse" field.</summary>
    public const int DeliveryResponseFieldNumber = 21;
    private global::GooglePlayStore.DeliveryResponse deliveryResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DeliveryResponse DeliveryResponse {
      get { return deliveryResponse_; }
      set {
        deliveryResponse_ = value;
      }
    }

    /// <summary>Field number for the "acceptTosResponse" field.</summary>
    public const int AcceptTosResponseFieldNumber = 22;
    private global::GooglePlayStore.AcceptTosResponse acceptTosResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AcceptTosResponse AcceptTosResponse {
      get { return acceptTosResponse_; }
      set {
        acceptTosResponse_ = value;
      }
    }

    /// <summary>Field number for the "checkPromoOfferResponse" field.</summary>
    public const int CheckPromoOfferResponseFieldNumber = 24;
    private global::GooglePlayStore.CheckPromoOfferResponse checkPromoOfferResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CheckPromoOfferResponse CheckPromoOfferResponse {
      get { return checkPromoOfferResponse_; }
      set {
        checkPromoOfferResponse_ = value;
      }
    }

    /// <summary>Field number for the "instrumentSetupInfoResponse" field.</summary>
    public const int InstrumentSetupInfoResponseFieldNumber = 25;
    private global::GooglePlayStore.InstrumentSetupInfoResponse instrumentSetupInfoResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.InstrumentSetupInfoResponse InstrumentSetupInfoResponse {
      get { return instrumentSetupInfoResponse_; }
      set {
        instrumentSetupInfoResponse_ = value;
      }
    }

    /// <summary>Field number for the "androidCheckinResponse" field.</summary>
    public const int AndroidCheckinResponseFieldNumber = 26;
    private global::GooglePlayStore.AndroidCheckinResponse androidCheckinResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AndroidCheckinResponse AndroidCheckinResponse {
      get { return androidCheckinResponse_; }
      set {
        androidCheckinResponse_ = value;
      }
    }

    /// <summary>Field number for the "uploadDeviceConfigResponse" field.</summary>
    public const int UploadDeviceConfigResponseFieldNumber = 28;
    private global::GooglePlayStore.UploadDeviceConfigResponse uploadDeviceConfigResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.UploadDeviceConfigResponse UploadDeviceConfigResponse {
      get { return uploadDeviceConfigResponse_; }
      set {
        uploadDeviceConfigResponse_ = value;
      }
    }

    /// <summary>Field number for the "searchSuggestResponse" field.</summary>
    public const int SearchSuggestResponseFieldNumber = 40;
    private global::GooglePlayStore.SearchSuggestResponse searchSuggestResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SearchSuggestResponse SearchSuggestResponse {
      get { return searchSuggestResponse_; }
      set {
        searchSuggestResponse_ = value;
      }
    }

    /// <summary>Field number for the "consumePurchaseResponse" field.</summary>
    public const int ConsumePurchaseResponseFieldNumber = 30;
    private global::GooglePlayStore.ConsumePurchaseResponse consumePurchaseResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ConsumePurchaseResponse ConsumePurchaseResponse {
      get { return consumePurchaseResponse_; }
      set {
        consumePurchaseResponse_ = value;
      }
    }

    /// <summary>Field number for the "billingProfileResponse" field.</summary>
    public const int BillingProfileResponseFieldNumber = 31;
    private global::GooglePlayStore.BillingProfileResponse billingProfileResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.BillingProfileResponse BillingProfileResponse {
      get { return billingProfileResponse_; }
      set {
        billingProfileResponse_ = value;
      }
    }

    /// <summary>Field number for the "debugSettingsResponse" field.</summary>
    public const int DebugSettingsResponseFieldNumber = 34;
    private global::GooglePlayStore.DebugSettingsResponse debugSettingsResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DebugSettingsResponse DebugSettingsResponse {
      get { return debugSettingsResponse_; }
      set {
        debugSettingsResponse_ = value;
      }
    }

    /// <summary>Field number for the "checkIabPromoResponse" field.</summary>
    public const int CheckIabPromoResponseFieldNumber = 35;
    private global::GooglePlayStore.CheckIabPromoResponse checkIabPromoResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CheckIabPromoResponse CheckIabPromoResponse {
      get { return checkIabPromoResponse_; }
      set {
        checkIabPromoResponse_ = value;
      }
    }

    /// <summary>Field number for the "userActivitySettingsResponse" field.</summary>
    public const int UserActivitySettingsResponseFieldNumber = 36;
    private global::GooglePlayStore.UserActivitySettingsResponse userActivitySettingsResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.UserActivitySettingsResponse UserActivitySettingsResponse {
      get { return userActivitySettingsResponse_; }
      set {
        userActivitySettingsResponse_ = value;
      }
    }

    /// <summary>Field number for the "recordUserActivityResponse" field.</summary>
    public const int RecordUserActivityResponseFieldNumber = 37;
    private global::GooglePlayStore.RecordUserActivityResponse recordUserActivityResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.RecordUserActivityResponse RecordUserActivityResponse {
      get { return recordUserActivityResponse_; }
      set {
        recordUserActivityResponse_ = value;
      }
    }

    /// <summary>Field number for the "redeemCodeResponse" field.</summary>
    public const int RedeemCodeResponseFieldNumber = 38;
    private global::GooglePlayStore.RedeemCodeResponse redeemCodeResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.RedeemCodeResponse RedeemCodeResponse {
      get { return redeemCodeResponse_; }
      set {
        redeemCodeResponse_ = value;
      }
    }

    /// <summary>Field number for the "selfUpdateResponse" field.</summary>
    public const int SelfUpdateResponseFieldNumber = 39;
    private global::GooglePlayStore.SelfUpdateResponse selfUpdateResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SelfUpdateResponse SelfUpdateResponse {
      get { return selfUpdateResponse_; }
      set {
        selfUpdateResponse_ = value;
      }
    }

    /// <summary>Field number for the "getInitialInstrumentFlowStateResponse" field.</summary>
    public const int GetInitialInstrumentFlowStateResponseFieldNumber = 41;
    private global::GooglePlayStore.GetInitialInstrumentFlowStateResponse getInitialInstrumentFlowStateResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.GetInitialInstrumentFlowStateResponse GetInitialInstrumentFlowStateResponse {
      get { return getInitialInstrumentFlowStateResponse_; }
      set {
        getInitialInstrumentFlowStateResponse_ = value;
      }
    }

    /// <summary>Field number for the "createInstrumentResponse" field.</summary>
    public const int CreateInstrumentResponseFieldNumber = 42;
    private global::GooglePlayStore.CreateInstrumentResponse createInstrumentResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CreateInstrumentResponse CreateInstrumentResponse {
      get { return createInstrumentResponse_; }
      set {
        createInstrumentResponse_ = value;
      }
    }

    /// <summary>Field number for the "challengeResponse" field.</summary>
    public const int ChallengeResponseFieldNumber = 43;
    private global::GooglePlayStore.ChallengeResponse challengeResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ChallengeResponse ChallengeResponse {
      get { return challengeResponse_; }
      set {
        challengeResponse_ = value;
      }
    }

    /// <summary>Field number for the "backupDeviceChoicesResponse" field.</summary>
    public const int BackupDeviceChoicesResponseFieldNumber = 44;
    private global::GooglePlayStore.BackDeviceChoicesResponse backupDeviceChoicesResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.BackDeviceChoicesResponse BackupDeviceChoicesResponse {
      get { return backupDeviceChoicesResponse_; }
      set {
        backupDeviceChoicesResponse_ = value;
      }
    }

    /// <summary>Field number for the "backupDocumentChoicesResponse" field.</summary>
    public const int BackupDocumentChoicesResponseFieldNumber = 45;
    private global::GooglePlayStore.BackupDocumentChoicesResponse backupDocumentChoicesResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.BackupDocumentChoicesResponse BackupDocumentChoicesResponse {
      get { return backupDocumentChoicesResponse_; }
      set {
        backupDocumentChoicesResponse_ = value;
      }
    }

    /// <summary>Field number for the "earlyUpdateResponse" field.</summary>
    public const int EarlyUpdateResponseFieldNumber = 46;
    private global::GooglePlayStore.EarlyUpdateResponse earlyUpdateResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.EarlyUpdateResponse EarlyUpdateResponse {
      get { return earlyUpdateResponse_; }
      set {
        earlyUpdateResponse_ = value;
      }
    }

    /// <summary>Field number for the "preloadsResponse" field.</summary>
    public const int PreloadsResponseFieldNumber = 47;
    private global::GooglePlayStore.PreloadsResponse preloadsResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.PreloadsResponse PreloadsResponse {
      get { return preloadsResponse_; }
      set {
        preloadsResponse_ = value;
      }
    }

    /// <summary>Field number for the "myAccountsResponse" field.</summary>
    public const int MyAccountsResponseFieldNumber = 48;
    private global::GooglePlayStore.MyAccountsResponse myAccountsResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.MyAccountsResponse MyAccountsResponse {
      get { return myAccountsResponse_; }
      set {
        myAccountsResponse_ = value;
      }
    }

    /// <summary>Field number for the "contentFilterResponse" field.</summary>
    public const int ContentFilterResponseFieldNumber = 49;
    private global::GooglePlayStore.ContentFilterResponse contentFilterResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ContentFilterResponse ContentFilterResponse {
      get { return contentFilterResponse_; }
      set {
        contentFilterResponse_ = value;
      }
    }

    /// <summary>Field number for the "experimentsResponse" field.</summary>
    public const int ExperimentsResponseFieldNumber = 50;
    private global::GooglePlayStore.ExperimentsResponse experimentsResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ExperimentsResponse ExperimentsResponse {
      get { return experimentsResponse_; }
      set {
        experimentsResponse_ = value;
      }
    }

    /// <summary>Field number for the "surveyResponse" field.</summary>
    public const int SurveyResponseFieldNumber = 51;
    private global::GooglePlayStore.SurveyResponse surveyResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SurveyResponse SurveyResponse {
      get { return surveyResponse_; }
      set {
        surveyResponse_ = value;
      }
    }

    /// <summary>Field number for the "pingResponse" field.</summary>
    public const int PingResponseFieldNumber = 52;
    private global::GooglePlayStore.PingResponse pingResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.PingResponse PingResponse {
      get { return pingResponse_; }
      set {
        pingResponse_ = value;
      }
    }

    /// <summary>Field number for the "updateUserSettingResponse" field.</summary>
    public const int UpdateUserSettingResponseFieldNumber = 53;
    private global::GooglePlayStore.UpdateUserSettingResponse updateUserSettingResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.UpdateUserSettingResponse UpdateUserSettingResponse {
      get { return updateUserSettingResponse_; }
      set {
        updateUserSettingResponse_ = value;
      }
    }

    /// <summary>Field number for the "getUserSettingsResponse" field.</summary>
    public const int GetUserSettingsResponseFieldNumber = 54;
    private global::GooglePlayStore.GetUserSettingsResponse getUserSettingsResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.GetUserSettingsResponse GetUserSettingsResponse {
      get { return getUserSettingsResponse_; }
      set {
        getUserSettingsResponse_ = value;
      }
    }

    /// <summary>Field number for the "getSharingSettingsResponse" field.</summary>
    public const int GetSharingSettingsResponseFieldNumber = 56;
    private global::GooglePlayStore.GetSharingSettingsResponse getSharingSettingsResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.GetSharingSettingsResponse GetSharingSettingsResponse {
      get { return getSharingSettingsResponse_; }
      set {
        getSharingSettingsResponse_ = value;
      }
    }

    /// <summary>Field number for the "updateSharingSettingsResponse" field.</summary>
    public const int UpdateSharingSettingsResponseFieldNumber = 57;
    private global::GooglePlayStore.UpdateSharingSettingsResponse updateSharingSettingsResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.UpdateSharingSettingsResponse UpdateSharingSettingsResponse {
      get { return updateSharingSettingsResponse_; }
      set {
        updateSharingSettingsResponse_ = value;
      }
    }

    /// <summary>Field number for the "reviewSnippetsResponse" field.</summary>
    public const int ReviewSnippetsResponseFieldNumber = 58;
    private global::GooglePlayStore.ReviewSnippetsResponse reviewSnippetsResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ReviewSnippetsResponse ReviewSnippetsResponse {
      get { return reviewSnippetsResponse_; }
      set {
        reviewSnippetsResponse_ = value;
      }
    }

    /// <summary>Field number for the "documentSharingStateResponse" field.</summary>
    public const int DocumentSharingStateResponseFieldNumber = 59;
    private global::GooglePlayStore.DocumentSharingStateResponse documentSharingStateResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DocumentSharingStateResponse DocumentSharingStateResponse {
      get { return documentSharingStateResponse_; }
      set {
        documentSharingStateResponse_ = value;
      }
    }

    /// <summary>Field number for the "moduleDeliveryResponse" field.</summary>
    public const int ModuleDeliveryResponseFieldNumber = 70;
    private global::GooglePlayStore.ModuleDeliveryResponse moduleDeliveryResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ModuleDeliveryResponse ModuleDeliveryResponse {
      get { return moduleDeliveryResponse_; }
      set {
        moduleDeliveryResponse_ = value;
      }
    }

    /// <summary>Field number for the "testingProgramResponse" field.</summary>
    public const int TestingProgramResponseFieldNumber = 80;
    private global::GooglePlayStore.TestingProgramResponse testingProgramResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TestingProgramResponse TestingProgramResponse {
      get { return testingProgramResponse_; }
      set {
        testingProgramResponse_ = value;
      }
    }

    /// <summary>Field number for the "reviewSummaryResponse" field.</summary>
    public const int ReviewSummaryResponseFieldNumber = 129;
    private global::GooglePlayStore.ReviewResponse reviewSummaryResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ReviewResponse ReviewSummaryResponse {
      get { return reviewSummaryResponse_; }
      set {
        reviewSummaryResponse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Payload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Payload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ListResponse, other.ListResponse)) return false;
      if (!object.Equals(DetailsResponse, other.DetailsResponse)) return false;
      if (!object.Equals(ReviewResponse, other.ReviewResponse)) return false;
      if (!object.Equals(BuyResponse, other.BuyResponse)) return false;
      if (!object.Equals(SearchResponse, other.SearchResponse)) return false;
      if (!object.Equals(TocResponse, other.TocResponse)) return false;
      if (!object.Equals(BrowseResponse, other.BrowseResponse)) return false;
      if (!object.Equals(PurchaseStatusResponse, other.PurchaseStatusResponse)) return false;
      if (LogResponse != other.LogResponse) return false;
      if (FlagContentResponse != other.FlagContentResponse) return false;
      if (!object.Equals(BulkDetailsResponse, other.BulkDetailsResponse)) return false;
      if (!object.Equals(DeliveryResponse, other.DeliveryResponse)) return false;
      if (!object.Equals(AcceptTosResponse, other.AcceptTosResponse)) return false;
      if (!object.Equals(CheckPromoOfferResponse, other.CheckPromoOfferResponse)) return false;
      if (!object.Equals(InstrumentSetupInfoResponse, other.InstrumentSetupInfoResponse)) return false;
      if (!object.Equals(AndroidCheckinResponse, other.AndroidCheckinResponse)) return false;
      if (!object.Equals(UploadDeviceConfigResponse, other.UploadDeviceConfigResponse)) return false;
      if (!object.Equals(SearchSuggestResponse, other.SearchSuggestResponse)) return false;
      if (!object.Equals(ConsumePurchaseResponse, other.ConsumePurchaseResponse)) return false;
      if (!object.Equals(BillingProfileResponse, other.BillingProfileResponse)) return false;
      if (!object.Equals(DebugSettingsResponse, other.DebugSettingsResponse)) return false;
      if (!object.Equals(CheckIabPromoResponse, other.CheckIabPromoResponse)) return false;
      if (!object.Equals(UserActivitySettingsResponse, other.UserActivitySettingsResponse)) return false;
      if (!object.Equals(RecordUserActivityResponse, other.RecordUserActivityResponse)) return false;
      if (!object.Equals(RedeemCodeResponse, other.RedeemCodeResponse)) return false;
      if (!object.Equals(SelfUpdateResponse, other.SelfUpdateResponse)) return false;
      if (!object.Equals(GetInitialInstrumentFlowStateResponse, other.GetInitialInstrumentFlowStateResponse)) return false;
      if (!object.Equals(CreateInstrumentResponse, other.CreateInstrumentResponse)) return false;
      if (!object.Equals(ChallengeResponse, other.ChallengeResponse)) return false;
      if (!object.Equals(BackupDeviceChoicesResponse, other.BackupDeviceChoicesResponse)) return false;
      if (!object.Equals(BackupDocumentChoicesResponse, other.BackupDocumentChoicesResponse)) return false;
      if (!object.Equals(EarlyUpdateResponse, other.EarlyUpdateResponse)) return false;
      if (!object.Equals(PreloadsResponse, other.PreloadsResponse)) return false;
      if (!object.Equals(MyAccountsResponse, other.MyAccountsResponse)) return false;
      if (!object.Equals(ContentFilterResponse, other.ContentFilterResponse)) return false;
      if (!object.Equals(ExperimentsResponse, other.ExperimentsResponse)) return false;
      if (!object.Equals(SurveyResponse, other.SurveyResponse)) return false;
      if (!object.Equals(PingResponse, other.PingResponse)) return false;
      if (!object.Equals(UpdateUserSettingResponse, other.UpdateUserSettingResponse)) return false;
      if (!object.Equals(GetUserSettingsResponse, other.GetUserSettingsResponse)) return false;
      if (!object.Equals(GetSharingSettingsResponse, other.GetSharingSettingsResponse)) return false;
      if (!object.Equals(UpdateSharingSettingsResponse, other.UpdateSharingSettingsResponse)) return false;
      if (!object.Equals(ReviewSnippetsResponse, other.ReviewSnippetsResponse)) return false;
      if (!object.Equals(DocumentSharingStateResponse, other.DocumentSharingStateResponse)) return false;
      if (!object.Equals(ModuleDeliveryResponse, other.ModuleDeliveryResponse)) return false;
      if (!object.Equals(TestingProgramResponse, other.TestingProgramResponse)) return false;
      if (!object.Equals(ReviewSummaryResponse, other.ReviewSummaryResponse)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (listResponse_ != null) hash ^= ListResponse.GetHashCode();
      if (detailsResponse_ != null) hash ^= DetailsResponse.GetHashCode();
      if (reviewResponse_ != null) hash ^= ReviewResponse.GetHashCode();
      if (buyResponse_ != null) hash ^= BuyResponse.GetHashCode();
      if (searchResponse_ != null) hash ^= SearchResponse.GetHashCode();
      if (tocResponse_ != null) hash ^= TocResponse.GetHashCode();
      if (browseResponse_ != null) hash ^= BrowseResponse.GetHashCode();
      if (purchaseStatusResponse_ != null) hash ^= PurchaseStatusResponse.GetHashCode();
      if (HasLogResponse) hash ^= LogResponse.GetHashCode();
      if (HasFlagContentResponse) hash ^= FlagContentResponse.GetHashCode();
      if (bulkDetailsResponse_ != null) hash ^= BulkDetailsResponse.GetHashCode();
      if (deliveryResponse_ != null) hash ^= DeliveryResponse.GetHashCode();
      if (acceptTosResponse_ != null) hash ^= AcceptTosResponse.GetHashCode();
      if (checkPromoOfferResponse_ != null) hash ^= CheckPromoOfferResponse.GetHashCode();
      if (instrumentSetupInfoResponse_ != null) hash ^= InstrumentSetupInfoResponse.GetHashCode();
      if (androidCheckinResponse_ != null) hash ^= AndroidCheckinResponse.GetHashCode();
      if (uploadDeviceConfigResponse_ != null) hash ^= UploadDeviceConfigResponse.GetHashCode();
      if (searchSuggestResponse_ != null) hash ^= SearchSuggestResponse.GetHashCode();
      if (consumePurchaseResponse_ != null) hash ^= ConsumePurchaseResponse.GetHashCode();
      if (billingProfileResponse_ != null) hash ^= BillingProfileResponse.GetHashCode();
      if (debugSettingsResponse_ != null) hash ^= DebugSettingsResponse.GetHashCode();
      if (checkIabPromoResponse_ != null) hash ^= CheckIabPromoResponse.GetHashCode();
      if (userActivitySettingsResponse_ != null) hash ^= UserActivitySettingsResponse.GetHashCode();
      if (recordUserActivityResponse_ != null) hash ^= RecordUserActivityResponse.GetHashCode();
      if (redeemCodeResponse_ != null) hash ^= RedeemCodeResponse.GetHashCode();
      if (selfUpdateResponse_ != null) hash ^= SelfUpdateResponse.GetHashCode();
      if (getInitialInstrumentFlowStateResponse_ != null) hash ^= GetInitialInstrumentFlowStateResponse.GetHashCode();
      if (createInstrumentResponse_ != null) hash ^= CreateInstrumentResponse.GetHashCode();
      if (challengeResponse_ != null) hash ^= ChallengeResponse.GetHashCode();
      if (backupDeviceChoicesResponse_ != null) hash ^= BackupDeviceChoicesResponse.GetHashCode();
      if (backupDocumentChoicesResponse_ != null) hash ^= BackupDocumentChoicesResponse.GetHashCode();
      if (earlyUpdateResponse_ != null) hash ^= EarlyUpdateResponse.GetHashCode();
      if (preloadsResponse_ != null) hash ^= PreloadsResponse.GetHashCode();
      if (myAccountsResponse_ != null) hash ^= MyAccountsResponse.GetHashCode();
      if (contentFilterResponse_ != null) hash ^= ContentFilterResponse.GetHashCode();
      if (experimentsResponse_ != null) hash ^= ExperimentsResponse.GetHashCode();
      if (surveyResponse_ != null) hash ^= SurveyResponse.GetHashCode();
      if (pingResponse_ != null) hash ^= PingResponse.GetHashCode();
      if (updateUserSettingResponse_ != null) hash ^= UpdateUserSettingResponse.GetHashCode();
      if (getUserSettingsResponse_ != null) hash ^= GetUserSettingsResponse.GetHashCode();
      if (getSharingSettingsResponse_ != null) hash ^= GetSharingSettingsResponse.GetHashCode();
      if (updateSharingSettingsResponse_ != null) hash ^= UpdateSharingSettingsResponse.GetHashCode();
      if (reviewSnippetsResponse_ != null) hash ^= ReviewSnippetsResponse.GetHashCode();
      if (documentSharingStateResponse_ != null) hash ^= DocumentSharingStateResponse.GetHashCode();
      if (moduleDeliveryResponse_ != null) hash ^= ModuleDeliveryResponse.GetHashCode();
      if (testingProgramResponse_ != null) hash ^= TestingProgramResponse.GetHashCode();
      if (reviewSummaryResponse_ != null) hash ^= ReviewSummaryResponse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (listResponse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ListResponse);
      }
      if (detailsResponse_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DetailsResponse);
      }
      if (reviewResponse_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ReviewResponse);
      }
      if (buyResponse_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(BuyResponse);
      }
      if (searchResponse_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SearchResponse);
      }
      if (tocResponse_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TocResponse);
      }
      if (browseResponse_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(BrowseResponse);
      }
      if (purchaseStatusResponse_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PurchaseStatusResponse);
      }
      if (HasLogResponse) {
        output.WriteRawTag(82);
        output.WriteString(LogResponse);
      }
      if (HasFlagContentResponse) {
        output.WriteRawTag(106);
        output.WriteString(FlagContentResponse);
      }
      if (bulkDetailsResponse_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(BulkDetailsResponse);
      }
      if (deliveryResponse_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(DeliveryResponse);
      }
      if (acceptTosResponse_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(AcceptTosResponse);
      }
      if (checkPromoOfferResponse_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(CheckPromoOfferResponse);
      }
      if (instrumentSetupInfoResponse_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(InstrumentSetupInfoResponse);
      }
      if (androidCheckinResponse_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(AndroidCheckinResponse);
      }
      if (uploadDeviceConfigResponse_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(UploadDeviceConfigResponse);
      }
      if (consumePurchaseResponse_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(ConsumePurchaseResponse);
      }
      if (billingProfileResponse_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(BillingProfileResponse);
      }
      if (debugSettingsResponse_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(DebugSettingsResponse);
      }
      if (checkIabPromoResponse_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(CheckIabPromoResponse);
      }
      if (userActivitySettingsResponse_ != null) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(UserActivitySettingsResponse);
      }
      if (recordUserActivityResponse_ != null) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(RecordUserActivityResponse);
      }
      if (redeemCodeResponse_ != null) {
        output.WriteRawTag(178, 2);
        output.WriteMessage(RedeemCodeResponse);
      }
      if (selfUpdateResponse_ != null) {
        output.WriteRawTag(186, 2);
        output.WriteMessage(SelfUpdateResponse);
      }
      if (searchSuggestResponse_ != null) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(SearchSuggestResponse);
      }
      if (getInitialInstrumentFlowStateResponse_ != null) {
        output.WriteRawTag(202, 2);
        output.WriteMessage(GetInitialInstrumentFlowStateResponse);
      }
      if (createInstrumentResponse_ != null) {
        output.WriteRawTag(210, 2);
        output.WriteMessage(CreateInstrumentResponse);
      }
      if (challengeResponse_ != null) {
        output.WriteRawTag(218, 2);
        output.WriteMessage(ChallengeResponse);
      }
      if (backupDeviceChoicesResponse_ != null) {
        output.WriteRawTag(226, 2);
        output.WriteMessage(BackupDeviceChoicesResponse);
      }
      if (backupDocumentChoicesResponse_ != null) {
        output.WriteRawTag(234, 2);
        output.WriteMessage(BackupDocumentChoicesResponse);
      }
      if (earlyUpdateResponse_ != null) {
        output.WriteRawTag(242, 2);
        output.WriteMessage(EarlyUpdateResponse);
      }
      if (preloadsResponse_ != null) {
        output.WriteRawTag(250, 2);
        output.WriteMessage(PreloadsResponse);
      }
      if (myAccountsResponse_ != null) {
        output.WriteRawTag(130, 3);
        output.WriteMessage(MyAccountsResponse);
      }
      if (contentFilterResponse_ != null) {
        output.WriteRawTag(138, 3);
        output.WriteMessage(ContentFilterResponse);
      }
      if (experimentsResponse_ != null) {
        output.WriteRawTag(146, 3);
        output.WriteMessage(ExperimentsResponse);
      }
      if (surveyResponse_ != null) {
        output.WriteRawTag(154, 3);
        output.WriteMessage(SurveyResponse);
      }
      if (pingResponse_ != null) {
        output.WriteRawTag(162, 3);
        output.WriteMessage(PingResponse);
      }
      if (updateUserSettingResponse_ != null) {
        output.WriteRawTag(170, 3);
        output.WriteMessage(UpdateUserSettingResponse);
      }
      if (getUserSettingsResponse_ != null) {
        output.WriteRawTag(178, 3);
        output.WriteMessage(GetUserSettingsResponse);
      }
      if (getSharingSettingsResponse_ != null) {
        output.WriteRawTag(194, 3);
        output.WriteMessage(GetSharingSettingsResponse);
      }
      if (updateSharingSettingsResponse_ != null) {
        output.WriteRawTag(202, 3);
        output.WriteMessage(UpdateSharingSettingsResponse);
      }
      if (reviewSnippetsResponse_ != null) {
        output.WriteRawTag(210, 3);
        output.WriteMessage(ReviewSnippetsResponse);
      }
      if (documentSharingStateResponse_ != null) {
        output.WriteRawTag(218, 3);
        output.WriteMessage(DocumentSharingStateResponse);
      }
      if (moduleDeliveryResponse_ != null) {
        output.WriteRawTag(178, 4);
        output.WriteMessage(ModuleDeliveryResponse);
      }
      if (testingProgramResponse_ != null) {
        output.WriteRawTag(130, 5);
        output.WriteMessage(TestingProgramResponse);
      }
      if (reviewSummaryResponse_ != null) {
        output.WriteRawTag(138, 8);
        output.WriteMessage(ReviewSummaryResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (listResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ListResponse);
      }
      if (detailsResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DetailsResponse);
      }
      if (reviewResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReviewResponse);
      }
      if (buyResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BuyResponse);
      }
      if (searchResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SearchResponse);
      }
      if (tocResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TocResponse);
      }
      if (browseResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BrowseResponse);
      }
      if (purchaseStatusResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PurchaseStatusResponse);
      }
      if (HasLogResponse) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogResponse);
      }
      if (HasFlagContentResponse) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FlagContentResponse);
      }
      if (bulkDetailsResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BulkDetailsResponse);
      }
      if (deliveryResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeliveryResponse);
      }
      if (acceptTosResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AcceptTosResponse);
      }
      if (checkPromoOfferResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CheckPromoOfferResponse);
      }
      if (instrumentSetupInfoResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(InstrumentSetupInfoResponse);
      }
      if (androidCheckinResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AndroidCheckinResponse);
      }
      if (uploadDeviceConfigResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UploadDeviceConfigResponse);
      }
      if (searchSuggestResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SearchSuggestResponse);
      }
      if (consumePurchaseResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ConsumePurchaseResponse);
      }
      if (billingProfileResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BillingProfileResponse);
      }
      if (debugSettingsResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DebugSettingsResponse);
      }
      if (checkIabPromoResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CheckIabPromoResponse);
      }
      if (userActivitySettingsResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UserActivitySettingsResponse);
      }
      if (recordUserActivityResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RecordUserActivityResponse);
      }
      if (redeemCodeResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RedeemCodeResponse);
      }
      if (selfUpdateResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SelfUpdateResponse);
      }
      if (getInitialInstrumentFlowStateResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetInitialInstrumentFlowStateResponse);
      }
      if (createInstrumentResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CreateInstrumentResponse);
      }
      if (challengeResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ChallengeResponse);
      }
      if (backupDeviceChoicesResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BackupDeviceChoicesResponse);
      }
      if (backupDocumentChoicesResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BackupDocumentChoicesResponse);
      }
      if (earlyUpdateResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EarlyUpdateResponse);
      }
      if (preloadsResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PreloadsResponse);
      }
      if (myAccountsResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MyAccountsResponse);
      }
      if (contentFilterResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ContentFilterResponse);
      }
      if (experimentsResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ExperimentsResponse);
      }
      if (surveyResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SurveyResponse);
      }
      if (pingResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PingResponse);
      }
      if (updateUserSettingResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateUserSettingResponse);
      }
      if (getUserSettingsResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetUserSettingsResponse);
      }
      if (getSharingSettingsResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetSharingSettingsResponse);
      }
      if (updateSharingSettingsResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateSharingSettingsResponse);
      }
      if (reviewSnippetsResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReviewSnippetsResponse);
      }
      if (documentSharingStateResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DocumentSharingStateResponse);
      }
      if (moduleDeliveryResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ModuleDeliveryResponse);
      }
      if (testingProgramResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TestingProgramResponse);
      }
      if (reviewSummaryResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReviewSummaryResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Payload other) {
      if (other == null) {
        return;
      }
      if (other.listResponse_ != null) {
        if (listResponse_ == null) {
          ListResponse = new global::GooglePlayStore.ListResponse();
        }
        ListResponse.MergeFrom(other.ListResponse);
      }
      if (other.detailsResponse_ != null) {
        if (detailsResponse_ == null) {
          DetailsResponse = new global::GooglePlayStore.DetailsResponse();
        }
        DetailsResponse.MergeFrom(other.DetailsResponse);
      }
      if (other.reviewResponse_ != null) {
        if (reviewResponse_ == null) {
          ReviewResponse = new global::GooglePlayStore.ReviewResponse();
        }
        ReviewResponse.MergeFrom(other.ReviewResponse);
      }
      if (other.buyResponse_ != null) {
        if (buyResponse_ == null) {
          BuyResponse = new global::GooglePlayStore.BuyResponse();
        }
        BuyResponse.MergeFrom(other.BuyResponse);
      }
      if (other.searchResponse_ != null) {
        if (searchResponse_ == null) {
          SearchResponse = new global::GooglePlayStore.SearchResponse();
        }
        SearchResponse.MergeFrom(other.SearchResponse);
      }
      if (other.tocResponse_ != null) {
        if (tocResponse_ == null) {
          TocResponse = new global::GooglePlayStore.TocResponse();
        }
        TocResponse.MergeFrom(other.TocResponse);
      }
      if (other.browseResponse_ != null) {
        if (browseResponse_ == null) {
          BrowseResponse = new global::GooglePlayStore.BrowseResponse();
        }
        BrowseResponse.MergeFrom(other.BrowseResponse);
      }
      if (other.purchaseStatusResponse_ != null) {
        if (purchaseStatusResponse_ == null) {
          PurchaseStatusResponse = new global::GooglePlayStore.PurchaseStatusResponse();
        }
        PurchaseStatusResponse.MergeFrom(other.PurchaseStatusResponse);
      }
      if (other.HasLogResponse) {
        LogResponse = other.LogResponse;
      }
      if (other.HasFlagContentResponse) {
        FlagContentResponse = other.FlagContentResponse;
      }
      if (other.bulkDetailsResponse_ != null) {
        if (bulkDetailsResponse_ == null) {
          BulkDetailsResponse = new global::GooglePlayStore.BulkDetailsResponse();
        }
        BulkDetailsResponse.MergeFrom(other.BulkDetailsResponse);
      }
      if (other.deliveryResponse_ != null) {
        if (deliveryResponse_ == null) {
          DeliveryResponse = new global::GooglePlayStore.DeliveryResponse();
        }
        DeliveryResponse.MergeFrom(other.DeliveryResponse);
      }
      if (other.acceptTosResponse_ != null) {
        if (acceptTosResponse_ == null) {
          AcceptTosResponse = new global::GooglePlayStore.AcceptTosResponse();
        }
        AcceptTosResponse.MergeFrom(other.AcceptTosResponse);
      }
      if (other.checkPromoOfferResponse_ != null) {
        if (checkPromoOfferResponse_ == null) {
          CheckPromoOfferResponse = new global::GooglePlayStore.CheckPromoOfferResponse();
        }
        CheckPromoOfferResponse.MergeFrom(other.CheckPromoOfferResponse);
      }
      if (other.instrumentSetupInfoResponse_ != null) {
        if (instrumentSetupInfoResponse_ == null) {
          InstrumentSetupInfoResponse = new global::GooglePlayStore.InstrumentSetupInfoResponse();
        }
        InstrumentSetupInfoResponse.MergeFrom(other.InstrumentSetupInfoResponse);
      }
      if (other.androidCheckinResponse_ != null) {
        if (androidCheckinResponse_ == null) {
          AndroidCheckinResponse = new global::GooglePlayStore.AndroidCheckinResponse();
        }
        AndroidCheckinResponse.MergeFrom(other.AndroidCheckinResponse);
      }
      if (other.uploadDeviceConfigResponse_ != null) {
        if (uploadDeviceConfigResponse_ == null) {
          UploadDeviceConfigResponse = new global::GooglePlayStore.UploadDeviceConfigResponse();
        }
        UploadDeviceConfigResponse.MergeFrom(other.UploadDeviceConfigResponse);
      }
      if (other.searchSuggestResponse_ != null) {
        if (searchSuggestResponse_ == null) {
          SearchSuggestResponse = new global::GooglePlayStore.SearchSuggestResponse();
        }
        SearchSuggestResponse.MergeFrom(other.SearchSuggestResponse);
      }
      if (other.consumePurchaseResponse_ != null) {
        if (consumePurchaseResponse_ == null) {
          ConsumePurchaseResponse = new global::GooglePlayStore.ConsumePurchaseResponse();
        }
        ConsumePurchaseResponse.MergeFrom(other.ConsumePurchaseResponse);
      }
      if (other.billingProfileResponse_ != null) {
        if (billingProfileResponse_ == null) {
          BillingProfileResponse = new global::GooglePlayStore.BillingProfileResponse();
        }
        BillingProfileResponse.MergeFrom(other.BillingProfileResponse);
      }
      if (other.debugSettingsResponse_ != null) {
        if (debugSettingsResponse_ == null) {
          DebugSettingsResponse = new global::GooglePlayStore.DebugSettingsResponse();
        }
        DebugSettingsResponse.MergeFrom(other.DebugSettingsResponse);
      }
      if (other.checkIabPromoResponse_ != null) {
        if (checkIabPromoResponse_ == null) {
          CheckIabPromoResponse = new global::GooglePlayStore.CheckIabPromoResponse();
        }
        CheckIabPromoResponse.MergeFrom(other.CheckIabPromoResponse);
      }
      if (other.userActivitySettingsResponse_ != null) {
        if (userActivitySettingsResponse_ == null) {
          UserActivitySettingsResponse = new global::GooglePlayStore.UserActivitySettingsResponse();
        }
        UserActivitySettingsResponse.MergeFrom(other.UserActivitySettingsResponse);
      }
      if (other.recordUserActivityResponse_ != null) {
        if (recordUserActivityResponse_ == null) {
          RecordUserActivityResponse = new global::GooglePlayStore.RecordUserActivityResponse();
        }
        RecordUserActivityResponse.MergeFrom(other.RecordUserActivityResponse);
      }
      if (other.redeemCodeResponse_ != null) {
        if (redeemCodeResponse_ == null) {
          RedeemCodeResponse = new global::GooglePlayStore.RedeemCodeResponse();
        }
        RedeemCodeResponse.MergeFrom(other.RedeemCodeResponse);
      }
      if (other.selfUpdateResponse_ != null) {
        if (selfUpdateResponse_ == null) {
          SelfUpdateResponse = new global::GooglePlayStore.SelfUpdateResponse();
        }
        SelfUpdateResponse.MergeFrom(other.SelfUpdateResponse);
      }
      if (other.getInitialInstrumentFlowStateResponse_ != null) {
        if (getInitialInstrumentFlowStateResponse_ == null) {
          GetInitialInstrumentFlowStateResponse = new global::GooglePlayStore.GetInitialInstrumentFlowStateResponse();
        }
        GetInitialInstrumentFlowStateResponse.MergeFrom(other.GetInitialInstrumentFlowStateResponse);
      }
      if (other.createInstrumentResponse_ != null) {
        if (createInstrumentResponse_ == null) {
          CreateInstrumentResponse = new global::GooglePlayStore.CreateInstrumentResponse();
        }
        CreateInstrumentResponse.MergeFrom(other.CreateInstrumentResponse);
      }
      if (other.challengeResponse_ != null) {
        if (challengeResponse_ == null) {
          ChallengeResponse = new global::GooglePlayStore.ChallengeResponse();
        }
        ChallengeResponse.MergeFrom(other.ChallengeResponse);
      }
      if (other.backupDeviceChoicesResponse_ != null) {
        if (backupDeviceChoicesResponse_ == null) {
          BackupDeviceChoicesResponse = new global::GooglePlayStore.BackDeviceChoicesResponse();
        }
        BackupDeviceChoicesResponse.MergeFrom(other.BackupDeviceChoicesResponse);
      }
      if (other.backupDocumentChoicesResponse_ != null) {
        if (backupDocumentChoicesResponse_ == null) {
          BackupDocumentChoicesResponse = new global::GooglePlayStore.BackupDocumentChoicesResponse();
        }
        BackupDocumentChoicesResponse.MergeFrom(other.BackupDocumentChoicesResponse);
      }
      if (other.earlyUpdateResponse_ != null) {
        if (earlyUpdateResponse_ == null) {
          EarlyUpdateResponse = new global::GooglePlayStore.EarlyUpdateResponse();
        }
        EarlyUpdateResponse.MergeFrom(other.EarlyUpdateResponse);
      }
      if (other.preloadsResponse_ != null) {
        if (preloadsResponse_ == null) {
          PreloadsResponse = new global::GooglePlayStore.PreloadsResponse();
        }
        PreloadsResponse.MergeFrom(other.PreloadsResponse);
      }
      if (other.myAccountsResponse_ != null) {
        if (myAccountsResponse_ == null) {
          MyAccountsResponse = new global::GooglePlayStore.MyAccountsResponse();
        }
        MyAccountsResponse.MergeFrom(other.MyAccountsResponse);
      }
      if (other.contentFilterResponse_ != null) {
        if (contentFilterResponse_ == null) {
          ContentFilterResponse = new global::GooglePlayStore.ContentFilterResponse();
        }
        ContentFilterResponse.MergeFrom(other.ContentFilterResponse);
      }
      if (other.experimentsResponse_ != null) {
        if (experimentsResponse_ == null) {
          ExperimentsResponse = new global::GooglePlayStore.ExperimentsResponse();
        }
        ExperimentsResponse.MergeFrom(other.ExperimentsResponse);
      }
      if (other.surveyResponse_ != null) {
        if (surveyResponse_ == null) {
          SurveyResponse = new global::GooglePlayStore.SurveyResponse();
        }
        SurveyResponse.MergeFrom(other.SurveyResponse);
      }
      if (other.pingResponse_ != null) {
        if (pingResponse_ == null) {
          PingResponse = new global::GooglePlayStore.PingResponse();
        }
        PingResponse.MergeFrom(other.PingResponse);
      }
      if (other.updateUserSettingResponse_ != null) {
        if (updateUserSettingResponse_ == null) {
          UpdateUserSettingResponse = new global::GooglePlayStore.UpdateUserSettingResponse();
        }
        UpdateUserSettingResponse.MergeFrom(other.UpdateUserSettingResponse);
      }
      if (other.getUserSettingsResponse_ != null) {
        if (getUserSettingsResponse_ == null) {
          GetUserSettingsResponse = new global::GooglePlayStore.GetUserSettingsResponse();
        }
        GetUserSettingsResponse.MergeFrom(other.GetUserSettingsResponse);
      }
      if (other.getSharingSettingsResponse_ != null) {
        if (getSharingSettingsResponse_ == null) {
          GetSharingSettingsResponse = new global::GooglePlayStore.GetSharingSettingsResponse();
        }
        GetSharingSettingsResponse.MergeFrom(other.GetSharingSettingsResponse);
      }
      if (other.updateSharingSettingsResponse_ != null) {
        if (updateSharingSettingsResponse_ == null) {
          UpdateSharingSettingsResponse = new global::GooglePlayStore.UpdateSharingSettingsResponse();
        }
        UpdateSharingSettingsResponse.MergeFrom(other.UpdateSharingSettingsResponse);
      }
      if (other.reviewSnippetsResponse_ != null) {
        if (reviewSnippetsResponse_ == null) {
          ReviewSnippetsResponse = new global::GooglePlayStore.ReviewSnippetsResponse();
        }
        ReviewSnippetsResponse.MergeFrom(other.ReviewSnippetsResponse);
      }
      if (other.documentSharingStateResponse_ != null) {
        if (documentSharingStateResponse_ == null) {
          DocumentSharingStateResponse = new global::GooglePlayStore.DocumentSharingStateResponse();
        }
        DocumentSharingStateResponse.MergeFrom(other.DocumentSharingStateResponse);
      }
      if (other.moduleDeliveryResponse_ != null) {
        if (moduleDeliveryResponse_ == null) {
          ModuleDeliveryResponse = new global::GooglePlayStore.ModuleDeliveryResponse();
        }
        ModuleDeliveryResponse.MergeFrom(other.ModuleDeliveryResponse);
      }
      if (other.testingProgramResponse_ != null) {
        if (testingProgramResponse_ == null) {
          TestingProgramResponse = new global::GooglePlayStore.TestingProgramResponse();
        }
        TestingProgramResponse.MergeFrom(other.TestingProgramResponse);
      }
      if (other.reviewSummaryResponse_ != null) {
        if (reviewSummaryResponse_ == null) {
          ReviewSummaryResponse = new global::GooglePlayStore.ReviewResponse();
        }
        ReviewSummaryResponse.MergeFrom(other.ReviewSummaryResponse);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (listResponse_ == null) {
              ListResponse = new global::GooglePlayStore.ListResponse();
            }
            input.ReadMessage(ListResponse);
            break;
          }
          case 18: {
            if (detailsResponse_ == null) {
              DetailsResponse = new global::GooglePlayStore.DetailsResponse();
            }
            input.ReadMessage(DetailsResponse);
            break;
          }
          case 26: {
            if (reviewResponse_ == null) {
              ReviewResponse = new global::GooglePlayStore.ReviewResponse();
            }
            input.ReadMessage(ReviewResponse);
            break;
          }
          case 34: {
            if (buyResponse_ == null) {
              BuyResponse = new global::GooglePlayStore.BuyResponse();
            }
            input.ReadMessage(BuyResponse);
            break;
          }
          case 42: {
            if (searchResponse_ == null) {
              SearchResponse = new global::GooglePlayStore.SearchResponse();
            }
            input.ReadMessage(SearchResponse);
            break;
          }
          case 50: {
            if (tocResponse_ == null) {
              TocResponse = new global::GooglePlayStore.TocResponse();
            }
            input.ReadMessage(TocResponse);
            break;
          }
          case 58: {
            if (browseResponse_ == null) {
              BrowseResponse = new global::GooglePlayStore.BrowseResponse();
            }
            input.ReadMessage(BrowseResponse);
            break;
          }
          case 66: {
            if (purchaseStatusResponse_ == null) {
              PurchaseStatusResponse = new global::GooglePlayStore.PurchaseStatusResponse();
            }
            input.ReadMessage(PurchaseStatusResponse);
            break;
          }
          case 82: {
            LogResponse = input.ReadString();
            break;
          }
          case 106: {
            FlagContentResponse = input.ReadString();
            break;
          }
          case 154: {
            if (bulkDetailsResponse_ == null) {
              BulkDetailsResponse = new global::GooglePlayStore.BulkDetailsResponse();
            }
            input.ReadMessage(BulkDetailsResponse);
            break;
          }
          case 170: {
            if (deliveryResponse_ == null) {
              DeliveryResponse = new global::GooglePlayStore.DeliveryResponse();
            }
            input.ReadMessage(DeliveryResponse);
            break;
          }
          case 178: {
            if (acceptTosResponse_ == null) {
              AcceptTosResponse = new global::GooglePlayStore.AcceptTosResponse();
            }
            input.ReadMessage(AcceptTosResponse);
            break;
          }
          case 194: {
            if (checkPromoOfferResponse_ == null) {
              CheckPromoOfferResponse = new global::GooglePlayStore.CheckPromoOfferResponse();
            }
            input.ReadMessage(CheckPromoOfferResponse);
            break;
          }
          case 202: {
            if (instrumentSetupInfoResponse_ == null) {
              InstrumentSetupInfoResponse = new global::GooglePlayStore.InstrumentSetupInfoResponse();
            }
            input.ReadMessage(InstrumentSetupInfoResponse);
            break;
          }
          case 210: {
            if (androidCheckinResponse_ == null) {
              AndroidCheckinResponse = new global::GooglePlayStore.AndroidCheckinResponse();
            }
            input.ReadMessage(AndroidCheckinResponse);
            break;
          }
          case 226: {
            if (uploadDeviceConfigResponse_ == null) {
              UploadDeviceConfigResponse = new global::GooglePlayStore.UploadDeviceConfigResponse();
            }
            input.ReadMessage(UploadDeviceConfigResponse);
            break;
          }
          case 242: {
            if (consumePurchaseResponse_ == null) {
              ConsumePurchaseResponse = new global::GooglePlayStore.ConsumePurchaseResponse();
            }
            input.ReadMessage(ConsumePurchaseResponse);
            break;
          }
          case 250: {
            if (billingProfileResponse_ == null) {
              BillingProfileResponse = new global::GooglePlayStore.BillingProfileResponse();
            }
            input.ReadMessage(BillingProfileResponse);
            break;
          }
          case 274: {
            if (debugSettingsResponse_ == null) {
              DebugSettingsResponse = new global::GooglePlayStore.DebugSettingsResponse();
            }
            input.ReadMessage(DebugSettingsResponse);
            break;
          }
          case 282: {
            if (checkIabPromoResponse_ == null) {
              CheckIabPromoResponse = new global::GooglePlayStore.CheckIabPromoResponse();
            }
            input.ReadMessage(CheckIabPromoResponse);
            break;
          }
          case 290: {
            if (userActivitySettingsResponse_ == null) {
              UserActivitySettingsResponse = new global::GooglePlayStore.UserActivitySettingsResponse();
            }
            input.ReadMessage(UserActivitySettingsResponse);
            break;
          }
          case 298: {
            if (recordUserActivityResponse_ == null) {
              RecordUserActivityResponse = new global::GooglePlayStore.RecordUserActivityResponse();
            }
            input.ReadMessage(RecordUserActivityResponse);
            break;
          }
          case 306: {
            if (redeemCodeResponse_ == null) {
              RedeemCodeResponse = new global::GooglePlayStore.RedeemCodeResponse();
            }
            input.ReadMessage(RedeemCodeResponse);
            break;
          }
          case 314: {
            if (selfUpdateResponse_ == null) {
              SelfUpdateResponse = new global::GooglePlayStore.SelfUpdateResponse();
            }
            input.ReadMessage(SelfUpdateResponse);
            break;
          }
          case 322: {
            if (searchSuggestResponse_ == null) {
              SearchSuggestResponse = new global::GooglePlayStore.SearchSuggestResponse();
            }
            input.ReadMessage(SearchSuggestResponse);
            break;
          }
          case 330: {
            if (getInitialInstrumentFlowStateResponse_ == null) {
              GetInitialInstrumentFlowStateResponse = new global::GooglePlayStore.GetInitialInstrumentFlowStateResponse();
            }
            input.ReadMessage(GetInitialInstrumentFlowStateResponse);
            break;
          }
          case 338: {
            if (createInstrumentResponse_ == null) {
              CreateInstrumentResponse = new global::GooglePlayStore.CreateInstrumentResponse();
            }
            input.ReadMessage(CreateInstrumentResponse);
            break;
          }
          case 346: {
            if (challengeResponse_ == null) {
              ChallengeResponse = new global::GooglePlayStore.ChallengeResponse();
            }
            input.ReadMessage(ChallengeResponse);
            break;
          }
          case 354: {
            if (backupDeviceChoicesResponse_ == null) {
              BackupDeviceChoicesResponse = new global::GooglePlayStore.BackDeviceChoicesResponse();
            }
            input.ReadMessage(BackupDeviceChoicesResponse);
            break;
          }
          case 362: {
            if (backupDocumentChoicesResponse_ == null) {
              BackupDocumentChoicesResponse = new global::GooglePlayStore.BackupDocumentChoicesResponse();
            }
            input.ReadMessage(BackupDocumentChoicesResponse);
            break;
          }
          case 370: {
            if (earlyUpdateResponse_ == null) {
              EarlyUpdateResponse = new global::GooglePlayStore.EarlyUpdateResponse();
            }
            input.ReadMessage(EarlyUpdateResponse);
            break;
          }
          case 378: {
            if (preloadsResponse_ == null) {
              PreloadsResponse = new global::GooglePlayStore.PreloadsResponse();
            }
            input.ReadMessage(PreloadsResponse);
            break;
          }
          case 386: {
            if (myAccountsResponse_ == null) {
              MyAccountsResponse = new global::GooglePlayStore.MyAccountsResponse();
            }
            input.ReadMessage(MyAccountsResponse);
            break;
          }
          case 394: {
            if (contentFilterResponse_ == null) {
              ContentFilterResponse = new global::GooglePlayStore.ContentFilterResponse();
            }
            input.ReadMessage(ContentFilterResponse);
            break;
          }
          case 402: {
            if (experimentsResponse_ == null) {
              ExperimentsResponse = new global::GooglePlayStore.ExperimentsResponse();
            }
            input.ReadMessage(ExperimentsResponse);
            break;
          }
          case 410: {
            if (surveyResponse_ == null) {
              SurveyResponse = new global::GooglePlayStore.SurveyResponse();
            }
            input.ReadMessage(SurveyResponse);
            break;
          }
          case 418: {
            if (pingResponse_ == null) {
              PingResponse = new global::GooglePlayStore.PingResponse();
            }
            input.ReadMessage(PingResponse);
            break;
          }
          case 426: {
            if (updateUserSettingResponse_ == null) {
              UpdateUserSettingResponse = new global::GooglePlayStore.UpdateUserSettingResponse();
            }
            input.ReadMessage(UpdateUserSettingResponse);
            break;
          }
          case 434: {
            if (getUserSettingsResponse_ == null) {
              GetUserSettingsResponse = new global::GooglePlayStore.GetUserSettingsResponse();
            }
            input.ReadMessage(GetUserSettingsResponse);
            break;
          }
          case 450: {
            if (getSharingSettingsResponse_ == null) {
              GetSharingSettingsResponse = new global::GooglePlayStore.GetSharingSettingsResponse();
            }
            input.ReadMessage(GetSharingSettingsResponse);
            break;
          }
          case 458: {
            if (updateSharingSettingsResponse_ == null) {
              UpdateSharingSettingsResponse = new global::GooglePlayStore.UpdateSharingSettingsResponse();
            }
            input.ReadMessage(UpdateSharingSettingsResponse);
            break;
          }
          case 466: {
            if (reviewSnippetsResponse_ == null) {
              ReviewSnippetsResponse = new global::GooglePlayStore.ReviewSnippetsResponse();
            }
            input.ReadMessage(ReviewSnippetsResponse);
            break;
          }
          case 474: {
            if (documentSharingStateResponse_ == null) {
              DocumentSharingStateResponse = new global::GooglePlayStore.DocumentSharingStateResponse();
            }
            input.ReadMessage(DocumentSharingStateResponse);
            break;
          }
          case 562: {
            if (moduleDeliveryResponse_ == null) {
              ModuleDeliveryResponse = new global::GooglePlayStore.ModuleDeliveryResponse();
            }
            input.ReadMessage(ModuleDeliveryResponse);
            break;
          }
          case 642: {
            if (testingProgramResponse_ == null) {
              TestingProgramResponse = new global::GooglePlayStore.TestingProgramResponse();
            }
            input.ReadMessage(TestingProgramResponse);
            break;
          }
          case 1034: {
            if (reviewSummaryResponse_ == null) {
              ReviewSummaryResponse = new global::GooglePlayStore.ReviewResponse();
            }
            input.ReadMessage(ReviewSummaryResponse);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CheckIabPromoResponse : pb::IMessage<CheckIabPromoResponse> {
    private static readonly pb::MessageParser<CheckIabPromoResponse> _parser = new pb::MessageParser<CheckIabPromoResponse>(() => new CheckIabPromoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckIabPromoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[192]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckIabPromoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckIabPromoResponse(CheckIabPromoResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckIabPromoResponse Clone() {
      return new CheckIabPromoResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckIabPromoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckIabPromoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckIabPromoResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class UserActivitySettingsResponse : pb::IMessage<UserActivitySettingsResponse> {
    private static readonly pb::MessageParser<UserActivitySettingsResponse> _parser = new pb::MessageParser<UserActivitySettingsResponse>(() => new UserActivitySettingsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserActivitySettingsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[193]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserActivitySettingsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserActivitySettingsResponse(UserActivitySettingsResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserActivitySettingsResponse Clone() {
      return new UserActivitySettingsResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserActivitySettingsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserActivitySettingsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserActivitySettingsResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class RecordUserActivityResponse : pb::IMessage<RecordUserActivityResponse> {
    private static readonly pb::MessageParser<RecordUserActivityResponse> _parser = new pb::MessageParser<RecordUserActivityResponse>(() => new RecordUserActivityResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecordUserActivityResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[194]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordUserActivityResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordUserActivityResponse(RecordUserActivityResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordUserActivityResponse Clone() {
      return new RecordUserActivityResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecordUserActivityResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecordUserActivityResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecordUserActivityResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class RedeemCodeResponse : pb::IMessage<RedeemCodeResponse> {
    private static readonly pb::MessageParser<RedeemCodeResponse> _parser = new pb::MessageParser<RedeemCodeResponse>(() => new RedeemCodeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RedeemCodeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[195]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemCodeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemCodeResponse(RedeemCodeResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemCodeResponse Clone() {
      return new RedeemCodeResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RedeemCodeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RedeemCodeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RedeemCodeResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class SelfUpdateResponse : pb::IMessage<SelfUpdateResponse> {
    private static readonly pb::MessageParser<SelfUpdateResponse> _parser = new pb::MessageParser<SelfUpdateResponse>(() => new SelfUpdateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SelfUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[196]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelfUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelfUpdateResponse(SelfUpdateResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelfUpdateResponse Clone() {
      return new SelfUpdateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SelfUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SelfUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SelfUpdateResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetInitialInstrumentFlowStateResponse : pb::IMessage<GetInitialInstrumentFlowStateResponse> {
    private static readonly pb::MessageParser<GetInitialInstrumentFlowStateResponse> _parser = new pb::MessageParser<GetInitialInstrumentFlowStateResponse>(() => new GetInitialInstrumentFlowStateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInitialInstrumentFlowStateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[197]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInitialInstrumentFlowStateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInitialInstrumentFlowStateResponse(GetInitialInstrumentFlowStateResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInitialInstrumentFlowStateResponse Clone() {
      return new GetInitialInstrumentFlowStateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInitialInstrumentFlowStateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInitialInstrumentFlowStateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInitialInstrumentFlowStateResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class CreateInstrumentResponse : pb::IMessage<CreateInstrumentResponse> {
    private static readonly pb::MessageParser<CreateInstrumentResponse> _parser = new pb::MessageParser<CreateInstrumentResponse>(() => new CreateInstrumentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateInstrumentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[198]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateInstrumentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateInstrumentResponse(CreateInstrumentResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateInstrumentResponse Clone() {
      return new CreateInstrumentResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateInstrumentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateInstrumentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateInstrumentResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ChallengeResponse : pb::IMessage<ChallengeResponse> {
    private static readonly pb::MessageParser<ChallengeResponse> _parser = new pb::MessageParser<ChallengeResponse>(() => new ChallengeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChallengeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[199]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChallengeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChallengeResponse(ChallengeResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChallengeResponse Clone() {
      return new ChallengeResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChallengeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChallengeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChallengeResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class BackDeviceChoicesResponse : pb::IMessage<BackDeviceChoicesResponse> {
    private static readonly pb::MessageParser<BackDeviceChoicesResponse> _parser = new pb::MessageParser<BackDeviceChoicesResponse>(() => new BackDeviceChoicesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BackDeviceChoicesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[200]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackDeviceChoicesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackDeviceChoicesResponse(BackDeviceChoicesResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackDeviceChoicesResponse Clone() {
      return new BackDeviceChoicesResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BackDeviceChoicesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BackDeviceChoicesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BackDeviceChoicesResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class BackupDocumentChoicesResponse : pb::IMessage<BackupDocumentChoicesResponse> {
    private static readonly pb::MessageParser<BackupDocumentChoicesResponse> _parser = new pb::MessageParser<BackupDocumentChoicesResponse>(() => new BackupDocumentChoicesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BackupDocumentChoicesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[201]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackupDocumentChoicesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackupDocumentChoicesResponse(BackupDocumentChoicesResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackupDocumentChoicesResponse Clone() {
      return new BackupDocumentChoicesResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BackupDocumentChoicesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BackupDocumentChoicesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BackupDocumentChoicesResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class EarlyUpdateResponse : pb::IMessage<EarlyUpdateResponse> {
    private static readonly pb::MessageParser<EarlyUpdateResponse> _parser = new pb::MessageParser<EarlyUpdateResponse>(() => new EarlyUpdateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EarlyUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[202]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EarlyUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EarlyUpdateResponse(EarlyUpdateResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EarlyUpdateResponse Clone() {
      return new EarlyUpdateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EarlyUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EarlyUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EarlyUpdateResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class PreloadsResponse : pb::IMessage<PreloadsResponse> {
    private static readonly pb::MessageParser<PreloadsResponse> _parser = new pb::MessageParser<PreloadsResponse>(() => new PreloadsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PreloadsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[203]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreloadsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreloadsResponse(PreloadsResponse other) : this() {
      configPreload_ = other.configPreload_ != null ? other.configPreload_.Clone() : null;
      appPreload_ = other.appPreload_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreloadsResponse Clone() {
      return new PreloadsResponse(this);
    }

    /// <summary>Field number for the "configPreload" field.</summary>
    public const int ConfigPreloadFieldNumber = 1;
    private global::GooglePlayStore.PreloadsResponse.Types.Preload configPreload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.PreloadsResponse.Types.Preload ConfigPreload {
      get { return configPreload_; }
      set {
        configPreload_ = value;
      }
    }

    /// <summary>Field number for the "appPreload" field.</summary>
    public const int AppPreloadFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GooglePlayStore.PreloadsResponse.Types.Preload> _repeated_appPreload_codec
        = pb::FieldCodec.ForMessage(18, global::GooglePlayStore.PreloadsResponse.Types.Preload.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.PreloadsResponse.Types.Preload> appPreload_ = new pbc::RepeatedField<global::GooglePlayStore.PreloadsResponse.Types.Preload>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.PreloadsResponse.Types.Preload> AppPreload {
      get { return appPreload_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PreloadsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PreloadsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConfigPreload, other.ConfigPreload)) return false;
      if(!appPreload_.Equals(other.appPreload_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (configPreload_ != null) hash ^= ConfigPreload.GetHashCode();
      hash ^= appPreload_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (configPreload_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConfigPreload);
      }
      appPreload_.WriteTo(output, _repeated_appPreload_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (configPreload_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConfigPreload);
      }
      size += appPreload_.CalculateSize(_repeated_appPreload_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PreloadsResponse other) {
      if (other == null) {
        return;
      }
      if (other.configPreload_ != null) {
        if (configPreload_ == null) {
          ConfigPreload = new global::GooglePlayStore.PreloadsResponse.Types.Preload();
        }
        ConfigPreload.MergeFrom(other.ConfigPreload);
      }
      appPreload_.Add(other.appPreload_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (configPreload_ == null) {
              ConfigPreload = new global::GooglePlayStore.PreloadsResponse.Types.Preload();
            }
            input.ReadMessage(ConfigPreload);
            break;
          }
          case 18: {
            appPreload_.AddEntriesFrom(input, _repeated_appPreload_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PreloadsResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Preload : pb::IMessage<Preload> {
        private static readonly pb::MessageParser<Preload> _parser = new pb::MessageParser<Preload>(() => new Preload());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Preload> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GooglePlayStore.PreloadsResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Preload() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Preload(Preload other) : this() {
          _hasBits0 = other._hasBits0;
          docId_ = other.docId_ != null ? other.docId_.Clone() : null;
          versionCode_ = other.versionCode_;
          title_ = other.title_;
          icon_ = other.icon_ != null ? other.icon_.Clone() : null;
          deliveryToken_ = other.deliveryToken_;
          installLocation_ = other.installLocation_;
          size_ = other.size_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Preload Clone() {
          return new Preload(this);
        }

        /// <summary>Field number for the "DocId" field.</summary>
        public const int DocIdFieldNumber = 1;
        private global::GooglePlayStore.DocId docId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GooglePlayStore.DocId DocId {
          get { return docId_; }
          set {
            docId_ = value;
          }
        }

        /// <summary>Field number for the "versionCode" field.</summary>
        public const int VersionCodeFieldNumber = 2;
        private readonly static int VersionCodeDefaultValue = 0;

        private int versionCode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int VersionCode {
          get { if ((_hasBits0 & 1) != 0) { return versionCode_; } else { return VersionCodeDefaultValue; } }
          set {
            _hasBits0 |= 1;
            versionCode_ = value;
          }
        }
        /// <summary>Gets whether the "versionCode" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasVersionCode {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "versionCode" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearVersionCode() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "title" field.</summary>
        public const int TitleFieldNumber = 3;
        private readonly static string TitleDefaultValue = "";

        private string title_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Title {
          get { return title_ ?? TitleDefaultValue; }
          set {
            title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "title" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasTitle {
          get { return title_ != null; }
        }
        /// <summary>Clears the value of the "title" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearTitle() {
          title_ = null;
        }

        /// <summary>Field number for the "icon" field.</summary>
        public const int IconFieldNumber = 4;
        private global::GooglePlayStore.Image icon_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GooglePlayStore.Image Icon {
          get { return icon_; }
          set {
            icon_ = value;
          }
        }

        /// <summary>Field number for the "deliveryToken" field.</summary>
        public const int DeliveryTokenFieldNumber = 5;
        private readonly static string DeliveryTokenDefaultValue = "";

        private string deliveryToken_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeliveryToken {
          get { return deliveryToken_ ?? DeliveryTokenDefaultValue; }
          set {
            deliveryToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "deliveryToken" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasDeliveryToken {
          get { return deliveryToken_ != null; }
        }
        /// <summary>Clears the value of the "deliveryToken" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearDeliveryToken() {
          deliveryToken_ = null;
        }

        /// <summary>Field number for the "installLocation" field.</summary>
        public const int InstallLocationFieldNumber = 6;
        private readonly static int InstallLocationDefaultValue = 0;

        private int installLocation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int InstallLocation {
          get { if ((_hasBits0 & 2) != 0) { return installLocation_; } else { return InstallLocationDefaultValue; } }
          set {
            _hasBits0 |= 2;
            installLocation_ = value;
          }
        }
        /// <summary>Gets whether the "installLocation" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasInstallLocation {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "installLocation" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearInstallLocation() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "size" field.</summary>
        public const int SizeFieldNumber = 7;
        private readonly static long SizeDefaultValue = 0L;

        private long size_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Size {
          get { if ((_hasBits0 & 4) != 0) { return size_; } else { return SizeDefaultValue; } }
          set {
            _hasBits0 |= 4;
            size_ = value;
          }
        }
        /// <summary>Gets whether the "size" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasSize {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "size" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSize() {
          _hasBits0 &= ~4;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Preload);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Preload other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(DocId, other.DocId)) return false;
          if (VersionCode != other.VersionCode) return false;
          if (Title != other.Title) return false;
          if (!object.Equals(Icon, other.Icon)) return false;
          if (DeliveryToken != other.DeliveryToken) return false;
          if (InstallLocation != other.InstallLocation) return false;
          if (Size != other.Size) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (docId_ != null) hash ^= DocId.GetHashCode();
          if (HasVersionCode) hash ^= VersionCode.GetHashCode();
          if (HasTitle) hash ^= Title.GetHashCode();
          if (icon_ != null) hash ^= Icon.GetHashCode();
          if (HasDeliveryToken) hash ^= DeliveryToken.GetHashCode();
          if (HasInstallLocation) hash ^= InstallLocation.GetHashCode();
          if (HasSize) hash ^= Size.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (docId_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(DocId);
          }
          if (HasVersionCode) {
            output.WriteRawTag(16);
            output.WriteInt32(VersionCode);
          }
          if (HasTitle) {
            output.WriteRawTag(26);
            output.WriteString(Title);
          }
          if (icon_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Icon);
          }
          if (HasDeliveryToken) {
            output.WriteRawTag(42);
            output.WriteString(DeliveryToken);
          }
          if (HasInstallLocation) {
            output.WriteRawTag(48);
            output.WriteInt32(InstallLocation);
          }
          if (HasSize) {
            output.WriteRawTag(56);
            output.WriteInt64(Size);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (docId_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DocId);
          }
          if (HasVersionCode) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(VersionCode);
          }
          if (HasTitle) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
          }
          if (icon_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Icon);
          }
          if (HasDeliveryToken) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeliveryToken);
          }
          if (HasInstallLocation) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(InstallLocation);
          }
          if (HasSize) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Size);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Preload other) {
          if (other == null) {
            return;
          }
          if (other.docId_ != null) {
            if (docId_ == null) {
              DocId = new global::GooglePlayStore.DocId();
            }
            DocId.MergeFrom(other.DocId);
          }
          if (other.HasVersionCode) {
            VersionCode = other.VersionCode;
          }
          if (other.HasTitle) {
            Title = other.Title;
          }
          if (other.icon_ != null) {
            if (icon_ == null) {
              Icon = new global::GooglePlayStore.Image();
            }
            Icon.MergeFrom(other.Icon);
          }
          if (other.HasDeliveryToken) {
            DeliveryToken = other.DeliveryToken;
          }
          if (other.HasInstallLocation) {
            InstallLocation = other.InstallLocation;
          }
          if (other.HasSize) {
            Size = other.Size;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (docId_ == null) {
                  DocId = new global::GooglePlayStore.DocId();
                }
                input.ReadMessage(DocId);
                break;
              }
              case 16: {
                VersionCode = input.ReadInt32();
                break;
              }
              case 26: {
                Title = input.ReadString();
                break;
              }
              case 34: {
                if (icon_ == null) {
                  Icon = new global::GooglePlayStore.Image();
                }
                input.ReadMessage(Icon);
                break;
              }
              case 42: {
                DeliveryToken = input.ReadString();
                break;
              }
              case 48: {
                InstallLocation = input.ReadInt32();
                break;
              }
              case 56: {
                Size = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class MyAccountsResponse : pb::IMessage<MyAccountsResponse> {
    private static readonly pb::MessageParser<MyAccountsResponse> _parser = new pb::MessageParser<MyAccountsResponse>(() => new MyAccountsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MyAccountsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[204]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MyAccountsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MyAccountsResponse(MyAccountsResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MyAccountsResponse Clone() {
      return new MyAccountsResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MyAccountsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MyAccountsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MyAccountsResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ContentFilterResponse : pb::IMessage<ContentFilterResponse> {
    private static readonly pb::MessageParser<ContentFilterResponse> _parser = new pb::MessageParser<ContentFilterResponse>(() => new ContentFilterResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContentFilterResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[205]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentFilterResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentFilterResponse(ContentFilterResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentFilterResponse Clone() {
      return new ContentFilterResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContentFilterResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContentFilterResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContentFilterResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ExperimentsResponse : pb::IMessage<ExperimentsResponse> {
    private static readonly pb::MessageParser<ExperimentsResponse> _parser = new pb::MessageParser<ExperimentsResponse>(() => new ExperimentsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExperimentsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[206]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperimentsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperimentsResponse(ExperimentsResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperimentsResponse Clone() {
      return new ExperimentsResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExperimentsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExperimentsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExperimentsResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class SurveyResponse : pb::IMessage<SurveyResponse> {
    private static readonly pb::MessageParser<SurveyResponse> _parser = new pb::MessageParser<SurveyResponse>(() => new SurveyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SurveyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[207]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SurveyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SurveyResponse(SurveyResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SurveyResponse Clone() {
      return new SurveyResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SurveyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SurveyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SurveyResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class PingResponse : pb::IMessage<PingResponse> {
    private static readonly pb::MessageParser<PingResponse> _parser = new pb::MessageParser<PingResponse>(() => new PingResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PingResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[208]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingResponse(PingResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingResponse Clone() {
      return new PingResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PingResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PingResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PingResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class UpdateUserSettingResponse : pb::IMessage<UpdateUserSettingResponse> {
    private static readonly pb::MessageParser<UpdateUserSettingResponse> _parser = new pb::MessageParser<UpdateUserSettingResponse>(() => new UpdateUserSettingResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateUserSettingResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[209]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateUserSettingResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateUserSettingResponse(UpdateUserSettingResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateUserSettingResponse Clone() {
      return new UpdateUserSettingResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateUserSettingResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateUserSettingResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateUserSettingResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetUserSettingsResponse : pb::IMessage<GetUserSettingsResponse> {
    private static readonly pb::MessageParser<GetUserSettingsResponse> _parser = new pb::MessageParser<GetUserSettingsResponse>(() => new GetUserSettingsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserSettingsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[210]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserSettingsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserSettingsResponse(GetUserSettingsResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserSettingsResponse Clone() {
      return new GetUserSettingsResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserSettingsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserSettingsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserSettingsResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetSharingSettingsResponse : pb::IMessage<GetSharingSettingsResponse> {
    private static readonly pb::MessageParser<GetSharingSettingsResponse> _parser = new pb::MessageParser<GetSharingSettingsResponse>(() => new GetSharingSettingsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSharingSettingsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[211]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSharingSettingsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSharingSettingsResponse(GetSharingSettingsResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSharingSettingsResponse Clone() {
      return new GetSharingSettingsResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSharingSettingsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSharingSettingsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSharingSettingsResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class UpdateSharingSettingsResponse : pb::IMessage<UpdateSharingSettingsResponse> {
    private static readonly pb::MessageParser<UpdateSharingSettingsResponse> _parser = new pb::MessageParser<UpdateSharingSettingsResponse>(() => new UpdateSharingSettingsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateSharingSettingsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[212]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSharingSettingsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSharingSettingsResponse(UpdateSharingSettingsResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSharingSettingsResponse Clone() {
      return new UpdateSharingSettingsResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateSharingSettingsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateSharingSettingsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateSharingSettingsResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ReviewSnippetsResponse : pb::IMessage<ReviewSnippetsResponse> {
    private static readonly pb::MessageParser<ReviewSnippetsResponse> _parser = new pb::MessageParser<ReviewSnippetsResponse>(() => new ReviewSnippetsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReviewSnippetsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[213]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReviewSnippetsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReviewSnippetsResponse(ReviewSnippetsResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReviewSnippetsResponse Clone() {
      return new ReviewSnippetsResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReviewSnippetsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReviewSnippetsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReviewSnippetsResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class DocumentSharingStateResponse : pb::IMessage<DocumentSharingStateResponse> {
    private static readonly pb::MessageParser<DocumentSharingStateResponse> _parser = new pb::MessageParser<DocumentSharingStateResponse>(() => new DocumentSharingStateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DocumentSharingStateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[214]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentSharingStateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentSharingStateResponse(DocumentSharingStateResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentSharingStateResponse Clone() {
      return new DocumentSharingStateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DocumentSharingStateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DocumentSharingStateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DocumentSharingStateResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ModuleDeliveryResponse : pb::IMessage<ModuleDeliveryResponse> {
    private static readonly pb::MessageParser<ModuleDeliveryResponse> _parser = new pb::MessageParser<ModuleDeliveryResponse>(() => new ModuleDeliveryResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModuleDeliveryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[215]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModuleDeliveryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModuleDeliveryResponse(ModuleDeliveryResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModuleDeliveryResponse Clone() {
      return new ModuleDeliveryResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModuleDeliveryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModuleDeliveryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModuleDeliveryResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class PreFetch : pb::IMessage<PreFetch> {
    private static readonly pb::MessageParser<PreFetch> _parser = new pb::MessageParser<PreFetch>(() => new PreFetch());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PreFetch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[216]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreFetch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreFetch(PreFetch other) : this() {
      _hasBits0 = other._hasBits0;
      url_ = other.url_;
      response_ = other.response_ != null ? other.response_.Clone() : null;
      etag_ = other.etag_;
      ttl_ = other.ttl_;
      softTtl_ = other.softTtl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreFetch Clone() {
      return new PreFetch(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 2;
    private global::GooglePlayStore.ResponseWrapper response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ResponseWrapper Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "etag" field.</summary>
    public const int EtagFieldNumber = 3;
    private readonly static string EtagDefaultValue = "";

    private string etag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Etag {
      get { return etag_ ?? EtagDefaultValue; }
      set {
        etag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "etag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEtag {
      get { return etag_ != null; }
    }
    /// <summary>Clears the value of the "etag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEtag() {
      etag_ = null;
    }

    /// <summary>Field number for the "ttl" field.</summary>
    public const int TtlFieldNumber = 4;
    private readonly static long TtlDefaultValue = 0L;

    private long ttl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Ttl {
      get { if ((_hasBits0 & 1) != 0) { return ttl_; } else { return TtlDefaultValue; } }
      set {
        _hasBits0 |= 1;
        ttl_ = value;
      }
    }
    /// <summary>Gets whether the "ttl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTtl {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ttl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTtl() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "softTtl" field.</summary>
    public const int SoftTtlFieldNumber = 5;
    private readonly static long SoftTtlDefaultValue = 0L;

    private long softTtl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SoftTtl {
      get { if ((_hasBits0 & 2) != 0) { return softTtl_; } else { return SoftTtlDefaultValue; } }
      set {
        _hasBits0 |= 2;
        softTtl_ = value;
      }
    }
    /// <summary>Gets whether the "softTtl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSoftTtl {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "softTtl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSoftTtl() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PreFetch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PreFetch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (!object.Equals(Response, other.Response)) return false;
      if (Etag != other.Etag) return false;
      if (Ttl != other.Ttl) return false;
      if (SoftTtl != other.SoftTtl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUrl) hash ^= Url.GetHashCode();
      if (response_ != null) hash ^= Response.GetHashCode();
      if (HasEtag) hash ^= Etag.GetHashCode();
      if (HasTtl) hash ^= Ttl.GetHashCode();
      if (HasSoftTtl) hash ^= SoftTtl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (response_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Response);
      }
      if (HasEtag) {
        output.WriteRawTag(26);
        output.WriteString(Etag);
      }
      if (HasTtl) {
        output.WriteRawTag(32);
        output.WriteInt64(Ttl);
      }
      if (HasSoftTtl) {
        output.WriteRawTag(40);
        output.WriteInt64(SoftTtl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (HasEtag) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Etag);
      }
      if (HasTtl) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Ttl);
      }
      if (HasSoftTtl) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SoftTtl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PreFetch other) {
      if (other == null) {
        return;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::GooglePlayStore.ResponseWrapper();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.HasEtag) {
        Etag = other.Etag;
      }
      if (other.HasTtl) {
        Ttl = other.Ttl;
      }
      if (other.HasSoftTtl) {
        SoftTtl = other.SoftTtl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            if (response_ == null) {
              Response = new global::GooglePlayStore.ResponseWrapper();
            }
            input.ReadMessage(Response);
            break;
          }
          case 26: {
            Etag = input.ReadString();
            break;
          }
          case 32: {
            Ttl = input.ReadInt64();
            break;
          }
          case 40: {
            SoftTtl = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerMetadata : pb::IMessage<ServerMetadata> {
    private static readonly pb::MessageParser<ServerMetadata> _parser = new pb::MessageParser<ServerMetadata>(() => new ServerMetadata());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[217]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerMetadata(ServerMetadata other) : this() {
      _hasBits0 = other._hasBits0;
      latencyMillis_ = other.latencyMillis_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerMetadata Clone() {
      return new ServerMetadata(this);
    }

    /// <summary>Field number for the "latencyMillis" field.</summary>
    public const int LatencyMillisFieldNumber = 1;
    private readonly static long LatencyMillisDefaultValue = 0L;

    private long latencyMillis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LatencyMillis {
      get { if ((_hasBits0 & 1) != 0) { return latencyMillis_; } else { return LatencyMillisDefaultValue; } }
      set {
        _hasBits0 |= 1;
        latencyMillis_ = value;
      }
    }
    /// <summary>Gets whether the "latencyMillis" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLatencyMillis {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "latencyMillis" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLatencyMillis() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LatencyMillis != other.LatencyMillis) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLatencyMillis) hash ^= LatencyMillis.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasLatencyMillis) {
        output.WriteRawTag(8);
        output.WriteInt64(LatencyMillis);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasLatencyMillis) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LatencyMillis);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerMetadata other) {
      if (other == null) {
        return;
      }
      if (other.HasLatencyMillis) {
        LatencyMillis = other.LatencyMillis;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LatencyMillis = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Targets : pb::IMessage<Targets> {
    private static readonly pb::MessageParser<Targets> _parser = new pb::MessageParser<Targets>(() => new Targets());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Targets> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[218]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Targets() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Targets(Targets other) : this() {
      targetId_ = other.targetId_.Clone();
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Targets Clone() {
      return new Targets(this);
    }

    /// <summary>Field number for the "targetId" field.</summary>
    public const int TargetIdFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_targetId_codec
        = pb::FieldCodec.ForInt64(8);
    private readonly pbc::RepeatedField<long> targetId_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> TargetId {
      get { return targetId_; }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private readonly static pb::ByteString SignatureDefaultValue = pb::ByteString.Empty;

    private pb::ByteString signature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Signature {
      get { return signature_ ?? SignatureDefaultValue; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "signature" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSignature {
      get { return signature_ != null; }
    }
    /// <summary>Clears the value of the "signature" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSignature() {
      signature_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Targets);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Targets other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!targetId_.Equals(other.targetId_)) return false;
      if (Signature != other.Signature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= targetId_.GetHashCode();
      if (HasSignature) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      targetId_.WriteTo(output, _repeated_targetId_codec);
      if (HasSignature) {
        output.WriteRawTag(18);
        output.WriteBytes(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += targetId_.CalculateSize(_repeated_targetId_codec);
      if (HasSignature) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Targets other) {
      if (other == null) {
        return;
      }
      targetId_.Add(other.targetId_);
      if (other.HasSignature) {
        Signature = other.Signature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            targetId_.AddEntriesFrom(input, _repeated_targetId_codec);
            break;
          }
          case 18: {
            Signature = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerCookie : pb::IMessage<ServerCookie> {
    private static readonly pb::MessageParser<ServerCookie> _parser = new pb::MessageParser<ServerCookie>(() => new ServerCookie());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerCookie> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[219]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerCookie() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerCookie(ServerCookie other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerCookie Clone() {
      return new ServerCookie(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private readonly static pb::ByteString TokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerCookie);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerCookie other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasToken) {
        output.WriteRawTag(18);
        output.WriteBytes(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerCookie other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            Token = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerCookies : pb::IMessage<ServerCookies> {
    private static readonly pb::MessageParser<ServerCookies> _parser = new pb::MessageParser<ServerCookies>(() => new ServerCookies());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerCookies> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[220]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerCookies() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerCookies(ServerCookies other) : this() {
      serverCookie_ = other.serverCookie_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerCookies Clone() {
      return new ServerCookies(this);
    }

    /// <summary>Field number for the "serverCookie" field.</summary>
    public const int ServerCookieFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GooglePlayStore.ServerCookie> _repeated_serverCookie_codec
        = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.ServerCookie.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.ServerCookie> serverCookie_ = new pbc::RepeatedField<global::GooglePlayStore.ServerCookie>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.ServerCookie> ServerCookie {
      get { return serverCookie_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerCookies);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerCookies other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!serverCookie_.Equals(other.serverCookie_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= serverCookie_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      serverCookie_.WriteTo(output, _repeated_serverCookie_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += serverCookie_.CalculateSize(_repeated_serverCookie_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerCookies other) {
      if (other == null) {
        return;
      }
      serverCookie_.Add(other.serverCookie_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            serverCookie_.AddEntriesFrom(input, _repeated_serverCookie_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResponseWrapper : pb::IMessage<ResponseWrapper> {
    private static readonly pb::MessageParser<ResponseWrapper> _parser = new pb::MessageParser<ResponseWrapper>(() => new ResponseWrapper());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseWrapper> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[221]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseWrapper() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseWrapper(ResponseWrapper other) : this() {
      payload_ = other.payload_ != null ? other.payload_.Clone() : null;
      commands_ = other.commands_ != null ? other.commands_.Clone() : null;
      preFetch_ = other.preFetch_.Clone();
      notification_ = other.notification_.Clone();
      serverMetadata_ = other.serverMetadata_ != null ? other.serverMetadata_.Clone() : null;
      targets_ = other.targets_ != null ? other.targets_.Clone() : null;
      serverCookies_ = other.serverCookies_ != null ? other.serverCookies_.Clone() : null;
      serverLogsCookie_ = other.serverLogsCookie_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseWrapper Clone() {
      return new ResponseWrapper(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    private global::GooglePlayStore.Payload payload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Payload Payload {
      get { return payload_; }
      set {
        payload_ = value;
      }
    }

    /// <summary>Field number for the "commands" field.</summary>
    public const int CommandsFieldNumber = 2;
    private global::GooglePlayStore.ServerCommands commands_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ServerCommands Commands {
      get { return commands_; }
      set {
        commands_ = value;
      }
    }

    /// <summary>Field number for the "preFetch" field.</summary>
    public const int PreFetchFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.PreFetch> _repeated_preFetch_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.PreFetch.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.PreFetch> preFetch_ = new pbc::RepeatedField<global::GooglePlayStore.PreFetch>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.PreFetch> PreFetch {
      get { return preFetch_; }
    }

    /// <summary>Field number for the "notification" field.</summary>
    public const int NotificationFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Notification> _repeated_notification_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.Notification.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Notification> notification_ = new pbc::RepeatedField<global::GooglePlayStore.Notification>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Notification> Notification {
      get { return notification_; }
    }

    /// <summary>Field number for the "serverMetadata" field.</summary>
    public const int ServerMetadataFieldNumber = 5;
    private global::GooglePlayStore.ServerMetadata serverMetadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ServerMetadata ServerMetadata {
      get { return serverMetadata_; }
      set {
        serverMetadata_ = value;
      }
    }

    /// <summary>Field number for the "targets" field.</summary>
    public const int TargetsFieldNumber = 6;
    private global::GooglePlayStore.Targets targets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Targets Targets {
      get { return targets_; }
      set {
        targets_ = value;
      }
    }

    /// <summary>Field number for the "serverCookies" field.</summary>
    public const int ServerCookiesFieldNumber = 7;
    private global::GooglePlayStore.ServerCookies serverCookies_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ServerCookies ServerCookies {
      get { return serverCookies_; }
      set {
        serverCookies_ = value;
      }
    }

    /// <summary>Field number for the "serverLogsCookie" field.</summary>
    public const int ServerLogsCookieFieldNumber = 9;
    private readonly static pb::ByteString ServerLogsCookieDefaultValue = pb::ByteString.Empty;

    private pb::ByteString serverLogsCookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ServerLogsCookie {
      get { return serverLogsCookie_ ?? ServerLogsCookieDefaultValue; }
      set {
        serverLogsCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serverLogsCookie" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServerLogsCookie {
      get { return serverLogsCookie_ != null; }
    }
    /// <summary>Clears the value of the "serverLogsCookie" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServerLogsCookie() {
      serverLogsCookie_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseWrapper);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseWrapper other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Payload, other.Payload)) return false;
      if (!object.Equals(Commands, other.Commands)) return false;
      if(!preFetch_.Equals(other.preFetch_)) return false;
      if(!notification_.Equals(other.notification_)) return false;
      if (!object.Equals(ServerMetadata, other.ServerMetadata)) return false;
      if (!object.Equals(Targets, other.Targets)) return false;
      if (!object.Equals(ServerCookies, other.ServerCookies)) return false;
      if (ServerLogsCookie != other.ServerLogsCookie) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (payload_ != null) hash ^= Payload.GetHashCode();
      if (commands_ != null) hash ^= Commands.GetHashCode();
      hash ^= preFetch_.GetHashCode();
      hash ^= notification_.GetHashCode();
      if (serverMetadata_ != null) hash ^= ServerMetadata.GetHashCode();
      if (targets_ != null) hash ^= Targets.GetHashCode();
      if (serverCookies_ != null) hash ^= ServerCookies.GetHashCode();
      if (HasServerLogsCookie) hash ^= ServerLogsCookie.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (payload_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Payload);
      }
      if (commands_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Commands);
      }
      preFetch_.WriteTo(output, _repeated_preFetch_codec);
      notification_.WriteTo(output, _repeated_notification_codec);
      if (serverMetadata_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ServerMetadata);
      }
      if (targets_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Targets);
      }
      if (serverCookies_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ServerCookies);
      }
      if (HasServerLogsCookie) {
        output.WriteRawTag(74);
        output.WriteBytes(ServerLogsCookie);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (payload_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (commands_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Commands);
      }
      size += preFetch_.CalculateSize(_repeated_preFetch_codec);
      size += notification_.CalculateSize(_repeated_notification_codec);
      if (serverMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServerMetadata);
      }
      if (targets_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Targets);
      }
      if (serverCookies_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServerCookies);
      }
      if (HasServerLogsCookie) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ServerLogsCookie);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseWrapper other) {
      if (other == null) {
        return;
      }
      if (other.payload_ != null) {
        if (payload_ == null) {
          Payload = new global::GooglePlayStore.Payload();
        }
        Payload.MergeFrom(other.Payload);
      }
      if (other.commands_ != null) {
        if (commands_ == null) {
          Commands = new global::GooglePlayStore.ServerCommands();
        }
        Commands.MergeFrom(other.Commands);
      }
      preFetch_.Add(other.preFetch_);
      notification_.Add(other.notification_);
      if (other.serverMetadata_ != null) {
        if (serverMetadata_ == null) {
          ServerMetadata = new global::GooglePlayStore.ServerMetadata();
        }
        ServerMetadata.MergeFrom(other.ServerMetadata);
      }
      if (other.targets_ != null) {
        if (targets_ == null) {
          Targets = new global::GooglePlayStore.Targets();
        }
        Targets.MergeFrom(other.Targets);
      }
      if (other.serverCookies_ != null) {
        if (serverCookies_ == null) {
          ServerCookies = new global::GooglePlayStore.ServerCookies();
        }
        ServerCookies.MergeFrom(other.ServerCookies);
      }
      if (other.HasServerLogsCookie) {
        ServerLogsCookie = other.ServerLogsCookie;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (payload_ == null) {
              Payload = new global::GooglePlayStore.Payload();
            }
            input.ReadMessage(Payload);
            break;
          }
          case 18: {
            if (commands_ == null) {
              Commands = new global::GooglePlayStore.ServerCommands();
            }
            input.ReadMessage(Commands);
            break;
          }
          case 26: {
            preFetch_.AddEntriesFrom(input, _repeated_preFetch_codec);
            break;
          }
          case 34: {
            notification_.AddEntriesFrom(input, _repeated_notification_codec);
            break;
          }
          case 42: {
            if (serverMetadata_ == null) {
              ServerMetadata = new global::GooglePlayStore.ServerMetadata();
            }
            input.ReadMessage(ServerMetadata);
            break;
          }
          case 50: {
            if (targets_ == null) {
              Targets = new global::GooglePlayStore.Targets();
            }
            input.ReadMessage(Targets);
            break;
          }
          case 58: {
            if (serverCookies_ == null) {
              ServerCookies = new global::GooglePlayStore.ServerCookies();
            }
            input.ReadMessage(ServerCookies);
            break;
          }
          case 74: {
            ServerLogsCookie = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResponseWrapperApi : pb::IMessage<ResponseWrapperApi> {
    private static readonly pb::MessageParser<ResponseWrapperApi> _parser = new pb::MessageParser<ResponseWrapperApi>(() => new ResponseWrapperApi());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseWrapperApi> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[222]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseWrapperApi() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseWrapperApi(ResponseWrapperApi other) : this() {
      payload_ = other.payload_ != null ? other.payload_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseWrapperApi Clone() {
      return new ResponseWrapperApi(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    private global::GooglePlayStore.PayloadApi payload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.PayloadApi Payload {
      get { return payload_; }
      set {
        payload_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseWrapperApi);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseWrapperApi other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Payload, other.Payload)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (payload_ != null) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (payload_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (payload_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseWrapperApi other) {
      if (other == null) {
        return;
      }
      if (other.payload_ != null) {
        if (payload_ == null) {
          Payload = new global::GooglePlayStore.PayloadApi();
        }
        Payload.MergeFrom(other.Payload);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (payload_ == null) {
              Payload = new global::GooglePlayStore.PayloadApi();
            }
            input.ReadMessage(Payload);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PayloadApi : pb::IMessage<PayloadApi> {
    private static readonly pb::MessageParser<PayloadApi> _parser = new pb::MessageParser<PayloadApi>(() => new PayloadApi());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PayloadApi> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[223]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadApi() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadApi(PayloadApi other) : this() {
      userProfileResponse_ = other.userProfileResponse_ != null ? other.userProfileResponse_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadApi Clone() {
      return new PayloadApi(this);
    }

    /// <summary>Field number for the "userProfileResponse" field.</summary>
    public const int UserProfileResponseFieldNumber = 5;
    private global::GooglePlayStore.UserProfileResponse userProfileResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.UserProfileResponse UserProfileResponse {
      get { return userProfileResponse_; }
      set {
        userProfileResponse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PayloadApi);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PayloadApi other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserProfileResponse, other.UserProfileResponse)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userProfileResponse_ != null) hash ^= UserProfileResponse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userProfileResponse_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UserProfileResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userProfileResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserProfileResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PayloadApi other) {
      if (other == null) {
        return;
      }
      if (other.userProfileResponse_ != null) {
        if (userProfileResponse_ == null) {
          UserProfileResponse = new global::GooglePlayStore.UserProfileResponse();
        }
        UserProfileResponse.MergeFrom(other.UserProfileResponse);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 42: {
            if (userProfileResponse_ == null) {
              UserProfileResponse = new global::GooglePlayStore.UserProfileResponse();
            }
            input.ReadMessage(UserProfileResponse);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserProfileResponse : pb::IMessage<UserProfileResponse> {
    private static readonly pb::MessageParser<UserProfileResponse> _parser = new pb::MessageParser<UserProfileResponse>(() => new UserProfileResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserProfileResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[224]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserProfileResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserProfileResponse(UserProfileResponse other) : this() {
      userProfile_ = other.userProfile_ != null ? other.userProfile_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserProfileResponse Clone() {
      return new UserProfileResponse(this);
    }

    /// <summary>Field number for the "userProfile" field.</summary>
    public const int UserProfileFieldNumber = 1;
    private global::GooglePlayStore.UserProfile userProfile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.UserProfile UserProfile {
      get { return userProfile_; }
      set {
        userProfile_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserProfileResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserProfileResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserProfile, other.UserProfile)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userProfile_ != null) hash ^= UserProfile.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userProfile_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserProfile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userProfile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserProfile);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserProfileResponse other) {
      if (other == null) {
        return;
      }
      if (other.userProfile_ != null) {
        if (userProfile_ == null) {
          UserProfile = new global::GooglePlayStore.UserProfile();
        }
        UserProfile.MergeFrom(other.UserProfile);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userProfile_ == null) {
              UserProfile = new global::GooglePlayStore.UserProfile();
            }
            input.ReadMessage(UserProfile);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerCommands : pb::IMessage<ServerCommands> {
    private static readonly pb::MessageParser<ServerCommands> _parser = new pb::MessageParser<ServerCommands>(() => new ServerCommands());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerCommands> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[225]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerCommands() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerCommands(ServerCommands other) : this() {
      _hasBits0 = other._hasBits0;
      clearCache_ = other.clearCache_;
      displayErrorMessage_ = other.displayErrorMessage_;
      logErrorStacktrace_ = other.logErrorStacktrace_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerCommands Clone() {
      return new ServerCommands(this);
    }

    /// <summary>Field number for the "clearCache" field.</summary>
    public const int ClearCacheFieldNumber = 1;
    private readonly static bool ClearCacheDefaultValue = false;

    private bool clearCache_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ClearCache {
      get { if ((_hasBits0 & 1) != 0) { return clearCache_; } else { return ClearCacheDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clearCache_ = value;
      }
    }
    /// <summary>Gets whether the "clearCache" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClearCache {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "clearCache" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClearCache() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "displayErrorMessage" field.</summary>
    public const int DisplayErrorMessageFieldNumber = 2;
    private readonly static string DisplayErrorMessageDefaultValue = "";

    private string displayErrorMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayErrorMessage {
      get { return displayErrorMessage_ ?? DisplayErrorMessageDefaultValue; }
      set {
        displayErrorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "displayErrorMessage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDisplayErrorMessage {
      get { return displayErrorMessage_ != null; }
    }
    /// <summary>Clears the value of the "displayErrorMessage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDisplayErrorMessage() {
      displayErrorMessage_ = null;
    }

    /// <summary>Field number for the "logErrorStacktrace" field.</summary>
    public const int LogErrorStacktraceFieldNumber = 3;
    private readonly static string LogErrorStacktraceDefaultValue = "";

    private string logErrorStacktrace_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LogErrorStacktrace {
      get { return logErrorStacktrace_ ?? LogErrorStacktraceDefaultValue; }
      set {
        logErrorStacktrace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "logErrorStacktrace" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLogErrorStacktrace {
      get { return logErrorStacktrace_ != null; }
    }
    /// <summary>Clears the value of the "logErrorStacktrace" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLogErrorStacktrace() {
      logErrorStacktrace_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerCommands);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerCommands other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClearCache != other.ClearCache) return false;
      if (DisplayErrorMessage != other.DisplayErrorMessage) return false;
      if (LogErrorStacktrace != other.LogErrorStacktrace) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClearCache) hash ^= ClearCache.GetHashCode();
      if (HasDisplayErrorMessage) hash ^= DisplayErrorMessage.GetHashCode();
      if (HasLogErrorStacktrace) hash ^= LogErrorStacktrace.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasClearCache) {
        output.WriteRawTag(8);
        output.WriteBool(ClearCache);
      }
      if (HasDisplayErrorMessage) {
        output.WriteRawTag(18);
        output.WriteString(DisplayErrorMessage);
      }
      if (HasLogErrorStacktrace) {
        output.WriteRawTag(26);
        output.WriteString(LogErrorStacktrace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasClearCache) {
        size += 1 + 1;
      }
      if (HasDisplayErrorMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayErrorMessage);
      }
      if (HasLogErrorStacktrace) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogErrorStacktrace);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerCommands other) {
      if (other == null) {
        return;
      }
      if (other.HasClearCache) {
        ClearCache = other.ClearCache;
      }
      if (other.HasDisplayErrorMessage) {
        DisplayErrorMessage = other.DisplayErrorMessage;
      }
      if (other.HasLogErrorStacktrace) {
        LogErrorStacktrace = other.LogErrorStacktrace;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClearCache = input.ReadBool();
            break;
          }
          case 18: {
            DisplayErrorMessage = input.ReadString();
            break;
          }
          case 26: {
            LogErrorStacktrace = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetReviewsResponse : pb::IMessage<GetReviewsResponse> {
    private static readonly pb::MessageParser<GetReviewsResponse> _parser = new pb::MessageParser<GetReviewsResponse>(() => new GetReviewsResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetReviewsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[226]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReviewsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReviewsResponse(GetReviewsResponse other) : this() {
      _hasBits0 = other._hasBits0;
      review_ = other.review_.Clone();
      matchingCount_ = other.matchingCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReviewsResponse Clone() {
      return new GetReviewsResponse(this);
    }

    /// <summary>Field number for the "review" field.</summary>
    public const int ReviewFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Review> _repeated_review_codec
        = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.Review.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Review> review_ = new pbc::RepeatedField<global::GooglePlayStore.Review>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Review> Review {
      get { return review_; }
    }

    /// <summary>Field number for the "matchingCount" field.</summary>
    public const int MatchingCountFieldNumber = 2;
    private readonly static long MatchingCountDefaultValue = 0L;

    private long matchingCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MatchingCount {
      get { if ((_hasBits0 & 1) != 0) { return matchingCount_; } else { return MatchingCountDefaultValue; } }
      set {
        _hasBits0 |= 1;
        matchingCount_ = value;
      }
    }
    /// <summary>Gets whether the "matchingCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMatchingCount {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "matchingCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMatchingCount() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetReviewsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetReviewsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!review_.Equals(other.review_)) return false;
      if (MatchingCount != other.MatchingCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= review_.GetHashCode();
      if (HasMatchingCount) hash ^= MatchingCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      review_.WriteTo(output, _repeated_review_codec);
      if (HasMatchingCount) {
        output.WriteRawTag(16);
        output.WriteInt64(MatchingCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += review_.CalculateSize(_repeated_review_codec);
      if (HasMatchingCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MatchingCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetReviewsResponse other) {
      if (other == null) {
        return;
      }
      review_.Add(other.review_);
      if (other.HasMatchingCount) {
        MatchingCount = other.MatchingCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            review_.AddEntriesFrom(input, _repeated_review_codec);
            break;
          }
          case 16: {
            MatchingCount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Review : pb::IMessage<Review> {
    private static readonly pb::MessageParser<Review> _parser = new pb::MessageParser<Review>(() => new Review());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Review> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[227]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Review() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Review(Review other) : this() {
      _hasBits0 = other._hasBits0;
      authorName_ = other.authorName_;
      url_ = other.url_;
      source_ = other.source_;
      version_ = other.version_;
      timestamp_ = other.timestamp_;
      starRating_ = other.starRating_;
      title_ = other.title_;
      comment_ = other.comment_;
      commentId_ = other.commentId_;
      deviceName_ = other.deviceName_;
      replyText_ = other.replyText_;
      replyTimeStamp_ = other.replyTimeStamp_;
      author_ = other.author_ != null ? other.author_.Clone() : null;
      userProfile_ = other.userProfile_ != null ? other.userProfile_.Clone() : null;
      sentiment_ = other.sentiment_ != null ? other.sentiment_.Clone() : null;
      helpfulCount_ = other.helpfulCount_;
      thumbsUpCount_ = other.thumbsUpCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Review Clone() {
      return new Review(this);
    }

    /// <summary>Field number for the "authorName" field.</summary>
    public const int AuthorNameFieldNumber = 1;
    private readonly static string AuthorNameDefaultValue = "";

    private string authorName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthorName {
      get { return authorName_ ?? AuthorNameDefaultValue; }
      set {
        authorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "authorName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAuthorName {
      get { return authorName_ != null; }
    }
    /// <summary>Clears the value of the "authorName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAuthorName() {
      authorName_ = null;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 3;
    private readonly static string SourceDefaultValue = "";

    private string source_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Source {
      get { return source_ ?? SourceDefaultValue; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "source" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSource {
      get { return source_ != null; }
    }
    /// <summary>Clears the value of the "source" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSource() {
      source_ = null;
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 4;
    private readonly static string VersionDefaultValue = "";

    private string version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_ ?? VersionDefaultValue; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersion {
      get { return version_ != null; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersion() {
      version_ = null;
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 5;
    private readonly static long TimestampDefaultValue = 0L;

    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { if ((_hasBits0 & 1) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
      set {
        _hasBits0 |= 1;
        timestamp_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTimestamp {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimestamp() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "starRating" field.</summary>
    public const int StarRatingFieldNumber = 6;
    private readonly static int StarRatingDefaultValue = 0;

    private int starRating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StarRating {
      get { if ((_hasBits0 & 2) != 0) { return starRating_; } else { return StarRatingDefaultValue; } }
      set {
        _hasBits0 |= 2;
        starRating_ = value;
      }
    }
    /// <summary>Gets whether the "starRating" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStarRating {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "starRating" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStarRating() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 7;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 8;
    private readonly static string CommentDefaultValue = "";

    private string comment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Comment {
      get { return comment_ ?? CommentDefaultValue; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "comment" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasComment {
      get { return comment_ != null; }
    }
    /// <summary>Clears the value of the "comment" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearComment() {
      comment_ = null;
    }

    /// <summary>Field number for the "commentId" field.</summary>
    public const int CommentIdFieldNumber = 9;
    private readonly static string CommentIdDefaultValue = "";

    private string commentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CommentId {
      get { return commentId_ ?? CommentIdDefaultValue; }
      set {
        commentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "commentId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCommentId {
      get { return commentId_ != null; }
    }
    /// <summary>Clears the value of the "commentId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCommentId() {
      commentId_ = null;
    }

    /// <summary>Field number for the "deviceName" field.</summary>
    public const int DeviceNameFieldNumber = 19;
    private readonly static string DeviceNameDefaultValue = "";

    private string deviceName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceName {
      get { return deviceName_ ?? DeviceNameDefaultValue; }
      set {
        deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "deviceName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeviceName {
      get { return deviceName_ != null; }
    }
    /// <summary>Clears the value of the "deviceName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeviceName() {
      deviceName_ = null;
    }

    /// <summary>Field number for the "replyText" field.</summary>
    public const int ReplyTextFieldNumber = 29;
    private readonly static string ReplyTextDefaultValue = "";

    private string replyText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReplyText {
      get { return replyText_ ?? ReplyTextDefaultValue; }
      set {
        replyText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "replyText" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReplyText {
      get { return replyText_ != null; }
    }
    /// <summary>Clears the value of the "replyText" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReplyText() {
      replyText_ = null;
    }

    /// <summary>Field number for the "replyTimeStamp" field.</summary>
    public const int ReplyTimeStampFieldNumber = 30;
    private readonly static long ReplyTimeStampDefaultValue = 0L;

    private long replyTimeStamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ReplyTimeStamp {
      get { if ((_hasBits0 & 4) != 0) { return replyTimeStamp_; } else { return ReplyTimeStampDefaultValue; } }
      set {
        _hasBits0 |= 4;
        replyTimeStamp_ = value;
      }
    }
    /// <summary>Gets whether the "replyTimeStamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReplyTimeStamp {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "replyTimeStamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReplyTimeStamp() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "author" field.</summary>
    public const int AuthorFieldNumber = 31;
    private global::GooglePlayStore.ReviewAuthor author_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ReviewAuthor Author {
      get { return author_; }
      set {
        author_ = value;
      }
    }

    /// <summary>Field number for the "userProfile" field.</summary>
    public const int UserProfileFieldNumber = 33;
    private global::GooglePlayStore.UserProfile userProfile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.UserProfile UserProfile {
      get { return userProfile_; }
      set {
        userProfile_ = value;
      }
    }

    /// <summary>Field number for the "sentiment" field.</summary>
    public const int SentimentFieldNumber = 34;
    private global::GooglePlayStore.Image sentiment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Image Sentiment {
      get { return sentiment_; }
      set {
        sentiment_ = value;
      }
    }

    /// <summary>Field number for the "helpfulCount" field.</summary>
    public const int HelpfulCountFieldNumber = 35;
    private readonly static int HelpfulCountDefaultValue = 0;

    private int helpfulCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HelpfulCount {
      get { if ((_hasBits0 & 8) != 0) { return helpfulCount_; } else { return HelpfulCountDefaultValue; } }
      set {
        _hasBits0 |= 8;
        helpfulCount_ = value;
      }
    }
    /// <summary>Gets whether the "helpfulCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHelpfulCount {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "helpfulCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHelpfulCount() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "thumbsUpCount" field.</summary>
    public const int ThumbsUpCountFieldNumber = 38;
    private readonly static long ThumbsUpCountDefaultValue = 0L;

    private long thumbsUpCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ThumbsUpCount {
      get { if ((_hasBits0 & 16) != 0) { return thumbsUpCount_; } else { return ThumbsUpCountDefaultValue; } }
      set {
        _hasBits0 |= 16;
        thumbsUpCount_ = value;
      }
    }
    /// <summary>Gets whether the "thumbsUpCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasThumbsUpCount {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "thumbsUpCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearThumbsUpCount() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Review);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Review other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AuthorName != other.AuthorName) return false;
      if (Url != other.Url) return false;
      if (Source != other.Source) return false;
      if (Version != other.Version) return false;
      if (Timestamp != other.Timestamp) return false;
      if (StarRating != other.StarRating) return false;
      if (Title != other.Title) return false;
      if (Comment != other.Comment) return false;
      if (CommentId != other.CommentId) return false;
      if (DeviceName != other.DeviceName) return false;
      if (ReplyText != other.ReplyText) return false;
      if (ReplyTimeStamp != other.ReplyTimeStamp) return false;
      if (!object.Equals(Author, other.Author)) return false;
      if (!object.Equals(UserProfile, other.UserProfile)) return false;
      if (!object.Equals(Sentiment, other.Sentiment)) return false;
      if (HelpfulCount != other.HelpfulCount) return false;
      if (ThumbsUpCount != other.ThumbsUpCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAuthorName) hash ^= AuthorName.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasSource) hash ^= Source.GetHashCode();
      if (HasVersion) hash ^= Version.GetHashCode();
      if (HasTimestamp) hash ^= Timestamp.GetHashCode();
      if (HasStarRating) hash ^= StarRating.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasComment) hash ^= Comment.GetHashCode();
      if (HasCommentId) hash ^= CommentId.GetHashCode();
      if (HasDeviceName) hash ^= DeviceName.GetHashCode();
      if (HasReplyText) hash ^= ReplyText.GetHashCode();
      if (HasReplyTimeStamp) hash ^= ReplyTimeStamp.GetHashCode();
      if (author_ != null) hash ^= Author.GetHashCode();
      if (userProfile_ != null) hash ^= UserProfile.GetHashCode();
      if (sentiment_ != null) hash ^= Sentiment.GetHashCode();
      if (HasHelpfulCount) hash ^= HelpfulCount.GetHashCode();
      if (HasThumbsUpCount) hash ^= ThumbsUpCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAuthorName) {
        output.WriteRawTag(10);
        output.WriteString(AuthorName);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasSource) {
        output.WriteRawTag(26);
        output.WriteString(Source);
      }
      if (HasVersion) {
        output.WriteRawTag(34);
        output.WriteString(Version);
      }
      if (HasTimestamp) {
        output.WriteRawTag(40);
        output.WriteInt64(Timestamp);
      }
      if (HasStarRating) {
        output.WriteRawTag(48);
        output.WriteInt32(StarRating);
      }
      if (HasTitle) {
        output.WriteRawTag(58);
        output.WriteString(Title);
      }
      if (HasComment) {
        output.WriteRawTag(66);
        output.WriteString(Comment);
      }
      if (HasCommentId) {
        output.WriteRawTag(74);
        output.WriteString(CommentId);
      }
      if (HasDeviceName) {
        output.WriteRawTag(154, 1);
        output.WriteString(DeviceName);
      }
      if (HasReplyText) {
        output.WriteRawTag(234, 1);
        output.WriteString(ReplyText);
      }
      if (HasReplyTimeStamp) {
        output.WriteRawTag(240, 1);
        output.WriteInt64(ReplyTimeStamp);
      }
      if (author_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(Author);
      }
      if (userProfile_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(UserProfile);
      }
      if (sentiment_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(Sentiment);
      }
      if (HasHelpfulCount) {
        output.WriteRawTag(152, 2);
        output.WriteInt32(HelpfulCount);
      }
      if (HasThumbsUpCount) {
        output.WriteRawTag(176, 2);
        output.WriteInt64(ThumbsUpCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAuthorName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthorName);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasSource) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (HasTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (HasStarRating) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StarRating);
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasComment) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (HasCommentId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CommentId);
      }
      if (HasDeviceName) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
      }
      if (HasReplyText) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ReplyText);
      }
      if (HasReplyTimeStamp) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ReplyTimeStamp);
      }
      if (author_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Author);
      }
      if (userProfile_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UserProfile);
      }
      if (sentiment_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Sentiment);
      }
      if (HasHelpfulCount) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HelpfulCount);
      }
      if (HasThumbsUpCount) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ThumbsUpCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Review other) {
      if (other == null) {
        return;
      }
      if (other.HasAuthorName) {
        AuthorName = other.AuthorName;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasSource) {
        Source = other.Source;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.HasTimestamp) {
        Timestamp = other.Timestamp;
      }
      if (other.HasStarRating) {
        StarRating = other.StarRating;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasComment) {
        Comment = other.Comment;
      }
      if (other.HasCommentId) {
        CommentId = other.CommentId;
      }
      if (other.HasDeviceName) {
        DeviceName = other.DeviceName;
      }
      if (other.HasReplyText) {
        ReplyText = other.ReplyText;
      }
      if (other.HasReplyTimeStamp) {
        ReplyTimeStamp = other.ReplyTimeStamp;
      }
      if (other.author_ != null) {
        if (author_ == null) {
          Author = new global::GooglePlayStore.ReviewAuthor();
        }
        Author.MergeFrom(other.Author);
      }
      if (other.userProfile_ != null) {
        if (userProfile_ == null) {
          UserProfile = new global::GooglePlayStore.UserProfile();
        }
        UserProfile.MergeFrom(other.UserProfile);
      }
      if (other.sentiment_ != null) {
        if (sentiment_ == null) {
          Sentiment = new global::GooglePlayStore.Image();
        }
        Sentiment.MergeFrom(other.Sentiment);
      }
      if (other.HasHelpfulCount) {
        HelpfulCount = other.HelpfulCount;
      }
      if (other.HasThumbsUpCount) {
        ThumbsUpCount = other.ThumbsUpCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AuthorName = input.ReadString();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            Source = input.ReadString();
            break;
          }
          case 34: {
            Version = input.ReadString();
            break;
          }
          case 40: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 48: {
            StarRating = input.ReadInt32();
            break;
          }
          case 58: {
            Title = input.ReadString();
            break;
          }
          case 66: {
            Comment = input.ReadString();
            break;
          }
          case 74: {
            CommentId = input.ReadString();
            break;
          }
          case 154: {
            DeviceName = input.ReadString();
            break;
          }
          case 234: {
            ReplyText = input.ReadString();
            break;
          }
          case 240: {
            ReplyTimeStamp = input.ReadInt64();
            break;
          }
          case 250: {
            if (author_ == null) {
              Author = new global::GooglePlayStore.ReviewAuthor();
            }
            input.ReadMessage(Author);
            break;
          }
          case 266: {
            if (userProfile_ == null) {
              UserProfile = new global::GooglePlayStore.UserProfile();
            }
            input.ReadMessage(UserProfile);
            break;
          }
          case 274: {
            if (sentiment_ == null) {
              Sentiment = new global::GooglePlayStore.Image();
            }
            input.ReadMessage(Sentiment);
            break;
          }
          case 280: {
            HelpfulCount = input.ReadInt32();
            break;
          }
          case 304: {
            ThumbsUpCount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CriticReviewsResponse : pb::IMessage<CriticReviewsResponse> {
    private static readonly pb::MessageParser<CriticReviewsResponse> _parser = new pb::MessageParser<CriticReviewsResponse>(() => new CriticReviewsResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CriticReviewsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[228]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CriticReviewsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CriticReviewsResponse(CriticReviewsResponse other) : this() {
      _hasBits0 = other._hasBits0;
      title_ = other.title_;
      image_ = other.image_ != null ? other.image_.Clone() : null;
      totalNumReviews_ = other.totalNumReviews_;
      percentFavorable_ = other.percentFavorable_;
      sourceText_ = other.sourceText_;
      source_ = other.source_ != null ? other.source_.Clone() : null;
      review_ = other.review_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CriticReviewsResponse Clone() {
      return new CriticReviewsResponse(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 2;
    private global::GooglePlayStore.Image image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Image Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    /// <summary>Field number for the "totalNumReviews" field.</summary>
    public const int TotalNumReviewsFieldNumber = 3;
    private readonly static uint TotalNumReviewsDefaultValue = 0;

    private uint totalNumReviews_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TotalNumReviews {
      get { if ((_hasBits0 & 1) != 0) { return totalNumReviews_; } else { return TotalNumReviewsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        totalNumReviews_ = value;
      }
    }
    /// <summary>Gets whether the "totalNumReviews" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTotalNumReviews {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "totalNumReviews" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTotalNumReviews() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "percentFavorable" field.</summary>
    public const int PercentFavorableFieldNumber = 4;
    private readonly static uint PercentFavorableDefaultValue = 0;

    private uint percentFavorable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PercentFavorable {
      get { if ((_hasBits0 & 2) != 0) { return percentFavorable_; } else { return PercentFavorableDefaultValue; } }
      set {
        _hasBits0 |= 2;
        percentFavorable_ = value;
      }
    }
    /// <summary>Gets whether the "percentFavorable" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPercentFavorable {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "percentFavorable" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPercentFavorable() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "sourceText" field.</summary>
    public const int SourceTextFieldNumber = 5;
    private readonly static string SourceTextDefaultValue = "";

    private string sourceText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceText {
      get { return sourceText_ ?? SourceTextDefaultValue; }
      set {
        sourceText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sourceText" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSourceText {
      get { return sourceText_ != null; }
    }
    /// <summary>Clears the value of the "sourceText" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSourceText() {
      sourceText_ = null;
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 6;
    private global::GooglePlayStore.Link source_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Link Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    /// <summary>Field number for the "review" field.</summary>
    public const int ReviewFieldNumber = 7;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Review> _repeated_review_codec
        = pb::FieldCodec.ForMessage(58, global::GooglePlayStore.Review.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Review> review_ = new pbc::RepeatedField<global::GooglePlayStore.Review>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Review> Review {
      get { return review_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CriticReviewsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CriticReviewsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (!object.Equals(Image, other.Image)) return false;
      if (TotalNumReviews != other.TotalNumReviews) return false;
      if (PercentFavorable != other.PercentFavorable) return false;
      if (SourceText != other.SourceText) return false;
      if (!object.Equals(Source, other.Source)) return false;
      if(!review_.Equals(other.review_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTitle) hash ^= Title.GetHashCode();
      if (image_ != null) hash ^= Image.GetHashCode();
      if (HasTotalNumReviews) hash ^= TotalNumReviews.GetHashCode();
      if (HasPercentFavorable) hash ^= PercentFavorable.GetHashCode();
      if (HasSourceText) hash ^= SourceText.GetHashCode();
      if (source_ != null) hash ^= Source.GetHashCode();
      hash ^= review_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTitle) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (image_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Image);
      }
      if (HasTotalNumReviews) {
        output.WriteRawTag(24);
        output.WriteUInt32(TotalNumReviews);
      }
      if (HasPercentFavorable) {
        output.WriteRawTag(32);
        output.WriteUInt32(PercentFavorable);
      }
      if (HasSourceText) {
        output.WriteRawTag(42);
        output.WriteString(SourceText);
      }
      if (source_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Source);
      }
      review_.WriteTo(output, _repeated_review_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (HasTotalNumReviews) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalNumReviews);
      }
      if (HasPercentFavorable) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PercentFavorable);
      }
      if (HasSourceText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceText);
      }
      if (source_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Source);
      }
      size += review_.CalculateSize(_repeated_review_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CriticReviewsResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::GooglePlayStore.Image();
        }
        Image.MergeFrom(other.Image);
      }
      if (other.HasTotalNumReviews) {
        TotalNumReviews = other.TotalNumReviews;
      }
      if (other.HasPercentFavorable) {
        PercentFavorable = other.PercentFavorable;
      }
      if (other.HasSourceText) {
        SourceText = other.SourceText;
      }
      if (other.source_ != null) {
        if (source_ == null) {
          Source = new global::GooglePlayStore.Link();
        }
        Source.MergeFrom(other.Source);
      }
      review_.Add(other.review_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            if (image_ == null) {
              Image = new global::GooglePlayStore.Image();
            }
            input.ReadMessage(Image);
            break;
          }
          case 24: {
            TotalNumReviews = input.ReadUInt32();
            break;
          }
          case 32: {
            PercentFavorable = input.ReadUInt32();
            break;
          }
          case 42: {
            SourceText = input.ReadString();
            break;
          }
          case 50: {
            if (source_ == null) {
              Source = new global::GooglePlayStore.Link();
            }
            input.ReadMessage(Source);
            break;
          }
          case 58: {
            review_.AddEntriesFrom(input, _repeated_review_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReviewAuthor : pb::IMessage<ReviewAuthor> {
    private static readonly pb::MessageParser<ReviewAuthor> _parser = new pb::MessageParser<ReviewAuthor>(() => new ReviewAuthor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReviewAuthor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[229]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReviewAuthor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReviewAuthor(ReviewAuthor other) : this() {
      name_ = other.name_;
      avatar_ = other.avatar_ != null ? other.avatar_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReviewAuthor Clone() {
      return new ReviewAuthor(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "avatar" field.</summary>
    public const int AvatarFieldNumber = 5;
    private global::GooglePlayStore.Image avatar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Image Avatar {
      get { return avatar_; }
      set {
        avatar_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReviewAuthor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReviewAuthor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Avatar, other.Avatar)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (avatar_ != null) hash ^= Avatar.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (avatar_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Avatar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (avatar_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Avatar);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReviewAuthor other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.avatar_ != null) {
        if (avatar_ == null) {
          Avatar = new global::GooglePlayStore.Image();
        }
        Avatar.MergeFrom(other.Avatar);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            if (avatar_ == null) {
              Avatar = new global::GooglePlayStore.Image();
            }
            input.ReadMessage(Avatar);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserProfile : pb::IMessage<UserProfile> {
    private static readonly pb::MessageParser<UserProfile> _parser = new pb::MessageParser<UserProfile>(() => new UserProfile());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[230]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserProfile(UserProfile other) : this() {
      _hasBits0 = other._hasBits0;
      profileId_ = other.profileId_;
      personId_ = other.personId_;
      profileType_ = other.profileType_;
      personType_ = other.personType_;
      name_ = other.name_;
      image_ = other.image_.Clone();
      profileUrl_ = other.profileUrl_;
      profileDescription_ = other.profileDescription_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserProfile Clone() {
      return new UserProfile(this);
    }

    /// <summary>Field number for the "profileId" field.</summary>
    public const int ProfileIdFieldNumber = 1;
    private readonly static string ProfileIdDefaultValue = "";

    private string profileId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProfileId {
      get { return profileId_ ?? ProfileIdDefaultValue; }
      set {
        profileId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "profileId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProfileId {
      get { return profileId_ != null; }
    }
    /// <summary>Clears the value of the "profileId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProfileId() {
      profileId_ = null;
    }

    /// <summary>Field number for the "personId" field.</summary>
    public const int PersonIdFieldNumber = 2;
    private readonly static string PersonIdDefaultValue = "";

    private string personId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonId {
      get { return personId_ ?? PersonIdDefaultValue; }
      set {
        personId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "personId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPersonId {
      get { return personId_ != null; }
    }
    /// <summary>Clears the value of the "personId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPersonId() {
      personId_ = null;
    }

    /// <summary>Field number for the "profileType" field.</summary>
    public const int ProfileTypeFieldNumber = 3;
    private readonly static int ProfileTypeDefaultValue = 0;

    private int profileType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProfileType {
      get { if ((_hasBits0 & 1) != 0) { return profileType_; } else { return ProfileTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        profileType_ = value;
      }
    }
    /// <summary>Gets whether the "profileType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProfileType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "profileType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProfileType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "personType" field.</summary>
    public const int PersonTypeFieldNumber = 4;
    private readonly static int PersonTypeDefaultValue = 0;

    private int personType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PersonType {
      get { if ((_hasBits0 & 2) != 0) { return personType_; } else { return PersonTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        personType_ = value;
      }
    }
    /// <summary>Gets whether the "personType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPersonType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "personType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPersonType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 10;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Image> _repeated_image_codec
        = pb::FieldCodec.ForMessage(82, global::GooglePlayStore.Image.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Image> image_ = new pbc::RepeatedField<global::GooglePlayStore.Image>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Image> Image {
      get { return image_; }
    }

    /// <summary>Field number for the "profileUrl" field.</summary>
    public const int ProfileUrlFieldNumber = 19;
    private readonly static string ProfileUrlDefaultValue = "";

    private string profileUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProfileUrl {
      get { return profileUrl_ ?? ProfileUrlDefaultValue; }
      set {
        profileUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "profileUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProfileUrl {
      get { return profileUrl_ != null; }
    }
    /// <summary>Clears the value of the "profileUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProfileUrl() {
      profileUrl_ = null;
    }

    /// <summary>Field number for the "profileDescription" field.</summary>
    public const int ProfileDescriptionFieldNumber = 22;
    private readonly static string ProfileDescriptionDefaultValue = "";

    private string profileDescription_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProfileDescription {
      get { return profileDescription_ ?? ProfileDescriptionDefaultValue; }
      set {
        profileDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "profileDescription" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProfileDescription {
      get { return profileDescription_ != null; }
    }
    /// <summary>Clears the value of the "profileDescription" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProfileDescription() {
      profileDescription_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProfileId != other.ProfileId) return false;
      if (PersonId != other.PersonId) return false;
      if (ProfileType != other.ProfileType) return false;
      if (PersonType != other.PersonType) return false;
      if (Name != other.Name) return false;
      if(!image_.Equals(other.image_)) return false;
      if (ProfileUrl != other.ProfileUrl) return false;
      if (ProfileDescription != other.ProfileDescription) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProfileId) hash ^= ProfileId.GetHashCode();
      if (HasPersonId) hash ^= PersonId.GetHashCode();
      if (HasProfileType) hash ^= ProfileType.GetHashCode();
      if (HasPersonType) hash ^= PersonType.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      hash ^= image_.GetHashCode();
      if (HasProfileUrl) hash ^= ProfileUrl.GetHashCode();
      if (HasProfileDescription) hash ^= ProfileDescription.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasProfileId) {
        output.WriteRawTag(10);
        output.WriteString(ProfileId);
      }
      if (HasPersonId) {
        output.WriteRawTag(18);
        output.WriteString(PersonId);
      }
      if (HasProfileType) {
        output.WriteRawTag(24);
        output.WriteInt32(ProfileType);
      }
      if (HasPersonType) {
        output.WriteRawTag(32);
        output.WriteInt32(PersonType);
      }
      if (HasName) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      image_.WriteTo(output, _repeated_image_codec);
      if (HasProfileUrl) {
        output.WriteRawTag(154, 1);
        output.WriteString(ProfileUrl);
      }
      if (HasProfileDescription) {
        output.WriteRawTag(178, 1);
        output.WriteString(ProfileDescription);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasProfileId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProfileId);
      }
      if (HasPersonId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonId);
      }
      if (HasProfileType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProfileType);
      }
      if (HasPersonType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PersonType);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += image_.CalculateSize(_repeated_image_codec);
      if (HasProfileUrl) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ProfileUrl);
      }
      if (HasProfileDescription) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ProfileDescription);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserProfile other) {
      if (other == null) {
        return;
      }
      if (other.HasProfileId) {
        ProfileId = other.ProfileId;
      }
      if (other.HasPersonId) {
        PersonId = other.PersonId;
      }
      if (other.HasProfileType) {
        ProfileType = other.ProfileType;
      }
      if (other.HasPersonType) {
        PersonType = other.PersonType;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      image_.Add(other.image_);
      if (other.HasProfileUrl) {
        ProfileUrl = other.ProfileUrl;
      }
      if (other.HasProfileDescription) {
        ProfileDescription = other.ProfileDescription;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProfileId = input.ReadString();
            break;
          }
          case 18: {
            PersonId = input.ReadString();
            break;
          }
          case 24: {
            ProfileType = input.ReadInt32();
            break;
          }
          case 32: {
            PersonType = input.ReadInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 82: {
            image_.AddEntriesFrom(input, _repeated_image_codec);
            break;
          }
          case 154: {
            ProfileUrl = input.ReadString();
            break;
          }
          case 178: {
            ProfileDescription = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReviewResponse : pb::IMessage<ReviewResponse> {
    private static readonly pb::MessageParser<ReviewResponse> _parser = new pb::MessageParser<ReviewResponse>(() => new ReviewResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReviewResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[231]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReviewResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReviewResponse(ReviewResponse other) : this() {
      userReviewsResponse_ = other.userReviewsResponse_ != null ? other.userReviewsResponse_.Clone() : null;
      nextPageUrl_ = other.nextPageUrl_;
      userReview_ = other.userReview_ != null ? other.userReview_.Clone() : null;
      suggestionsListUrl_ = other.suggestionsListUrl_;
      criticReviewsResponse_ = other.criticReviewsResponse_ != null ? other.criticReviewsResponse_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReviewResponse Clone() {
      return new ReviewResponse(this);
    }

    /// <summary>Field number for the "userReviewsResponse" field.</summary>
    public const int UserReviewsResponseFieldNumber = 1;
    private global::GooglePlayStore.GetReviewsResponse userReviewsResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.GetReviewsResponse UserReviewsResponse {
      get { return userReviewsResponse_; }
      set {
        userReviewsResponse_ = value;
      }
    }

    /// <summary>Field number for the "nextPageUrl" field.</summary>
    public const int NextPageUrlFieldNumber = 2;
    private readonly static string NextPageUrlDefaultValue = "";

    private string nextPageUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageUrl {
      get { return nextPageUrl_ ?? NextPageUrlDefaultValue; }
      set {
        nextPageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "nextPageUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNextPageUrl {
      get { return nextPageUrl_ != null; }
    }
    /// <summary>Clears the value of the "nextPageUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNextPageUrl() {
      nextPageUrl_ = null;
    }

    /// <summary>Field number for the "userReview" field.</summary>
    public const int UserReviewFieldNumber = 3;
    private global::GooglePlayStore.Review userReview_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Review UserReview {
      get { return userReview_; }
      set {
        userReview_ = value;
      }
    }

    /// <summary>Field number for the "suggestionsListUrl" field.</summary>
    public const int SuggestionsListUrlFieldNumber = 4;
    private readonly static string SuggestionsListUrlDefaultValue = "";

    private string suggestionsListUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SuggestionsListUrl {
      get { return suggestionsListUrl_ ?? SuggestionsListUrlDefaultValue; }
      set {
        suggestionsListUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "suggestionsListUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSuggestionsListUrl {
      get { return suggestionsListUrl_ != null; }
    }
    /// <summary>Clears the value of the "suggestionsListUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSuggestionsListUrl() {
      suggestionsListUrl_ = null;
    }

    /// <summary>Field number for the "criticReviewsResponse" field.</summary>
    public const int CriticReviewsResponseFieldNumber = 5;
    private global::GooglePlayStore.CriticReviewsResponse criticReviewsResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CriticReviewsResponse CriticReviewsResponse {
      get { return criticReviewsResponse_; }
      set {
        criticReviewsResponse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReviewResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReviewResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserReviewsResponse, other.UserReviewsResponse)) return false;
      if (NextPageUrl != other.NextPageUrl) return false;
      if (!object.Equals(UserReview, other.UserReview)) return false;
      if (SuggestionsListUrl != other.SuggestionsListUrl) return false;
      if (!object.Equals(CriticReviewsResponse, other.CriticReviewsResponse)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userReviewsResponse_ != null) hash ^= UserReviewsResponse.GetHashCode();
      if (HasNextPageUrl) hash ^= NextPageUrl.GetHashCode();
      if (userReview_ != null) hash ^= UserReview.GetHashCode();
      if (HasSuggestionsListUrl) hash ^= SuggestionsListUrl.GetHashCode();
      if (criticReviewsResponse_ != null) hash ^= CriticReviewsResponse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userReviewsResponse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserReviewsResponse);
      }
      if (HasNextPageUrl) {
        output.WriteRawTag(18);
        output.WriteString(NextPageUrl);
      }
      if (userReview_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserReview);
      }
      if (HasSuggestionsListUrl) {
        output.WriteRawTag(34);
        output.WriteString(SuggestionsListUrl);
      }
      if (criticReviewsResponse_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CriticReviewsResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userReviewsResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserReviewsResponse);
      }
      if (HasNextPageUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageUrl);
      }
      if (userReview_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserReview);
      }
      if (HasSuggestionsListUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SuggestionsListUrl);
      }
      if (criticReviewsResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CriticReviewsResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReviewResponse other) {
      if (other == null) {
        return;
      }
      if (other.userReviewsResponse_ != null) {
        if (userReviewsResponse_ == null) {
          UserReviewsResponse = new global::GooglePlayStore.GetReviewsResponse();
        }
        UserReviewsResponse.MergeFrom(other.UserReviewsResponse);
      }
      if (other.HasNextPageUrl) {
        NextPageUrl = other.NextPageUrl;
      }
      if (other.userReview_ != null) {
        if (userReview_ == null) {
          UserReview = new global::GooglePlayStore.Review();
        }
        UserReview.MergeFrom(other.UserReview);
      }
      if (other.HasSuggestionsListUrl) {
        SuggestionsListUrl = other.SuggestionsListUrl;
      }
      if (other.criticReviewsResponse_ != null) {
        if (criticReviewsResponse_ == null) {
          CriticReviewsResponse = new global::GooglePlayStore.CriticReviewsResponse();
        }
        CriticReviewsResponse.MergeFrom(other.CriticReviewsResponse);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userReviewsResponse_ == null) {
              UserReviewsResponse = new global::GooglePlayStore.GetReviewsResponse();
            }
            input.ReadMessage(UserReviewsResponse);
            break;
          }
          case 18: {
            NextPageUrl = input.ReadString();
            break;
          }
          case 26: {
            if (userReview_ == null) {
              UserReview = new global::GooglePlayStore.Review();
            }
            input.ReadMessage(UserReview);
            break;
          }
          case 34: {
            SuggestionsListUrl = input.ReadString();
            break;
          }
          case 42: {
            if (criticReviewsResponse_ == null) {
              CriticReviewsResponse = new global::GooglePlayStore.CriticReviewsResponse();
            }
            input.ReadMessage(CriticReviewsResponse);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RelatedSearch : pb::IMessage<RelatedSearch> {
    private static readonly pb::MessageParser<RelatedSearch> _parser = new pb::MessageParser<RelatedSearch>(() => new RelatedSearch());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RelatedSearch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[232]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedSearch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedSearch(RelatedSearch other) : this() {
      _hasBits0 = other._hasBits0;
      searchUrl_ = other.searchUrl_;
      header_ = other.header_;
      backendId_ = other.backendId_;
      docType_ = other.docType_;
      current_ = other.current_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedSearch Clone() {
      return new RelatedSearch(this);
    }

    /// <summary>Field number for the "searchUrl" field.</summary>
    public const int SearchUrlFieldNumber = 1;
    private readonly static string SearchUrlDefaultValue = "";

    private string searchUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SearchUrl {
      get { return searchUrl_ ?? SearchUrlDefaultValue; }
      set {
        searchUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "searchUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSearchUrl {
      get { return searchUrl_ != null; }
    }
    /// <summary>Clears the value of the "searchUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSearchUrl() {
      searchUrl_ = null;
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 2;
    private readonly static string HeaderDefaultValue = "";

    private string header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Header {
      get { return header_ ?? HeaderDefaultValue; }
      set {
        header_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "header" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHeader {
      get { return header_ != null; }
    }
    /// <summary>Clears the value of the "header" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHeader() {
      header_ = null;
    }

    /// <summary>Field number for the "backendId" field.</summary>
    public const int BackendIdFieldNumber = 3;
    private readonly static int BackendIdDefaultValue = 0;

    private int backendId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BackendId {
      get { if ((_hasBits0 & 1) != 0) { return backendId_; } else { return BackendIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        backendId_ = value;
      }
    }
    /// <summary>Gets whether the "backendId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBackendId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "backendId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBackendId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "docType" field.</summary>
    public const int DocTypeFieldNumber = 4;
    private readonly static int DocTypeDefaultValue = 1;

    private int docType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DocType {
      get { if ((_hasBits0 & 2) != 0) { return docType_; } else { return DocTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        docType_ = value;
      }
    }
    /// <summary>Gets whether the "docType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDocType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "docType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDocType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "current" field.</summary>
    public const int CurrentFieldNumber = 5;
    private readonly static bool CurrentDefaultValue = false;

    private bool current_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Current {
      get { if ((_hasBits0 & 4) != 0) { return current_; } else { return CurrentDefaultValue; } }
      set {
        _hasBits0 |= 4;
        current_ = value;
      }
    }
    /// <summary>Gets whether the "current" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCurrent {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "current" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCurrent() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RelatedSearch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RelatedSearch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SearchUrl != other.SearchUrl) return false;
      if (Header != other.Header) return false;
      if (BackendId != other.BackendId) return false;
      if (DocType != other.DocType) return false;
      if (Current != other.Current) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSearchUrl) hash ^= SearchUrl.GetHashCode();
      if (HasHeader) hash ^= Header.GetHashCode();
      if (HasBackendId) hash ^= BackendId.GetHashCode();
      if (HasDocType) hash ^= DocType.GetHashCode();
      if (HasCurrent) hash ^= Current.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasSearchUrl) {
        output.WriteRawTag(10);
        output.WriteString(SearchUrl);
      }
      if (HasHeader) {
        output.WriteRawTag(18);
        output.WriteString(Header);
      }
      if (HasBackendId) {
        output.WriteRawTag(24);
        output.WriteInt32(BackendId);
      }
      if (HasDocType) {
        output.WriteRawTag(32);
        output.WriteInt32(DocType);
      }
      if (HasCurrent) {
        output.WriteRawTag(40);
        output.WriteBool(Current);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSearchUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SearchUrl);
      }
      if (HasHeader) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Header);
      }
      if (HasBackendId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BackendId);
      }
      if (HasDocType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DocType);
      }
      if (HasCurrent) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RelatedSearch other) {
      if (other == null) {
        return;
      }
      if (other.HasSearchUrl) {
        SearchUrl = other.SearchUrl;
      }
      if (other.HasHeader) {
        Header = other.Header;
      }
      if (other.HasBackendId) {
        BackendId = other.BackendId;
      }
      if (other.HasDocType) {
        DocType = other.DocType;
      }
      if (other.HasCurrent) {
        Current = other.Current;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SearchUrl = input.ReadString();
            break;
          }
          case 18: {
            Header = input.ReadString();
            break;
          }
          case 24: {
            BackendId = input.ReadInt32();
            break;
          }
          case 32: {
            DocType = input.ReadInt32();
            break;
          }
          case 40: {
            Current = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchResponse : pb::IMessage<SearchResponse> {
    private static readonly pb::MessageParser<SearchResponse> _parser = new pb::MessageParser<SearchResponse>(() => new SearchResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[233]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchResponse(SearchResponse other) : this() {
      _hasBits0 = other._hasBits0;
      originalQuery_ = other.originalQuery_;
      suggestedQuery_ = other.suggestedQuery_;
      aggregateQuery_ = other.aggregateQuery_;
      bucket_ = other.bucket_.Clone();
      item_ = other.item_.Clone();
      relatedSearch_ = other.relatedSearch_.Clone();
      serverLogsCookie_ = other.serverLogsCookie_;
      fullPageReplaced_ = other.fullPageReplaced_;
      containsSnow_ = other.containsSnow_;
      nextPageUrl_ = other.nextPageUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchResponse Clone() {
      return new SearchResponse(this);
    }

    /// <summary>Field number for the "originalQuery" field.</summary>
    public const int OriginalQueryFieldNumber = 1;
    private readonly static string OriginalQueryDefaultValue = "";

    private string originalQuery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalQuery {
      get { return originalQuery_ ?? OriginalQueryDefaultValue; }
      set {
        originalQuery_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "originalQuery" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOriginalQuery {
      get { return originalQuery_ != null; }
    }
    /// <summary>Clears the value of the "originalQuery" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOriginalQuery() {
      originalQuery_ = null;
    }

    /// <summary>Field number for the "suggestedQuery" field.</summary>
    public const int SuggestedQueryFieldNumber = 2;
    private readonly static string SuggestedQueryDefaultValue = "";

    private string suggestedQuery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SuggestedQuery {
      get { return suggestedQuery_ ?? SuggestedQueryDefaultValue; }
      set {
        suggestedQuery_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "suggestedQuery" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSuggestedQuery {
      get { return suggestedQuery_ != null; }
    }
    /// <summary>Clears the value of the "suggestedQuery" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSuggestedQuery() {
      suggestedQuery_ = null;
    }

    /// <summary>Field number for the "aggregateQuery" field.</summary>
    public const int AggregateQueryFieldNumber = 3;
    private readonly static bool AggregateQueryDefaultValue = false;

    private bool aggregateQuery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AggregateQuery {
      get { if ((_hasBits0 & 1) != 0) { return aggregateQuery_; } else { return AggregateQueryDefaultValue; } }
      set {
        _hasBits0 |= 1;
        aggregateQuery_ = value;
      }
    }
    /// <summary>Gets whether the "aggregateQuery" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAggregateQuery {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "aggregateQuery" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAggregateQuery() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "bucket" field.</summary>
    public const int BucketFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Bucket> _repeated_bucket_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.Bucket.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Bucket> bucket_ = new pbc::RepeatedField<global::GooglePlayStore.Bucket>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Bucket> Bucket {
      get { return bucket_; }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 5;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Item> _repeated_item_codec
        = pb::FieldCodec.ForMessage(42, global::GooglePlayStore.Item.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Item> item_ = new pbc::RepeatedField<global::GooglePlayStore.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Item> Item {
      get { return item_; }
    }

    /// <summary>Field number for the "relatedSearch" field.</summary>
    public const int RelatedSearchFieldNumber = 6;
    private static readonly pb::FieldCodec<global::GooglePlayStore.RelatedSearch> _repeated_relatedSearch_codec
        = pb::FieldCodec.ForMessage(50, global::GooglePlayStore.RelatedSearch.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.RelatedSearch> relatedSearch_ = new pbc::RepeatedField<global::GooglePlayStore.RelatedSearch>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.RelatedSearch> RelatedSearch {
      get { return relatedSearch_; }
    }

    /// <summary>Field number for the "serverLogsCookie" field.</summary>
    public const int ServerLogsCookieFieldNumber = 7;
    private readonly static pb::ByteString ServerLogsCookieDefaultValue = pb::ByteString.Empty;

    private pb::ByteString serverLogsCookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ServerLogsCookie {
      get { return serverLogsCookie_ ?? ServerLogsCookieDefaultValue; }
      set {
        serverLogsCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serverLogsCookie" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServerLogsCookie {
      get { return serverLogsCookie_ != null; }
    }
    /// <summary>Clears the value of the "serverLogsCookie" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServerLogsCookie() {
      serverLogsCookie_ = null;
    }

    /// <summary>Field number for the "fullPageReplaced" field.</summary>
    public const int FullPageReplacedFieldNumber = 8;
    private readonly static bool FullPageReplacedDefaultValue = false;

    private bool fullPageReplaced_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FullPageReplaced {
      get { if ((_hasBits0 & 2) != 0) { return fullPageReplaced_; } else { return FullPageReplacedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        fullPageReplaced_ = value;
      }
    }
    /// <summary>Gets whether the "fullPageReplaced" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFullPageReplaced {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "fullPageReplaced" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFullPageReplaced() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "containsSnow" field.</summary>
    public const int ContainsSnowFieldNumber = 9;
    private readonly static bool ContainsSnowDefaultValue = false;

    private bool containsSnow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ContainsSnow {
      get { if ((_hasBits0 & 4) != 0) { return containsSnow_; } else { return ContainsSnowDefaultValue; } }
      set {
        _hasBits0 |= 4;
        containsSnow_ = value;
      }
    }
    /// <summary>Gets whether the "containsSnow" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContainsSnow {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "containsSnow" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContainsSnow() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "nextPageUrl" field.</summary>
    public const int NextPageUrlFieldNumber = 10;
    private readonly static string NextPageUrlDefaultValue = "";

    private string nextPageUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageUrl {
      get { return nextPageUrl_ ?? NextPageUrlDefaultValue; }
      set {
        nextPageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "nextPageUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNextPageUrl {
      get { return nextPageUrl_ != null; }
    }
    /// <summary>Clears the value of the "nextPageUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNextPageUrl() {
      nextPageUrl_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OriginalQuery != other.OriginalQuery) return false;
      if (SuggestedQuery != other.SuggestedQuery) return false;
      if (AggregateQuery != other.AggregateQuery) return false;
      if(!bucket_.Equals(other.bucket_)) return false;
      if(!item_.Equals(other.item_)) return false;
      if(!relatedSearch_.Equals(other.relatedSearch_)) return false;
      if (ServerLogsCookie != other.ServerLogsCookie) return false;
      if (FullPageReplaced != other.FullPageReplaced) return false;
      if (ContainsSnow != other.ContainsSnow) return false;
      if (NextPageUrl != other.NextPageUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOriginalQuery) hash ^= OriginalQuery.GetHashCode();
      if (HasSuggestedQuery) hash ^= SuggestedQuery.GetHashCode();
      if (HasAggregateQuery) hash ^= AggregateQuery.GetHashCode();
      hash ^= bucket_.GetHashCode();
      hash ^= item_.GetHashCode();
      hash ^= relatedSearch_.GetHashCode();
      if (HasServerLogsCookie) hash ^= ServerLogsCookie.GetHashCode();
      if (HasFullPageReplaced) hash ^= FullPageReplaced.GetHashCode();
      if (HasContainsSnow) hash ^= ContainsSnow.GetHashCode();
      if (HasNextPageUrl) hash ^= NextPageUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasOriginalQuery) {
        output.WriteRawTag(10);
        output.WriteString(OriginalQuery);
      }
      if (HasSuggestedQuery) {
        output.WriteRawTag(18);
        output.WriteString(SuggestedQuery);
      }
      if (HasAggregateQuery) {
        output.WriteRawTag(24);
        output.WriteBool(AggregateQuery);
      }
      bucket_.WriteTo(output, _repeated_bucket_codec);
      item_.WriteTo(output, _repeated_item_codec);
      relatedSearch_.WriteTo(output, _repeated_relatedSearch_codec);
      if (HasServerLogsCookie) {
        output.WriteRawTag(58);
        output.WriteBytes(ServerLogsCookie);
      }
      if (HasFullPageReplaced) {
        output.WriteRawTag(64);
        output.WriteBool(FullPageReplaced);
      }
      if (HasContainsSnow) {
        output.WriteRawTag(72);
        output.WriteBool(ContainsSnow);
      }
      if (HasNextPageUrl) {
        output.WriteRawTag(82);
        output.WriteString(NextPageUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasOriginalQuery) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalQuery);
      }
      if (HasSuggestedQuery) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SuggestedQuery);
      }
      if (HasAggregateQuery) {
        size += 1 + 1;
      }
      size += bucket_.CalculateSize(_repeated_bucket_codec);
      size += item_.CalculateSize(_repeated_item_codec);
      size += relatedSearch_.CalculateSize(_repeated_relatedSearch_codec);
      if (HasServerLogsCookie) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ServerLogsCookie);
      }
      if (HasFullPageReplaced) {
        size += 1 + 1;
      }
      if (HasContainsSnow) {
        size += 1 + 1;
      }
      if (HasNextPageUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasOriginalQuery) {
        OriginalQuery = other.OriginalQuery;
      }
      if (other.HasSuggestedQuery) {
        SuggestedQuery = other.SuggestedQuery;
      }
      if (other.HasAggregateQuery) {
        AggregateQuery = other.AggregateQuery;
      }
      bucket_.Add(other.bucket_);
      item_.Add(other.item_);
      relatedSearch_.Add(other.relatedSearch_);
      if (other.HasServerLogsCookie) {
        ServerLogsCookie = other.ServerLogsCookie;
      }
      if (other.HasFullPageReplaced) {
        FullPageReplaced = other.FullPageReplaced;
      }
      if (other.HasContainsSnow) {
        ContainsSnow = other.ContainsSnow;
      }
      if (other.HasNextPageUrl) {
        NextPageUrl = other.NextPageUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OriginalQuery = input.ReadString();
            break;
          }
          case 18: {
            SuggestedQuery = input.ReadString();
            break;
          }
          case 24: {
            AggregateQuery = input.ReadBool();
            break;
          }
          case 34: {
            bucket_.AddEntriesFrom(input, _repeated_bucket_codec);
            break;
          }
          case 42: {
            item_.AddEntriesFrom(input, _repeated_item_codec);
            break;
          }
          case 50: {
            relatedSearch_.AddEntriesFrom(input, _repeated_relatedSearch_codec);
            break;
          }
          case 58: {
            ServerLogsCookie = input.ReadBytes();
            break;
          }
          case 64: {
            FullPageReplaced = input.ReadBool();
            break;
          }
          case 72: {
            ContainsSnow = input.ReadBool();
            break;
          }
          case 82: {
            NextPageUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchSuggestResponse : pb::IMessage<SearchSuggestResponse> {
    private static readonly pb::MessageParser<SearchSuggestResponse> _parser = new pb::MessageParser<SearchSuggestResponse>(() => new SearchSuggestResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchSuggestResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[234]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchSuggestResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchSuggestResponse(SearchSuggestResponse other) : this() {
      entry_ = other.entry_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchSuggestResponse Clone() {
      return new SearchSuggestResponse(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GooglePlayStore.SearchSuggestEntry> _repeated_entry_codec
        = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.SearchSuggestEntry.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.SearchSuggestEntry> entry_ = new pbc::RepeatedField<global::GooglePlayStore.SearchSuggestEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.SearchSuggestEntry> Entry {
      get { return entry_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchSuggestResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchSuggestResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entry_.Equals(other.entry_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entry_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entry_.WriteTo(output, _repeated_entry_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entry_.CalculateSize(_repeated_entry_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchSuggestResponse other) {
      if (other == null) {
        return;
      }
      entry_.Add(other.entry_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entry_.AddEntriesFrom(input, _repeated_entry_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchSuggestEntry : pb::IMessage<SearchSuggestEntry> {
    private static readonly pb::MessageParser<SearchSuggestEntry> _parser = new pb::MessageParser<SearchSuggestEntry>(() => new SearchSuggestEntry());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchSuggestEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[235]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchSuggestEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchSuggestEntry(SearchSuggestEntry other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      suggestedQuery_ = other.suggestedQuery_;
      imageContainer_ = other.imageContainer_ != null ? other.imageContainer_.Clone() : null;
      title_ = other.title_;
      packageNameContainer_ = other.packageNameContainer_ != null ? other.packageNameContainer_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchSuggestEntry Clone() {
      return new SearchSuggestEntry(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "suggestedQuery" field.</summary>
    public const int SuggestedQueryFieldNumber = 2;
    private readonly static string SuggestedQueryDefaultValue = "";

    private string suggestedQuery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SuggestedQuery {
      get { return suggestedQuery_ ?? SuggestedQueryDefaultValue; }
      set {
        suggestedQuery_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "suggestedQuery" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSuggestedQuery {
      get { return suggestedQuery_ != null; }
    }
    /// <summary>Clears the value of the "suggestedQuery" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSuggestedQuery() {
      suggestedQuery_ = null;
    }

    /// <summary>Field number for the "imageContainer" field.</summary>
    public const int ImageContainerFieldNumber = 5;
    private global::GooglePlayStore.SearchSuggestEntry.Types.ImageContainer imageContainer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SearchSuggestEntry.Types.ImageContainer ImageContainer {
      get { return imageContainer_; }
      set {
        imageContainer_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 6;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "packageNameContainer" field.</summary>
    public const int PackageNameContainerFieldNumber = 8;
    private global::GooglePlayStore.SearchSuggestEntry.Types.PackageNameContainer packageNameContainer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SearchSuggestEntry.Types.PackageNameContainer PackageNameContainer {
      get { return packageNameContainer_; }
      set {
        packageNameContainer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchSuggestEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchSuggestEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (SuggestedQuery != other.SuggestedQuery) return false;
      if (!object.Equals(ImageContainer, other.ImageContainer)) return false;
      if (Title != other.Title) return false;
      if (!object.Equals(PackageNameContainer, other.PackageNameContainer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasSuggestedQuery) hash ^= SuggestedQuery.GetHashCode();
      if (imageContainer_ != null) hash ^= ImageContainer.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (packageNameContainer_ != null) hash ^= PackageNameContainer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasSuggestedQuery) {
        output.WriteRawTag(18);
        output.WriteString(SuggestedQuery);
      }
      if (imageContainer_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ImageContainer);
      }
      if (HasTitle) {
        output.WriteRawTag(50);
        output.WriteString(Title);
      }
      if (packageNameContainer_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PackageNameContainer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasSuggestedQuery) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SuggestedQuery);
      }
      if (imageContainer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImageContainer);
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (packageNameContainer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PackageNameContainer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchSuggestEntry other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasSuggestedQuery) {
        SuggestedQuery = other.SuggestedQuery;
      }
      if (other.imageContainer_ != null) {
        if (imageContainer_ == null) {
          ImageContainer = new global::GooglePlayStore.SearchSuggestEntry.Types.ImageContainer();
        }
        ImageContainer.MergeFrom(other.ImageContainer);
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.packageNameContainer_ != null) {
        if (packageNameContainer_ == null) {
          PackageNameContainer = new global::GooglePlayStore.SearchSuggestEntry.Types.PackageNameContainer();
        }
        PackageNameContainer.MergeFrom(other.PackageNameContainer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            SuggestedQuery = input.ReadString();
            break;
          }
          case 42: {
            if (imageContainer_ == null) {
              ImageContainer = new global::GooglePlayStore.SearchSuggestEntry.Types.ImageContainer();
            }
            input.ReadMessage(ImageContainer);
            break;
          }
          case 50: {
            Title = input.ReadString();
            break;
          }
          case 66: {
            if (packageNameContainer_ == null) {
              PackageNameContainer = new global::GooglePlayStore.SearchSuggestEntry.Types.PackageNameContainer();
            }
            input.ReadMessage(PackageNameContainer);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SearchSuggestEntry message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ImageContainer : pb::IMessage<ImageContainer> {
        private static readonly pb::MessageParser<ImageContainer> _parser = new pb::MessageParser<ImageContainer>(() => new ImageContainer());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ImageContainer> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GooglePlayStore.SearchSuggestEntry.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImageContainer() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImageContainer(ImageContainer other) : this() {
          imageUrl_ = other.imageUrl_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImageContainer Clone() {
          return new ImageContainer(this);
        }

        /// <summary>Field number for the "imageUrl" field.</summary>
        public const int ImageUrlFieldNumber = 5;
        private readonly static string ImageUrlDefaultValue = "";

        private string imageUrl_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ImageUrl {
          get { return imageUrl_ ?? ImageUrlDefaultValue; }
          set {
            imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "imageUrl" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasImageUrl {
          get { return imageUrl_ != null; }
        }
        /// <summary>Clears the value of the "imageUrl" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearImageUrl() {
          imageUrl_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ImageContainer);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ImageContainer other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ImageUrl != other.ImageUrl) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasImageUrl) hash ^= ImageUrl.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (HasImageUrl) {
            output.WriteRawTag(42);
            output.WriteString(ImageUrl);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasImageUrl) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ImageContainer other) {
          if (other == null) {
            return;
          }
          if (other.HasImageUrl) {
            ImageUrl = other.ImageUrl;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 42: {
                ImageUrl = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class PackageNameContainer : pb::IMessage<PackageNameContainer> {
        private static readonly pb::MessageParser<PackageNameContainer> _parser = new pb::MessageParser<PackageNameContainer>(() => new PackageNameContainer());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PackageNameContainer> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GooglePlayStore.SearchSuggestEntry.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PackageNameContainer() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PackageNameContainer(PackageNameContainer other) : this() {
          packageName_ = other.packageName_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PackageNameContainer Clone() {
          return new PackageNameContainer(this);
        }

        /// <summary>Field number for the "packageName" field.</summary>
        public const int PackageNameFieldNumber = 1;
        private readonly static string PackageNameDefaultValue = "";

        private string packageName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string PackageName {
          get { return packageName_ ?? PackageNameDefaultValue; }
          set {
            packageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "packageName" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasPackageName {
          get { return packageName_ != null; }
        }
        /// <summary>Clears the value of the "packageName" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearPackageName() {
          packageName_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PackageNameContainer);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PackageNameContainer other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PackageName != other.PackageName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasPackageName) hash ^= PackageName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (HasPackageName) {
            output.WriteRawTag(10);
            output.WriteString(PackageName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasPackageName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PackageNameContainer other) {
          if (other == null) {
            return;
          }
          if (other.HasPackageName) {
            PackageName = other.PackageName;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                PackageName = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class TestingProgramResponse : pb::IMessage<TestingProgramResponse> {
    private static readonly pb::MessageParser<TestingProgramResponse> _parser = new pb::MessageParser<TestingProgramResponse>(() => new TestingProgramResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestingProgramResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[236]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramResponse(TestingProgramResponse other) : this() {
      result_ = other.result_ != null ? other.result_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramResponse Clone() {
      return new TestingProgramResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::GooglePlayStore.TestingProgramResult result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TestingProgramResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestingProgramResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestingProgramResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (result_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestingProgramResponse other) {
      if (other == null) {
        return;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::GooglePlayStore.TestingProgramResult();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (result_ == null) {
              Result = new global::GooglePlayStore.TestingProgramResult();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestingProgramResult : pb::IMessage<TestingProgramResult> {
    private static readonly pb::MessageParser<TestingProgramResult> _parser = new pb::MessageParser<TestingProgramResult>(() => new TestingProgramResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestingProgramResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[237]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramResult(TestingProgramResult other) : this() {
      details_ = other.details_ != null ? other.details_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramResult Clone() {
      return new TestingProgramResult(this);
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 4;
    private global::GooglePlayStore.TestingProgramDetails details_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TestingProgramDetails Details {
      get { return details_; }
      set {
        details_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestingProgramResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestingProgramResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Details, other.Details)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (details_ != null) hash ^= Details.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (details_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Details);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (details_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Details);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestingProgramResult other) {
      if (other == null) {
        return;
      }
      if (other.details_ != null) {
        if (details_ == null) {
          Details = new global::GooglePlayStore.TestingProgramDetails();
        }
        Details.MergeFrom(other.Details);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 34: {
            if (details_ == null) {
              Details = new global::GooglePlayStore.TestingProgramDetails();
            }
            input.ReadMessage(Details);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestingProgramDetails : pb::IMessage<TestingProgramDetails> {
    private static readonly pb::MessageParser<TestingProgramDetails> _parser = new pb::MessageParser<TestingProgramDetails>(() => new TestingProgramDetails());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestingProgramDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[238]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramDetails(TestingProgramDetails other) : this() {
      _hasBits0 = other._hasBits0;
      subscribed_ = other.subscribed_;
      id_ = other.id_;
      unsubscribed_ = other.unsubscribed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramDetails Clone() {
      return new TestingProgramDetails(this);
    }

    /// <summary>Field number for the "subscribed" field.</summary>
    public const int SubscribedFieldNumber = 2;
    private readonly static bool SubscribedDefaultValue = false;

    private bool subscribed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Subscribed {
      get { if ((_hasBits0 & 1) != 0) { return subscribed_; } else { return SubscribedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        subscribed_ = value;
      }
    }
    /// <summary>Gets whether the "subscribed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubscribed {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "subscribed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubscribed() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private readonly static long IdDefaultValue = 0L;

    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { if ((_hasBits0 & 2) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "unsubscribed" field.</summary>
    public const int UnsubscribedFieldNumber = 4;
    private readonly static bool UnsubscribedDefaultValue = false;

    private bool unsubscribed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Unsubscribed {
      get { if ((_hasBits0 & 4) != 0) { return unsubscribed_; } else { return UnsubscribedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        unsubscribed_ = value;
      }
    }
    /// <summary>Gets whether the "unsubscribed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUnsubscribed {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "unsubscribed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUnsubscribed() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestingProgramDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestingProgramDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Subscribed != other.Subscribed) return false;
      if (Id != other.Id) return false;
      if (Unsubscribed != other.Unsubscribed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSubscribed) hash ^= Subscribed.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (HasUnsubscribed) hash ^= Unsubscribed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasSubscribed) {
        output.WriteRawTag(16);
        output.WriteBool(Subscribed);
      }
      if (HasId) {
        output.WriteRawTag(24);
        output.WriteInt64(Id);
      }
      if (HasUnsubscribed) {
        output.WriteRawTag(32);
        output.WriteBool(Unsubscribed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSubscribed) {
        size += 1 + 1;
      }
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (HasUnsubscribed) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestingProgramDetails other) {
      if (other == null) {
        return;
      }
      if (other.HasSubscribed) {
        Subscribed = other.Subscribed;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasUnsubscribed) {
        Unsubscribed = other.Unsubscribed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            Subscribed = input.ReadBool();
            break;
          }
          case 24: {
            Id = input.ReadInt64();
            break;
          }
          case 32: {
            Unsubscribed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LogRequest : pb::IMessage<LogRequest> {
    private static readonly pb::MessageParser<LogRequest> _parser = new pb::MessageParser<LogRequest>(() => new LogRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[239]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogRequest(LogRequest other) : this() {
      _hasBits0 = other._hasBits0;
      timestamp_ = other.timestamp_;
      downloadConfirmationQuery_ = other.downloadConfirmationQuery_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogRequest Clone() {
      return new LogRequest(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private readonly static long TimestampDefaultValue = 0L;

    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { if ((_hasBits0 & 1) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
      set {
        _hasBits0 |= 1;
        timestamp_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTimestamp {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimestamp() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "downloadConfirmationQuery" field.</summary>
    public const int DownloadConfirmationQueryFieldNumber = 2;
    private readonly static string DownloadConfirmationQueryDefaultValue = "";

    private string downloadConfirmationQuery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DownloadConfirmationQuery {
      get { return downloadConfirmationQuery_ ?? DownloadConfirmationQueryDefaultValue; }
      set {
        downloadConfirmationQuery_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "downloadConfirmationQuery" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDownloadConfirmationQuery {
      get { return downloadConfirmationQuery_ != null; }
    }
    /// <summary>Clears the value of the "downloadConfirmationQuery" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDownloadConfirmationQuery() {
      downloadConfirmationQuery_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (DownloadConfirmationQuery != other.DownloadConfirmationQuery) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTimestamp) hash ^= Timestamp.GetHashCode();
      if (HasDownloadConfirmationQuery) hash ^= DownloadConfirmationQuery.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTimestamp) {
        output.WriteRawTag(8);
        output.WriteInt64(Timestamp);
      }
      if (HasDownloadConfirmationQuery) {
        output.WriteRawTag(18);
        output.WriteString(DownloadConfirmationQuery);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (HasDownloadConfirmationQuery) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DownloadConfirmationQuery);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTimestamp) {
        Timestamp = other.Timestamp;
      }
      if (other.HasDownloadConfirmationQuery) {
        DownloadConfirmationQuery = other.DownloadConfirmationQuery;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 18: {
            DownloadConfirmationQuery = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestingProgramRequest : pb::IMessage<TestingProgramRequest> {
    private static readonly pb::MessageParser<TestingProgramRequest> _parser = new pb::MessageParser<TestingProgramRequest>(() => new TestingProgramRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestingProgramRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[240]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramRequest(TestingProgramRequest other) : this() {
      _hasBits0 = other._hasBits0;
      packageName_ = other.packageName_;
      subscribe_ = other.subscribe_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramRequest Clone() {
      return new TestingProgramRequest(this);
    }

    /// <summary>Field number for the "packageName" field.</summary>
    public const int PackageNameFieldNumber = 1;
    private readonly static string PackageNameDefaultValue = "";

    private string packageName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackageName {
      get { return packageName_ ?? PackageNameDefaultValue; }
      set {
        packageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "packageName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPackageName {
      get { return packageName_ != null; }
    }
    /// <summary>Clears the value of the "packageName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPackageName() {
      packageName_ = null;
    }

    /// <summary>Field number for the "subscribe" field.</summary>
    public const int SubscribeFieldNumber = 2;
    private readonly static bool SubscribeDefaultValue = false;

    private bool subscribe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Subscribe {
      get { if ((_hasBits0 & 1) != 0) { return subscribe_; } else { return SubscribeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        subscribe_ = value;
      }
    }
    /// <summary>Gets whether the "subscribe" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubscribe {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "subscribe" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubscribe() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestingProgramRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestingProgramRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PackageName != other.PackageName) return false;
      if (Subscribe != other.Subscribe) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPackageName) hash ^= PackageName.GetHashCode();
      if (HasSubscribe) hash ^= Subscribe.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasPackageName) {
        output.WriteRawTag(10);
        output.WriteString(PackageName);
      }
      if (HasSubscribe) {
        output.WriteRawTag(16);
        output.WriteBool(Subscribe);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPackageName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageName);
      }
      if (HasSubscribe) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestingProgramRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasPackageName) {
        PackageName = other.PackageName;
      }
      if (other.HasSubscribe) {
        Subscribe = other.Subscribe;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PackageName = input.ReadString();
            break;
          }
          case 16: {
            Subscribe = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UploadDeviceConfigRequest : pb::IMessage<UploadDeviceConfigRequest> {
    private static readonly pb::MessageParser<UploadDeviceConfigRequest> _parser = new pb::MessageParser<UploadDeviceConfigRequest>(() => new UploadDeviceConfigRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadDeviceConfigRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[241]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadDeviceConfigRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadDeviceConfigRequest(UploadDeviceConfigRequest other) : this() {
      deviceConfiguration_ = other.deviceConfiguration_ != null ? other.deviceConfiguration_.Clone() : null;
      manufacturer_ = other.manufacturer_;
      gcmRegistrationId_ = other.gcmRegistrationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadDeviceConfigRequest Clone() {
      return new UploadDeviceConfigRequest(this);
    }

    /// <summary>Field number for the "deviceConfiguration" field.</summary>
    public const int DeviceConfigurationFieldNumber = 1;
    private global::GooglePlayStore.DeviceConfigurationProto deviceConfiguration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DeviceConfigurationProto DeviceConfiguration {
      get { return deviceConfiguration_; }
      set {
        deviceConfiguration_ = value;
      }
    }

    /// <summary>Field number for the "manufacturer" field.</summary>
    public const int ManufacturerFieldNumber = 2;
    private readonly static string ManufacturerDefaultValue = "";

    private string manufacturer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Manufacturer {
      get { return manufacturer_ ?? ManufacturerDefaultValue; }
      set {
        manufacturer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "manufacturer" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasManufacturer {
      get { return manufacturer_ != null; }
    }
    /// <summary>Clears the value of the "manufacturer" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearManufacturer() {
      manufacturer_ = null;
    }

    /// <summary>Field number for the "gcmRegistrationId" field.</summary>
    public const int GcmRegistrationIdFieldNumber = 3;
    private readonly static string GcmRegistrationIdDefaultValue = "";

    private string gcmRegistrationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GcmRegistrationId {
      get { return gcmRegistrationId_ ?? GcmRegistrationIdDefaultValue; }
      set {
        gcmRegistrationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gcmRegistrationId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGcmRegistrationId {
      get { return gcmRegistrationId_ != null; }
    }
    /// <summary>Clears the value of the "gcmRegistrationId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGcmRegistrationId() {
      gcmRegistrationId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadDeviceConfigRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadDeviceConfigRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DeviceConfiguration, other.DeviceConfiguration)) return false;
      if (Manufacturer != other.Manufacturer) return false;
      if (GcmRegistrationId != other.GcmRegistrationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (deviceConfiguration_ != null) hash ^= DeviceConfiguration.GetHashCode();
      if (HasManufacturer) hash ^= Manufacturer.GetHashCode();
      if (HasGcmRegistrationId) hash ^= GcmRegistrationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (deviceConfiguration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DeviceConfiguration);
      }
      if (HasManufacturer) {
        output.WriteRawTag(18);
        output.WriteString(Manufacturer);
      }
      if (HasGcmRegistrationId) {
        output.WriteRawTag(26);
        output.WriteString(GcmRegistrationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (deviceConfiguration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceConfiguration);
      }
      if (HasManufacturer) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Manufacturer);
      }
      if (HasGcmRegistrationId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GcmRegistrationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadDeviceConfigRequest other) {
      if (other == null) {
        return;
      }
      if (other.deviceConfiguration_ != null) {
        if (deviceConfiguration_ == null) {
          DeviceConfiguration = new global::GooglePlayStore.DeviceConfigurationProto();
        }
        DeviceConfiguration.MergeFrom(other.DeviceConfiguration);
      }
      if (other.HasManufacturer) {
        Manufacturer = other.Manufacturer;
      }
      if (other.HasGcmRegistrationId) {
        GcmRegistrationId = other.GcmRegistrationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (deviceConfiguration_ == null) {
              DeviceConfiguration = new global::GooglePlayStore.DeviceConfigurationProto();
            }
            input.ReadMessage(DeviceConfiguration);
            break;
          }
          case 18: {
            Manufacturer = input.ReadString();
            break;
          }
          case 26: {
            GcmRegistrationId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UploadDeviceConfigResponse : pb::IMessage<UploadDeviceConfigResponse> {
    private static readonly pb::MessageParser<UploadDeviceConfigResponse> _parser = new pb::MessageParser<UploadDeviceConfigResponse>(() => new UploadDeviceConfigResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadDeviceConfigResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[242]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadDeviceConfigResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadDeviceConfigResponse(UploadDeviceConfigResponse other) : this() {
      uploadDeviceConfigToken_ = other.uploadDeviceConfigToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadDeviceConfigResponse Clone() {
      return new UploadDeviceConfigResponse(this);
    }

    /// <summary>Field number for the "uploadDeviceConfigToken" field.</summary>
    public const int UploadDeviceConfigTokenFieldNumber = 1;
    private readonly static string UploadDeviceConfigTokenDefaultValue = "";

    private string uploadDeviceConfigToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UploadDeviceConfigToken {
      get { return uploadDeviceConfigToken_ ?? UploadDeviceConfigTokenDefaultValue; }
      set {
        uploadDeviceConfigToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uploadDeviceConfigToken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUploadDeviceConfigToken {
      get { return uploadDeviceConfigToken_ != null; }
    }
    /// <summary>Clears the value of the "uploadDeviceConfigToken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUploadDeviceConfigToken() {
      uploadDeviceConfigToken_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadDeviceConfigResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadDeviceConfigResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UploadDeviceConfigToken != other.UploadDeviceConfigToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUploadDeviceConfigToken) hash ^= UploadDeviceConfigToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasUploadDeviceConfigToken) {
        output.WriteRawTag(10);
        output.WriteString(UploadDeviceConfigToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUploadDeviceConfigToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UploadDeviceConfigToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadDeviceConfigResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasUploadDeviceConfigToken) {
        UploadDeviceConfigToken = other.UploadDeviceConfigToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UploadDeviceConfigToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AndroidCheckinRequest : pb::IMessage<AndroidCheckinRequest> {
    private static readonly pb::MessageParser<AndroidCheckinRequest> _parser = new pb::MessageParser<AndroidCheckinRequest>(() => new AndroidCheckinRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidCheckinRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[243]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidCheckinRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidCheckinRequest(AndroidCheckinRequest other) : this() {
      _hasBits0 = other._hasBits0;
      imei_ = other.imei_;
      id_ = other.id_;
      digest_ = other.digest_;
      checkin_ = other.checkin_ != null ? other.checkin_.Clone() : null;
      desiredBuild_ = other.desiredBuild_;
      locale_ = other.locale_;
      loggingId_ = other.loggingId_;
      marketCheckin_ = other.marketCheckin_;
      macAddr_ = other.macAddr_.Clone();
      meid_ = other.meid_;
      accountCookie_ = other.accountCookie_.Clone();
      timeZone_ = other.timeZone_;
      securityToken_ = other.securityToken_;
      version_ = other.version_;
      otaCert_ = other.otaCert_.Clone();
      serialNumber_ = other.serialNumber_;
      esn_ = other.esn_;
      deviceConfiguration_ = other.deviceConfiguration_ != null ? other.deviceConfiguration_.Clone() : null;
      macAddrType_ = other.macAddrType_.Clone();
      fragment_ = other.fragment_;
      userName_ = other.userName_;
      userSerialNumber_ = other.userSerialNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidCheckinRequest Clone() {
      return new AndroidCheckinRequest(this);
    }

    /// <summary>Field number for the "imei" field.</summary>
    public const int ImeiFieldNumber = 1;
    private readonly static string ImeiDefaultValue = "";

    private string imei_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Imei {
      get { return imei_ ?? ImeiDefaultValue; }
      set {
        imei_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "imei" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasImei {
      get { return imei_ != null; }
    }
    /// <summary>Clears the value of the "imei" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearImei() {
      imei_ = null;
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private readonly static long IdDefaultValue = 0L;

    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "digest" field.</summary>
    public const int DigestFieldNumber = 3;
    private readonly static string DigestDefaultValue = "";

    private string digest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Digest {
      get { return digest_ ?? DigestDefaultValue; }
      set {
        digest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "digest" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDigest {
      get { return digest_ != null; }
    }
    /// <summary>Clears the value of the "digest" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDigest() {
      digest_ = null;
    }

    /// <summary>Field number for the "checkin" field.</summary>
    public const int CheckinFieldNumber = 4;
    private global::GooglePlayStore.AndroidCheckinProto checkin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AndroidCheckinProto Checkin {
      get { return checkin_; }
      set {
        checkin_ = value;
      }
    }

    /// <summary>Field number for the "desiredBuild" field.</summary>
    public const int DesiredBuildFieldNumber = 5;
    private readonly static string DesiredBuildDefaultValue = "";

    private string desiredBuild_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DesiredBuild {
      get { return desiredBuild_ ?? DesiredBuildDefaultValue; }
      set {
        desiredBuild_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "desiredBuild" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDesiredBuild {
      get { return desiredBuild_ != null; }
    }
    /// <summary>Clears the value of the "desiredBuild" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDesiredBuild() {
      desiredBuild_ = null;
    }

    /// <summary>Field number for the "locale" field.</summary>
    public const int LocaleFieldNumber = 6;
    private readonly static string LocaleDefaultValue = "";

    private string locale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Locale {
      get { return locale_ ?? LocaleDefaultValue; }
      set {
        locale_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "locale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLocale {
      get { return locale_ != null; }
    }
    /// <summary>Clears the value of the "locale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLocale() {
      locale_ = null;
    }

    /// <summary>Field number for the "loggingId" field.</summary>
    public const int LoggingIdFieldNumber = 7;
    private readonly static long LoggingIdDefaultValue = 0L;

    private long loggingId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LoggingId {
      get { if ((_hasBits0 & 2) != 0) { return loggingId_; } else { return LoggingIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        loggingId_ = value;
      }
    }
    /// <summary>Gets whether the "loggingId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLoggingId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "loggingId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLoggingId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "marketCheckin" field.</summary>
    public const int MarketCheckinFieldNumber = 8;
    private readonly static string MarketCheckinDefaultValue = "";

    private string marketCheckin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MarketCheckin {
      get { return marketCheckin_ ?? MarketCheckinDefaultValue; }
      set {
        marketCheckin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "marketCheckin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMarketCheckin {
      get { return marketCheckin_ != null; }
    }
    /// <summary>Clears the value of the "marketCheckin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMarketCheckin() {
      marketCheckin_ = null;
    }

    /// <summary>Field number for the "macAddr" field.</summary>
    public const int MacAddrFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_macAddr_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> macAddr_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MacAddr {
      get { return macAddr_; }
    }

    /// <summary>Field number for the "meid" field.</summary>
    public const int MeidFieldNumber = 10;
    private readonly static string MeidDefaultValue = "";

    private string meid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Meid {
      get { return meid_ ?? MeidDefaultValue; }
      set {
        meid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "meid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMeid {
      get { return meid_ != null; }
    }
    /// <summary>Clears the value of the "meid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMeid() {
      meid_ = null;
    }

    /// <summary>Field number for the "accountCookie" field.</summary>
    public const int AccountCookieFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _repeated_accountCookie_codec
        = pb::FieldCodec.ForString(90);
    private readonly pbc::RepeatedField<string> accountCookie_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AccountCookie {
      get { return accountCookie_; }
    }

    /// <summary>Field number for the "timeZone" field.</summary>
    public const int TimeZoneFieldNumber = 12;
    private readonly static string TimeZoneDefaultValue = "";

    private string timeZone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TimeZone {
      get { return timeZone_ ?? TimeZoneDefaultValue; }
      set {
        timeZone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "timeZone" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTimeZone {
      get { return timeZone_ != null; }
    }
    /// <summary>Clears the value of the "timeZone" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimeZone() {
      timeZone_ = null;
    }

    /// <summary>Field number for the "securityToken" field.</summary>
    public const int SecurityTokenFieldNumber = 13;
    private readonly static ulong SecurityTokenDefaultValue = 0UL;

    private ulong securityToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SecurityToken {
      get { if ((_hasBits0 & 4) != 0) { return securityToken_; } else { return SecurityTokenDefaultValue; } }
      set {
        _hasBits0 |= 4;
        securityToken_ = value;
      }
    }
    /// <summary>Gets whether the "securityToken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSecurityToken {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "securityToken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSecurityToken() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 14;
    private readonly static int VersionDefaultValue = 0;

    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { if ((_hasBits0 & 8) != 0) { return version_; } else { return VersionDefaultValue; } }
      set {
        _hasBits0 |= 8;
        version_ = value;
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersion {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersion() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "otaCert" field.</summary>
    public const int OtaCertFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _repeated_otaCert_codec
        = pb::FieldCodec.ForString(122);
    private readonly pbc::RepeatedField<string> otaCert_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OtaCert {
      get { return otaCert_; }
    }

    /// <summary>Field number for the "serialNumber" field.</summary>
    public const int SerialNumberFieldNumber = 16;
    private readonly static string SerialNumberDefaultValue = "";

    private string serialNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SerialNumber {
      get { return serialNumber_ ?? SerialNumberDefaultValue; }
      set {
        serialNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serialNumber" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSerialNumber {
      get { return serialNumber_ != null; }
    }
    /// <summary>Clears the value of the "serialNumber" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSerialNumber() {
      serialNumber_ = null;
    }

    /// <summary>Field number for the "esn" field.</summary>
    public const int EsnFieldNumber = 17;
    private readonly static string EsnDefaultValue = "";

    private string esn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Esn {
      get { return esn_ ?? EsnDefaultValue; }
      set {
        esn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "esn" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEsn {
      get { return esn_ != null; }
    }
    /// <summary>Clears the value of the "esn" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEsn() {
      esn_ = null;
    }

    /// <summary>Field number for the "deviceConfiguration" field.</summary>
    public const int DeviceConfigurationFieldNumber = 18;
    private global::GooglePlayStore.DeviceConfigurationProto deviceConfiguration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DeviceConfigurationProto DeviceConfiguration {
      get { return deviceConfiguration_; }
      set {
        deviceConfiguration_ = value;
      }
    }

    /// <summary>Field number for the "macAddrType" field.</summary>
    public const int MacAddrTypeFieldNumber = 19;
    private static readonly pb::FieldCodec<string> _repeated_macAddrType_codec
        = pb::FieldCodec.ForString(154);
    private readonly pbc::RepeatedField<string> macAddrType_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MacAddrType {
      get { return macAddrType_; }
    }

    /// <summary>Field number for the "fragment" field.</summary>
    public const int FragmentFieldNumber = 20;
    private readonly static int FragmentDefaultValue = 0;

    private int fragment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Fragment {
      get { if ((_hasBits0 & 16) != 0) { return fragment_; } else { return FragmentDefaultValue; } }
      set {
        _hasBits0 |= 16;
        fragment_ = value;
      }
    }
    /// <summary>Gets whether the "fragment" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFragment {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "fragment" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFragment() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 21;
    private readonly static string UserNameDefaultValue = "";

    private string userName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_ ?? UserNameDefaultValue; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserName {
      get { return userName_ != null; }
    }
    /// <summary>Clears the value of the "userName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserName() {
      userName_ = null;
    }

    /// <summary>Field number for the "userSerialNumber" field.</summary>
    public const int UserSerialNumberFieldNumber = 22;
    private readonly static int UserSerialNumberDefaultValue = 0;

    private int userSerialNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserSerialNumber {
      get { if ((_hasBits0 & 32) != 0) { return userSerialNumber_; } else { return UserSerialNumberDefaultValue; } }
      set {
        _hasBits0 |= 32;
        userSerialNumber_ = value;
      }
    }
    /// <summary>Gets whether the "userSerialNumber" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserSerialNumber {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "userSerialNumber" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserSerialNumber() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidCheckinRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidCheckinRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Imei != other.Imei) return false;
      if (Id != other.Id) return false;
      if (Digest != other.Digest) return false;
      if (!object.Equals(Checkin, other.Checkin)) return false;
      if (DesiredBuild != other.DesiredBuild) return false;
      if (Locale != other.Locale) return false;
      if (LoggingId != other.LoggingId) return false;
      if (MarketCheckin != other.MarketCheckin) return false;
      if(!macAddr_.Equals(other.macAddr_)) return false;
      if (Meid != other.Meid) return false;
      if(!accountCookie_.Equals(other.accountCookie_)) return false;
      if (TimeZone != other.TimeZone) return false;
      if (SecurityToken != other.SecurityToken) return false;
      if (Version != other.Version) return false;
      if(!otaCert_.Equals(other.otaCert_)) return false;
      if (SerialNumber != other.SerialNumber) return false;
      if (Esn != other.Esn) return false;
      if (!object.Equals(DeviceConfiguration, other.DeviceConfiguration)) return false;
      if(!macAddrType_.Equals(other.macAddrType_)) return false;
      if (Fragment != other.Fragment) return false;
      if (UserName != other.UserName) return false;
      if (UserSerialNumber != other.UserSerialNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasImei) hash ^= Imei.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (HasDigest) hash ^= Digest.GetHashCode();
      if (checkin_ != null) hash ^= Checkin.GetHashCode();
      if (HasDesiredBuild) hash ^= DesiredBuild.GetHashCode();
      if (HasLocale) hash ^= Locale.GetHashCode();
      if (HasLoggingId) hash ^= LoggingId.GetHashCode();
      if (HasMarketCheckin) hash ^= MarketCheckin.GetHashCode();
      hash ^= macAddr_.GetHashCode();
      if (HasMeid) hash ^= Meid.GetHashCode();
      hash ^= accountCookie_.GetHashCode();
      if (HasTimeZone) hash ^= TimeZone.GetHashCode();
      if (HasSecurityToken) hash ^= SecurityToken.GetHashCode();
      if (HasVersion) hash ^= Version.GetHashCode();
      hash ^= otaCert_.GetHashCode();
      if (HasSerialNumber) hash ^= SerialNumber.GetHashCode();
      if (HasEsn) hash ^= Esn.GetHashCode();
      if (deviceConfiguration_ != null) hash ^= DeviceConfiguration.GetHashCode();
      hash ^= macAddrType_.GetHashCode();
      if (HasFragment) hash ^= Fragment.GetHashCode();
      if (HasUserName) hash ^= UserName.GetHashCode();
      if (HasUserSerialNumber) hash ^= UserSerialNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasImei) {
        output.WriteRawTag(10);
        output.WriteString(Imei);
      }
      if (HasId) {
        output.WriteRawTag(16);
        output.WriteInt64(Id);
      }
      if (HasDigest) {
        output.WriteRawTag(26);
        output.WriteString(Digest);
      }
      if (checkin_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Checkin);
      }
      if (HasDesiredBuild) {
        output.WriteRawTag(42);
        output.WriteString(DesiredBuild);
      }
      if (HasLocale) {
        output.WriteRawTag(50);
        output.WriteString(Locale);
      }
      if (HasLoggingId) {
        output.WriteRawTag(56);
        output.WriteInt64(LoggingId);
      }
      if (HasMarketCheckin) {
        output.WriteRawTag(66);
        output.WriteString(MarketCheckin);
      }
      macAddr_.WriteTo(output, _repeated_macAddr_codec);
      if (HasMeid) {
        output.WriteRawTag(82);
        output.WriteString(Meid);
      }
      accountCookie_.WriteTo(output, _repeated_accountCookie_codec);
      if (HasTimeZone) {
        output.WriteRawTag(98);
        output.WriteString(TimeZone);
      }
      if (HasSecurityToken) {
        output.WriteRawTag(105);
        output.WriteFixed64(SecurityToken);
      }
      if (HasVersion) {
        output.WriteRawTag(112);
        output.WriteInt32(Version);
      }
      otaCert_.WriteTo(output, _repeated_otaCert_codec);
      if (HasSerialNumber) {
        output.WriteRawTag(130, 1);
        output.WriteString(SerialNumber);
      }
      if (HasEsn) {
        output.WriteRawTag(138, 1);
        output.WriteString(Esn);
      }
      if (deviceConfiguration_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(DeviceConfiguration);
      }
      macAddrType_.WriteTo(output, _repeated_macAddrType_codec);
      if (HasFragment) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(Fragment);
      }
      if (HasUserName) {
        output.WriteRawTag(170, 1);
        output.WriteString(UserName);
      }
      if (HasUserSerialNumber) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(UserSerialNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasImei) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Imei);
      }
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (HasDigest) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Digest);
      }
      if (checkin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Checkin);
      }
      if (HasDesiredBuild) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DesiredBuild);
      }
      if (HasLocale) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Locale);
      }
      if (HasLoggingId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LoggingId);
      }
      if (HasMarketCheckin) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketCheckin);
      }
      size += macAddr_.CalculateSize(_repeated_macAddr_codec);
      if (HasMeid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Meid);
      }
      size += accountCookie_.CalculateSize(_repeated_accountCookie_codec);
      if (HasTimeZone) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeZone);
      }
      if (HasSecurityToken) {
        size += 1 + 8;
      }
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      size += otaCert_.CalculateSize(_repeated_otaCert_codec);
      if (HasSerialNumber) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SerialNumber);
      }
      if (HasEsn) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Esn);
      }
      if (deviceConfiguration_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeviceConfiguration);
      }
      size += macAddrType_.CalculateSize(_repeated_macAddrType_codec);
      if (HasFragment) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Fragment);
      }
      if (HasUserName) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (HasUserSerialNumber) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UserSerialNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidCheckinRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasImei) {
        Imei = other.Imei;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasDigest) {
        Digest = other.Digest;
      }
      if (other.checkin_ != null) {
        if (checkin_ == null) {
          Checkin = new global::GooglePlayStore.AndroidCheckinProto();
        }
        Checkin.MergeFrom(other.Checkin);
      }
      if (other.HasDesiredBuild) {
        DesiredBuild = other.DesiredBuild;
      }
      if (other.HasLocale) {
        Locale = other.Locale;
      }
      if (other.HasLoggingId) {
        LoggingId = other.LoggingId;
      }
      if (other.HasMarketCheckin) {
        MarketCheckin = other.MarketCheckin;
      }
      macAddr_.Add(other.macAddr_);
      if (other.HasMeid) {
        Meid = other.Meid;
      }
      accountCookie_.Add(other.accountCookie_);
      if (other.HasTimeZone) {
        TimeZone = other.TimeZone;
      }
      if (other.HasSecurityToken) {
        SecurityToken = other.SecurityToken;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      otaCert_.Add(other.otaCert_);
      if (other.HasSerialNumber) {
        SerialNumber = other.SerialNumber;
      }
      if (other.HasEsn) {
        Esn = other.Esn;
      }
      if (other.deviceConfiguration_ != null) {
        if (deviceConfiguration_ == null) {
          DeviceConfiguration = new global::GooglePlayStore.DeviceConfigurationProto();
        }
        DeviceConfiguration.MergeFrom(other.DeviceConfiguration);
      }
      macAddrType_.Add(other.macAddrType_);
      if (other.HasFragment) {
        Fragment = other.Fragment;
      }
      if (other.HasUserName) {
        UserName = other.UserName;
      }
      if (other.HasUserSerialNumber) {
        UserSerialNumber = other.UserSerialNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Imei = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadInt64();
            break;
          }
          case 26: {
            Digest = input.ReadString();
            break;
          }
          case 34: {
            if (checkin_ == null) {
              Checkin = new global::GooglePlayStore.AndroidCheckinProto();
            }
            input.ReadMessage(Checkin);
            break;
          }
          case 42: {
            DesiredBuild = input.ReadString();
            break;
          }
          case 50: {
            Locale = input.ReadString();
            break;
          }
          case 56: {
            LoggingId = input.ReadInt64();
            break;
          }
          case 66: {
            MarketCheckin = input.ReadString();
            break;
          }
          case 74: {
            macAddr_.AddEntriesFrom(input, _repeated_macAddr_codec);
            break;
          }
          case 82: {
            Meid = input.ReadString();
            break;
          }
          case 90: {
            accountCookie_.AddEntriesFrom(input, _repeated_accountCookie_codec);
            break;
          }
          case 98: {
            TimeZone = input.ReadString();
            break;
          }
          case 105: {
            SecurityToken = input.ReadFixed64();
            break;
          }
          case 112: {
            Version = input.ReadInt32();
            break;
          }
          case 122: {
            otaCert_.AddEntriesFrom(input, _repeated_otaCert_codec);
            break;
          }
          case 130: {
            SerialNumber = input.ReadString();
            break;
          }
          case 138: {
            Esn = input.ReadString();
            break;
          }
          case 146: {
            if (deviceConfiguration_ == null) {
              DeviceConfiguration = new global::GooglePlayStore.DeviceConfigurationProto();
            }
            input.ReadMessage(DeviceConfiguration);
            break;
          }
          case 154: {
            macAddrType_.AddEntriesFrom(input, _repeated_macAddrType_codec);
            break;
          }
          case 160: {
            Fragment = input.ReadInt32();
            break;
          }
          case 170: {
            UserName = input.ReadString();
            break;
          }
          case 176: {
            UserSerialNumber = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AndroidCheckinResponse : pb::IMessage<AndroidCheckinResponse> {
    private static readonly pb::MessageParser<AndroidCheckinResponse> _parser = new pb::MessageParser<AndroidCheckinResponse>(() => new AndroidCheckinResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidCheckinResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[244]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidCheckinResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidCheckinResponse(AndroidCheckinResponse other) : this() {
      _hasBits0 = other._hasBits0;
      statsOk_ = other.statsOk_;
      intent_ = other.intent_.Clone();
      timeMsec_ = other.timeMsec_;
      digest_ = other.digest_;
      setting_ = other.setting_.Clone();
      marketOk_ = other.marketOk_;
      androidId_ = other.androidId_;
      securityToken_ = other.securityToken_;
      settingsDiff_ = other.settingsDiff_;
      deleteSetting_ = other.deleteSetting_.Clone();
      deviceCheckinConsistencyToken_ = other.deviceCheckinConsistencyToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidCheckinResponse Clone() {
      return new AndroidCheckinResponse(this);
    }

    /// <summary>Field number for the "statsOk" field.</summary>
    public const int StatsOkFieldNumber = 1;
    private readonly static bool StatsOkDefaultValue = false;

    private bool statsOk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool StatsOk {
      get { if ((_hasBits0 & 1) != 0) { return statsOk_; } else { return StatsOkDefaultValue; } }
      set {
        _hasBits0 |= 1;
        statsOk_ = value;
      }
    }
    /// <summary>Gets whether the "statsOk" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatsOk {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "statsOk" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatsOk() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "intent" field.</summary>
    public const int IntentFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GooglePlayStore.AndroidIntentProto> _repeated_intent_codec
        = pb::FieldCodec.ForMessage(18, global::GooglePlayStore.AndroidIntentProto.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.AndroidIntentProto> intent_ = new pbc::RepeatedField<global::GooglePlayStore.AndroidIntentProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.AndroidIntentProto> Intent {
      get { return intent_; }
    }

    /// <summary>Field number for the "timeMsec" field.</summary>
    public const int TimeMsecFieldNumber = 3;
    private readonly static long TimeMsecDefaultValue = 0L;

    private long timeMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TimeMsec {
      get { if ((_hasBits0 & 2) != 0) { return timeMsec_; } else { return TimeMsecDefaultValue; } }
      set {
        _hasBits0 |= 2;
        timeMsec_ = value;
      }
    }
    /// <summary>Gets whether the "timeMsec" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTimeMsec {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "timeMsec" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimeMsec() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "digest" field.</summary>
    public const int DigestFieldNumber = 4;
    private readonly static string DigestDefaultValue = "";

    private string digest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Digest {
      get { return digest_ ?? DigestDefaultValue; }
      set {
        digest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "digest" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDigest {
      get { return digest_ != null; }
    }
    /// <summary>Clears the value of the "digest" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDigest() {
      digest_ = null;
    }

    /// <summary>Field number for the "setting" field.</summary>
    public const int SettingFieldNumber = 5;
    private static readonly pb::FieldCodec<global::GooglePlayStore.GservicesSetting> _repeated_setting_codec
        = pb::FieldCodec.ForMessage(42, global::GooglePlayStore.GservicesSetting.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.GservicesSetting> setting_ = new pbc::RepeatedField<global::GooglePlayStore.GservicesSetting>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.GservicesSetting> Setting {
      get { return setting_; }
    }

    /// <summary>Field number for the "marketOk" field.</summary>
    public const int MarketOkFieldNumber = 6;
    private readonly static bool MarketOkDefaultValue = false;

    private bool marketOk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MarketOk {
      get { if ((_hasBits0 & 4) != 0) { return marketOk_; } else { return MarketOkDefaultValue; } }
      set {
        _hasBits0 |= 4;
        marketOk_ = value;
      }
    }
    /// <summary>Gets whether the "marketOk" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMarketOk {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "marketOk" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMarketOk() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "androidId" field.</summary>
    public const int AndroidIdFieldNumber = 7;
    private readonly static ulong AndroidIdDefaultValue = 0UL;

    private ulong androidId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AndroidId {
      get { if ((_hasBits0 & 8) != 0) { return androidId_; } else { return AndroidIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        androidId_ = value;
      }
    }
    /// <summary>Gets whether the "androidId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAndroidId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "androidId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAndroidId() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "securityToken" field.</summary>
    public const int SecurityTokenFieldNumber = 8;
    private readonly static ulong SecurityTokenDefaultValue = 0UL;

    private ulong securityToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SecurityToken {
      get { if ((_hasBits0 & 16) != 0) { return securityToken_; } else { return SecurityTokenDefaultValue; } }
      set {
        _hasBits0 |= 16;
        securityToken_ = value;
      }
    }
    /// <summary>Gets whether the "securityToken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSecurityToken {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "securityToken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSecurityToken() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "settingsDiff" field.</summary>
    public const int SettingsDiffFieldNumber = 9;
    private readonly static bool SettingsDiffDefaultValue = false;

    private bool settingsDiff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SettingsDiff {
      get { if ((_hasBits0 & 32) != 0) { return settingsDiff_; } else { return SettingsDiffDefaultValue; } }
      set {
        _hasBits0 |= 32;
        settingsDiff_ = value;
      }
    }
    /// <summary>Gets whether the "settingsDiff" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSettingsDiff {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "settingsDiff" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSettingsDiff() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "deleteSetting" field.</summary>
    public const int DeleteSettingFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_deleteSetting_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> deleteSetting_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> DeleteSetting {
      get { return deleteSetting_; }
    }

    /// <summary>Field number for the "deviceCheckinConsistencyToken" field.</summary>
    public const int DeviceCheckinConsistencyTokenFieldNumber = 12;
    private readonly static string DeviceCheckinConsistencyTokenDefaultValue = "";

    private string deviceCheckinConsistencyToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceCheckinConsistencyToken {
      get { return deviceCheckinConsistencyToken_ ?? DeviceCheckinConsistencyTokenDefaultValue; }
      set {
        deviceCheckinConsistencyToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "deviceCheckinConsistencyToken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeviceCheckinConsistencyToken {
      get { return deviceCheckinConsistencyToken_ != null; }
    }
    /// <summary>Clears the value of the "deviceCheckinConsistencyToken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeviceCheckinConsistencyToken() {
      deviceCheckinConsistencyToken_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidCheckinResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidCheckinResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatsOk != other.StatsOk) return false;
      if(!intent_.Equals(other.intent_)) return false;
      if (TimeMsec != other.TimeMsec) return false;
      if (Digest != other.Digest) return false;
      if(!setting_.Equals(other.setting_)) return false;
      if (MarketOk != other.MarketOk) return false;
      if (AndroidId != other.AndroidId) return false;
      if (SecurityToken != other.SecurityToken) return false;
      if (SettingsDiff != other.SettingsDiff) return false;
      if(!deleteSetting_.Equals(other.deleteSetting_)) return false;
      if (DeviceCheckinConsistencyToken != other.DeviceCheckinConsistencyToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStatsOk) hash ^= StatsOk.GetHashCode();
      hash ^= intent_.GetHashCode();
      if (HasTimeMsec) hash ^= TimeMsec.GetHashCode();
      if (HasDigest) hash ^= Digest.GetHashCode();
      hash ^= setting_.GetHashCode();
      if (HasMarketOk) hash ^= MarketOk.GetHashCode();
      if (HasAndroidId) hash ^= AndroidId.GetHashCode();
      if (HasSecurityToken) hash ^= SecurityToken.GetHashCode();
      if (HasSettingsDiff) hash ^= SettingsDiff.GetHashCode();
      hash ^= deleteSetting_.GetHashCode();
      if (HasDeviceCheckinConsistencyToken) hash ^= DeviceCheckinConsistencyToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasStatsOk) {
        output.WriteRawTag(8);
        output.WriteBool(StatsOk);
      }
      intent_.WriteTo(output, _repeated_intent_codec);
      if (HasTimeMsec) {
        output.WriteRawTag(24);
        output.WriteInt64(TimeMsec);
      }
      if (HasDigest) {
        output.WriteRawTag(34);
        output.WriteString(Digest);
      }
      setting_.WriteTo(output, _repeated_setting_codec);
      if (HasMarketOk) {
        output.WriteRawTag(48);
        output.WriteBool(MarketOk);
      }
      if (HasAndroidId) {
        output.WriteRawTag(57);
        output.WriteFixed64(AndroidId);
      }
      if (HasSecurityToken) {
        output.WriteRawTag(65);
        output.WriteFixed64(SecurityToken);
      }
      if (HasSettingsDiff) {
        output.WriteRawTag(72);
        output.WriteBool(SettingsDiff);
      }
      deleteSetting_.WriteTo(output, _repeated_deleteSetting_codec);
      if (HasDeviceCheckinConsistencyToken) {
        output.WriteRawTag(98);
        output.WriteString(DeviceCheckinConsistencyToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasStatsOk) {
        size += 1 + 1;
      }
      size += intent_.CalculateSize(_repeated_intent_codec);
      if (HasTimeMsec) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeMsec);
      }
      if (HasDigest) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Digest);
      }
      size += setting_.CalculateSize(_repeated_setting_codec);
      if (HasMarketOk) {
        size += 1 + 1;
      }
      if (HasAndroidId) {
        size += 1 + 8;
      }
      if (HasSecurityToken) {
        size += 1 + 8;
      }
      if (HasSettingsDiff) {
        size += 1 + 1;
      }
      size += deleteSetting_.CalculateSize(_repeated_deleteSetting_codec);
      if (HasDeviceCheckinConsistencyToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceCheckinConsistencyToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidCheckinResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasStatsOk) {
        StatsOk = other.StatsOk;
      }
      intent_.Add(other.intent_);
      if (other.HasTimeMsec) {
        TimeMsec = other.TimeMsec;
      }
      if (other.HasDigest) {
        Digest = other.Digest;
      }
      setting_.Add(other.setting_);
      if (other.HasMarketOk) {
        MarketOk = other.MarketOk;
      }
      if (other.HasAndroidId) {
        AndroidId = other.AndroidId;
      }
      if (other.HasSecurityToken) {
        SecurityToken = other.SecurityToken;
      }
      if (other.HasSettingsDiff) {
        SettingsDiff = other.SettingsDiff;
      }
      deleteSetting_.Add(other.deleteSetting_);
      if (other.HasDeviceCheckinConsistencyToken) {
        DeviceCheckinConsistencyToken = other.DeviceCheckinConsistencyToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatsOk = input.ReadBool();
            break;
          }
          case 18: {
            intent_.AddEntriesFrom(input, _repeated_intent_codec);
            break;
          }
          case 24: {
            TimeMsec = input.ReadInt64();
            break;
          }
          case 34: {
            Digest = input.ReadString();
            break;
          }
          case 42: {
            setting_.AddEntriesFrom(input, _repeated_setting_codec);
            break;
          }
          case 48: {
            MarketOk = input.ReadBool();
            break;
          }
          case 57: {
            AndroidId = input.ReadFixed64();
            break;
          }
          case 65: {
            SecurityToken = input.ReadFixed64();
            break;
          }
          case 72: {
            SettingsDiff = input.ReadBool();
            break;
          }
          case 82: {
            deleteSetting_.AddEntriesFrom(input, _repeated_deleteSetting_codec);
            break;
          }
          case 98: {
            DeviceCheckinConsistencyToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GservicesSetting : pb::IMessage<GservicesSetting> {
    private static readonly pb::MessageParser<GservicesSetting> _parser = new pb::MessageParser<GservicesSetting>(() => new GservicesSetting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GservicesSetting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[245]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GservicesSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GservicesSetting(GservicesSetting other) : this() {
      name_ = other.name_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GservicesSetting Clone() {
      return new GservicesSetting(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static pb::ByteString NameDefaultValue = pb::ByteString.Empty;

    private pb::ByteString name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private readonly static pb::ByteString ValueDefaultValue = pb::ByteString.Empty;

    private pb::ByteString value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_ ?? ValueDefaultValue; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasValue {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GservicesSetting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GservicesSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteBytes(Name);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GservicesSetting other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadBytes();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AndroidBuildProto : pb::IMessage<AndroidBuildProto> {
    private static readonly pb::MessageParser<AndroidBuildProto> _parser = new pb::MessageParser<AndroidBuildProto>(() => new AndroidBuildProto());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidBuildProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[246]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidBuildProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidBuildProto(AndroidBuildProto other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      product_ = other.product_;
      carrier_ = other.carrier_;
      radio_ = other.radio_;
      bootloader_ = other.bootloader_;
      client_ = other.client_;
      timestamp_ = other.timestamp_;
      googleServices_ = other.googleServices_;
      device_ = other.device_;
      sdkVersion_ = other.sdkVersion_;
      model_ = other.model_;
      manufacturer_ = other.manufacturer_;
      buildProduct_ = other.buildProduct_;
      otaInstalled_ = other.otaInstalled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidBuildProto Clone() {
      return new AndroidBuildProto(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static string IdDefaultValue = "";

    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "product" field.</summary>
    public const int ProductFieldNumber = 2;
    private readonly static string ProductDefaultValue = "";

    private string product_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Product {
      get { return product_ ?? ProductDefaultValue; }
      set {
        product_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "product" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProduct {
      get { return product_ != null; }
    }
    /// <summary>Clears the value of the "product" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProduct() {
      product_ = null;
    }

    /// <summary>Field number for the "carrier" field.</summary>
    public const int CarrierFieldNumber = 3;
    private readonly static string CarrierDefaultValue = "";

    private string carrier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Carrier {
      get { return carrier_ ?? CarrierDefaultValue; }
      set {
        carrier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "carrier" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCarrier {
      get { return carrier_ != null; }
    }
    /// <summary>Clears the value of the "carrier" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCarrier() {
      carrier_ = null;
    }

    /// <summary>Field number for the "radio" field.</summary>
    public const int RadioFieldNumber = 4;
    private readonly static string RadioDefaultValue = "";

    private string radio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Radio {
      get { return radio_ ?? RadioDefaultValue; }
      set {
        radio_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "radio" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRadio {
      get { return radio_ != null; }
    }
    /// <summary>Clears the value of the "radio" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRadio() {
      radio_ = null;
    }

    /// <summary>Field number for the "bootloader" field.</summary>
    public const int BootloaderFieldNumber = 5;
    private readonly static string BootloaderDefaultValue = "";

    private string bootloader_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Bootloader {
      get { return bootloader_ ?? BootloaderDefaultValue; }
      set {
        bootloader_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bootloader" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBootloader {
      get { return bootloader_ != null; }
    }
    /// <summary>Clears the value of the "bootloader" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBootloader() {
      bootloader_ = null;
    }

    /// <summary>Field number for the "client" field.</summary>
    public const int ClientFieldNumber = 6;
    private readonly static string ClientDefaultValue = "";

    private string client_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Client {
      get { return client_ ?? ClientDefaultValue; }
      set {
        client_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "client" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClient {
      get { return client_ != null; }
    }
    /// <summary>Clears the value of the "client" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClient() {
      client_ = null;
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 7;
    private readonly static long TimestampDefaultValue = 0L;

    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { if ((_hasBits0 & 1) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
      set {
        _hasBits0 |= 1;
        timestamp_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTimestamp {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimestamp() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "googleServices" field.</summary>
    public const int GoogleServicesFieldNumber = 8;
    private readonly static int GoogleServicesDefaultValue = 0;

    private int googleServices_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoogleServices {
      get { if ((_hasBits0 & 2) != 0) { return googleServices_; } else { return GoogleServicesDefaultValue; } }
      set {
        _hasBits0 |= 2;
        googleServices_ = value;
      }
    }
    /// <summary>Gets whether the "googleServices" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGoogleServices {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "googleServices" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGoogleServices() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "device" field.</summary>
    public const int DeviceFieldNumber = 9;
    private readonly static string DeviceDefaultValue = "";

    private string device_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Device {
      get { return device_ ?? DeviceDefaultValue; }
      set {
        device_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "device" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDevice {
      get { return device_ != null; }
    }
    /// <summary>Clears the value of the "device" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDevice() {
      device_ = null;
    }

    /// <summary>Field number for the "sdkVersion" field.</summary>
    public const int SdkVersionFieldNumber = 10;
    private readonly static int SdkVersionDefaultValue = 0;

    private int sdkVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SdkVersion {
      get { if ((_hasBits0 & 4) != 0) { return sdkVersion_; } else { return SdkVersionDefaultValue; } }
      set {
        _hasBits0 |= 4;
        sdkVersion_ = value;
      }
    }
    /// <summary>Gets whether the "sdkVersion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSdkVersion {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "sdkVersion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSdkVersion() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 11;
    private readonly static string ModelDefaultValue = "";

    private string model_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_ ?? ModelDefaultValue; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "model" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasModel {
      get { return model_ != null; }
    }
    /// <summary>Clears the value of the "model" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearModel() {
      model_ = null;
    }

    /// <summary>Field number for the "manufacturer" field.</summary>
    public const int ManufacturerFieldNumber = 12;
    private readonly static string ManufacturerDefaultValue = "";

    private string manufacturer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Manufacturer {
      get { return manufacturer_ ?? ManufacturerDefaultValue; }
      set {
        manufacturer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "manufacturer" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasManufacturer {
      get { return manufacturer_ != null; }
    }
    /// <summary>Clears the value of the "manufacturer" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearManufacturer() {
      manufacturer_ = null;
    }

    /// <summary>Field number for the "buildProduct" field.</summary>
    public const int BuildProductFieldNumber = 13;
    private readonly static string BuildProductDefaultValue = "";

    private string buildProduct_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BuildProduct {
      get { return buildProduct_ ?? BuildProductDefaultValue; }
      set {
        buildProduct_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "buildProduct" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBuildProduct {
      get { return buildProduct_ != null; }
    }
    /// <summary>Clears the value of the "buildProduct" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBuildProduct() {
      buildProduct_ = null;
    }

    /// <summary>Field number for the "otaInstalled" field.</summary>
    public const int OtaInstalledFieldNumber = 14;
    private readonly static bool OtaInstalledDefaultValue = false;

    private bool otaInstalled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OtaInstalled {
      get { if ((_hasBits0 & 8) != 0) { return otaInstalled_; } else { return OtaInstalledDefaultValue; } }
      set {
        _hasBits0 |= 8;
        otaInstalled_ = value;
      }
    }
    /// <summary>Gets whether the "otaInstalled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOtaInstalled {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "otaInstalled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOtaInstalled() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidBuildProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidBuildProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Product != other.Product) return false;
      if (Carrier != other.Carrier) return false;
      if (Radio != other.Radio) return false;
      if (Bootloader != other.Bootloader) return false;
      if (Client != other.Client) return false;
      if (Timestamp != other.Timestamp) return false;
      if (GoogleServices != other.GoogleServices) return false;
      if (Device != other.Device) return false;
      if (SdkVersion != other.SdkVersion) return false;
      if (Model != other.Model) return false;
      if (Manufacturer != other.Manufacturer) return false;
      if (BuildProduct != other.BuildProduct) return false;
      if (OtaInstalled != other.OtaInstalled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasProduct) hash ^= Product.GetHashCode();
      if (HasCarrier) hash ^= Carrier.GetHashCode();
      if (HasRadio) hash ^= Radio.GetHashCode();
      if (HasBootloader) hash ^= Bootloader.GetHashCode();
      if (HasClient) hash ^= Client.GetHashCode();
      if (HasTimestamp) hash ^= Timestamp.GetHashCode();
      if (HasGoogleServices) hash ^= GoogleServices.GetHashCode();
      if (HasDevice) hash ^= Device.GetHashCode();
      if (HasSdkVersion) hash ^= SdkVersion.GetHashCode();
      if (HasModel) hash ^= Model.GetHashCode();
      if (HasManufacturer) hash ^= Manufacturer.GetHashCode();
      if (HasBuildProduct) hash ^= BuildProduct.GetHashCode();
      if (HasOtaInstalled) hash ^= OtaInstalled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasProduct) {
        output.WriteRawTag(18);
        output.WriteString(Product);
      }
      if (HasCarrier) {
        output.WriteRawTag(26);
        output.WriteString(Carrier);
      }
      if (HasRadio) {
        output.WriteRawTag(34);
        output.WriteString(Radio);
      }
      if (HasBootloader) {
        output.WriteRawTag(42);
        output.WriteString(Bootloader);
      }
      if (HasClient) {
        output.WriteRawTag(50);
        output.WriteString(Client);
      }
      if (HasTimestamp) {
        output.WriteRawTag(56);
        output.WriteInt64(Timestamp);
      }
      if (HasGoogleServices) {
        output.WriteRawTag(64);
        output.WriteInt32(GoogleServices);
      }
      if (HasDevice) {
        output.WriteRawTag(74);
        output.WriteString(Device);
      }
      if (HasSdkVersion) {
        output.WriteRawTag(80);
        output.WriteInt32(SdkVersion);
      }
      if (HasModel) {
        output.WriteRawTag(90);
        output.WriteString(Model);
      }
      if (HasManufacturer) {
        output.WriteRawTag(98);
        output.WriteString(Manufacturer);
      }
      if (HasBuildProduct) {
        output.WriteRawTag(106);
        output.WriteString(BuildProduct);
      }
      if (HasOtaInstalled) {
        output.WriteRawTag(112);
        output.WriteBool(OtaInstalled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasProduct) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Product);
      }
      if (HasCarrier) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Carrier);
      }
      if (HasRadio) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Radio);
      }
      if (HasBootloader) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bootloader);
      }
      if (HasClient) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Client);
      }
      if (HasTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (HasGoogleServices) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoogleServices);
      }
      if (HasDevice) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Device);
      }
      if (HasSdkVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SdkVersion);
      }
      if (HasModel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (HasManufacturer) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Manufacturer);
      }
      if (HasBuildProduct) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BuildProduct);
      }
      if (HasOtaInstalled) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidBuildProto other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasProduct) {
        Product = other.Product;
      }
      if (other.HasCarrier) {
        Carrier = other.Carrier;
      }
      if (other.HasRadio) {
        Radio = other.Radio;
      }
      if (other.HasBootloader) {
        Bootloader = other.Bootloader;
      }
      if (other.HasClient) {
        Client = other.Client;
      }
      if (other.HasTimestamp) {
        Timestamp = other.Timestamp;
      }
      if (other.HasGoogleServices) {
        GoogleServices = other.GoogleServices;
      }
      if (other.HasDevice) {
        Device = other.Device;
      }
      if (other.HasSdkVersion) {
        SdkVersion = other.SdkVersion;
      }
      if (other.HasModel) {
        Model = other.Model;
      }
      if (other.HasManufacturer) {
        Manufacturer = other.Manufacturer;
      }
      if (other.HasBuildProduct) {
        BuildProduct = other.BuildProduct;
      }
      if (other.HasOtaInstalled) {
        OtaInstalled = other.OtaInstalled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Product = input.ReadString();
            break;
          }
          case 26: {
            Carrier = input.ReadString();
            break;
          }
          case 34: {
            Radio = input.ReadString();
            break;
          }
          case 42: {
            Bootloader = input.ReadString();
            break;
          }
          case 50: {
            Client = input.ReadString();
            break;
          }
          case 56: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 64: {
            GoogleServices = input.ReadInt32();
            break;
          }
          case 74: {
            Device = input.ReadString();
            break;
          }
          case 80: {
            SdkVersion = input.ReadInt32();
            break;
          }
          case 90: {
            Model = input.ReadString();
            break;
          }
          case 98: {
            Manufacturer = input.ReadString();
            break;
          }
          case 106: {
            BuildProduct = input.ReadString();
            break;
          }
          case 112: {
            OtaInstalled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AndroidCheckinProto : pb::IMessage<AndroidCheckinProto> {
    private static readonly pb::MessageParser<AndroidCheckinProto> _parser = new pb::MessageParser<AndroidCheckinProto>(() => new AndroidCheckinProto());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidCheckinProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[247]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidCheckinProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidCheckinProto(AndroidCheckinProto other) : this() {
      _hasBits0 = other._hasBits0;
      build_ = other.build_ != null ? other.build_.Clone() : null;
      lastCheckinMsec_ = other.lastCheckinMsec_;
      event_ = other.event_.Clone();
      stat_ = other.stat_.Clone();
      requestedGroup_ = other.requestedGroup_.Clone();
      cellOperator_ = other.cellOperator_;
      simOperator_ = other.simOperator_;
      roaming_ = other.roaming_;
      userNumber_ = other.userNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidCheckinProto Clone() {
      return new AndroidCheckinProto(this);
    }

    /// <summary>Field number for the "build" field.</summary>
    public const int BuildFieldNumber = 1;
    private global::GooglePlayStore.AndroidBuildProto build_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AndroidBuildProto Build {
      get { return build_; }
      set {
        build_ = value;
      }
    }

    /// <summary>Field number for the "lastCheckinMsec" field.</summary>
    public const int LastCheckinMsecFieldNumber = 2;
    private readonly static long LastCheckinMsecDefaultValue = 0L;

    private long lastCheckinMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastCheckinMsec {
      get { if ((_hasBits0 & 1) != 0) { return lastCheckinMsec_; } else { return LastCheckinMsecDefaultValue; } }
      set {
        _hasBits0 |= 1;
        lastCheckinMsec_ = value;
      }
    }
    /// <summary>Gets whether the "lastCheckinMsec" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLastCheckinMsec {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "lastCheckinMsec" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLastCheckinMsec() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.AndroidEventProto> _repeated_event_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.AndroidEventProto.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.AndroidEventProto> event_ = new pbc::RepeatedField<global::GooglePlayStore.AndroidEventProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.AndroidEventProto> Event {
      get { return event_; }
    }

    /// <summary>Field number for the "stat" field.</summary>
    public const int StatFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.AndroidStatisticProto> _repeated_stat_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.AndroidStatisticProto.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.AndroidStatisticProto> stat_ = new pbc::RepeatedField<global::GooglePlayStore.AndroidStatisticProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.AndroidStatisticProto> Stat {
      get { return stat_; }
    }

    /// <summary>Field number for the "requestedGroup" field.</summary>
    public const int RequestedGroupFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_requestedGroup_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> requestedGroup_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RequestedGroup {
      get { return requestedGroup_; }
    }

    /// <summary>Field number for the "cellOperator" field.</summary>
    public const int CellOperatorFieldNumber = 6;
    private readonly static string CellOperatorDefaultValue = "";

    private string cellOperator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CellOperator {
      get { return cellOperator_ ?? CellOperatorDefaultValue; }
      set {
        cellOperator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cellOperator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCellOperator {
      get { return cellOperator_ != null; }
    }
    /// <summary>Clears the value of the "cellOperator" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCellOperator() {
      cellOperator_ = null;
    }

    /// <summary>Field number for the "simOperator" field.</summary>
    public const int SimOperatorFieldNumber = 7;
    private readonly static string SimOperatorDefaultValue = "";

    private string simOperator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SimOperator {
      get { return simOperator_ ?? SimOperatorDefaultValue; }
      set {
        simOperator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "simOperator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSimOperator {
      get { return simOperator_ != null; }
    }
    /// <summary>Clears the value of the "simOperator" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSimOperator() {
      simOperator_ = null;
    }

    /// <summary>Field number for the "roaming" field.</summary>
    public const int RoamingFieldNumber = 8;
    private readonly static string RoamingDefaultValue = "";

    private string roaming_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Roaming {
      get { return roaming_ ?? RoamingDefaultValue; }
      set {
        roaming_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "roaming" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRoaming {
      get { return roaming_ != null; }
    }
    /// <summary>Clears the value of the "roaming" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRoaming() {
      roaming_ = null;
    }

    /// <summary>Field number for the "userNumber" field.</summary>
    public const int UserNumberFieldNumber = 9;
    private readonly static int UserNumberDefaultValue = 0;

    private int userNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserNumber {
      get { if ((_hasBits0 & 2) != 0) { return userNumber_; } else { return UserNumberDefaultValue; } }
      set {
        _hasBits0 |= 2;
        userNumber_ = value;
      }
    }
    /// <summary>Gets whether the "userNumber" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserNumber {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "userNumber" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserNumber() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidCheckinProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidCheckinProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Build, other.Build)) return false;
      if (LastCheckinMsec != other.LastCheckinMsec) return false;
      if(!event_.Equals(other.event_)) return false;
      if(!stat_.Equals(other.stat_)) return false;
      if(!requestedGroup_.Equals(other.requestedGroup_)) return false;
      if (CellOperator != other.CellOperator) return false;
      if (SimOperator != other.SimOperator) return false;
      if (Roaming != other.Roaming) return false;
      if (UserNumber != other.UserNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (build_ != null) hash ^= Build.GetHashCode();
      if (HasLastCheckinMsec) hash ^= LastCheckinMsec.GetHashCode();
      hash ^= event_.GetHashCode();
      hash ^= stat_.GetHashCode();
      hash ^= requestedGroup_.GetHashCode();
      if (HasCellOperator) hash ^= CellOperator.GetHashCode();
      if (HasSimOperator) hash ^= SimOperator.GetHashCode();
      if (HasRoaming) hash ^= Roaming.GetHashCode();
      if (HasUserNumber) hash ^= UserNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (build_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Build);
      }
      if (HasLastCheckinMsec) {
        output.WriteRawTag(16);
        output.WriteInt64(LastCheckinMsec);
      }
      event_.WriteTo(output, _repeated_event_codec);
      stat_.WriteTo(output, _repeated_stat_codec);
      requestedGroup_.WriteTo(output, _repeated_requestedGroup_codec);
      if (HasCellOperator) {
        output.WriteRawTag(50);
        output.WriteString(CellOperator);
      }
      if (HasSimOperator) {
        output.WriteRawTag(58);
        output.WriteString(SimOperator);
      }
      if (HasRoaming) {
        output.WriteRawTag(66);
        output.WriteString(Roaming);
      }
      if (HasUserNumber) {
        output.WriteRawTag(72);
        output.WriteInt32(UserNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (build_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Build);
      }
      if (HasLastCheckinMsec) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastCheckinMsec);
      }
      size += event_.CalculateSize(_repeated_event_codec);
      size += stat_.CalculateSize(_repeated_stat_codec);
      size += requestedGroup_.CalculateSize(_repeated_requestedGroup_codec);
      if (HasCellOperator) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CellOperator);
      }
      if (HasSimOperator) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SimOperator);
      }
      if (HasRoaming) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roaming);
      }
      if (HasUserNumber) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidCheckinProto other) {
      if (other == null) {
        return;
      }
      if (other.build_ != null) {
        if (build_ == null) {
          Build = new global::GooglePlayStore.AndroidBuildProto();
        }
        Build.MergeFrom(other.Build);
      }
      if (other.HasLastCheckinMsec) {
        LastCheckinMsec = other.LastCheckinMsec;
      }
      event_.Add(other.event_);
      stat_.Add(other.stat_);
      requestedGroup_.Add(other.requestedGroup_);
      if (other.HasCellOperator) {
        CellOperator = other.CellOperator;
      }
      if (other.HasSimOperator) {
        SimOperator = other.SimOperator;
      }
      if (other.HasRoaming) {
        Roaming = other.Roaming;
      }
      if (other.HasUserNumber) {
        UserNumber = other.UserNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (build_ == null) {
              Build = new global::GooglePlayStore.AndroidBuildProto();
            }
            input.ReadMessage(Build);
            break;
          }
          case 16: {
            LastCheckinMsec = input.ReadInt64();
            break;
          }
          case 26: {
            event_.AddEntriesFrom(input, _repeated_event_codec);
            break;
          }
          case 34: {
            stat_.AddEntriesFrom(input, _repeated_stat_codec);
            break;
          }
          case 42: {
            requestedGroup_.AddEntriesFrom(input, _repeated_requestedGroup_codec);
            break;
          }
          case 50: {
            CellOperator = input.ReadString();
            break;
          }
          case 58: {
            SimOperator = input.ReadString();
            break;
          }
          case 66: {
            Roaming = input.ReadString();
            break;
          }
          case 72: {
            UserNumber = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AndroidEventProto : pb::IMessage<AndroidEventProto> {
    private static readonly pb::MessageParser<AndroidEventProto> _parser = new pb::MessageParser<AndroidEventProto>(() => new AndroidEventProto());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidEventProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[248]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidEventProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidEventProto(AndroidEventProto other) : this() {
      _hasBits0 = other._hasBits0;
      tag_ = other.tag_;
      value_ = other.value_;
      timeMsec_ = other.timeMsec_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidEventProto Clone() {
      return new AndroidEventProto(this);
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 1;
    private readonly static string TagDefaultValue = "";

    private string tag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tag {
      get { return tag_ ?? TagDefaultValue; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTag {
      get { return tag_ != null; }
    }
    /// <summary>Clears the value of the "tag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTag() {
      tag_ = null;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private readonly static string ValueDefaultValue = "";

    private string value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_ ?? ValueDefaultValue; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasValue {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      value_ = null;
    }

    /// <summary>Field number for the "timeMsec" field.</summary>
    public const int TimeMsecFieldNumber = 3;
    private readonly static long TimeMsecDefaultValue = 0L;

    private long timeMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TimeMsec {
      get { if ((_hasBits0 & 1) != 0) { return timeMsec_; } else { return TimeMsecDefaultValue; } }
      set {
        _hasBits0 |= 1;
        timeMsec_ = value;
      }
    }
    /// <summary>Gets whether the "timeMsec" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTimeMsec {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "timeMsec" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimeMsec() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidEventProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidEventProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tag != other.Tag) return false;
      if (Value != other.Value) return false;
      if (TimeMsec != other.TimeMsec) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTag) hash ^= Tag.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (HasTimeMsec) hash ^= TimeMsec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTag) {
        output.WriteRawTag(10);
        output.WriteString(Tag);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (HasTimeMsec) {
        output.WriteRawTag(24);
        output.WriteInt64(TimeMsec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTag) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tag);
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (HasTimeMsec) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeMsec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidEventProto other) {
      if (other == null) {
        return;
      }
      if (other.HasTag) {
        Tag = other.Tag;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      if (other.HasTimeMsec) {
        TimeMsec = other.TimeMsec;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tag = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
          case 24: {
            TimeMsec = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AndroidIntentProto : pb::IMessage<AndroidIntentProto> {
    private static readonly pb::MessageParser<AndroidIntentProto> _parser = new pb::MessageParser<AndroidIntentProto>(() => new AndroidIntentProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidIntentProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[249]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidIntentProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidIntentProto(AndroidIntentProto other) : this() {
      action_ = other.action_;
      dataUri_ = other.dataUri_;
      mimeType_ = other.mimeType_;
      javaClass_ = other.javaClass_;
      extra_ = other.extra_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidIntentProto Clone() {
      return new AndroidIntentProto(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private readonly static string ActionDefaultValue = "";

    private string action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Action {
      get { return action_ ?? ActionDefaultValue; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAction {
      get { return action_ != null; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAction() {
      action_ = null;
    }

    /// <summary>Field number for the "dataUri" field.</summary>
    public const int DataUriFieldNumber = 2;
    private readonly static string DataUriDefaultValue = "";

    private string dataUri_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DataUri {
      get { return dataUri_ ?? DataUriDefaultValue; }
      set {
        dataUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "dataUri" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDataUri {
      get { return dataUri_ != null; }
    }
    /// <summary>Clears the value of the "dataUri" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDataUri() {
      dataUri_ = null;
    }

    /// <summary>Field number for the "mimeType" field.</summary>
    public const int MimeTypeFieldNumber = 3;
    private readonly static string MimeTypeDefaultValue = "";

    private string mimeType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MimeType {
      get { return mimeType_ ?? MimeTypeDefaultValue; }
      set {
        mimeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "mimeType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMimeType {
      get { return mimeType_ != null; }
    }
    /// <summary>Clears the value of the "mimeType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMimeType() {
      mimeType_ = null;
    }

    /// <summary>Field number for the "javaClass" field.</summary>
    public const int JavaClassFieldNumber = 4;
    private readonly static string JavaClassDefaultValue = "";

    private string javaClass_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JavaClass {
      get { return javaClass_ ?? JavaClassDefaultValue; }
      set {
        javaClass_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "javaClass" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasJavaClass {
      get { return javaClass_ != null; }
    }
    /// <summary>Clears the value of the "javaClass" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearJavaClass() {
      javaClass_ = null;
    }

    /// <summary>Field number for the "extra" field.</summary>
    public const int ExtraFieldNumber = 5;
    private static readonly pb::FieldCodec<global::GooglePlayStore.AndroidIntentProto.Types.Extra> _repeated_extra_codec
        = pb::FieldCodec.ForGroup(43, 44, global::GooglePlayStore.AndroidIntentProto.Types.Extra.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.AndroidIntentProto.Types.Extra> extra_ = new pbc::RepeatedField<global::GooglePlayStore.AndroidIntentProto.Types.Extra>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.AndroidIntentProto.Types.Extra> Extra {
      get { return extra_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidIntentProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidIntentProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (DataUri != other.DataUri) return false;
      if (MimeType != other.MimeType) return false;
      if (JavaClass != other.JavaClass) return false;
      if(!extra_.Equals(other.extra_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAction) hash ^= Action.GetHashCode();
      if (HasDataUri) hash ^= DataUri.GetHashCode();
      if (HasMimeType) hash ^= MimeType.GetHashCode();
      if (HasJavaClass) hash ^= JavaClass.GetHashCode();
      hash ^= extra_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAction) {
        output.WriteRawTag(10);
        output.WriteString(Action);
      }
      if (HasDataUri) {
        output.WriteRawTag(18);
        output.WriteString(DataUri);
      }
      if (HasMimeType) {
        output.WriteRawTag(26);
        output.WriteString(MimeType);
      }
      if (HasJavaClass) {
        output.WriteRawTag(34);
        output.WriteString(JavaClass);
      }
      extra_.WriteTo(output, _repeated_extra_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (HasDataUri) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DataUri);
      }
      if (HasMimeType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MimeType);
      }
      if (HasJavaClass) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JavaClass);
      }
      size += extra_.CalculateSize(_repeated_extra_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidIntentProto other) {
      if (other == null) {
        return;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.HasDataUri) {
        DataUri = other.DataUri;
      }
      if (other.HasMimeType) {
        MimeType = other.MimeType;
      }
      if (other.HasJavaClass) {
        JavaClass = other.JavaClass;
      }
      extra_.Add(other.extra_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Action = input.ReadString();
            break;
          }
          case 18: {
            DataUri = input.ReadString();
            break;
          }
          case 26: {
            MimeType = input.ReadString();
            break;
          }
          case 34: {
            JavaClass = input.ReadString();
            break;
          }
          case 43: {
            extra_.AddEntriesFrom(input, _repeated_extra_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AndroidIntentProto message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Extra : pb::IMessage<Extra> {
        private static readonly pb::MessageParser<Extra> _parser = new pb::MessageParser<Extra>(() => new Extra());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Extra> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GooglePlayStore.AndroidIntentProto.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Extra() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Extra(Extra other) : this() {
          name_ = other.name_;
          value_ = other.value_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Extra Clone() {
          return new Extra(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 6;
        private readonly static string NameDefaultValue = "";

        private string name_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_ ?? NameDefaultValue; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasName {
          get { return name_ != null; }
        }
        /// <summary>Clears the value of the "name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearName() {
          name_ = null;
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 7;
        private readonly static string ValueDefaultValue = "";

        private string value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Value {
          get { return value_ ?? ValueDefaultValue; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "value" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasValue {
          get { return value_ != null; }
        }
        /// <summary>Clears the value of the "value" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearValue() {
          value_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Extra);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Extra other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Value != other.Value) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasName) hash ^= Name.GetHashCode();
          if (HasValue) hash ^= Value.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (HasName) {
            output.WriteRawTag(50);
            output.WriteString(Name);
          }
          if (HasValue) {
            output.WriteRawTag(58);
            output.WriteString(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (HasValue) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Extra other) {
          if (other == null) {
            return;
          }
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasValue) {
            Value = other.Value;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              case 44:
                return;
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 50: {
                Name = input.ReadString();
                break;
              }
              case 58: {
                Value = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class AndroidStatisticProto : pb::IMessage<AndroidStatisticProto> {
    private static readonly pb::MessageParser<AndroidStatisticProto> _parser = new pb::MessageParser<AndroidStatisticProto>(() => new AndroidStatisticProto());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidStatisticProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[250]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidStatisticProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidStatisticProto(AndroidStatisticProto other) : this() {
      _hasBits0 = other._hasBits0;
      tag_ = other.tag_;
      count_ = other.count_;
      sum_ = other.sum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidStatisticProto Clone() {
      return new AndroidStatisticProto(this);
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 1;
    private readonly static string TagDefaultValue = "";

    private string tag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tag {
      get { return tag_ ?? TagDefaultValue; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTag {
      get { return tag_ != null; }
    }
    /// <summary>Clears the value of the "tag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTag() {
      tag_ = null;
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private readonly static int CountDefaultValue = 0;

    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { if ((_hasBits0 & 1) != 0) { return count_; } else { return CountDefaultValue; } }
      set {
        _hasBits0 |= 1;
        count_ = value;
      }
    }
    /// <summary>Gets whether the "count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCount {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCount() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "sum" field.</summary>
    public const int SumFieldNumber = 3;
    private readonly static float SumDefaultValue = 0F;

    private float sum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Sum {
      get { if ((_hasBits0 & 2) != 0) { return sum_; } else { return SumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        sum_ = value;
      }
    }
    /// <summary>Gets whether the "sum" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "sum" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSum() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidStatisticProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidStatisticProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tag != other.Tag) return false;
      if (Count != other.Count) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Sum, other.Sum)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTag) hash ^= Tag.GetHashCode();
      if (HasCount) hash ^= Count.GetHashCode();
      if (HasSum) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Sum);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTag) {
        output.WriteRawTag(10);
        output.WriteString(Tag);
      }
      if (HasCount) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (HasSum) {
        output.WriteRawTag(29);
        output.WriteFloat(Sum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTag) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tag);
      }
      if (HasCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (HasSum) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidStatisticProto other) {
      if (other == null) {
        return;
      }
      if (other.HasTag) {
        Tag = other.Tag;
      }
      if (other.HasCount) {
        Count = other.Count;
      }
      if (other.HasSum) {
        Sum = other.Sum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tag = input.ReadString();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 29: {
            Sum = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClientLibraryState : pb::IMessage<ClientLibraryState> {
    private static readonly pb::MessageParser<ClientLibraryState> _parser = new pb::MessageParser<ClientLibraryState>(() => new ClientLibraryState());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientLibraryState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[251]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientLibraryState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientLibraryState(ClientLibraryState other) : this() {
      _hasBits0 = other._hasBits0;
      corpus_ = other.corpus_;
      serverToken_ = other.serverToken_;
      hashCodeSum_ = other.hashCodeSum_;
      librarySize_ = other.librarySize_;
      libraryId_ = other.libraryId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientLibraryState Clone() {
      return new ClientLibraryState(this);
    }

    /// <summary>Field number for the "corpus" field.</summary>
    public const int CorpusFieldNumber = 1;
    private readonly static int CorpusDefaultValue = 0;

    private int corpus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Corpus {
      get { if ((_hasBits0 & 1) != 0) { return corpus_; } else { return CorpusDefaultValue; } }
      set {
        _hasBits0 |= 1;
        corpus_ = value;
      }
    }
    /// <summary>Gets whether the "corpus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCorpus {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "corpus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCorpus() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "serverToken" field.</summary>
    public const int ServerTokenFieldNumber = 2;
    private readonly static pb::ByteString ServerTokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString serverToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ServerToken {
      get { return serverToken_ ?? ServerTokenDefaultValue; }
      set {
        serverToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serverToken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServerToken {
      get { return serverToken_ != null; }
    }
    /// <summary>Clears the value of the "serverToken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServerToken() {
      serverToken_ = null;
    }

    /// <summary>Field number for the "hashCodeSum" field.</summary>
    public const int HashCodeSumFieldNumber = 3;
    private readonly static long HashCodeSumDefaultValue = 0L;

    private long hashCodeSum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HashCodeSum {
      get { if ((_hasBits0 & 2) != 0) { return hashCodeSum_; } else { return HashCodeSumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        hashCodeSum_ = value;
      }
    }
    /// <summary>Gets whether the "hashCodeSum" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHashCodeSum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "hashCodeSum" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHashCodeSum() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "librarySize" field.</summary>
    public const int LibrarySizeFieldNumber = 4;
    private readonly static int LibrarySizeDefaultValue = 0;

    private int librarySize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LibrarySize {
      get { if ((_hasBits0 & 4) != 0) { return librarySize_; } else { return LibrarySizeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        librarySize_ = value;
      }
    }
    /// <summary>Gets whether the "librarySize" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLibrarySize {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "librarySize" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLibrarySize() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "libraryId" field.</summary>
    public const int LibraryIdFieldNumber = 5;
    private readonly static string LibraryIdDefaultValue = "";

    private string libraryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LibraryId {
      get { return libraryId_ ?? LibraryIdDefaultValue; }
      set {
        libraryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "libraryId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLibraryId {
      get { return libraryId_ != null; }
    }
    /// <summary>Clears the value of the "libraryId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLibraryId() {
      libraryId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientLibraryState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientLibraryState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Corpus != other.Corpus) return false;
      if (ServerToken != other.ServerToken) return false;
      if (HashCodeSum != other.HashCodeSum) return false;
      if (LibrarySize != other.LibrarySize) return false;
      if (LibraryId != other.LibraryId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCorpus) hash ^= Corpus.GetHashCode();
      if (HasServerToken) hash ^= ServerToken.GetHashCode();
      if (HasHashCodeSum) hash ^= HashCodeSum.GetHashCode();
      if (HasLibrarySize) hash ^= LibrarySize.GetHashCode();
      if (HasLibraryId) hash ^= LibraryId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasCorpus) {
        output.WriteRawTag(8);
        output.WriteInt32(Corpus);
      }
      if (HasServerToken) {
        output.WriteRawTag(18);
        output.WriteBytes(ServerToken);
      }
      if (HasHashCodeSum) {
        output.WriteRawTag(24);
        output.WriteInt64(HashCodeSum);
      }
      if (HasLibrarySize) {
        output.WriteRawTag(32);
        output.WriteInt32(LibrarySize);
      }
      if (HasLibraryId) {
        output.WriteRawTag(42);
        output.WriteString(LibraryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCorpus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Corpus);
      }
      if (HasServerToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ServerToken);
      }
      if (HasHashCodeSum) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HashCodeSum);
      }
      if (HasLibrarySize) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LibrarySize);
      }
      if (HasLibraryId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LibraryId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientLibraryState other) {
      if (other == null) {
        return;
      }
      if (other.HasCorpus) {
        Corpus = other.Corpus;
      }
      if (other.HasServerToken) {
        ServerToken = other.ServerToken;
      }
      if (other.HasHashCodeSum) {
        HashCodeSum = other.HashCodeSum;
      }
      if (other.HasLibrarySize) {
        LibrarySize = other.LibrarySize;
      }
      if (other.HasLibraryId) {
        LibraryId = other.LibraryId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Corpus = input.ReadInt32();
            break;
          }
          case 18: {
            ServerToken = input.ReadBytes();
            break;
          }
          case 24: {
            HashCodeSum = input.ReadInt64();
            break;
          }
          case 32: {
            LibrarySize = input.ReadInt32();
            break;
          }
          case 42: {
            LibraryId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AndroidDataUsageProto : pb::IMessage<AndroidDataUsageProto> {
    private static readonly pb::MessageParser<AndroidDataUsageProto> _parser = new pb::MessageParser<AndroidDataUsageProto>(() => new AndroidDataUsageProto());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidDataUsageProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[252]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidDataUsageProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidDataUsageProto(AndroidDataUsageProto other) : this() {
      _hasBits0 = other._hasBits0;
      version_ = other.version_;
      currentReportMsec_ = other.currentReportMsec_;
      keyToPackageNameMapping_ = other.keyToPackageNameMapping_.Clone();
      payloadLevelAppStat_ = other.payloadLevelAppStat_.Clone();
      ipLayerNetworkStat_ = other.ipLayerNetworkStat_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidDataUsageProto Clone() {
      return new AndroidDataUsageProto(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private readonly static int VersionDefaultValue = 0;

    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { if ((_hasBits0 & 1) != 0) { return version_; } else { return VersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        version_ = value;
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "currentReportMsec" field.</summary>
    public const int CurrentReportMsecFieldNumber = 2;
    private readonly static long CurrentReportMsecDefaultValue = 0L;

    private long currentReportMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CurrentReportMsec {
      get { if ((_hasBits0 & 2) != 0) { return currentReportMsec_; } else { return CurrentReportMsecDefaultValue; } }
      set {
        _hasBits0 |= 2;
        currentReportMsec_ = value;
      }
    }
    /// <summary>Gets whether the "currentReportMsec" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCurrentReportMsec {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "currentReportMsec" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCurrentReportMsec() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "keyToPackageNameMapping" field.</summary>
    public const int KeyToPackageNameMappingFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.KeyToPackageNameMapping> _repeated_keyToPackageNameMapping_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.KeyToPackageNameMapping.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.KeyToPackageNameMapping> keyToPackageNameMapping_ = new pbc::RepeatedField<global::GooglePlayStore.KeyToPackageNameMapping>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.KeyToPackageNameMapping> KeyToPackageNameMapping {
      get { return keyToPackageNameMapping_; }
    }

    /// <summary>Field number for the "payloadLevelAppStat" field.</summary>
    public const int PayloadLevelAppStatFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.PayloadLevelAppStat> _repeated_payloadLevelAppStat_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.PayloadLevelAppStat.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.PayloadLevelAppStat> payloadLevelAppStat_ = new pbc::RepeatedField<global::GooglePlayStore.PayloadLevelAppStat>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.PayloadLevelAppStat> PayloadLevelAppStat {
      get { return payloadLevelAppStat_; }
    }

    /// <summary>Field number for the "ipLayerNetworkStat" field.</summary>
    public const int IpLayerNetworkStatFieldNumber = 5;
    private static readonly pb::FieldCodec<global::GooglePlayStore.IpLayerNetworkStat> _repeated_ipLayerNetworkStat_codec
        = pb::FieldCodec.ForMessage(42, global::GooglePlayStore.IpLayerNetworkStat.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.IpLayerNetworkStat> ipLayerNetworkStat_ = new pbc::RepeatedField<global::GooglePlayStore.IpLayerNetworkStat>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.IpLayerNetworkStat> IpLayerNetworkStat {
      get { return ipLayerNetworkStat_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidDataUsageProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidDataUsageProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (CurrentReportMsec != other.CurrentReportMsec) return false;
      if(!keyToPackageNameMapping_.Equals(other.keyToPackageNameMapping_)) return false;
      if(!payloadLevelAppStat_.Equals(other.payloadLevelAppStat_)) return false;
      if(!ipLayerNetworkStat_.Equals(other.ipLayerNetworkStat_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVersion) hash ^= Version.GetHashCode();
      if (HasCurrentReportMsec) hash ^= CurrentReportMsec.GetHashCode();
      hash ^= keyToPackageNameMapping_.GetHashCode();
      hash ^= payloadLevelAppStat_.GetHashCode();
      hash ^= ipLayerNetworkStat_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasVersion) {
        output.WriteRawTag(8);
        output.WriteInt32(Version);
      }
      if (HasCurrentReportMsec) {
        output.WriteRawTag(16);
        output.WriteInt64(CurrentReportMsec);
      }
      keyToPackageNameMapping_.WriteTo(output, _repeated_keyToPackageNameMapping_codec);
      payloadLevelAppStat_.WriteTo(output, _repeated_payloadLevelAppStat_codec);
      ipLayerNetworkStat_.WriteTo(output, _repeated_ipLayerNetworkStat_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (HasCurrentReportMsec) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrentReportMsec);
      }
      size += keyToPackageNameMapping_.CalculateSize(_repeated_keyToPackageNameMapping_codec);
      size += payloadLevelAppStat_.CalculateSize(_repeated_payloadLevelAppStat_codec);
      size += ipLayerNetworkStat_.CalculateSize(_repeated_ipLayerNetworkStat_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidDataUsageProto other) {
      if (other == null) {
        return;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.HasCurrentReportMsec) {
        CurrentReportMsec = other.CurrentReportMsec;
      }
      keyToPackageNameMapping_.Add(other.keyToPackageNameMapping_);
      payloadLevelAppStat_.Add(other.payloadLevelAppStat_);
      ipLayerNetworkStat_.Add(other.ipLayerNetworkStat_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadInt32();
            break;
          }
          case 16: {
            CurrentReportMsec = input.ReadInt64();
            break;
          }
          case 26: {
            keyToPackageNameMapping_.AddEntriesFrom(input, _repeated_keyToPackageNameMapping_codec);
            break;
          }
          case 34: {
            payloadLevelAppStat_.AddEntriesFrom(input, _repeated_payloadLevelAppStat_codec);
            break;
          }
          case 42: {
            ipLayerNetworkStat_.AddEntriesFrom(input, _repeated_ipLayerNetworkStat_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AndroidUsageStatsReport : pb::IMessage<AndroidUsageStatsReport> {
    private static readonly pb::MessageParser<AndroidUsageStatsReport> _parser = new pb::MessageParser<AndroidUsageStatsReport>(() => new AndroidUsageStatsReport());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidUsageStatsReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[253]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidUsageStatsReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidUsageStatsReport(AndroidUsageStatsReport other) : this() {
      _hasBits0 = other._hasBits0;
      androidId_ = other.androidId_;
      loggingId_ = other.loggingId_;
      usageStats_ = other.usageStats_ != null ? other.usageStats_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidUsageStatsReport Clone() {
      return new AndroidUsageStatsReport(this);
    }

    /// <summary>Field number for the "androidId" field.</summary>
    public const int AndroidIdFieldNumber = 1;
    private readonly static long AndroidIdDefaultValue = 0L;

    private long androidId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AndroidId {
      get { if ((_hasBits0 & 1) != 0) { return androidId_; } else { return AndroidIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        androidId_ = value;
      }
    }
    /// <summary>Gets whether the "androidId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAndroidId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "androidId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAndroidId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "loggingId" field.</summary>
    public const int LoggingIdFieldNumber = 2;
    private readonly static long LoggingIdDefaultValue = 0L;

    private long loggingId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LoggingId {
      get { if ((_hasBits0 & 2) != 0) { return loggingId_; } else { return LoggingIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        loggingId_ = value;
      }
    }
    /// <summary>Gets whether the "loggingId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLoggingId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "loggingId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLoggingId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "usageStats" field.</summary>
    public const int UsageStatsFieldNumber = 3;
    private global::GooglePlayStore.UsageStatsExtensionProto usageStats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.UsageStatsExtensionProto UsageStats {
      get { return usageStats_; }
      set {
        usageStats_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidUsageStatsReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidUsageStatsReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AndroidId != other.AndroidId) return false;
      if (LoggingId != other.LoggingId) return false;
      if (!object.Equals(UsageStats, other.UsageStats)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAndroidId) hash ^= AndroidId.GetHashCode();
      if (HasLoggingId) hash ^= LoggingId.GetHashCode();
      if (usageStats_ != null) hash ^= UsageStats.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAndroidId) {
        output.WriteRawTag(8);
        output.WriteInt64(AndroidId);
      }
      if (HasLoggingId) {
        output.WriteRawTag(16);
        output.WriteInt64(LoggingId);
      }
      if (usageStats_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UsageStats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAndroidId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AndroidId);
      }
      if (HasLoggingId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LoggingId);
      }
      if (usageStats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UsageStats);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidUsageStatsReport other) {
      if (other == null) {
        return;
      }
      if (other.HasAndroidId) {
        AndroidId = other.AndroidId;
      }
      if (other.HasLoggingId) {
        LoggingId = other.LoggingId;
      }
      if (other.usageStats_ != null) {
        if (usageStats_ == null) {
          UsageStats = new global::GooglePlayStore.UsageStatsExtensionProto();
        }
        UsageStats.MergeFrom(other.UsageStats);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AndroidId = input.ReadInt64();
            break;
          }
          case 16: {
            LoggingId = input.ReadInt64();
            break;
          }
          case 26: {
            if (usageStats_ == null) {
              UsageStats = new global::GooglePlayStore.UsageStatsExtensionProto();
            }
            input.ReadMessage(UsageStats);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppBucket : pb::IMessage<AppBucket> {
    private static readonly pb::MessageParser<AppBucket> _parser = new pb::MessageParser<AppBucket>(() => new AppBucket());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppBucket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[254]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppBucket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppBucket(AppBucket other) : this() {
      _hasBits0 = other._hasBits0;
      bucketStartMsec_ = other.bucketStartMsec_;
      bucketDurationMsec_ = other.bucketDurationMsec_;
      statCounters_ = other.statCounters_.Clone();
      operationCount_ = other.operationCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppBucket Clone() {
      return new AppBucket(this);
    }

    /// <summary>Field number for the "bucketStartMsec" field.</summary>
    public const int BucketStartMsecFieldNumber = 1;
    private readonly static long BucketStartMsecDefaultValue = 0L;

    private long bucketStartMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BucketStartMsec {
      get { if ((_hasBits0 & 1) != 0) { return bucketStartMsec_; } else { return BucketStartMsecDefaultValue; } }
      set {
        _hasBits0 |= 1;
        bucketStartMsec_ = value;
      }
    }
    /// <summary>Gets whether the "bucketStartMsec" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBucketStartMsec {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "bucketStartMsec" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBucketStartMsec() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "bucketDurationMsec" field.</summary>
    public const int BucketDurationMsecFieldNumber = 2;
    private readonly static long BucketDurationMsecDefaultValue = 0L;

    private long bucketDurationMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BucketDurationMsec {
      get { if ((_hasBits0 & 2) != 0) { return bucketDurationMsec_; } else { return BucketDurationMsecDefaultValue; } }
      set {
        _hasBits0 |= 2;
        bucketDurationMsec_ = value;
      }
    }
    /// <summary>Gets whether the "bucketDurationMsec" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBucketDurationMsec {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "bucketDurationMsec" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBucketDurationMsec() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "statCounters" field.</summary>
    public const int StatCountersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.StatCounters> _repeated_statCounters_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.StatCounters.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.StatCounters> statCounters_ = new pbc::RepeatedField<global::GooglePlayStore.StatCounters>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.StatCounters> StatCounters {
      get { return statCounters_; }
    }

    /// <summary>Field number for the "operationCount" field.</summary>
    public const int OperationCountFieldNumber = 4;
    private readonly static long OperationCountDefaultValue = 0L;

    private long operationCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OperationCount {
      get { if ((_hasBits0 & 4) != 0) { return operationCount_; } else { return OperationCountDefaultValue; } }
      set {
        _hasBits0 |= 4;
        operationCount_ = value;
      }
    }
    /// <summary>Gets whether the "operationCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOperationCount {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "operationCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOperationCount() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppBucket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppBucket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BucketStartMsec != other.BucketStartMsec) return false;
      if (BucketDurationMsec != other.BucketDurationMsec) return false;
      if(!statCounters_.Equals(other.statCounters_)) return false;
      if (OperationCount != other.OperationCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBucketStartMsec) hash ^= BucketStartMsec.GetHashCode();
      if (HasBucketDurationMsec) hash ^= BucketDurationMsec.GetHashCode();
      hash ^= statCounters_.GetHashCode();
      if (HasOperationCount) hash ^= OperationCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasBucketStartMsec) {
        output.WriteRawTag(8);
        output.WriteInt64(BucketStartMsec);
      }
      if (HasBucketDurationMsec) {
        output.WriteRawTag(16);
        output.WriteInt64(BucketDurationMsec);
      }
      statCounters_.WriteTo(output, _repeated_statCounters_codec);
      if (HasOperationCount) {
        output.WriteRawTag(32);
        output.WriteInt64(OperationCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasBucketStartMsec) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BucketStartMsec);
      }
      if (HasBucketDurationMsec) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BucketDurationMsec);
      }
      size += statCounters_.CalculateSize(_repeated_statCounters_codec);
      if (HasOperationCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OperationCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppBucket other) {
      if (other == null) {
        return;
      }
      if (other.HasBucketStartMsec) {
        BucketStartMsec = other.BucketStartMsec;
      }
      if (other.HasBucketDurationMsec) {
        BucketDurationMsec = other.BucketDurationMsec;
      }
      statCounters_.Add(other.statCounters_);
      if (other.HasOperationCount) {
        OperationCount = other.OperationCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BucketStartMsec = input.ReadInt64();
            break;
          }
          case 16: {
            BucketDurationMsec = input.ReadInt64();
            break;
          }
          case 26: {
            statCounters_.AddEntriesFrom(input, _repeated_statCounters_codec);
            break;
          }
          case 32: {
            OperationCount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CounterData : pb::IMessage<CounterData> {
    private static readonly pb::MessageParser<CounterData> _parser = new pb::MessageParser<CounterData>(() => new CounterData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CounterData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[255]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CounterData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CounterData(CounterData other) : this() {
      _hasBits0 = other._hasBits0;
      bytes_ = other.bytes_;
      packets_ = other.packets_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CounterData Clone() {
      return new CounterData(this);
    }

    /// <summary>Field number for the "bytes" field.</summary>
    public const int BytesFieldNumber = 1;
    private readonly static long BytesDefaultValue = 0L;

    private long bytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Bytes {
      get { if ((_hasBits0 & 1) != 0) { return bytes_; } else { return BytesDefaultValue; } }
      set {
        _hasBits0 |= 1;
        bytes_ = value;
      }
    }
    /// <summary>Gets whether the "bytes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBytes {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "bytes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBytes() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "packets" field.</summary>
    public const int PacketsFieldNumber = 2;
    private readonly static long PacketsDefaultValue = 0L;

    private long packets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Packets {
      get { if ((_hasBits0 & 2) != 0) { return packets_; } else { return PacketsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        packets_ = value;
      }
    }
    /// <summary>Gets whether the "packets" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPackets {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "packets" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPackets() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CounterData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CounterData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bytes != other.Bytes) return false;
      if (Packets != other.Packets) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBytes) hash ^= Bytes.GetHashCode();
      if (HasPackets) hash ^= Packets.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasBytes) {
        output.WriteRawTag(8);
        output.WriteInt64(Bytes);
      }
      if (HasPackets) {
        output.WriteRawTag(16);
        output.WriteInt64(Packets);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasBytes) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Bytes);
      }
      if (HasPackets) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Packets);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CounterData other) {
      if (other == null) {
        return;
      }
      if (other.HasBytes) {
        Bytes = other.Bytes;
      }
      if (other.HasPackets) {
        Packets = other.Packets;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Bytes = input.ReadInt64();
            break;
          }
          case 16: {
            Packets = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IpLayerAppStat : pb::IMessage<IpLayerAppStat> {
    private static readonly pb::MessageParser<IpLayerAppStat> _parser = new pb::MessageParser<IpLayerAppStat>(() => new IpLayerAppStat());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IpLayerAppStat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[256]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpLayerAppStat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpLayerAppStat(IpLayerAppStat other) : this() {
      _hasBits0 = other._hasBits0;
      packageKey_ = other.packageKey_;
      applicationTag_ = other.applicationTag_;
      ipLayerAppBucket_ = other.ipLayerAppBucket_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpLayerAppStat Clone() {
      return new IpLayerAppStat(this);
    }

    /// <summary>Field number for the "packageKey" field.</summary>
    public const int PackageKeyFieldNumber = 1;
    private readonly static int PackageKeyDefaultValue = 0;

    private int packageKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackageKey {
      get { if ((_hasBits0 & 1) != 0) { return packageKey_; } else { return PackageKeyDefaultValue; } }
      set {
        _hasBits0 |= 1;
        packageKey_ = value;
      }
    }
    /// <summary>Gets whether the "packageKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPackageKey {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "packageKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPackageKey() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "applicationTag" field.</summary>
    public const int ApplicationTagFieldNumber = 2;
    private readonly static int ApplicationTagDefaultValue = 0;

    private int applicationTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationTag {
      get { if ((_hasBits0 & 2) != 0) { return applicationTag_; } else { return ApplicationTagDefaultValue; } }
      set {
        _hasBits0 |= 2;
        applicationTag_ = value;
      }
    }
    /// <summary>Gets whether the "applicationTag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasApplicationTag {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "applicationTag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearApplicationTag() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "ipLayerAppBucket" field.</summary>
    public const int IpLayerAppBucketFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.AppBucket> _repeated_ipLayerAppBucket_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.AppBucket.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.AppBucket> ipLayerAppBucket_ = new pbc::RepeatedField<global::GooglePlayStore.AppBucket>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.AppBucket> IpLayerAppBucket {
      get { return ipLayerAppBucket_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IpLayerAppStat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IpLayerAppStat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PackageKey != other.PackageKey) return false;
      if (ApplicationTag != other.ApplicationTag) return false;
      if(!ipLayerAppBucket_.Equals(other.ipLayerAppBucket_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPackageKey) hash ^= PackageKey.GetHashCode();
      if (HasApplicationTag) hash ^= ApplicationTag.GetHashCode();
      hash ^= ipLayerAppBucket_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasPackageKey) {
        output.WriteRawTag(8);
        output.WriteInt32(PackageKey);
      }
      if (HasApplicationTag) {
        output.WriteRawTag(16);
        output.WriteInt32(ApplicationTag);
      }
      ipLayerAppBucket_.WriteTo(output, _repeated_ipLayerAppBucket_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPackageKey) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackageKey);
      }
      if (HasApplicationTag) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationTag);
      }
      size += ipLayerAppBucket_.CalculateSize(_repeated_ipLayerAppBucket_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IpLayerAppStat other) {
      if (other == null) {
        return;
      }
      if (other.HasPackageKey) {
        PackageKey = other.PackageKey;
      }
      if (other.HasApplicationTag) {
        ApplicationTag = other.ApplicationTag;
      }
      ipLayerAppBucket_.Add(other.ipLayerAppBucket_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PackageKey = input.ReadInt32();
            break;
          }
          case 16: {
            ApplicationTag = input.ReadInt32();
            break;
          }
          case 26: {
            ipLayerAppBucket_.AddEntriesFrom(input, _repeated_ipLayerAppBucket_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class IpLayerNetworkBucket : pb::IMessage<IpLayerNetworkBucket> {
    private static readonly pb::MessageParser<IpLayerNetworkBucket> _parser = new pb::MessageParser<IpLayerNetworkBucket>(() => new IpLayerNetworkBucket());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IpLayerNetworkBucket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[257]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpLayerNetworkBucket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpLayerNetworkBucket(IpLayerNetworkBucket other) : this() {
      _hasBits0 = other._hasBits0;
      bucketStartMsec_ = other.bucketStartMsec_;
      bucketDurationMsec_ = other.bucketDurationMsec_;
      statCounters_ = other.statCounters_.Clone();
      networkActiveDuration_ = other.networkActiveDuration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpLayerNetworkBucket Clone() {
      return new IpLayerNetworkBucket(this);
    }

    /// <summary>Field number for the "bucketStartMsec" field.</summary>
    public const int BucketStartMsecFieldNumber = 1;
    private readonly static long BucketStartMsecDefaultValue = 0L;

    private long bucketStartMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BucketStartMsec {
      get { if ((_hasBits0 & 1) != 0) { return bucketStartMsec_; } else { return BucketStartMsecDefaultValue; } }
      set {
        _hasBits0 |= 1;
        bucketStartMsec_ = value;
      }
    }
    /// <summary>Gets whether the "bucketStartMsec" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBucketStartMsec {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "bucketStartMsec" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBucketStartMsec() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "bucketDurationMsec" field.</summary>
    public const int BucketDurationMsecFieldNumber = 2;
    private readonly static long BucketDurationMsecDefaultValue = 0L;

    private long bucketDurationMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BucketDurationMsec {
      get { if ((_hasBits0 & 2) != 0) { return bucketDurationMsec_; } else { return BucketDurationMsecDefaultValue; } }
      set {
        _hasBits0 |= 2;
        bucketDurationMsec_ = value;
      }
    }
    /// <summary>Gets whether the "bucketDurationMsec" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBucketDurationMsec {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "bucketDurationMsec" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBucketDurationMsec() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "statCounters" field.</summary>
    public const int StatCountersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.StatCounters> _repeated_statCounters_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.StatCounters.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.StatCounters> statCounters_ = new pbc::RepeatedField<global::GooglePlayStore.StatCounters>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.StatCounters> StatCounters {
      get { return statCounters_; }
    }

    /// <summary>Field number for the "networkActiveDuration" field.</summary>
    public const int NetworkActiveDurationFieldNumber = 4;
    private readonly static long NetworkActiveDurationDefaultValue = 0L;

    private long networkActiveDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetworkActiveDuration {
      get { if ((_hasBits0 & 4) != 0) { return networkActiveDuration_; } else { return NetworkActiveDurationDefaultValue; } }
      set {
        _hasBits0 |= 4;
        networkActiveDuration_ = value;
      }
    }
    /// <summary>Gets whether the "networkActiveDuration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNetworkActiveDuration {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "networkActiveDuration" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNetworkActiveDuration() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IpLayerNetworkBucket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IpLayerNetworkBucket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BucketStartMsec != other.BucketStartMsec) return false;
      if (BucketDurationMsec != other.BucketDurationMsec) return false;
      if(!statCounters_.Equals(other.statCounters_)) return false;
      if (NetworkActiveDuration != other.NetworkActiveDuration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBucketStartMsec) hash ^= BucketStartMsec.GetHashCode();
      if (HasBucketDurationMsec) hash ^= BucketDurationMsec.GetHashCode();
      hash ^= statCounters_.GetHashCode();
      if (HasNetworkActiveDuration) hash ^= NetworkActiveDuration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasBucketStartMsec) {
        output.WriteRawTag(8);
        output.WriteInt64(BucketStartMsec);
      }
      if (HasBucketDurationMsec) {
        output.WriteRawTag(16);
        output.WriteInt64(BucketDurationMsec);
      }
      statCounters_.WriteTo(output, _repeated_statCounters_codec);
      if (HasNetworkActiveDuration) {
        output.WriteRawTag(32);
        output.WriteInt64(NetworkActiveDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasBucketStartMsec) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BucketStartMsec);
      }
      if (HasBucketDurationMsec) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BucketDurationMsec);
      }
      size += statCounters_.CalculateSize(_repeated_statCounters_codec);
      if (HasNetworkActiveDuration) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetworkActiveDuration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IpLayerNetworkBucket other) {
      if (other == null) {
        return;
      }
      if (other.HasBucketStartMsec) {
        BucketStartMsec = other.BucketStartMsec;
      }
      if (other.HasBucketDurationMsec) {
        BucketDurationMsec = other.BucketDurationMsec;
      }
      statCounters_.Add(other.statCounters_);
      if (other.HasNetworkActiveDuration) {
        NetworkActiveDuration = other.NetworkActiveDuration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BucketStartMsec = input.ReadInt64();
            break;
          }
          case 16: {
            BucketDurationMsec = input.ReadInt64();
            break;
          }
          case 26: {
            statCounters_.AddEntriesFrom(input, _repeated_statCounters_codec);
            break;
          }
          case 32: {
            NetworkActiveDuration = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IpLayerNetworkStat : pb::IMessage<IpLayerNetworkStat> {
    private static readonly pb::MessageParser<IpLayerNetworkStat> _parser = new pb::MessageParser<IpLayerNetworkStat>(() => new IpLayerNetworkStat());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IpLayerNetworkStat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[258]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpLayerNetworkStat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpLayerNetworkStat(IpLayerNetworkStat other) : this() {
      _hasBits0 = other._hasBits0;
      networkDetails_ = other.networkDetails_;
      type_ = other.type_;
      ipLayerNetworkBucket_ = other.ipLayerNetworkBucket_.Clone();
      ipLayerAppStat_ = other.ipLayerAppStat_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpLayerNetworkStat Clone() {
      return new IpLayerNetworkStat(this);
    }

    /// <summary>Field number for the "networkDetails" field.</summary>
    public const int NetworkDetailsFieldNumber = 1;
    private readonly static string NetworkDetailsDefaultValue = "";

    private string networkDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkDetails {
      get { return networkDetails_ ?? NetworkDetailsDefaultValue; }
      set {
        networkDetails_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "networkDetails" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNetworkDetails {
      get { return networkDetails_ != null; }
    }
    /// <summary>Clears the value of the "networkDetails" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNetworkDetails() {
      networkDetails_ = null;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "ipLayerNetworkBucket" field.</summary>
    public const int IpLayerNetworkBucketFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.IpLayerNetworkBucket> _repeated_ipLayerNetworkBucket_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.IpLayerNetworkBucket.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.IpLayerNetworkBucket> ipLayerNetworkBucket_ = new pbc::RepeatedField<global::GooglePlayStore.IpLayerNetworkBucket>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.IpLayerNetworkBucket> IpLayerNetworkBucket {
      get { return ipLayerNetworkBucket_; }
    }

    /// <summary>Field number for the "ipLayerAppStat" field.</summary>
    public const int IpLayerAppStatFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.IpLayerAppStat> _repeated_ipLayerAppStat_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.IpLayerAppStat.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.IpLayerAppStat> ipLayerAppStat_ = new pbc::RepeatedField<global::GooglePlayStore.IpLayerAppStat>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.IpLayerAppStat> IpLayerAppStat {
      get { return ipLayerAppStat_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IpLayerNetworkStat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IpLayerNetworkStat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkDetails != other.NetworkDetails) return false;
      if (Type != other.Type) return false;
      if(!ipLayerNetworkBucket_.Equals(other.ipLayerNetworkBucket_)) return false;
      if(!ipLayerAppStat_.Equals(other.ipLayerAppStat_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNetworkDetails) hash ^= NetworkDetails.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      hash ^= ipLayerNetworkBucket_.GetHashCode();
      hash ^= ipLayerAppStat_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasNetworkDetails) {
        output.WriteRawTag(10);
        output.WriteString(NetworkDetails);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      ipLayerNetworkBucket_.WriteTo(output, _repeated_ipLayerNetworkBucket_codec);
      ipLayerAppStat_.WriteTo(output, _repeated_ipLayerAppStat_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasNetworkDetails) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkDetails);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      size += ipLayerNetworkBucket_.CalculateSize(_repeated_ipLayerNetworkBucket_codec);
      size += ipLayerAppStat_.CalculateSize(_repeated_ipLayerAppStat_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IpLayerNetworkStat other) {
      if (other == null) {
        return;
      }
      if (other.HasNetworkDetails) {
        NetworkDetails = other.NetworkDetails;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      ipLayerNetworkBucket_.Add(other.ipLayerNetworkBucket_);
      ipLayerAppStat_.Add(other.ipLayerAppStat_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetworkDetails = input.ReadString();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 26: {
            ipLayerNetworkBucket_.AddEntriesFrom(input, _repeated_ipLayerNetworkBucket_codec);
            break;
          }
          case 34: {
            ipLayerAppStat_.AddEntriesFrom(input, _repeated_ipLayerAppStat_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class KeyToPackageNameMapping : pb::IMessage<KeyToPackageNameMapping> {
    private static readonly pb::MessageParser<KeyToPackageNameMapping> _parser = new pb::MessageParser<KeyToPackageNameMapping>(() => new KeyToPackageNameMapping());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyToPackageNameMapping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[259]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyToPackageNameMapping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyToPackageNameMapping(KeyToPackageNameMapping other) : this() {
      _hasBits0 = other._hasBits0;
      packageKey_ = other.packageKey_;
      uidName_ = other.uidName_;
      sharedPackage_ = other.sharedPackage_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyToPackageNameMapping Clone() {
      return new KeyToPackageNameMapping(this);
    }

    /// <summary>Field number for the "packageKey" field.</summary>
    public const int PackageKeyFieldNumber = 1;
    private readonly static int PackageKeyDefaultValue = 0;

    private int packageKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackageKey {
      get { if ((_hasBits0 & 1) != 0) { return packageKey_; } else { return PackageKeyDefaultValue; } }
      set {
        _hasBits0 |= 1;
        packageKey_ = value;
      }
    }
    /// <summary>Gets whether the "packageKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPackageKey {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "packageKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPackageKey() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uidName" field.</summary>
    public const int UidNameFieldNumber = 2;
    private readonly static string UidNameDefaultValue = "";

    private string uidName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UidName {
      get { return uidName_ ?? UidNameDefaultValue; }
      set {
        uidName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uidName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUidName {
      get { return uidName_ != null; }
    }
    /// <summary>Clears the value of the "uidName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUidName() {
      uidName_ = null;
    }

    /// <summary>Field number for the "sharedPackage" field.</summary>
    public const int SharedPackageFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.PackageInfo> _repeated_sharedPackage_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.PackageInfo.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.PackageInfo> sharedPackage_ = new pbc::RepeatedField<global::GooglePlayStore.PackageInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.PackageInfo> SharedPackage {
      get { return sharedPackage_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyToPackageNameMapping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyToPackageNameMapping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PackageKey != other.PackageKey) return false;
      if (UidName != other.UidName) return false;
      if(!sharedPackage_.Equals(other.sharedPackage_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPackageKey) hash ^= PackageKey.GetHashCode();
      if (HasUidName) hash ^= UidName.GetHashCode();
      hash ^= sharedPackage_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasPackageKey) {
        output.WriteRawTag(8);
        output.WriteInt32(PackageKey);
      }
      if (HasUidName) {
        output.WriteRawTag(18);
        output.WriteString(UidName);
      }
      sharedPackage_.WriteTo(output, _repeated_sharedPackage_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPackageKey) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackageKey);
      }
      if (HasUidName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UidName);
      }
      size += sharedPackage_.CalculateSize(_repeated_sharedPackage_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyToPackageNameMapping other) {
      if (other == null) {
        return;
      }
      if (other.HasPackageKey) {
        PackageKey = other.PackageKey;
      }
      if (other.HasUidName) {
        UidName = other.UidName;
      }
      sharedPackage_.Add(other.sharedPackage_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PackageKey = input.ReadInt32();
            break;
          }
          case 18: {
            UidName = input.ReadString();
            break;
          }
          case 26: {
            sharedPackage_.AddEntriesFrom(input, _repeated_sharedPackage_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PackageInfo : pb::IMessage<PackageInfo> {
    private static readonly pb::MessageParser<PackageInfo> _parser = new pb::MessageParser<PackageInfo>(() => new PackageInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PackageInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[260]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageInfo(PackageInfo other) : this() {
      _hasBits0 = other._hasBits0;
      pkgName_ = other.pkgName_;
      versionCode_ = other.versionCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageInfo Clone() {
      return new PackageInfo(this);
    }

    /// <summary>Field number for the "pkgName" field.</summary>
    public const int PkgNameFieldNumber = 1;
    private readonly static string PkgNameDefaultValue = "";

    private string pkgName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PkgName {
      get { return pkgName_ ?? PkgNameDefaultValue; }
      set {
        pkgName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pkgName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPkgName {
      get { return pkgName_ != null; }
    }
    /// <summary>Clears the value of the "pkgName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPkgName() {
      pkgName_ = null;
    }

    /// <summary>Field number for the "versionCode" field.</summary>
    public const int VersionCodeFieldNumber = 2;
    private readonly static int VersionCodeDefaultValue = 0;

    private int versionCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VersionCode {
      get { if ((_hasBits0 & 1) != 0) { return versionCode_; } else { return VersionCodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        versionCode_ = value;
      }
    }
    /// <summary>Gets whether the "versionCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "versionCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PackageInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PackageInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PkgName != other.PkgName) return false;
      if (VersionCode != other.VersionCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPkgName) hash ^= PkgName.GetHashCode();
      if (HasVersionCode) hash ^= VersionCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasPkgName) {
        output.WriteRawTag(10);
        output.WriteString(PkgName);
      }
      if (HasVersionCode) {
        output.WriteRawTag(16);
        output.WriteInt32(VersionCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPkgName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PkgName);
      }
      if (HasVersionCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VersionCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PackageInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasPkgName) {
        PkgName = other.PkgName;
      }
      if (other.HasVersionCode) {
        VersionCode = other.VersionCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PkgName = input.ReadString();
            break;
          }
          case 16: {
            VersionCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PayloadLevelAppStat : pb::IMessage<PayloadLevelAppStat> {
    private static readonly pb::MessageParser<PayloadLevelAppStat> _parser = new pb::MessageParser<PayloadLevelAppStat>(() => new PayloadLevelAppStat());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PayloadLevelAppStat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[261]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadLevelAppStat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadLevelAppStat(PayloadLevelAppStat other) : this() {
      _hasBits0 = other._hasBits0;
      packageKey_ = other.packageKey_;
      applicationTag_ = other.applicationTag_;
      payloadLevelAppBucket_ = other.payloadLevelAppBucket_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadLevelAppStat Clone() {
      return new PayloadLevelAppStat(this);
    }

    /// <summary>Field number for the "packageKey" field.</summary>
    public const int PackageKeyFieldNumber = 1;
    private readonly static int PackageKeyDefaultValue = 0;

    private int packageKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackageKey {
      get { if ((_hasBits0 & 1) != 0) { return packageKey_; } else { return PackageKeyDefaultValue; } }
      set {
        _hasBits0 |= 1;
        packageKey_ = value;
      }
    }
    /// <summary>Gets whether the "packageKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPackageKey {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "packageKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPackageKey() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "applicationTag" field.</summary>
    public const int ApplicationTagFieldNumber = 2;
    private readonly static int ApplicationTagDefaultValue = 0;

    private int applicationTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationTag {
      get { if ((_hasBits0 & 2) != 0) { return applicationTag_; } else { return ApplicationTagDefaultValue; } }
      set {
        _hasBits0 |= 2;
        applicationTag_ = value;
      }
    }
    /// <summary>Gets whether the "applicationTag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasApplicationTag {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "applicationTag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearApplicationTag() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "payloadLevelAppBucket" field.</summary>
    public const int PayloadLevelAppBucketFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.AppBucket> _repeated_payloadLevelAppBucket_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.AppBucket.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.AppBucket> payloadLevelAppBucket_ = new pbc::RepeatedField<global::GooglePlayStore.AppBucket>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.AppBucket> PayloadLevelAppBucket {
      get { return payloadLevelAppBucket_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PayloadLevelAppStat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PayloadLevelAppStat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PackageKey != other.PackageKey) return false;
      if (ApplicationTag != other.ApplicationTag) return false;
      if(!payloadLevelAppBucket_.Equals(other.payloadLevelAppBucket_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPackageKey) hash ^= PackageKey.GetHashCode();
      if (HasApplicationTag) hash ^= ApplicationTag.GetHashCode();
      hash ^= payloadLevelAppBucket_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasPackageKey) {
        output.WriteRawTag(8);
        output.WriteInt32(PackageKey);
      }
      if (HasApplicationTag) {
        output.WriteRawTag(16);
        output.WriteInt32(ApplicationTag);
      }
      payloadLevelAppBucket_.WriteTo(output, _repeated_payloadLevelAppBucket_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPackageKey) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackageKey);
      }
      if (HasApplicationTag) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationTag);
      }
      size += payloadLevelAppBucket_.CalculateSize(_repeated_payloadLevelAppBucket_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PayloadLevelAppStat other) {
      if (other == null) {
        return;
      }
      if (other.HasPackageKey) {
        PackageKey = other.PackageKey;
      }
      if (other.HasApplicationTag) {
        ApplicationTag = other.ApplicationTag;
      }
      payloadLevelAppBucket_.Add(other.payloadLevelAppBucket_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PackageKey = input.ReadInt32();
            break;
          }
          case 16: {
            ApplicationTag = input.ReadInt32();
            break;
          }
          case 26: {
            payloadLevelAppBucket_.AddEntriesFrom(input, _repeated_payloadLevelAppBucket_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StatCounters : pb::IMessage<StatCounters> {
    private static readonly pb::MessageParser<StatCounters> _parser = new pb::MessageParser<StatCounters>(() => new StatCounters());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatCounters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[262]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatCounters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatCounters(StatCounters other) : this() {
      _hasBits0 = other._hasBits0;
      networkProto_ = other.networkProto_;
      direction_ = other.direction_;
      counterData_ = other.counterData_ != null ? other.counterData_.Clone() : null;
      fgBg_ = other.fgBg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatCounters Clone() {
      return new StatCounters(this);
    }

    /// <summary>Field number for the "networkProto" field.</summary>
    public const int NetworkProtoFieldNumber = 1;
    private readonly static int NetworkProtoDefaultValue = 0;

    private int networkProto_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NetworkProto {
      get { if ((_hasBits0 & 1) != 0) { return networkProto_; } else { return NetworkProtoDefaultValue; } }
      set {
        _hasBits0 |= 1;
        networkProto_ = value;
      }
    }
    /// <summary>Gets whether the "networkProto" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNetworkProto {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "networkProto" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNetworkProto() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 2;
    private readonly static int DirectionDefaultValue = 0;

    private int direction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Direction {
      get { if ((_hasBits0 & 2) != 0) { return direction_; } else { return DirectionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        direction_ = value;
      }
    }
    /// <summary>Gets whether the "direction" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDirection {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "direction" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDirection() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "counterData" field.</summary>
    public const int CounterDataFieldNumber = 3;
    private global::GooglePlayStore.CounterData counterData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CounterData CounterData {
      get { return counterData_; }
      set {
        counterData_ = value;
      }
    }

    /// <summary>Field number for the "fgBg" field.</summary>
    public const int FgBgFieldNumber = 4;
    private readonly static int FgBgDefaultValue = 0;

    private int fgBg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FgBg {
      get { if ((_hasBits0 & 4) != 0) { return fgBg_; } else { return FgBgDefaultValue; } }
      set {
        _hasBits0 |= 4;
        fgBg_ = value;
      }
    }
    /// <summary>Gets whether the "fgBg" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFgBg {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "fgBg" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFgBg() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatCounters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatCounters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkProto != other.NetworkProto) return false;
      if (Direction != other.Direction) return false;
      if (!object.Equals(CounterData, other.CounterData)) return false;
      if (FgBg != other.FgBg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNetworkProto) hash ^= NetworkProto.GetHashCode();
      if (HasDirection) hash ^= Direction.GetHashCode();
      if (counterData_ != null) hash ^= CounterData.GetHashCode();
      if (HasFgBg) hash ^= FgBg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasNetworkProto) {
        output.WriteRawTag(8);
        output.WriteInt32(NetworkProto);
      }
      if (HasDirection) {
        output.WriteRawTag(16);
        output.WriteInt32(Direction);
      }
      if (counterData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CounterData);
      }
      if (HasFgBg) {
        output.WriteRawTag(32);
        output.WriteInt32(FgBg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasNetworkProto) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NetworkProto);
      }
      if (HasDirection) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Direction);
      }
      if (counterData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CounterData);
      }
      if (HasFgBg) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FgBg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatCounters other) {
      if (other == null) {
        return;
      }
      if (other.HasNetworkProto) {
        NetworkProto = other.NetworkProto;
      }
      if (other.HasDirection) {
        Direction = other.Direction;
      }
      if (other.counterData_ != null) {
        if (counterData_ == null) {
          CounterData = new global::GooglePlayStore.CounterData();
        }
        CounterData.MergeFrom(other.CounterData);
      }
      if (other.HasFgBg) {
        FgBg = other.FgBg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NetworkProto = input.ReadInt32();
            break;
          }
          case 16: {
            Direction = input.ReadInt32();
            break;
          }
          case 26: {
            if (counterData_ == null) {
              CounterData = new global::GooglePlayStore.CounterData();
            }
            input.ReadMessage(CounterData);
            break;
          }
          case 32: {
            FgBg = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UsageStatsExtensionProto : pb::IMessage<UsageStatsExtensionProto> {
    private static readonly pb::MessageParser<UsageStatsExtensionProto> _parser = new pb::MessageParser<UsageStatsExtensionProto>(() => new UsageStatsExtensionProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UsageStatsExtensionProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[263]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsageStatsExtensionProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsageStatsExtensionProto(UsageStatsExtensionProto other) : this() {
      dataUsage_ = other.dataUsage_ != null ? other.dataUsage_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsageStatsExtensionProto Clone() {
      return new UsageStatsExtensionProto(this);
    }

    /// <summary>Field number for the "dataUsage" field.</summary>
    public const int DataUsageFieldNumber = 1;
    private global::GooglePlayStore.AndroidDataUsageProto dataUsage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AndroidDataUsageProto DataUsage {
      get { return dataUsage_; }
      set {
        dataUsage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UsageStatsExtensionProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UsageStatsExtensionProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DataUsage, other.DataUsage)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dataUsage_ != null) hash ^= DataUsage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dataUsage_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DataUsage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dataUsage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataUsage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UsageStatsExtensionProto other) {
      if (other == null) {
        return;
      }
      if (other.dataUsage_ != null) {
        if (dataUsage_ == null) {
          DataUsage = new global::GooglePlayStore.AndroidDataUsageProto();
        }
        DataUsage.MergeFrom(other.DataUsage);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dataUsage_ == null) {
              DataUsage = new global::GooglePlayStore.AndroidDataUsageProto();
            }
            input.ReadMessage(DataUsage);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModifyLibraryRequest : pb::IMessage<ModifyLibraryRequest> {
    private static readonly pb::MessageParser<ModifyLibraryRequest> _parser = new pb::MessageParser<ModifyLibraryRequest>(() => new ModifyLibraryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyLibraryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[264]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyLibraryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyLibraryRequest(ModifyLibraryRequest other) : this() {
      libraryId_ = other.libraryId_;
      addPackageName_ = other.addPackageName_.Clone();
      removePackageName_ = other.removePackageName_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyLibraryRequest Clone() {
      return new ModifyLibraryRequest(this);
    }

    /// <summary>Field number for the "libraryId" field.</summary>
    public const int LibraryIdFieldNumber = 1;
    private readonly static string LibraryIdDefaultValue = "";

    private string libraryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LibraryId {
      get { return libraryId_ ?? LibraryIdDefaultValue; }
      set {
        libraryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "libraryId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLibraryId {
      get { return libraryId_ != null; }
    }
    /// <summary>Clears the value of the "libraryId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLibraryId() {
      libraryId_ = null;
    }

    /// <summary>Field number for the "addPackageName" field.</summary>
    public const int AddPackageNameFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_addPackageName_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> addPackageName_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AddPackageName {
      get { return addPackageName_; }
    }

    /// <summary>Field number for the "removePackageName" field.</summary>
    public const int RemovePackageNameFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_removePackageName_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> removePackageName_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RemovePackageName {
      get { return removePackageName_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyLibraryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyLibraryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LibraryId != other.LibraryId) return false;
      if(!addPackageName_.Equals(other.addPackageName_)) return false;
      if(!removePackageName_.Equals(other.removePackageName_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLibraryId) hash ^= LibraryId.GetHashCode();
      hash ^= addPackageName_.GetHashCode();
      hash ^= removePackageName_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasLibraryId) {
        output.WriteRawTag(10);
        output.WriteString(LibraryId);
      }
      addPackageName_.WriteTo(output, _repeated_addPackageName_codec);
      removePackageName_.WriteTo(output, _repeated_removePackageName_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasLibraryId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LibraryId);
      }
      size += addPackageName_.CalculateSize(_repeated_addPackageName_codec);
      size += removePackageName_.CalculateSize(_repeated_removePackageName_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyLibraryRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasLibraryId) {
        LibraryId = other.LibraryId;
      }
      addPackageName_.Add(other.addPackageName_);
      removePackageName_.Add(other.removePackageName_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LibraryId = input.ReadString();
            break;
          }
          case 18: {
            addPackageName_.AddEntriesFrom(input, _repeated_addPackageName_codec);
            break;
          }
          case 26: {
            removePackageName_.AddEntriesFrom(input, _repeated_removePackageName_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
