// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GooglePlay.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GooglePlayStore {

  /// <summary>Holder for reflection information generated from GooglePlay.proto</summary>
  public static partial class GooglePlayReflection {

    #region Descriptor
    /// <summary>File descriptor for GooglePlay.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GooglePlayReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBHb29nbGVQbGF5LnByb3RvEg9Hb29nbGVQbGF5U3RvcmUiywMKFkFuZHJv",
            "aWRBcHBEZWxpdmVyeURhdGESFAoMZG93bmxvYWRTaXplGAEgASgDEhEKCXNp",
            "Z25hdHVyZRgCIAEoCRITCgtkb3dubG9hZFVybBgDIAEoCRI4Cg5hZGRpdGlv",
            "bmFsRmlsZRgEIAMoCzIgLkdvb2dsZVBsYXlTdG9yZS5BcHBGaWxlTWV0YWRh",
            "dGESNwoSZG93bmxvYWRBdXRoQ29va2llGAUgAygLMhsuR29vZ2xlUGxheVN0",
            "b3JlLkh0dHBDb29raWUSFQoNZm9yd2FyZExvY2tlZBgGIAEoCBIVCg1yZWZ1",
            "bmRUaW1lb3V0GAcgASgDEhcKD3NlcnZlckluaXRpYXRlZBgIIAEoCBIlCh1w",
            "b3N0SW5zdGFsbFJlZnVuZFdpbmRvd01pbGxpcxgJIAEoAxIcChRpbW1lZGlh",
            "dGVTdGFydE5lZWRlZBgKIAEoCBI3CglwYXRjaERhdGEYCyABKAsyJC5Hb29n",
            "bGVQbGF5U3RvcmUuQW5kcm9pZEFwcFBhdGNoRGF0YRI7ChBlbmNyeXB0aW9u",
            "UGFyYW1zGAwgASgLMiEuR29vZ2xlUGxheVN0b3JlLkVuY3J5cHRpb25QYXJh",
            "bXMihQEKE0FuZHJvaWRBcHBQYXRjaERhdGESFwoPYmFzZVZlcnNpb25Db2Rl",
            "GAEgASgFEhUKDWJhc2VTaWduYXR1cmUYAiABKAkSEwoLZG93bmxvYWRVcmwY",
            "AyABKAkSEwoLcGF0Y2hGb3JtYXQYBCABKAUSFAoMbWF4UGF0Y2hTaXplGAUg",
            "ASgDIlsKD0FwcEZpbGVNZXRhZGF0YRIQCghmaWxlVHlwZRgBIAEoBRITCgt2",
            "ZXJzaW9uQ29kZRgCIAEoBRIMCgRzaXplGAMgASgDEhMKC2Rvd25sb2FkVXJs",
            "GAQgASgJIksKEEVuY3J5cHRpb25QYXJhbXMSDwoHdmVyc2lvbhgBIAEoBRIV",
            "Cg1lbmNyeXB0aW9uS2V5GAIgASgJEg8KB2htYWNLZXkYAyABKAkiKQoKSHR0",
            "cENvb2tpZRIMCgRuYW1lGAEgASgJEg0KBXZhbHVlGAIgASgJIq0CCgdBZGRy",
            "ZXNzEgwKBG5hbWUYASABKAkSFAoMYWRkcmVzc0xpbmUxGAIgASgJEhQKDGFk",
            "ZHJlc3NMaW5lMhgDIAEoCRIMCgRjaXR5GAQgASgJEg0KBXN0YXRlGAUgASgJ",
            "EhIKCnBvc3RhbENvZGUYBiABKAkSFQoNcG9zdGFsQ291bnRyeRgHIAEoCRIZ",
            "ChFkZXBlbmRlbnRMb2NhbGl0eRgIIAEoCRITCgtzb3J0aW5nQ29kZRgJIAEo",
            "CRIUCgxsYW5ndWFnZUNvZGUYCiABKAkSEwoLcGhvbmVOdW1iZXIYCyABKAkS",
            "EQoJaXNSZWR1Y2VkGAwgASgIEhEKCWZpcnN0TmFtZRgNIAEoCRIQCghsYXN0",
            "TmFtZRgOIAEoCRINCgVlbWFpbBgPIAEoCSJaCgpCb29rQXV0aG9yEgwKBG5h",
            "bWUYASABKAkSFwoPZGVwcmVjYXRlZFF1ZXJ5GAIgASgJEiUKBWRvY2lkGAMg",
            "ASgLMhYuR29vZ2xlUGxheVN0b3JlLkRvY2lkIoYDCgtCb29rRGV0YWlscxIt",
            "CgdzdWJqZWN0GAMgAygLMhwuR29vZ2xlUGxheVN0b3JlLkJvb2tTdWJqZWN0",
            "EhEKCXB1Ymxpc2hlchgEIAEoCRIXCg9wdWJsaWNhdGlvbkRhdGUYBSABKAkS",
            "DAoEaXNibhgGIAEoCRIVCg1udW1iZXJPZlBhZ2VzGAcgASgFEhAKCHN1YnRp",
            "dGxlGAggASgJEisKBmF1dGhvchgJIAMoCzIbLkdvb2dsZVBsYXlTdG9yZS5C",
            "b29rQXV0aG9yEhEKCXJlYWRlclVybBgKIAEoCRIXCg9kb3dubG9hZEVwdWJV",
            "cmwYCyABKAkSFgoOZG93bmxvYWRQZGZVcmwYDCABKAkSFwoPYWNzRXB1YlRv",
            "a2VuVXJsGA0gASgJEhYKDmFjc1BkZlRva2VuVXJsGA4gASgJEhUKDWVwdWJB",
            "dmFpbGFibGUYDyABKAgSFAoMcGRmQXZhaWxhYmxlGBAgASgIEhYKDmFib3V0",
            "VGhlQXV0aG9yGBEgASgJIj0KC0Jvb2tTdWJqZWN0EgwKBG5hbWUYASABKAkS",
            "DQoFcXVlcnkYAiABKAkSEQoJc3ViamVjdElkGAMgASgJIp4BCgpCcm93c2VM",
            "aW5rEgwKBG5hbWUYASABKAkSDwoHZGF0YVVybBgDIAEoCRIkCgRpY29uGAUg",
            "ASgLMhYuR29vZ2xlUGxheVN0b3JlLkltYWdlEksKGHVua25vd25DYXRlZ29y",
            "eUNvbnRhaW5lchgEIAEoCzIpLkdvb2dsZVBsYXlTdG9yZS5Vbmtub3duQ2F0",
            "ZWdvcnlDb250YWluZXIiXQoYVW5rbm93bkNhdGVnb3J5Q29udGFpbmVyEkEK",
            "E2NhdGVnb3J5SWRDb250YWluZXIYBSABKAsyJC5Hb29nbGVQbGF5U3RvcmUu",
            "Q2F0ZWdvcnlJZENvbnRhaW5lciIpChNDYXRlZ29yeUlkQ29udGFpbmVyEhIK",
            "CmNhdGVnb3J5SWQYBCABKAki1gEKDkJyb3dzZVJlc3BvbnNlEhMKC2NvbnRl",
            "bnRzVXJsGAEgASgJEhAKCHByb21vVXJsGAIgASgJEi0KCGNhdGVnb3J5GAMg",
            "AygLMhsuR29vZ2xlUGxheVN0b3JlLkJyb3dzZUxpbmsSLwoKYnJlYWRjcnVt",
            "YhgEIAMoCzIbLkdvb2dsZVBsYXlTdG9yZS5Ccm93c2VMaW5rEj0KEWNhdGVn",
            "b3J5Q29udGFpbmVyGAkgASgLMiIuR29vZ2xlUGxheVN0b3JlLkNhdGVnb3J5",
            "Q29udGFpbmVyIkIKEUNhdGVnb3J5Q29udGFpbmVyEi0KCGNhdGVnb3J5GAQg",
            "AygLMhsuR29vZ2xlUGxheVN0b3JlLkJyb3dzZUxpbmsivwIKEEFkZHJlc3ND",
            "aGFsbGVuZ2USHAoUcmVzcG9uc2VBZGRyZXNzUGFyYW0YASABKAkSHwoXcmVz",
            "cG9uc2VDaGVja2JveGVzUGFyYW0YAiABKAkSDQoFdGl0bGUYAyABKAkSFwoP",
            "ZGVzY3JpcHRpb25IdG1sGAQgASgJEi8KCGNoZWNrYm94GAUgAygLMh0uR29v",
            "Z2xlUGxheVN0b3JlLkZvcm1DaGVja2JveBIpCgdhZGRyZXNzGAYgASgLMhgu",
            "R29vZ2xlUGxheVN0b3JlLkFkZHJlc3MSPgoPZXJyb3JJbnB1dEZpZWxkGAcg",
            "AygLMiUuR29vZ2xlUGxheVN0b3JlLklucHV0VmFsaWRhdGlvbkVycm9yEhEK",
            "CWVycm9ySHRtbBgIIAEoCRIVCg1yZXF1aXJlZEZpZWxkGAkgAygFIu8BChdB",
            "dXRoZW50aWNhdGlvbkNoYWxsZW5nZRIaChJhdXRoZW50aWNhdGlvblR5cGUY",
            "ASABKAUSJwofcmVzcG9uc2VBdXRoZW50aWNhdGlvblR5cGVQYXJhbRgCIAEo",
            "CRIfChdyZXNwb25zZVJldHJ5Q291bnRQYXJhbRgDIAEoCRIVCg1waW5IZWFk",
            "ZXJUZXh0GAQgASgJEh4KFnBpbkRlc2NyaXB0aW9uVGV4dEh0bWwYBSABKAkS",
            "FgoOZ2FpYUhlYWRlclRleHQYBiABKAkSHwoXZ2FpYURlc2NyaXB0aW9uVGV4",
            "dEh0bWwYByABKAkiuAMKC0J1eVJlc3BvbnNlEkcKEHB1cmNoYXNlUmVzcG9u",
            "c2UYASABKAsyLS5Hb29nbGVQbGF5U3RvcmUuUHVyY2hhc2VOb3RpZmljYXRp",
            "b25SZXNwb25zZRIWCg5jb250aW51ZVZpYVVybBgIIAEoCRIZChFwdXJjaGFz",
            "ZVN0YXR1c1VybBgJIAEoCRIZChFjaGVja291dFNlcnZpY2VJZBgMIAEoCRId",
            "ChVjaGVja291dFRva2VuUmVxdWlyZWQYDSABKAgSFwoPYmFzZUNoZWNrb3V0",
            "VXJsGA4gASgJEhcKD3Rvc0NoZWNrYm94SHRtbBglIAMoCRIaChJpYWJQZXJt",
            "aXNzaW9uRXJyb3IYJiABKAUSRwoWcHVyY2hhc2VTdGF0dXNSZXNwb25zZRgn",
            "IAEoCzInLkdvb2dsZVBsYXlTdG9yZS5QdXJjaGFzZVN0YXR1c1Jlc3BvbnNl",
            "EhYKDnB1cmNoYXNlQ29va2llGC4gASgJEi0KCWNoYWxsZW5nZRgxIAEoCzIa",
            "Lkdvb2dsZVBsYXlTdG9yZS5DaGFsbGVuZ2USFQoNZG93bmxvYWRUb2tlbhg3",
            "IAEoCSKTAQoJQ2hhbGxlbmdlEjsKEGFkZHJlc3NDaGFsbGVuZ2UYASABKAsy",
            "IS5Hb29nbGVQbGF5U3RvcmUuQWRkcmVzc0NoYWxsZW5nZRJJChdhdXRoZW50",
            "aWNhdGlvbkNoYWxsZW5nZRgCIAEoCzIoLkdvb2dsZVBsYXlTdG9yZS5BdXRo",
            "ZW50aWNhdGlvbkNoYWxsZW5nZSJGCgxGb3JtQ2hlY2tib3gSEwoLZGVzY3Jp",
            "cHRpb24YASABKAkSDwoHY2hlY2tlZBgCIAEoCBIQCghyZXF1aXJlZBgDIAEo",
            "CCJ8CghMaW5lSXRlbRIMCgRuYW1lGAEgASgJEhMKC2Rlc2NyaXB0aW9uGAIg",
            "ASgJEiUKBW9mZmVyGAMgASgLMhYuR29vZ2xlUGxheVN0b3JlLk9mZmVyEiYK",
            "BmFtb3VudBgEIAEoCzIWLkdvb2dsZVBsYXlTdG9yZS5Nb25leSJGCgVNb25l",
            "eRIOCgZtaWNyb3MYASABKAMSFAoMY3VycmVuY3lDb2RlGAIgASgJEhcKD2Zv",
            "cm1hdHRlZEFtb3VudBgDIAEoCSKQAQocUHVyY2hhc2VOb3RpZmljYXRpb25S",
            "ZXNwb25zZRIOCgZzdGF0dXMYASABKAUSLQoJZGVidWdJbmZvGAIgASgLMhou",
            "R29vZ2xlUGxheVN0b3JlLkRlYnVnSW5mbxIdChVsb2NhbGl6ZWRFcnJvck1l",
            "c3NhZ2UYAyABKAkSEgoKcHVyY2hhc2VJZBgEIAEoCSKpAgoWUHVyY2hhc2VT",
            "dGF0dXNSZXNwb25zZRIOCgZzdGF0dXMYASABKAUSEQoJc3RhdHVzTXNnGAIg",
            "ASgJEhMKC3N0YXR1c1RpdGxlGAMgASgJEhQKDGJyaWVmTWVzc2FnZRgEIAEo",
            "CRIPCgdpbmZvVXJsGAUgASgJEjUKDWxpYnJhcnlVcGRhdGUYBiABKAsyHi5H",
            "b29nbGVQbGF5U3RvcmUuTGlicmFyeVVwZGF0ZRI3ChJyZWplY3RlZEluc3Ry",
            "dW1lbnQYByABKAsyGy5Hb29nbGVQbGF5U3RvcmUuSW5zdHJ1bWVudBJACg9h",
            "cHBEZWxpdmVyeURhdGEYCCABKAsyJy5Hb29nbGVQbGF5U3RvcmUuQW5kcm9p",
            "ZEFwcERlbGl2ZXJ5RGF0YSJkChBEZWxpdmVyeVJlc3BvbnNlEg4KBnN0YXR1",
            "cxgBIAEoBRJACg9hcHBEZWxpdmVyeURhdGEYAiABKAsyJy5Hb29nbGVQbGF5",
            "U3RvcmUuQW5kcm9pZEFwcERlbGl2ZXJ5RGF0YSI8CgVEb2NpZBIUCgxiYWNr",
            "ZW5kRG9jaWQYASABKAkSDAoEdHlwZRgCIAEoBRIPCgdiYWNrZW5kGAMgASgF",
            "Ij4KB0luc3RhbGwSEQoJYW5kcm9pZElkGAEgASgGEg8KB3ZlcnNpb24YAiAB",
            "KAUSDwoHYnVuZGxlZBgDIAEoCCKwAwoFT2ZmZXISDgoGbWljcm9zGAEgASgD",
            "EhQKDGN1cnJlbmN5Q29kZRgCIAEoCRIXCg9mb3JtYXR0ZWRBbW91bnQYAyAB",
            "KAkSLgoOY29udmVydGVkUHJpY2UYBCADKAsyFi5Hb29nbGVQbGF5U3RvcmUu",
            "T2ZmZXISHAoUY2hlY2tvdXRGbG93UmVxdWlyZWQYBSABKAgSFwoPZnVsbFBy",
            "aWNlTWljcm9zGAYgASgDEhsKE2Zvcm1hdHRlZEZ1bGxBbW91bnQYByABKAkS",
            "EQoJb2ZmZXJUeXBlGAggASgFEjEKC3JlbnRhbFRlcm1zGAkgASgLMhwuR29v",
            "Z2xlUGxheVN0b3JlLlJlbnRhbFRlcm1zEhIKCm9uU2FsZURhdGUYCiABKAMS",
            "FgoOcHJvbW90aW9uTGFiZWwYCyADKAkSPQoRc3Vic2NyaXB0aW9uVGVybXMY",
            "DCABKAsyIi5Hb29nbGVQbGF5U3RvcmUuU3Vic2NyaXB0aW9uVGVybXMSFQoN",
            "Zm9ybWF0dGVkTmFtZRgNIAEoCRIcChRmb3JtYXR0ZWREZXNjcmlwdGlvbhgO",
            "IAEoCSKxAQoNT3duZXJzaGlwSW5mbxIfChdpbml0aWF0aW9uVGltZXN0YW1w",
            "TXNlYxgBIAEoAxIfChd2YWxpZFVudGlsVGltZXN0YW1wTXNlYxgCIAEoAxIU",
            "CgxhdXRvUmVuZXdpbmcYAyABKAgSIgoacmVmdW5kVGltZW91dFRpbWVzdGFt",
            "cE1zZWMYBCABKAMSJAoccG9zdERlbGl2ZXJ5UmVmdW5kV2luZG93TXNlYxgF",
            "IAEoAyJICgtSZW50YWxUZXJtcxIaChJncmFudFBlcmlvZFNlY29uZHMYASAB",
            "KAUSHQoVYWN0aXZhdGVQZXJpb2RTZWNvbmRzGAIgASgFInsKEVN1YnNjcmlw",
            "dGlvblRlcm1zEjQKD3JlY3VycmluZ1BlcmlvZBgBIAEoCzIbLkdvb2dsZVBs",
            "YXlTdG9yZS5UaW1lUGVyaW9kEjAKC3RyaWFsUGVyaW9kGAIgASgLMhsuR29v",
            "Z2xlUGxheVN0b3JlLlRpbWVQZXJpb2QiKQoKVGltZVBlcmlvZBIMCgR1bml0",
            "GAEgASgFEg0KBWNvdW50GAIgASgFIkcKEkJpbGxpbmdBZGRyZXNzU3BlYxIa",
            "ChJiaWxsaW5nQWRkcmVzc1R5cGUYASABKAUSFQoNcmVxdWlyZWRGaWVsZBgC",
            "IAMoBSI+ChlDYXJyaWVyQmlsbGluZ0NyZWRlbnRpYWxzEg0KBXZhbHVlGAEg",
            "ASgJEhIKCmV4cGlyYXRpb24YAiABKAMi2QIKGENhcnJpZXJCaWxsaW5nSW5z",
            "dHJ1bWVudBIVCg1pbnN0cnVtZW50S2V5GAEgASgJEhMKC2FjY291bnRUeXBl",
            "GAIgASgJEhQKDGN1cnJlbmN5Q29kZRgDIAEoCRIYChB0cmFuc2FjdGlvbkxp",
            "bWl0GAQgASgDEhwKFHN1YnNjcmliZXJJZGVudGlmaWVyGAUgASgJEkkKF2Vu",
            "Y3J5cHRlZFN1YnNjcmliZXJJbmZvGAYgASgLMiguR29vZ2xlUGxheVN0b3Jl",
            "LkVuY3J5cHRlZFN1YnNjcmliZXJJbmZvEj8KC2NyZWRlbnRpYWxzGAcgASgL",
            "MiouR29vZ2xlUGxheVN0b3JlLkNhcnJpZXJCaWxsaW5nQ3JlZGVudGlhbHMS",
            "NwoSYWNjZXB0ZWRDYXJyaWVyVG9zGAggASgLMhsuR29vZ2xlUGxheVN0b3Jl",
            "LkNhcnJpZXJUb3Mi6gEKHkNhcnJpZXJCaWxsaW5nSW5zdHJ1bWVudFN0YXR1",
            "cxIvCgpjYXJyaWVyVG9zGAEgASgLMhsuR29vZ2xlUGxheVN0b3JlLkNhcnJp",
            "ZXJUb3MSGwoTYXNzb2NpYXRpb25SZXF1aXJlZBgCIAEoCBIYChBwYXNzd29y",
            "ZFJlcXVpcmVkGAMgASgIEj4KFWNhcnJpZXJQYXNzd29yZFByb21wdBgEIAEo",
            "CzIfLkdvb2dsZVBsYXlTdG9yZS5QYXNzd29yZFByb21wdBISCgphcGlWZXJz",
            "aW9uGAUgASgFEgwKBG5hbWUYBiABKAkirgEKCkNhcnJpZXJUb3MSMAoGZGNi",
            "VG9zGAEgASgLMiAuR29vZ2xlUGxheVN0b3JlLkNhcnJpZXJUb3NFbnRyeRIw",
            "CgZwaWlUb3MYAiABKAsyIC5Hb29nbGVQbGF5U3RvcmUuQ2FycmllclRvc0Vu",
            "dHJ5Eh0KFW5lZWRzRGNiVG9zQWNjZXB0YW5jZRgDIAEoCBIdChVuZWVkc1Bp",
            "aVRvc0FjY2VwdGFuY2UYBCABKAgiLwoPQ2FycmllclRvc0VudHJ5EgsKA3Vy",
            "bBgBIAEoCRIPCgd2ZXJzaW9uGAIgASgJIrIBChRDcmVkaXRDYXJkSW5zdHJ1",
            "bWVudBIMCgR0eXBlGAEgASgFEhQKDGVzY3Jvd0hhbmRsZRgCIAEoCRISCgps",
            "YXN0RGlnaXRzGAMgASgJEhcKD2V4cGlyYXRpb25Nb250aBgEIAEoBRIWCg5l",
            "eHBpcmF0aW9uWWVhchgFIAEoBRIxCg5lc2Nyb3dFZmVQYXJhbRgGIAMoCzIZ",
            "Lkdvb2dsZVBsYXlTdG9yZS5FZmVQYXJhbSImCghFZmVQYXJhbRILCgNrZXkY",
            "ASABKAUSDQoFdmFsdWUYAiABKAkiQAoUSW5wdXRWYWxpZGF0aW9uRXJyb3IS",
            "EgoKaW5wdXRGaWVsZBgBIAEoBRIUCgxlcnJvck1lc3NhZ2UYAiABKAkikgMK",
            "Ckluc3RydW1lbnQSFAoMaW5zdHJ1bWVudElkGAEgASgJEjAKDmJpbGxpbmdB",
            "ZGRyZXNzGAIgASgLMhguR29vZ2xlUGxheVN0b3JlLkFkZHJlc3MSOQoKY3Jl",
            "ZGl0Q2FyZBgDIAEoCzIlLkdvb2dsZVBsYXlTdG9yZS5DcmVkaXRDYXJkSW5z",
            "dHJ1bWVudBJBCg5jYXJyaWVyQmlsbGluZxgEIAEoCzIpLkdvb2dsZVBsYXlT",
            "dG9yZS5DYXJyaWVyQmlsbGluZ0luc3RydW1lbnQSPwoSYmlsbGluZ0FkZHJl",
            "c3NTcGVjGAUgASgLMiMuR29vZ2xlUGxheVN0b3JlLkJpbGxpbmdBZGRyZXNz",
            "U3BlYxIYChBpbnN0cnVtZW50RmFtaWx5GAYgASgFEk0KFGNhcnJpZXJCaWxs",
            "aW5nU3RhdHVzGAcgASgLMi8uR29vZ2xlUGxheVN0b3JlLkNhcnJpZXJCaWxs",
            "aW5nSW5zdHJ1bWVudFN0YXR1cxIUCgxkaXNwbGF5VGl0bGUYCCABKAkiOwoO",
            "UGFzc3dvcmRQcm9tcHQSDgoGcHJvbXB0GAEgASgJEhkKEWZvcmdvdFBhc3N3",
            "b3JkVXJsGAIgASgJIpIBChFDb250YWluZXJNZXRhZGF0YRIRCglicm93c2VV",
            "cmwYASABKAkSEwoLbmV4dFBhZ2VVcmwYAiABKAkSEQoJcmVsZXZhbmNlGAMg",
            "ASgBEhgKEGVzdGltYXRlZFJlc3VsdHMYBCABKAMSFwoPYW5hbHl0aWNzQ29v",
            "a2llGAUgASgJEg8KB29yZGVyZWQYBiABKAgiHAoJRGVidWdJbmZvEg8KB21l",
            "c3NhZ2UYASADKAkiNwoQQnVsa0RldGFpbHNFbnRyeRIjCgNkb2MYASABKAsy",
            "Fi5Hb29nbGVQbGF5U3RvcmUuRG9jVjIiPQoSQnVsa0RldGFpbHNSZXF1ZXN0",
            "Eg0KBWRvY2lkGAEgAygJEhgKEGluY2x1ZGVDaGlsZERvY3MYAiABKAgiRwoT",
            "QnVsa0RldGFpbHNSZXNwb25zZRIwCgVlbnRyeRgBIAMoCzIhLkdvb2dsZVBs",
            "YXlTdG9yZS5CdWxrRGV0YWlsc0VudHJ5IuABCg9EZXRhaWxzUmVzcG9uc2US",
            "JQoFZG9jVjEYASABKAsyFi5Hb29nbGVQbGF5U3RvcmUuRG9jVjESFwoPYW5h",
            "bHl0aWNzQ29va2llGAIgASgJEisKCnVzZXJSZXZpZXcYAyABKAsyFy5Hb29n",
            "bGVQbGF5U3RvcmUuUmV2aWV3EiUKBWRvY1YyGAQgASgLMhYuR29vZ2xlUGxh",
            "eVN0b3JlLkRvY1YyEhIKCmZvb3Rlckh0bWwYBSABKAkSJQoFYmFkZ2UYByAD",
            "KAsyFi5Hb29nbGVQbGF5U3RvcmUuQmFkZ2UiJwoFQmFkZ2USDQoFbGFiZWwY",
            "ASABKAkSDwoHbWVzc2FnZRgLIAEoCSK1AwoYRGV2aWNlQ29uZmlndXJhdGlv",
            "blByb3RvEhMKC3RvdWNoU2NyZWVuGAEgASgFEhAKCGtleWJvYXJkGAIgASgF",
            "EhIKCm5hdmlnYXRpb24YAyABKAUSFAoMc2NyZWVuTGF5b3V0GAQgASgFEhcK",
            "D2hhc0hhcmRLZXlib2FyZBgFIAEoCBIcChRoYXNGaXZlV2F5TmF2aWdhdGlv",
            "bhgGIAEoCBIVCg1zY3JlZW5EZW5zaXR5GAcgASgFEhMKC2dsRXNWZXJzaW9u",
            "GAggASgFEhsKE3N5c3RlbVNoYXJlZExpYnJhcnkYCSADKAkSHgoWc3lzdGVt",
            "QXZhaWxhYmxlRmVhdHVyZRgKIAMoCRIWCg5uYXRpdmVQbGF0Zm9ybRgLIAMo",
            "CRITCgtzY3JlZW5XaWR0aBgMIAEoBRIUCgxzY3JlZW5IZWlnaHQYDSABKAUS",
            "HQoVc3lzdGVtU3VwcG9ydGVkTG9jYWxlGA4gAygJEhMKC2dsRXh0ZW5zaW9u",
            "GA8gAygJEhMKC2RldmljZUNsYXNzGBAgASgFEhwKFG1heEFwa0Rvd25sb2Fk",
            "U2l6ZU1iGBEgASgFIs8FCghEb2N1bWVudBIlCgVkb2NpZBgBIAEoCzIWLkdv",
            "b2dsZVBsYXlTdG9yZS5Eb2NpZBIqCgpmZXRjaERvY2lkGAIgASgLMhYuR29v",
            "Z2xlUGxheVN0b3JlLkRvY2lkEisKC3NhbXBsZURvY2lkGAMgASgLMhYuR29v",
            "Z2xlUGxheVN0b3JlLkRvY2lkEg0KBXRpdGxlGAQgASgJEgsKA3VybBgFIAEo",
            "CRIPCgdzbmlwcGV0GAYgAygJEi8KD3ByaWNlRGVwcmVjYXRlZBgHIAEoCzIW",
            "Lkdvb2dsZVBsYXlTdG9yZS5PZmZlchIzCgxhdmFpbGFiaWxpdHkYCSABKAsy",
            "HS5Hb29nbGVQbGF5U3RvcmUuQXZhaWxhYmlsaXR5EiUKBWltYWdlGAogAygL",
            "MhYuR29vZ2xlUGxheVN0b3JlLkltYWdlEigKBWNoaWxkGAsgAygLMhkuR29v",
            "Z2xlUGxheVN0b3JlLkRvY3VtZW50EjkKD2FnZ3JlZ2F0ZVJhdGluZxgNIAEo",
            "CzIgLkdvb2dsZVBsYXlTdG9yZS5BZ2dyZWdhdGVSYXRpbmcSJQoFb2ZmZXIY",
            "DiADKAsyFi5Hb29nbGVQbGF5U3RvcmUuT2ZmZXISOgoRdHJhbnNsYXRlZFNu",
            "aXBwZXQYDyADKAsyHy5Hb29nbGVQbGF5U3RvcmUuVHJhbnNsYXRlZFRleHQS",
            "OQoPZG9jdW1lbnRWYXJpYW50GBAgAygLMiAuR29vZ2xlUGxheVN0b3JlLkRv",
            "Y3VtZW50VmFyaWFudBISCgpjYXRlZ29yeUlkGBEgAygJEi0KCmRlY29yYXRp",
            "b24YEiADKAsyGS5Hb29nbGVQbGF5U3RvcmUuRG9jdW1lbnQSKQoGcGFyZW50",
            "GBMgAygLMhkuR29vZ2xlUGxheVN0b3JlLkRvY3VtZW50EhgKEHByaXZhY3lQ",
            "b2xpY3lVcmwYFCABKAki0QIKD0RvY3VtZW50VmFyaWFudBIVCg12YXJpYXRp",
            "b25UeXBlGAEgASgFEiMKBHJ1bGUYAiABKAsyFS5Hb29nbGVQbGF5U3RvcmUu",
            "UnVsZRINCgV0aXRsZRgDIAEoCRIPCgdzbmlwcGV0GAQgAygJEhUKDXJlY2Vu",
            "dENoYW5nZXMYBSABKAkSOAoPYXV0b1RyYW5zbGF0aW9uGAYgAygLMh8uR29v",
            "Z2xlUGxheVN0b3JlLlRyYW5zbGF0ZWRUZXh0EiUKBW9mZmVyGAcgAygLMhYu",
            "R29vZ2xlUGxheVN0b3JlLk9mZmVyEhEKCWNoYW5uZWxJZBgJIAEoAxIoCgVj",
            "aGlsZBgKIAMoCzIZLkdvb2dsZVBsYXlTdG9yZS5Eb2N1bWVudBItCgpkZWNv",
            "cmF0aW9uGAsgAygLMhkuR29vZ2xlUGxheVN0b3JlLkRvY3VtZW50IsEBCgVJ",
            "bWFnZRIRCglpbWFnZVR5cGUYASABKAUSEAoIaW1hZ2VVcmwYBSABKAkSGAoQ",
            "YWx0VGV4dExvY2FsaXplZBgGIAEoCRIRCglzZWN1cmVVcmwYByABKAkSGgoS",
            "cG9zaXRpb25JblNlcXVlbmNlGAggASgFEh4KFnN1cHBvcnRzRmlmZVVybE9w",
            "dGlvbnMYCSABKAgSDQoFY29sb3IYDyABKAkSGwoTc2NyZWVuc2hvdFNldE51",
            "bWJlchgVIAEoBSJKCg5UcmFuc2xhdGVkVGV4dBIMCgR0ZXh0GAEgASgJEhQK",
            "DHNvdXJjZUxvY2FsZRgCIAEoCRIUCgx0YXJnZXRMb2NhbGUYAyABKAkieQoL",
            "UGx1c09uZURhdGESEQoJc2V0QnlVc2VyGAEgASgIEg0KBXRvdGFsGAIgASgD",
            "EhQKDGNpcmNsZXNUb3RhbBgDIAEoAxIyCg1jaXJjbGVzUGVvcGxlGAQgAygL",
            "MhsuR29vZ2xlUGxheVN0b3JlLlBsdXNQZXJzb24iOgoKUGx1c1BlcnNvbhIT",
            "CgtkaXNwbGF5TmFtZRgCIAEoCRIXCg9wcm9maWxlSW1hZ2VVcmwYBCABKAki",
            "gwEKDEFsYnVtRGV0YWlscxIMCgRuYW1lGAEgASgJEi4KB2RldGFpbHMYAiAB",
            "KAsyHS5Hb29nbGVQbGF5U3RvcmUuTXVzaWNEZXRhaWxzEjUKDWRpc3BsYXlB",
            "cnRpc3QYAyABKAsyHi5Hb29nbGVQbGF5U3RvcmUuQXJ0aXN0RGV0YWlscyL2",
            "BAoKQXBwRGV0YWlscxIVCg1kZXZlbG9wZXJOYW1lGAEgASgJEhoKEm1ham9y",
            "VmVyc2lvbk51bWJlchgCIAEoBRITCgt2ZXJzaW9uQ29kZRgDIAEoBRIVCg12",
            "ZXJzaW9uU3RyaW5nGAQgASgJEg0KBXRpdGxlGAUgASgJEhMKC2FwcENhdGVn",
            "b3J5GAcgAygJEhUKDWNvbnRlbnRSYXRpbmcYCCABKAUSGAoQaW5zdGFsbGF0",
            "aW9uU2l6ZRgJIAEoAxISCgpwZXJtaXNzaW9uGAogAygJEhYKDmRldmVsb3Bl",
            "ckVtYWlsGAsgASgJEhgKEGRldmVsb3BlcldlYnNpdGUYDCABKAkSFAoMbnVt",
            "RG93bmxvYWRzGA0gASgJEhMKC3BhY2thZ2VOYW1lGA4gASgJEhkKEXJlY2Vu",
            "dENoYW5nZXNIdG1sGA8gASgJEhIKCnVwbG9hZERhdGUYECABKAkSKwoEZmls",
            "ZRgRIAMoCzIdLkdvb2dsZVBsYXlTdG9yZS5GaWxlTWV0YWRhdGESDwoHYXBw",
            "VHlwZRgSIAEoCRIQCgh1bnN0YWJsZRgVIAEoCBITCgtjb250YWluc0Fkcxge",
            "IAEoCRIzCgxkZXBlbmRlbmNpZXMYIiABKAsyHS5Hb29nbGVQbGF5U3RvcmUu",
            "RGVwZW5kZW5jaWVzEj8KEnRlc3RpbmdQcm9ncmFtSW5mbxgjIAEoCzIjLkdv",
            "b2dsZVBsYXlTdG9yZS5UZXN0aW5nUHJvZ3JhbUluZm8SOQoPZWFybHlBY2Nl",
            "c3NJbmZvGCQgASgLMiAuR29vZ2xlUGxheVN0b3JlLkVhcmx5QWNjZXNzSW5m",
            "byJ1CgxEZXBlbmRlbmNpZXMSEAoIdW5rbm93bjEYASABKAUSEAoIdW5rbm93",
            "bjIYAiABKAMSLwoKZGVwZW5kZW5jeRgDIAMoCzIbLkdvb2dsZVBsYXlTdG9y",
            "ZS5EZXBlbmRlbmN5EhAKCHVua25vd24zGAQgASgFIkQKCkRlcGVuZGVuY3kS",
            "EwoLcGFja2FnZU5hbWUYASABKAkSDwoHdmVyc2lvbhgCIAEoBRIQCgh1bmtu",
            "b3duNBgEIAEoBSJaChJUZXN0aW5nUHJvZ3JhbUluZm8SEgoKc3Vic2NyaWJl",
            "ZBgCIAEoCBITCgtzdWJzY3JpYmVkMRgDIAEoCBIbChN0ZXN0aW5nUHJvZ3Jh",
            "bUVtYWlsGAUgASgJIiAKD0Vhcmx5QWNjZXNzSW5mbxINCgVlbWFpbBgDIAEo",
            "CSJuCg1BcnRpc3REZXRhaWxzEhIKCmRldGFpbHNVcmwYASABKAkSDAoEbmFt",
            "ZRgCIAEoCRI7Cg1leHRlcm5hbExpbmtzGAMgASgLMiQuR29vZ2xlUGxheVN0",
            "b3JlLkFydGlzdEV4dGVybmFsTGlua3MiYgoTQXJ0aXN0RXh0ZXJuYWxMaW5r",
            "cxISCgp3ZWJzaXRlVXJsGAEgAygJEhwKFGdvb2dsZVBsdXNQcm9maWxlVXJs",
            "GAIgASgJEhkKEXlvdXR1YmVDaGFubmVsVXJsGAMgASgJIvYECg9Eb2N1bWVu",
            "dERldGFpbHMSLwoKYXBwRGV0YWlscxgBIAEoCzIbLkdvb2dsZVBsYXlTdG9y",
            "ZS5BcHBEZXRhaWxzEjMKDGFsYnVtRGV0YWlscxgCIAEoCzIdLkdvb2dsZVBs",
            "YXlTdG9yZS5BbGJ1bURldGFpbHMSNQoNYXJ0aXN0RGV0YWlscxgDIAEoCzIe",
            "Lkdvb2dsZVBsYXlTdG9yZS5BcnRpc3REZXRhaWxzEjEKC3NvbmdEZXRhaWxz",
            "GAQgASgLMhwuR29vZ2xlUGxheVN0b3JlLlNvbmdEZXRhaWxzEjEKC2Jvb2tE",
            "ZXRhaWxzGAUgASgLMhwuR29vZ2xlUGxheVN0b3JlLkJvb2tEZXRhaWxzEjMK",
            "DHZpZGVvRGV0YWlscxgGIAEoCzIdLkdvb2dsZVBsYXlTdG9yZS5WaWRlb0Rl",
            "dGFpbHMSQQoTc3Vic2NyaXB0aW9uRGV0YWlscxgHIAEoCzIkLkdvb2dsZVBs",
            "YXlTdG9yZS5TdWJzY3JpcHRpb25EZXRhaWxzEjkKD21hZ2F6aW5lRGV0YWls",
            "cxgIIAEoCzIgLkdvb2dsZVBsYXlTdG9yZS5NYWdhemluZURldGFpbHMSNQoN",
            "dHZTaG93RGV0YWlscxgJIAEoCzIeLkdvb2dsZVBsYXlTdG9yZS5UdlNob3dE",
            "ZXRhaWxzEjkKD3R2U2Vhc29uRGV0YWlscxgKIAEoCzIgLkdvb2dsZVBsYXlT",
            "dG9yZS5UdlNlYXNvbkRldGFpbHMSOwoQdHZFcGlzb2RlRGV0YWlscxgLIAEo",
            "CzIhLkdvb2dsZVBsYXlTdG9yZS5UdkVwaXNvZGVEZXRhaWxzIkMKDEZpbGVN",
            "ZXRhZGF0YRIQCghmaWxlVHlwZRgBIAEoBRITCgt2ZXJzaW9uQ29kZRgCIAEo",
            "BRIMCgRzaXplGAMgASgDIpQBCg9NYWdhemluZURldGFpbHMSGAoQcGFyZW50",
            "RGV0YWlsc1VybBgBIAEoCRIpCiFkZXZpY2VBdmFpbGFiaWxpdHlEZXNjcmlw",
            "dGlvbkh0bWwYAiABKAkSFgoOcHN2RGVzY3JpcHRpb24YAyABKAkSJAocZGVs",
            "aXZlcnlGcmVxdWVuY3lEZXNjcmlwdGlvbhgEIAEoCSLLAQoMTXVzaWNEZXRh",
            "aWxzEhEKCWNlbnNvcmluZxgBIAEoBRITCgtkdXJhdGlvblNlYxgCIAEoBRIb",
            "ChNvcmlnaW5hbFJlbGVhc2VEYXRlGAMgASgJEg0KBWxhYmVsGAQgASgJEi4K",
            "BmFydGlzdBgFIAMoCzIeLkdvb2dsZVBsYXlTdG9yZS5BcnRpc3REZXRhaWxz",
            "Eg0KBWdlbnJlGAYgAygJEhMKC3JlbGVhc2VEYXRlGAcgASgJEhMKC3JlbGVh",
            "c2VUeXBlGAggAygFIr4BCgtTb25nRGV0YWlscxIMCgRuYW1lGAEgASgJEi4K",
            "B2RldGFpbHMYAiABKAsyHS5Hb29nbGVQbGF5U3RvcmUuTXVzaWNEZXRhaWxz",
            "EhEKCWFsYnVtTmFtZRgDIAEoCRITCgt0cmFja051bWJlchgEIAEoBRISCgpw",
            "cmV2aWV3VXJsGAUgASgJEjUKDWRpc3BsYXlBcnRpc3QYBiABKAsyHi5Hb29n",
            "bGVQbGF5U3RvcmUuQXJ0aXN0RGV0YWlscyIxChNTdWJzY3JpcHRpb25EZXRh",
            "aWxzEhoKEnN1YnNjcmlwdGlvblBlcmlvZBgBIAEoBSJlCgdUcmFpbGVyEhEK",
            "CXRyYWlsZXJJZBgBIAEoCRINCgV0aXRsZRgCIAEoCRIUCgx0aHVtYm5haWxV",
            "cmwYAyABKAkSEAoId2F0Y2hVcmwYBCABKAkSEAoIZHVyYXRpb24YBSABKAki",
            "VwoQVHZFcGlzb2RlRGV0YWlscxIYChBwYXJlbnREZXRhaWxzVXJsGAEgASgJ",
            "EhQKDGVwaXNvZGVJbmRleBgCIAEoBRITCgtyZWxlYXNlRGF0ZRgDIAEoCSJq",
            "Cg9UdlNlYXNvbkRldGFpbHMSGAoQcGFyZW50RGV0YWlsc1VybBgBIAEoCRIT",
            "CgtzZWFzb25JbmRleBgCIAEoBRITCgtyZWxlYXNlRGF0ZRgDIAEoCRITCgti",
            "cm9hZGNhc3RlchgEIAEoCSJdCg1UdlNob3dEZXRhaWxzEhMKC3NlYXNvbkNv",
            "dW50GAEgASgFEhEKCXN0YXJ0WWVhchgCIAEoBRIPCgdlbmRZZWFyGAMgASgF",
            "EhMKC2Jyb2FkY2FzdGVyGAQgASgJIj8KC1ZpZGVvQ3JlZGl0EhIKCmNyZWRp",
            "dFR5cGUYASABKAUSDgoGY3JlZGl0GAIgASgJEgwKBG5hbWUYAyADKAkiiwIK",
            "DFZpZGVvRGV0YWlscxIsCgZjcmVkaXQYASADKAsyHC5Hb29nbGVQbGF5U3Rv",
            "cmUuVmlkZW9DcmVkaXQSEAoIZHVyYXRpb24YAiABKAkSEwoLcmVsZWFzZURh",
            "dGUYAyABKAkSFQoNY29udGVudFJhdGluZxgEIAEoCRINCgVsaWtlcxgFIAEo",
            "AxIQCghkaXNsaWtlcxgGIAEoAxINCgVnZW5yZRgHIAMoCRIpCgd0cmFpbGVy",
            "GAggAygLMhguR29vZ2xlUGxheVN0b3JlLlRyYWlsZXISNAoKcmVudGFsVGVy",
            "bRgJIAMoCzIgLkdvb2dsZVBsYXlTdG9yZS5WaWRlb1JlbnRhbFRlcm0iVQoP",
            "VmlkZW9SZW50YWxUZXJtEhEKCW9mZmVyVHlwZRgBIAEoBRIZChFvZmZlckFi",
            "YnJldmlhdGlvbhgCIAEoCRIUCgxyZW50YWxIZWFkZXIYAyABKAkiiQIKBkJ1",
            "Y2tldBIoCghkb2N1bWVudBgBIAMoCzIWLkdvb2dsZVBsYXlTdG9yZS5Eb2NW",
            "MRITCgttdWx0aUNvcnB1cxgCIAEoCBINCgV0aXRsZRgDIAEoCRIPCgdpY29u",
            "VXJsGAQgASgJEhcKD2Z1bGxDb250ZW50c1VybBgFIAEoCRIRCglyZWxldmFu",
            "Y2UYBiABKAESGAoQZXN0aW1hdGVkUmVzdWx0cxgHIAEoAxIXCg9hbmFseXRp",
            "Y3NDb29raWUYCCABKAkSGwoTZnVsbENvbnRlbnRzTGlzdFVybBgJIAEoCRIT",
            "CgtuZXh0UGFnZVVybBgKIAEoCRIPCgdvcmRlcmVkGAsgASgIIlwKDExpc3RS",
            "ZXNwb25zZRInCgZidWNrZXQYASADKAsyFy5Hb29nbGVQbGF5U3RvcmUuQnVj",
            "a2V0EiMKA2RvYxgCIAMoCzIWLkdvb2dsZVBsYXlTdG9yZS5Eb2NWMiLEAwoF",
            "RG9jVjESLAoJZmluc2t5RG9jGAEgASgLMhkuR29vZ2xlUGxheVN0b3JlLkRv",
            "Y3VtZW50Eg0KBWRvY2lkGAIgASgJEhIKCmRldGFpbHNVcmwYAyABKAkSEgoK",
            "cmV2aWV3c1VybBgEIAEoCRIWCg5yZWxhdGVkTGlzdFVybBgFIAEoCRIVCg1t",
            "b3JlQnlMaXN0VXJsGAYgASgJEhAKCHNoYXJlVXJsGAcgASgJEg8KB2NyZWF0",
            "b3IYCCABKAkSMQoHZGV0YWlscxgJIAEoCzIgLkdvb2dsZVBsYXlTdG9yZS5E",
            "b2N1bWVudERldGFpbHMSFwoPZGVzY3JpcHRpb25IdG1sGAogASgJEhgKEHJl",
            "bGF0ZWRCcm93c2VVcmwYCyABKAkSFwoPbW9yZUJ5QnJvd3NlVXJsGAwgASgJ",
            "EhUKDXJlbGF0ZWRIZWFkZXIYDSABKAkSFAoMbW9yZUJ5SGVhZGVyGA4gASgJ",
            "Eg0KBXRpdGxlGA8gASgJEjEKC3BsdXNPbmVEYXRhGBAgASgLMhwuR29vZ2xl",
            "UGxheVN0b3JlLlBsdXNPbmVEYXRhEhYKDndhcm5pbmdNZXNzYWdlGBEgASgJ",
            "ItkFCgVEb2NWMhINCgVkb2NpZBgBIAEoCRIUCgxiYWNrZW5kRG9jaWQYAiAB",
            "KAkSDwoHZG9jVHlwZRgDIAEoBRIRCgliYWNrZW5kSWQYBCABKAUSDQoFdGl0",
            "bGUYBSABKAkSDwoHY3JlYXRvchgGIAEoCRIXCg9kZXNjcmlwdGlvbkh0bWwY",
            "ByABKAkSJQoFb2ZmZXIYCCADKAsyFi5Hb29nbGVQbGF5U3RvcmUuT2ZmZXIS",
            "MwoMYXZhaWxhYmlsaXR5GAkgASgLMh0uR29vZ2xlUGxheVN0b3JlLkF2YWls",
            "YWJpbGl0eRIlCgVpbWFnZRgKIAMoCzIWLkdvb2dsZVBsYXlTdG9yZS5JbWFn",
            "ZRIlCgVjaGlsZBgLIAMoCzIWLkdvb2dsZVBsYXlTdG9yZS5Eb2NWMhI9ChFj",
            "b250YWluZXJNZXRhZGF0YRgMIAEoCzIiLkdvb2dsZVBsYXlTdG9yZS5Db250",
            "YWluZXJNZXRhZGF0YRIxCgdkZXRhaWxzGA0gASgLMiAuR29vZ2xlUGxheVN0",
            "b3JlLkRvY3VtZW50RGV0YWlscxI5Cg9hZ2dyZWdhdGVSYXRpbmcYDiABKAsy",
            "IC5Hb29nbGVQbGF5U3RvcmUuQWdncmVnYXRlUmF0aW5nEjMKDHJlbGF0ZWRM",
            "aW5rcxgPIAEoCzIdLkdvb2dsZVBsYXlTdG9yZS5SZWxhdGVkTGlua3MSEgoK",
            "ZGV0YWlsc1VybBgQIAEoCRIQCghzaGFyZVVybBgRIAEoCRISCgpyZXZpZXdz",
            "VXJsGBIgASgJEhIKCmJhY2tlbmRVcmwYEyABKAkSGgoScHVyY2hhc2VEZXRh",
            "aWxzVXJsGBQgASgJEhcKD2RldGFpbHNSZXVzYWJsZRgVIAEoCBIQCghzdWJ0",
            "aXRsZRgWIAEoCRItCgl1bmtub3duMjUYGSABKAsyGi5Hb29nbGVQbGF5U3Rv",
            "cmUuVW5rbm93bjI1IjkKCVVua25vd24yNRIsCgRpdGVtGAIgAygLMh4uR29v",
            "Z2xlUGxheVN0b3JlLlVua25vd24yNUl0ZW0iVgoNVW5rbm93bjI1SXRlbRIN",
            "CgVsYWJlbBgBIAEoCRI2Cgljb250YWluZXIYAyABKAsyIy5Hb29nbGVQbGF5",
            "U3RvcmUuVW5rbm93bjI1Q29udGFpbmVyIiMKElVua25vd24yNUNvbnRhaW5l",
            "chINCgV2YWx1ZRgCIAEoCSKpAgoMUmVsYXRlZExpbmtzEjcKCHVua25vd24x",
            "GAogASgLMiUuR29vZ2xlUGxheVN0b3JlLlJlbGF0ZWRMaW5rc1Vua25vd24x",
            "EhgKEHByaXZhY3lQb2xpY3lVcmwYEiABKAkSNgoQeW91TWlnaHRBbHNvTGlr",
            "ZRgYIAEoCzIcLkdvb2dsZVBsYXlTdG9yZS5SZWxhdGVkTGluaxIlCgVyYXRl",
            "ZBgdIAEoCzIWLkdvb2dsZVBsYXlTdG9yZS5SYXRlZBIyCgxyZWxhdGVkTGlu",
            "a3MYIiADKAsyHC5Hb29nbGVQbGF5U3RvcmUuUmVsYXRlZExpbmsSMwoMY2F0",
            "ZWdvcnlJbmZvGDUgASgLMh0uR29vZ2xlUGxheVN0b3JlLkNhdGVnb3J5SW5m",
            "byJPChRSZWxhdGVkTGlua3NVbmtub3duMRI3Cgh1bmtub3duMhgCIAEoCzIl",
            "Lkdvb2dsZVBsYXlTdG9yZS5SZWxhdGVkTGlua3NVbmtub3duMiIrChRSZWxh",
            "dGVkTGlua3NVbmtub3duMhITCgtuZXh0UGFnZVVybBgDIAEoCSJYCgVSYXRl",
            "ZBINCgVsYWJlbBgBIAEoCRIlCgVpbWFnZRgCIAEoCzIWLkdvb2dsZVBsYXlT",
            "dG9yZS5JbWFnZRIZChFsZWFybk1vcmVIdG1sTGluaxgEIAEoCSI4CgtSZWxh",
            "dGVkTGluaxINCgVsYWJlbBgBIAEoCRIMCgR1cmwxGAIgASgJEgwKBHVybDIY",
            "AyABKAkiNAoMQ2F0ZWdvcnlJbmZvEg8KB2FwcFR5cGUYASABKAkSEwoLYXBw",
            "Q2F0ZWdvcnkYAiABKAkimQEKF0VuY3J5cHRlZFN1YnNjcmliZXJJbmZvEgwK",
            "BGRhdGEYASABKAkSFAoMZW5jcnlwdGVkS2V5GAIgASgJEhEKCXNpZ25hdHVy",
            "ZRgDIAEoCRISCgppbml0VmVjdG9yGAQgASgJEhgKEGdvb2dsZUtleVZlcnNp",
            "b24YBSABKAUSGQoRY2FycmllcktleVZlcnNpb24YBiABKAUikgIKDEF2YWls",
            "YWJpbGl0eRITCgtyZXN0cmljdGlvbhgFIAEoBRIRCglvZmZlclR5cGUYBiAB",
            "KAUSIwoEcnVsZRgHIAEoCzIVLkdvb2dsZVBsYXlTdG9yZS5SdWxlEhgKEGF2",
            "YWlsYWJsZUlmT3duZWQYDSABKAgSKQoHaW5zdGFsbBgOIAMoCzIYLkdvb2ds",
            "ZVBsYXlTdG9yZS5JbnN0YWxsEjkKCmZpbHRlckluZm8YECABKAsyJS5Hb29n",
            "bGVQbGF5U3RvcmUuRmlsdGVyRXZhbHVhdGlvbkluZm8SNQoNb3duZXJzaGlw",
            "SW5mbxgRIAEoCzIeLkdvb2dsZVBsYXlTdG9yZS5Pd25lcnNoaXBJbmZvIk8K",
            "FEZpbHRlckV2YWx1YXRpb25JbmZvEjcKDnJ1bGVFdmFsdWF0aW9uGAEgAygL",
            "Mh8uR29vZ2xlUGxheVN0b3JlLlJ1bGVFdmFsdWF0aW9uIuQBCgRSdWxlEg4K",
            "Bm5lZ2F0ZRgBIAEoCBIQCghvcGVyYXRvchgCIAEoBRILCgNrZXkYAyABKAUS",
            "EQoJc3RyaW5nQXJnGAQgAygJEg8KB2xvbmdBcmcYBSADKAMSEQoJZG91Ymxl",
            "QXJnGAYgAygBEiYKB3N1YnJ1bGUYByADKAsyFS5Hb29nbGVQbGF5U3RvcmUu",
            "UnVsZRIUCgxyZXNwb25zZUNvZGUYCCABKAUSDwoHY29tbWVudBgJIAEoCRIV",
            "Cg1zdHJpbmdBcmdIYXNoGAogAygGEhAKCGNvbnN0QXJnGAsgAygFIp0BCg5S",
            "dWxlRXZhbHVhdGlvbhIjCgRydWxlGAEgASgLMhUuR29vZ2xlUGxheVN0b3Jl",
            "LlJ1bGUSGQoRYWN0dWFsU3RyaW5nVmFsdWUYAiADKAkSFwoPYWN0dWFsTG9u",
            "Z1ZhbHVlGAMgAygDEhcKD2FjdHVhbEJvb2xWYWx1ZRgEIAMoCBIZChFhY3R1",
            "YWxEb3VibGVWYWx1ZRgFIAMoASJ2ChFMaWJyYXJ5QXBwRGV0YWlscxIXCg9j",
            "ZXJ0aWZpY2F0ZUhhc2gYAiABKAkSIgoacmVmdW5kVGltZW91dFRpbWVzdGFt",
            "cE1zZWMYAyABKAMSJAoccG9zdERlbGl2ZXJ5UmVmdW5kV2luZG93TXNlYxgE",
            "IAEoAyJEChNMaWJyYXJ5SW5BcHBEZXRhaWxzEhoKEnNpZ25lZFB1cmNoYXNl",
            "RGF0YRgBIAEoCRIRCglzaWduYXR1cmUYAiABKAkisAIKD0xpYnJhcnlNdXRh",
            "dGlvbhIlCgVkb2NpZBgBIAEoCzIWLkdvb2dsZVBsYXlTdG9yZS5Eb2NpZBIR",
            "CglvZmZlclR5cGUYAiABKAUSFAoMZG9jdW1lbnRIYXNoGAMgASgDEg8KB2Rl",
            "bGV0ZWQYBCABKAgSNgoKYXBwRGV0YWlscxgFIAEoCzIiLkdvb2dsZVBsYXlT",
            "dG9yZS5MaWJyYXJ5QXBwRGV0YWlscxJIChNzdWJzY3JpcHRpb25EZXRhaWxz",
            "GAYgASgLMisuR29vZ2xlUGxheVN0b3JlLkxpYnJhcnlTdWJzY3JpcHRpb25E",
            "ZXRhaWxzEjoKDGluQXBwRGV0YWlscxgHIAEoCzIkLkdvb2dsZVBsYXlTdG9y",
            "ZS5MaWJyYXJ5SW5BcHBEZXRhaWxzIpUBChpMaWJyYXJ5U3Vic2NyaXB0aW9u",
            "RGV0YWlscxIfChdpbml0aWF0aW9uVGltZXN0YW1wTXNlYxgBIAEoAxIfChd2",
            "YWxpZFVudGlsVGltZXN0YW1wTXNlYxgCIAEoAxIUCgxhdXRvUmVuZXdpbmcY",
            "AyABKAgSHwoXdHJpYWxVbnRpbFRpbWVzdGFtcE1zZWMYBCABKAMinAEKDUxp",
            "YnJhcnlVcGRhdGUSDgoGc3RhdHVzGAEgASgFEg4KBmNvcnB1cxgCIAEoBRIT",
            "CgtzZXJ2ZXJUb2tlbhgDIAEoDBIyCghtdXRhdGlvbhgEIAMoCzIgLkdvb2ds",
            "ZVBsYXlTdG9yZS5MaWJyYXJ5TXV0YXRpb24SDwoHaGFzTW9yZRgFIAEoCBIR",
            "CglsaWJyYXJ5SWQYBiABKAkiQgoaQW5kcm9pZEFwcE5vdGlmaWNhdGlvbkRh",
            "dGESEwoLdmVyc2lvbkNvZGUYASABKAUSDwoHYXNzZXRJZBgCIAEoCSJNChVJ",
            "bkFwcE5vdGlmaWNhdGlvbkRhdGESFwoPY2hlY2tvdXRPcmRlcklkGAEgASgJ",
            "EhsKE2luQXBwTm90aWZpY2F0aW9uSWQYAiABKAkiIwoQTGlicmFyeURpcnR5",
            "RGF0YRIPCgdiYWNrZW5kGAEgASgFIqcFCgxOb3RpZmljYXRpb24SGAoQbm90",
            "aWZpY2F0aW9uVHlwZRgBIAEoBRIRCgl0aW1lc3RhbXAYAyABKAMSJQoFZG9j",
            "aWQYBCABKAsyFi5Hb29nbGVQbGF5U3RvcmUuRG9jaWQSEAoIZG9jVGl0bGUY",
            "BSABKAkSEQoJdXNlckVtYWlsGAYgASgJEjwKB2FwcERhdGEYByABKAsyKy5H",
            "b29nbGVQbGF5U3RvcmUuQW5kcm9pZEFwcE5vdGlmaWNhdGlvbkRhdGESQAoP",
            "YXBwRGVsaXZlcnlEYXRhGAggASgLMicuR29vZ2xlUGxheVN0b3JlLkFuZHJv",
            "aWRBcHBEZWxpdmVyeURhdGESQQoTcHVyY2hhc2VSZW1vdmFsRGF0YRgJIAEo",
            "CzIkLkdvb2dsZVBsYXlTdG9yZS5QdXJjaGFzZVJlbW92YWxEYXRhEkMKFHVz",
            "ZXJOb3RpZmljYXRpb25EYXRhGAogASgLMiUuR29vZ2xlUGxheVN0b3JlLlVz",
            "ZXJOb3RpZmljYXRpb25EYXRhEkUKFWluQXBwTm90aWZpY2F0aW9uRGF0YRgL",
            "IAEoCzImLkdvb2dsZVBsYXlTdG9yZS5JbkFwcE5vdGlmaWNhdGlvbkRhdGES",
            "QwoUcHVyY2hhc2VEZWNsaW5lZERhdGEYDCABKAsyJS5Hb29nbGVQbGF5U3Rv",
            "cmUuUHVyY2hhc2VEZWNsaW5lZERhdGESFgoObm90aWZpY2F0aW9uSWQYDSAB",
            "KAkSNQoNbGlicmFyeVVwZGF0ZRgOIAEoCzIeLkdvb2dsZVBsYXlTdG9yZS5M",
            "aWJyYXJ5VXBkYXRlEjsKEGxpYnJhcnlEaXJ0eURhdGEYDyABKAsyIS5Hb29n",
            "bGVQbGF5U3RvcmUuTGlicmFyeURpcnR5RGF0YSJAChRQdXJjaGFzZURlY2xp",
            "bmVkRGF0YRIOCgZyZWFzb24YASABKAUSGAoQc2hvd05vdGlmaWNhdGlvbhgC",
            "IAEoCCIoChNQdXJjaGFzZVJlbW92YWxEYXRhEhEKCW1hbGljaW91cxgBIAEo",
            "CCKIAQoUVXNlck5vdGlmaWNhdGlvbkRhdGESGQoRbm90aWZpY2F0aW9uVGl0",
            "bGUYASABKAkSGAoQbm90aWZpY2F0aW9uVGV4dBgCIAEoCRISCgp0aWNrZXJU",
            "ZXh0GAMgASgJEhMKC2RpYWxvZ1RpdGxlGAQgASgJEhIKCmRpYWxvZ1RleHQY",
            "BSABKAkipwIKD0FnZ3JlZ2F0ZVJhdGluZxIMCgR0eXBlGAEgASgFEhIKCnN0",
            "YXJSYXRpbmcYAiABKAISFAoMcmF0aW5nc0NvdW50GAMgASgEEhYKDm9uZVN0",
            "YXJSYXRpbmdzGAQgASgEEhYKDnR3b1N0YXJSYXRpbmdzGAUgASgEEhgKEHRo",
            "cmVlU3RhclJhdGluZ3MYBiABKAQSFwoPZm91clN0YXJSYXRpbmdzGAcgASgE",
            "EhcKD2ZpdmVTdGFyUmF0aW5ncxgIIAEoBBIVCg10aHVtYnNVcENvdW50GAkg",
            "ASgEEhcKD3RodW1ic0Rvd25Db3VudBgKIAEoBBIUCgxjb21tZW50Q291bnQY",
            "CyABKAQSGgoSYmF5ZXNpYW5NZWFuUmF0aW5nGAwgASgBIhMKEUFjY2VwdFRv",
            "c1Jlc3BvbnNlIukBChRDYXJyaWVyQmlsbGluZ0NvbmZpZxIKCgJpZBgBIAEo",
            "CRIMCgRuYW1lGAIgASgJEhIKCmFwaVZlcnNpb24YAyABKAUSFwoPcHJvdmlz",
            "aW9uaW5nVXJsGAQgASgJEhYKDmNyZWRlbnRpYWxzVXJsGAUgASgJEhMKC3Rv",
            "c1JlcXVpcmVkGAYgASgIEikKIXBlclRyYW5zYWN0aW9uQ3JlZGVudGlhbHNS",
            "ZXF1aXJlZBgHIAEoCBIyCipzZW5kU3Vic2NyaWJlcklkV2l0aENhcnJpZXJC",
            "aWxsaW5nUmVxdWVzdHMYCCABKAgibgoNQmlsbGluZ0NvbmZpZxJDChRjYXJy",
            "aWVyQmlsbGluZ0NvbmZpZxgBIAEoCzIlLkdvb2dsZVBsYXlTdG9yZS5DYXJy",
            "aWVyQmlsbGluZ0NvbmZpZxIYChBtYXhJYWJBcGlWZXJzaW9uGAIgASgFIoEB",
            "Cg5Db3JwdXNNZXRhZGF0YRIPCgdiYWNrZW5kGAEgASgFEgwKBG5hbWUYAiAB",
            "KAkSEgoKbGFuZGluZ1VybBgDIAEoCRITCgtsaWJyYXJ5TmFtZRgEIAEoCRIV",
            "Cg1yZWNzV2lkZ2V0VXJsGAYgASgJEhAKCHNob3BOYW1lGAcgASgJIiMKC0V4",
            "cGVyaW1lbnRzEhQKDGV4cGVyaW1lbnRJZBgBIAMoCSIzChBTZWxmVXBkYXRl",
            "Q29uZmlnEh8KF2xhdGVzdENsaWVudFZlcnNpb25Db2RlGAEgASgFIvEECgtU",
            "b2NSZXNwb25zZRIvCgZjb3JwdXMYASADKAsyHy5Hb29nbGVQbGF5U3RvcmUu",
            "Q29ycHVzTWV0YWRhdGESHAoUdG9zVmVyc2lvbkRlcHJlY2F0ZWQYAiABKAUS",
            "EgoKdG9zQ29udGVudBgDIAEoCRIPCgdob21lVXJsGAQgASgJEjEKC2V4cGVy",
            "aW1lbnRzGAUgASgLMhwuR29vZ2xlUGxheVN0b3JlLkV4cGVyaW1lbnRzEiYK",
            "HnRvc0NoZWNrYm94VGV4dE1hcmtldGluZ0VtYWlscxgGIAEoCRIQCgh0b3NU",
            "b2tlbhgHIAEoCRIXCg9pY29uT3ZlcnJpZGVVcmwYCSABKAkSOwoQc2VsZlVw",
            "ZGF0ZUNvbmZpZxgKIAEoCzIhLkdvb2dsZVBsYXlTdG9yZS5TZWxmVXBkYXRl",
            "Q29uZmlnEiIKGnJlcXVpcmVzVXBsb2FkRGV2aWNlQ29uZmlnGAsgASgIEjUK",
            "DWJpbGxpbmdDb25maWcYDCABKAsyHi5Hb29nbGVQbGF5U3RvcmUuQmlsbGlu",
            "Z0NvbmZpZxIVCg1yZWNzV2lkZ2V0VXJsGA0gASgJEhUKDXNvY2lhbEhvbWVV",
            "cmwYDyABKAkSHwoXYWdlVmVyaWZpY2F0aW9uUmVxdWlyZWQYECABKAgSGgoS",
            "Z3BsdXNTaWdudXBFbmFibGVkGBEgASgIEhUKDXJlZGVlbUVuYWJsZWQYEiAB",
            "KAgSDwoHaGVscFVybBgTIAEoCRIPCgd0aGVtZUlkGBQgASgFEhwKFGVudGVy",
            "dGFpbm1lbnRIb21lVXJsGBUgASgJEg4KBmNvb2tpZRgWIAEoCSLuBwoHUGF5",
            "bG9hZBIzCgxsaXN0UmVzcG9uc2UYASABKAsyHS5Hb29nbGVQbGF5U3RvcmUu",
            "TGlzdFJlc3BvbnNlEjkKD2RldGFpbHNSZXNwb25zZRgCIAEoCzIgLkdvb2ds",
            "ZVBsYXlTdG9yZS5EZXRhaWxzUmVzcG9uc2USNwoOcmV2aWV3UmVzcG9uc2UY",
            "AyABKAsyHy5Hb29nbGVQbGF5U3RvcmUuUmV2aWV3UmVzcG9uc2USMQoLYnV5",
            "UmVzcG9uc2UYBCABKAsyHC5Hb29nbGVQbGF5U3RvcmUuQnV5UmVzcG9uc2US",
            "NwoOc2VhcmNoUmVzcG9uc2UYBSABKAsyHy5Hb29nbGVQbGF5U3RvcmUuU2Vh",
            "cmNoUmVzcG9uc2USMQoLdG9jUmVzcG9uc2UYBiABKAsyHC5Hb29nbGVQbGF5",
            "U3RvcmUuVG9jUmVzcG9uc2USNwoOYnJvd3NlUmVzcG9uc2UYByABKAsyHy5H",
            "b29nbGVQbGF5U3RvcmUuQnJvd3NlUmVzcG9uc2USRwoWcHVyY2hhc2VTdGF0",
            "dXNSZXNwb25zZRgIIAEoCzInLkdvb2dsZVBsYXlTdG9yZS5QdXJjaGFzZVN0",
            "YXR1c1Jlc3BvbnNlEhMKC2xvZ1Jlc3BvbnNlGAogASgJEhsKE2ZsYWdDb250",
            "ZW50UmVzcG9uc2UYDSABKAkSQQoTYnVsa0RldGFpbHNSZXNwb25zZRgTIAEo",
            "CzIkLkdvb2dsZVBsYXlTdG9yZS5CdWxrRGV0YWlsc1Jlc3BvbnNlEjsKEGRl",
            "bGl2ZXJ5UmVzcG9uc2UYFSABKAsyIS5Hb29nbGVQbGF5U3RvcmUuRGVsaXZl",
            "cnlSZXNwb25zZRI9ChFhY2NlcHRUb3NSZXNwb25zZRgWIAEoCzIiLkdvb2ds",
            "ZVBsYXlTdG9yZS5BY2NlcHRUb3NSZXNwb25zZRJHChZhbmRyb2lkQ2hlY2tp",
            "blJlc3BvbnNlGBogASgLMicuR29vZ2xlUGxheVN0b3JlLkFuZHJvaWRDaGVj",
            "a2luUmVzcG9uc2USTwoadXBsb2FkRGV2aWNlQ29uZmlnUmVzcG9uc2UYHCAB",
            "KAsyKy5Hb29nbGVQbGF5U3RvcmUuVXBsb2FkRGV2aWNlQ29uZmlnUmVzcG9u",
            "c2USRQoVc2VhcmNoU3VnZ2VzdFJlc3BvbnNlGCggASgLMiYuR29vZ2xlUGxh",
            "eVN0b3JlLlNlYXJjaFN1Z2dlc3RSZXNwb25zZRJHChZ0ZXN0aW5nUHJvZ3Jh",
            "bVJlc3BvbnNlGFAgASgLMicuR29vZ2xlUGxheVN0b3JlLlRlc3RpbmdQcm9n",
            "cmFtUmVzcG9uc2UidwoIUHJlRmV0Y2gSCwoDdXJsGAEgASgJEjIKCHJlc3Bv",
            "bnNlGAIgASgLMiAuR29vZ2xlUGxheVN0b3JlLlJlc3BvbnNlV3JhcHBlchIM",
            "CgRldGFnGAMgASgJEgsKA3R0bBgEIAEoAxIPCgdzb2Z0VHRsGAUgASgDIicK",
            "DlNlcnZlck1ldGFkYXRhEhUKDWxhdGVuY3lNaWxsaXMYASABKAMiLgoHVGFy",
            "Z2V0cxIQCgh0YXJnZXRJZBgBIAMoAxIRCglzaWduYXR1cmUYAiABKAwiKwoM",
            "U2VydmVyQ29va2llEgwKBHR5cGUYASABKAUSDQoFdG9rZW4YAiABKAwiRAoN",
            "U2VydmVyQ29va2llcxIzCgxzZXJ2ZXJDb29raWUYASADKAsyHS5Hb29nbGVQ",
            "bGF5U3RvcmUuU2VydmVyQ29va2llIoYDCg9SZXNwb25zZVdyYXBwZXISKQoH",
            "cGF5bG9hZBgBIAEoCzIYLkdvb2dsZVBsYXlTdG9yZS5QYXlsb2FkEjEKCGNv",
            "bW1hbmRzGAIgASgLMh8uR29vZ2xlUGxheVN0b3JlLlNlcnZlckNvbW1hbmRz",
            "EisKCHByZUZldGNoGAMgAygLMhkuR29vZ2xlUGxheVN0b3JlLlByZUZldGNo",
            "EjMKDG5vdGlmaWNhdGlvbhgEIAMoCzIdLkdvb2dsZVBsYXlTdG9yZS5Ob3Rp",
            "ZmljYXRpb24SNwoOc2VydmVyTWV0YWRhdGEYBSABKAsyHy5Hb29nbGVQbGF5",
            "U3RvcmUuU2VydmVyTWV0YWRhdGESKQoHdGFyZ2V0cxgGIAEoCzIYLkdvb2ds",
            "ZVBsYXlTdG9yZS5UYXJnZXRzEjUKDXNlcnZlckNvb2tpZXMYByABKAsyHi5H",
            "b29nbGVQbGF5U3RvcmUuU2VydmVyQ29va2llcxIYChBzZXJ2ZXJMb2dzQ29v",
            "a2llGAkgASgMIl0KDlNlcnZlckNvbW1hbmRzEhIKCmNsZWFyQ2FjaGUYASAB",
            "KAgSGwoTZGlzcGxheUVycm9yTWVzc2FnZRgCIAEoCRIaChJsb2dFcnJvclN0",
            "YWNrdHJhY2UYAyABKAkiVAoSR2V0UmV2aWV3c1Jlc3BvbnNlEicKBnJldmll",
            "dxgBIAMoCzIXLkdvb2dsZVBsYXlTdG9yZS5SZXZpZXcSFQoNbWF0Y2hpbmdD",
            "b3VudBgCIAEoAyLHAgoGUmV2aWV3EhIKCmF1dGhvck5hbWUYASABKAkSCwoD",
            "dXJsGAIgASgJEg4KBnNvdXJjZRgDIAEoCRIXCg9kb2N1bWVudFZlcnNpb24Y",
            "BCABKAkSFQoNdGltZXN0YW1wTXNlYxgFIAEoAxISCgpzdGFyUmF0aW5nGAYg",
            "ASgFEg0KBXRpdGxlGAcgASgJEg8KB2NvbW1lbnQYCCABKAkSEQoJY29tbWVu",
            "dElkGAkgASgJEhIKCmRldmljZU5hbWUYEyABKAkSEQoJcmVwbHlUZXh0GB0g",
            "ASgJEhoKEnJlcGx5VGltZXN0YW1wTXNlYxgeIAEoAxInCgZhdXRob3IYHyAB",
            "KAsyFy5Hb29nbGVQbGF5U3RvcmUuQXV0aG9yEikKB2F1dGhvcjIYISABKAsy",
            "GC5Hb29nbGVQbGF5U3RvcmUuQXV0aG9yMiI9CgZBdXRob3ISDAoEbmFtZRgC",
            "IAEoCRIlCgR1cmxzGAUgASgLMhcuR29vZ2xlUGxheVN0b3JlLkF2YXRhciK+",
            "AQoHQXV0aG9yMhIWCg5wZXJzb25JZFN0cmluZxgBIAEoCRIQCghwZXJzb25J",
            "ZBgCIAEoCRIQCgh1bmtub3duMRgDIAEoBRIQCgh1bmtub3duMhgEIAEoBRIM",
            "CgRuYW1lGAUgASgJEiUKBHVybHMYCiABKAsyFy5Hb29nbGVQbGF5U3RvcmUu",
            "QXZhdGFyEhUKDWdvb2dsZVBsdXNVcmwYEyABKAkSGQoRZ29vZ2xlUGx1c1Rh",
            "Z2xpbmUYFiABKAkiXgoGQXZhdGFyEhAKCHVua25vd24xGAEgASgFEgsKA3Vy",
            "bBgFIAEoCRIRCglzZWN1cmVVcmwYByABKAkSEAoIdW5rbm93bjIYCSABKAgS",
            "EAoIdW5rbm93bjMYFiABKAgijAEKDlJldmlld1Jlc3BvbnNlEjgKC2dldFJl",
            "c3BvbnNlGAEgASgLMiMuR29vZ2xlUGxheVN0b3JlLkdldFJldmlld3NSZXNw",
            "b25zZRITCgtuZXh0UGFnZVVybBgCIAEoCRIrCgp1c2VyUmV2aWV3GAMgASgL",
            "MhcuR29vZ2xlUGxheVN0b3JlLlJldmlldyJnCg1SZWxhdGVkU2VhcmNoEhEK",
            "CXNlYXJjaFVybBgBIAEoCRIOCgZoZWFkZXIYAiABKAkSEQoJYmFja2VuZElk",
            "GAMgASgFEg8KB2RvY1R5cGUYBCABKAUSDwoHY3VycmVudBgFIAEoCCLxAQoO",
            "U2VhcmNoUmVzcG9uc2USFQoNb3JpZ2luYWxRdWVyeRgBIAEoCRIWCg5zdWdn",
            "ZXN0ZWRRdWVyeRgCIAEoCRIWCg5hZ2dyZWdhdGVRdWVyeRgDIAEoCBInCgZi",
            "dWNrZXQYBCADKAsyFy5Hb29nbGVQbGF5U3RvcmUuQnVja2V0EiMKA2RvYxgF",
            "IAMoCzIWLkdvb2dsZVBsYXlTdG9yZS5Eb2NWMhI1Cg1yZWxhdGVkU2VhcmNo",
            "GAYgAygLMh4uR29vZ2xlUGxheVN0b3JlLlJlbGF0ZWRTZWFyY2gSEwoLbmV4",
            "dFBhZ2VVcmwYCiABKAkiSwoVU2VhcmNoU3VnZ2VzdFJlc3BvbnNlEjIKBWVu",
            "dHJ5GAEgAygLMiMuR29vZ2xlUGxheVN0b3JlLlNlYXJjaFN1Z2dlc3RFbnRy",
            "eSK+AgoSU2VhcmNoU3VnZ2VzdEVudHJ5EgwKBHR5cGUYASABKAUSFgoOc3Vn",
            "Z2VzdGVkUXVlcnkYAiABKAkSSgoOaW1hZ2VDb250YWluZXIYBSABKAsyMi5H",
            "b29nbGVQbGF5U3RvcmUuU2VhcmNoU3VnZ2VzdEVudHJ5LkltYWdlQ29udGFp",
            "bmVyEg0KBXRpdGxlGAYgASgJElYKFHBhY2thZ2VOYW1lQ29udGFpbmVyGAgg",
            "ASgLMjguR29vZ2xlUGxheVN0b3JlLlNlYXJjaFN1Z2dlc3RFbnRyeS5QYWNr",
            "YWdlTmFtZUNvbnRhaW5lchoiCg5JbWFnZUNvbnRhaW5lchIQCghpbWFnZVVy",
            "bBgFIAEoCRorChRQYWNrYWdlTmFtZUNvbnRhaW5lchITCgtwYWNrYWdlTmFt",
            "ZRgBIAEoCSJPChZUZXN0aW5nUHJvZ3JhbVJlc3BvbnNlEjUKBnJlc3VsdBgC",
            "IAEoCzIlLkdvb2dsZVBsYXlTdG9yZS5UZXN0aW5nUHJvZ3JhbVJlc3VsdCJP",
            "ChRUZXN0aW5nUHJvZ3JhbVJlc3VsdBI3CgdkZXRhaWxzGAQgASgLMiYuR29v",
            "Z2xlUGxheVN0b3JlLlRlc3RpbmdQcm9ncmFtRGV0YWlscyJIChVUZXN0aW5n",
            "UHJvZ3JhbURldGFpbHMSDQoFZmxhZzEYAiABKAgSCgoCaWQYAyABKAMSFAoM",
            "dW5zdWJzY3JpYmVkGAQgASgIIkIKCkxvZ1JlcXVlc3QSEQoJdGltZXN0YW1w",
            "GAEgASgDEiEKGWRvd25sb2FkQ29uZmlybWF0aW9uUXVlcnkYAiABKAkiPwoV",
            "VGVzdGluZ1Byb2dyYW1SZXF1ZXN0EhMKC3BhY2thZ2VOYW1lGAEgASgJEhEK",
            "CXN1YnNjcmliZRgCIAEoCCKUAQoZVXBsb2FkRGV2aWNlQ29uZmlnUmVxdWVz",
            "dBJGChNkZXZpY2VDb25maWd1cmF0aW9uGAEgASgLMikuR29vZ2xlUGxheVN0",
            "b3JlLkRldmljZUNvbmZpZ3VyYXRpb25Qcm90bxIUCgxtYW51ZmFjdHVyZXIY",
            "AiABKAkSGQoRZ2NtUmVnaXN0cmF0aW9uSWQYAyABKAkiPQoaVXBsb2FkRGV2",
            "aWNlQ29uZmlnUmVzcG9uc2USHwoXdXBsb2FkRGV2aWNlQ29uZmlnVG9rZW4Y",
            "ASABKAkihwQKFUFuZHJvaWRDaGVja2luUmVxdWVzdBIMCgRpbWVpGAEgASgJ",
            "EgoKAmlkGAIgASgDEg4KBmRpZ2VzdBgDIAEoCRI1CgdjaGVja2luGAQgASgL",
            "MiQuR29vZ2xlUGxheVN0b3JlLkFuZHJvaWRDaGVja2luUHJvdG8SFAoMZGVz",
            "aXJlZEJ1aWxkGAUgASgJEg4KBmxvY2FsZRgGIAEoCRIRCglsb2dnaW5nSWQY",
            "ByABKAMSFQoNbWFya2V0Q2hlY2tpbhgIIAEoCRIPCgdtYWNBZGRyGAkgAygJ",
            "EgwKBG1laWQYCiABKAkSFQoNYWNjb3VudENvb2tpZRgLIAMoCRIQCgh0aW1l",
            "Wm9uZRgMIAEoCRIVCg1zZWN1cml0eVRva2VuGA0gASgGEg8KB3ZlcnNpb24Y",
            "DiABKAUSDwoHb3RhQ2VydBgPIAMoCRIUCgxzZXJpYWxOdW1iZXIYECABKAkS",
            "CwoDZXNuGBEgASgJEkYKE2RldmljZUNvbmZpZ3VyYXRpb24YEiABKAsyKS5H",
            "b29nbGVQbGF5U3RvcmUuRGV2aWNlQ29uZmlndXJhdGlvblByb3RvEhMKC21h",
            "Y0FkZHJUeXBlGBMgAygJEhAKCGZyYWdtZW50GBQgASgFEhAKCHVzZXJOYW1l",
            "GBUgASgJEhgKEHVzZXJTZXJpYWxOdW1iZXIYFiABKAUixAIKFkFuZHJvaWRD",
            "aGVja2luUmVzcG9uc2USDwoHc3RhdHNPaxgBIAEoCBIzCgZpbnRlbnQYAiAD",
            "KAsyIy5Hb29nbGVQbGF5U3RvcmUuQW5kcm9pZEludGVudFByb3RvEhAKCHRp",
            "bWVNc2VjGAMgASgDEg4KBmRpZ2VzdBgEIAEoCRIyCgdzZXR0aW5nGAUgAygL",
            "MiEuR29vZ2xlUGxheVN0b3JlLkdzZXJ2aWNlc1NldHRpbmcSEAoIbWFya2V0",
            "T2sYBiABKAgSEQoJYW5kcm9pZElkGAcgASgGEhUKDXNlY3VyaXR5VG9rZW4Y",
            "CCABKAYSFAoMc2V0dGluZ3NEaWZmGAkgASgIEhUKDWRlbGV0ZVNldHRpbmcY",
            "CiADKAkSJQodZGV2aWNlQ2hlY2tpbkNvbnNpc3RlbmN5VG9rZW4YDCABKAki",
            "LwoQR3NlcnZpY2VzU2V0dGluZxIMCgRuYW1lGAEgASgMEg0KBXZhbHVlGAIg",
            "ASgMIpQCChFBbmRyb2lkQnVpbGRQcm90bxIKCgJpZBgBIAEoCRIPCgdwcm9k",
            "dWN0GAIgASgJEg8KB2NhcnJpZXIYAyABKAkSDQoFcmFkaW8YBCABKAkSEgoK",
            "Ym9vdGxvYWRlchgFIAEoCRIOCgZjbGllbnQYBiABKAkSEQoJdGltZXN0YW1w",
            "GAcgASgDEhYKDmdvb2dsZVNlcnZpY2VzGAggASgFEg4KBmRldmljZRgJIAEo",
            "CRISCgpzZGtWZXJzaW9uGAogASgFEg0KBW1vZGVsGAsgASgJEhQKDG1hbnVm",
            "YWN0dXJlchgMIAEoCRIUCgxidWlsZFByb2R1Y3QYDSABKAkSFAoMb3RhSW5z",
            "dGFsbGVkGA4gASgIIrICChNBbmRyb2lkQ2hlY2tpblByb3RvEjEKBWJ1aWxk",
            "GAEgASgLMiIuR29vZ2xlUGxheVN0b3JlLkFuZHJvaWRCdWlsZFByb3RvEhcK",
            "D2xhc3RDaGVja2luTXNlYxgCIAEoAxIxCgVldmVudBgDIAMoCzIiLkdvb2ds",
            "ZVBsYXlTdG9yZS5BbmRyb2lkRXZlbnRQcm90bxI0CgRzdGF0GAQgAygLMiYu",
            "R29vZ2xlUGxheVN0b3JlLkFuZHJvaWRTdGF0aXN0aWNQcm90bxIWCg5yZXF1",
            "ZXN0ZWRHcm91cBgFIAMoCRIUCgxjZWxsT3BlcmF0b3IYBiABKAkSEwoLc2lt",
            "T3BlcmF0b3IYByABKAkSDwoHcm9hbWluZxgIIAEoCRISCgp1c2VyTnVtYmVy",
            "GAkgASgFIkEKEUFuZHJvaWRFdmVudFByb3RvEgsKA3RhZxgBIAEoCRINCgV2",
            "YWx1ZRgCIAEoCRIQCgh0aW1lTXNlYxgDIAEoAyJaChJBbmRyb2lkSW50ZW50",
            "UHJvdG8SDgoGYWN0aW9uGAEgASgJEg8KB2RhdGFVcmkYAiABKAkSEAoIbWlt",
            "ZVR5cGUYAyABKAkSEQoJamF2YUNsYXNzGAQgASgJIkAKFUFuZHJvaWRTdGF0",
            "aXN0aWNQcm90bxILCgN0YWcYASABKAkSDQoFY291bnQYAiABKAUSCwoDc3Vt",
            "GAMgASgCInYKEkNsaWVudExpYnJhcnlTdGF0ZRIOCgZjb3JwdXMYASABKAUS",
            "EwoLc2VydmVyVG9rZW4YAiABKAwSEwoLaGFzaENvZGVTdW0YAyABKAMSEwoL",
            "bGlicmFyeVNpemUYBCABKAUSEQoJbGlicmFyeUlkGAUgASgJIpICChVBbmRy",
            "b2lkRGF0YVVzYWdlUHJvdG8SDwoHdmVyc2lvbhgBIAEoBRIZChFjdXJyZW50",
            "UmVwb3J0TXNlYxgCIAEoAxJJChdrZXlUb1BhY2thZ2VOYW1lTWFwcGluZxgD",
            "IAMoCzIoLkdvb2dsZVBsYXlTdG9yZS5LZXlUb1BhY2thZ2VOYW1lTWFwcGlu",
            "ZxJBChNwYXlsb2FkTGV2ZWxBcHBTdGF0GAQgAygLMiQuR29vZ2xlUGxheVN0",
            "b3JlLlBheWxvYWRMZXZlbEFwcFN0YXQSPwoSaXBMYXllck5ldHdvcmtTdGF0",
            "GAUgAygLMiMuR29vZ2xlUGxheVN0b3JlLklwTGF5ZXJOZXR3b3JrU3RhdCJ+",
            "ChdBbmRyb2lkVXNhZ2VTdGF0c1JlcG9ydBIRCglhbmRyb2lkSWQYASABKAMS",
            "EQoJbG9nZ2luZ0lkGAIgASgDEj0KCnVzYWdlU3RhdHMYAyABKAsyKS5Hb29n",
            "bGVQbGF5U3RvcmUuVXNhZ2VTdGF0c0V4dGVuc2lvblByb3RvIo0BCglBcHBC",
            "dWNrZXQSFwoPYnVja2V0U3RhcnRNc2VjGAEgASgDEhoKEmJ1Y2tldER1cmF0",
            "aW9uTXNlYxgCIAEoAxIzCgxzdGF0Q291bnRlcnMYAyADKAsyHS5Hb29nbGVQ",
            "bGF5U3RvcmUuU3RhdENvdW50ZXJzEhYKDm9wZXJhdGlvbkNvdW50GAQgASgD",
            "Ii0KC0NvdW50ZXJEYXRhEg0KBWJ5dGVzGAEgASgDEg8KB3BhY2tldHMYAiAB",
            "KAMicgoOSXBMYXllckFwcFN0YXQSEgoKcGFja2FnZUtleRgBIAEoBRIWCg5h",
            "cHBsaWNhdGlvblRhZxgCIAEoBRI0ChBpcExheWVyQXBwQnVja2V0GAMgAygL",
            "MhouR29vZ2xlUGxheVN0b3JlLkFwcEJ1Y2tldCKfAQoUSXBMYXllck5ldHdv",
            "cmtCdWNrZXQSFwoPYnVja2V0U3RhcnRNc2VjGAEgASgDEhoKEmJ1Y2tldER1",
            "cmF0aW9uTXNlYxgCIAEoAxIzCgxzdGF0Q291bnRlcnMYAyADKAsyHS5Hb29n",
            "bGVQbGF5U3RvcmUuU3RhdENvdW50ZXJzEh0KFW5ldHdvcmtBY3RpdmVEdXJh",
            "dGlvbhgEIAEoAyK4AQoSSXBMYXllck5ldHdvcmtTdGF0EhYKDm5ldHdvcmtE",
            "ZXRhaWxzGAEgASgJEgwKBHR5cGUYAiABKAUSQwoUaXBMYXllck5ldHdvcmtC",
            "dWNrZXQYAyADKAsyJS5Hb29nbGVQbGF5U3RvcmUuSXBMYXllck5ldHdvcmtC",
            "dWNrZXQSNwoOaXBMYXllckFwcFN0YXQYBCADKAsyHy5Hb29nbGVQbGF5U3Rv",
            "cmUuSXBMYXllckFwcFN0YXQidwoXS2V5VG9QYWNrYWdlTmFtZU1hcHBpbmcS",
            "EgoKcGFja2FnZUtleRgBIAEoBRIPCgd1aWROYW1lGAIgASgJEjcKEXNoYXJl",
            "ZFBhY2thZ2VMaXN0GAMgAygLMhwuR29vZ2xlUGxheVN0b3JlLlBhY2thZ2VJ",
            "bmZvIjMKC1BhY2thZ2VJbmZvEg8KB3BrZ05hbWUYASABKAkSEwoLdmVyc2lv",
            "bkNvZGUYAiABKAUifAoTUGF5bG9hZExldmVsQXBwU3RhdBISCgpwYWNrYWdl",
            "S2V5GAEgASgFEhYKDmFwcGxpY2F0aW9uVGFnGAIgASgFEjkKFXBheWxvYWRM",
            "ZXZlbEFwcEJ1Y2tldBgDIAMoCzIaLkdvb2dsZVBsYXlTdG9yZS5BcHBCdWNr",
            "ZXQieAoMU3RhdENvdW50ZXJzEhQKDG5ldHdvcmtQcm90bxgBIAEoBRIRCglk",
            "aXJlY3Rpb24YAiABKAUSMQoLY291bnRlckRhdGEYAyABKAsyHC5Hb29nbGVQ",
            "bGF5U3RvcmUuQ291bnRlckRhdGESDAoEZmdCZxgEIAEoBSJVChhVc2FnZVN0",
            "YXRzRXh0ZW5zaW9uUHJvdG8SOQoJZGF0YVVzYWdlGAEgASgLMiYuR29vZ2xl",
            "UGxheVN0b3JlLkFuZHJvaWREYXRhVXNhZ2VQcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidAppDeliveryData), global::GooglePlayStore.AndroidAppDeliveryData.Parser, new[]{ "DownloadSize", "Signature", "DownloadUrl", "AdditionalFile", "DownloadAuthCookie", "ForwardLocked", "RefundTimeout", "ServerInitiated", "PostInstallRefundWindowMillis", "ImmediateStartNeeded", "PatchData", "EncryptionParams" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidAppPatchData), global::GooglePlayStore.AndroidAppPatchData.Parser, new[]{ "BaseVersionCode", "BaseSignature", "DownloadUrl", "PatchFormat", "MaxPatchSize" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AppFileMetadata), global::GooglePlayStore.AppFileMetadata.Parser, new[]{ "FileType", "VersionCode", "Size", "DownloadUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.EncryptionParams), global::GooglePlayStore.EncryptionParams.Parser, new[]{ "Version", "EncryptionKey", "HmacKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.HttpCookie), global::GooglePlayStore.HttpCookie.Parser, new[]{ "Name", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Address), global::GooglePlayStore.Address.Parser, new[]{ "Name", "AddressLine1", "AddressLine2", "City", "State", "PostalCode", "PostalCountry", "DependentLocality", "SortingCode", "LanguageCode", "PhoneNumber", "IsReduced", "FirstName", "LastName", "Email" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BookAuthor), global::GooglePlayStore.BookAuthor.Parser, new[]{ "Name", "DeprecatedQuery", "Docid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BookDetails), global::GooglePlayStore.BookDetails.Parser, new[]{ "Subject", "Publisher", "PublicationDate", "Isbn", "NumberOfPages", "Subtitle", "Author", "ReaderUrl", "DownloadEpubUrl", "DownloadPdfUrl", "AcsEpubTokenUrl", "AcsPdfTokenUrl", "EpubAvailable", "PdfAvailable", "AboutTheAuthor" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BookSubject), global::GooglePlayStore.BookSubject.Parser, new[]{ "Name", "Query", "SubjectId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BrowseLink), global::GooglePlayStore.BrowseLink.Parser, new[]{ "Name", "DataUrl", "Icon", "UnknownCategoryContainer" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.UnknownCategoryContainer), global::GooglePlayStore.UnknownCategoryContainer.Parser, new[]{ "CategoryIdContainer" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CategoryIdContainer), global::GooglePlayStore.CategoryIdContainer.Parser, new[]{ "CategoryId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BrowseResponse), global::GooglePlayStore.BrowseResponse.Parser, new[]{ "ContentsUrl", "PromoUrl", "Category", "Breadcrumb", "CategoryContainer" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CategoryContainer), global::GooglePlayStore.CategoryContainer.Parser, new[]{ "Category" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AddressChallenge), global::GooglePlayStore.AddressChallenge.Parser, new[]{ "ResponseAddressParam", "ResponseCheckboxesParam", "Title", "DescriptionHtml", "Checkbox", "Address", "ErrorInputField", "ErrorHtml", "RequiredField" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AuthenticationChallenge), global::GooglePlayStore.AuthenticationChallenge.Parser, new[]{ "AuthenticationType", "ResponseAuthenticationTypeParam", "ResponseRetryCountParam", "PinHeaderText", "PinDescriptionTextHtml", "GaiaHeaderText", "GaiaDescriptionTextHtml" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BuyResponse), global::GooglePlayStore.BuyResponse.Parser, new[]{ "PurchaseResponse", "ContinueViaUrl", "PurchaseStatusUrl", "CheckoutServiceId", "CheckoutTokenRequired", "BaseCheckoutUrl", "TosCheckboxHtml", "IabPermissionError", "PurchaseStatusResponse", "PurchaseCookie", "Challenge", "DownloadToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Challenge), global::GooglePlayStore.Challenge.Parser, new[]{ "AddressChallenge", "AuthenticationChallenge" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.FormCheckbox), global::GooglePlayStore.FormCheckbox.Parser, new[]{ "Description", "Checked", "Required" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.LineItem), global::GooglePlayStore.LineItem.Parser, new[]{ "Name", "Description", "Offer", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Money), global::GooglePlayStore.Money.Parser, new[]{ "Micros", "CurrencyCode", "FormattedAmount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PurchaseNotificationResponse), global::GooglePlayStore.PurchaseNotificationResponse.Parser, new[]{ "Status", "DebugInfo", "LocalizedErrorMessage", "PurchaseId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PurchaseStatusResponse), global::GooglePlayStore.PurchaseStatusResponse.Parser, new[]{ "Status", "StatusMsg", "StatusTitle", "BriefMessage", "InfoUrl", "LibraryUpdate", "RejectedInstrument", "AppDeliveryData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DeliveryResponse), global::GooglePlayStore.DeliveryResponse.Parser, new[]{ "Status", "AppDeliveryData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Docid), global::GooglePlayStore.Docid.Parser, new[]{ "BackendDocid", "Type", "Backend" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Install), global::GooglePlayStore.Install.Parser, new[]{ "AndroidId", "Version", "Bundled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Offer), global::GooglePlayStore.Offer.Parser, new[]{ "Micros", "CurrencyCode", "FormattedAmount", "ConvertedPrice", "CheckoutFlowRequired", "FullPriceMicros", "FormattedFullAmount", "OfferType", "RentalTerms", "OnSaleDate", "PromotionLabel", "SubscriptionTerms", "FormattedName", "FormattedDescription" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.OwnershipInfo), global::GooglePlayStore.OwnershipInfo.Parser, new[]{ "InitiationTimestampMsec", "ValidUntilTimestampMsec", "AutoRenewing", "RefundTimeoutTimestampMsec", "PostDeliveryRefundWindowMsec" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.RentalTerms), global::GooglePlayStore.RentalTerms.Parser, new[]{ "GrantPeriodSeconds", "ActivatePeriodSeconds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SubscriptionTerms), global::GooglePlayStore.SubscriptionTerms.Parser, new[]{ "RecurringPeriod", "TrialPeriod" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.TimePeriod), global::GooglePlayStore.TimePeriod.Parser, new[]{ "Unit", "Count" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BillingAddressSpec), global::GooglePlayStore.BillingAddressSpec.Parser, new[]{ "BillingAddressType", "RequiredField" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CarrierBillingCredentials), global::GooglePlayStore.CarrierBillingCredentials.Parser, new[]{ "Value", "Expiration" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CarrierBillingInstrument), global::GooglePlayStore.CarrierBillingInstrument.Parser, new[]{ "InstrumentKey", "AccountType", "CurrencyCode", "TransactionLimit", "SubscriberIdentifier", "EncryptedSubscriberInfo", "Credentials", "AcceptedCarrierTos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CarrierBillingInstrumentStatus), global::GooglePlayStore.CarrierBillingInstrumentStatus.Parser, new[]{ "CarrierTos", "AssociationRequired", "PasswordRequired", "CarrierPasswordPrompt", "ApiVersion", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CarrierTos), global::GooglePlayStore.CarrierTos.Parser, new[]{ "DcbTos", "PiiTos", "NeedsDcbTosAcceptance", "NeedsPiiTosAcceptance" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CarrierTosEntry), global::GooglePlayStore.CarrierTosEntry.Parser, new[]{ "Url", "Version" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CreditCardInstrument), global::GooglePlayStore.CreditCardInstrument.Parser, new[]{ "Type", "EscrowHandle", "LastDigits", "ExpirationMonth", "ExpirationYear", "EscrowEfeParam" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.EfeParam), global::GooglePlayStore.EfeParam.Parser, new[]{ "Key", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.InputValidationError), global::GooglePlayStore.InputValidationError.Parser, new[]{ "InputField", "ErrorMessage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Instrument), global::GooglePlayStore.Instrument.Parser, new[]{ "InstrumentId", "BillingAddress", "CreditCard", "CarrierBilling", "BillingAddressSpec", "InstrumentFamily", "CarrierBillingStatus", "DisplayTitle" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PasswordPrompt), global::GooglePlayStore.PasswordPrompt.Parser, new[]{ "Prompt", "ForgotPasswordUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ContainerMetadata), global::GooglePlayStore.ContainerMetadata.Parser, new[]{ "BrowseUrl", "NextPageUrl", "Relevance", "EstimatedResults", "AnalyticsCookie", "Ordered" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DebugInfo), global::GooglePlayStore.DebugInfo.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BulkDetailsEntry), global::GooglePlayStore.BulkDetailsEntry.Parser, new[]{ "Doc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BulkDetailsRequest), global::GooglePlayStore.BulkDetailsRequest.Parser, new[]{ "Docid", "IncludeChildDocs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BulkDetailsResponse), global::GooglePlayStore.BulkDetailsResponse.Parser, new[]{ "Entry" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DetailsResponse), global::GooglePlayStore.DetailsResponse.Parser, new[]{ "DocV1", "AnalyticsCookie", "UserReview", "DocV2", "FooterHtml", "Badge" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Badge), global::GooglePlayStore.Badge.Parser, new[]{ "Label", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DeviceConfigurationProto), global::GooglePlayStore.DeviceConfigurationProto.Parser, new[]{ "TouchScreen", "Keyboard", "Navigation", "ScreenLayout", "HasHardKeyboard", "HasFiveWayNavigation", "ScreenDensity", "GlEsVersion", "SystemSharedLibrary", "SystemAvailableFeature", "NativePlatform", "ScreenWidth", "ScreenHeight", "SystemSupportedLocale", "GlExtension", "DeviceClass", "MaxApkDownloadSizeMb" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Document), global::GooglePlayStore.Document.Parser, new[]{ "Docid", "FetchDocid", "SampleDocid", "Title", "Url", "Snippet", "PriceDeprecated", "Availability", "Image", "Child", "AggregateRating", "Offer", "TranslatedSnippet", "DocumentVariant", "CategoryId", "Decoration", "Parent", "PrivacyPolicyUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DocumentVariant), global::GooglePlayStore.DocumentVariant.Parser, new[]{ "VariationType", "Rule", "Title", "Snippet", "RecentChanges", "AutoTranslation", "Offer", "ChannelId", "Child", "Decoration" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Image), global::GooglePlayStore.Image.Parser, new[]{ "ImageType", "ImageUrl", "AltTextLocalized", "SecureUrl", "PositionInSequence", "SupportsFifeUrlOptions", "Color", "ScreenshotSetNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.TranslatedText), global::GooglePlayStore.TranslatedText.Parser, new[]{ "Text", "SourceLocale", "TargetLocale" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PlusOneData), global::GooglePlayStore.PlusOneData.Parser, new[]{ "SetByUser", "Total", "CirclesTotal", "CirclesPeople" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PlusPerson), global::GooglePlayStore.PlusPerson.Parser, new[]{ "DisplayName", "ProfileImageUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AlbumDetails), global::GooglePlayStore.AlbumDetails.Parser, new[]{ "Name", "Details", "DisplayArtist" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AppDetails), global::GooglePlayStore.AppDetails.Parser, new[]{ "DeveloperName", "MajorVersionNumber", "VersionCode", "VersionString", "Title", "AppCategory", "ContentRating", "InstallationSize", "Permission", "DeveloperEmail", "DeveloperWebsite", "NumDownloads", "PackageName", "RecentChangesHtml", "UploadDate", "File", "AppType", "Unstable", "ContainsAds", "Dependencies", "TestingProgramInfo", "EarlyAccessInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Dependencies), global::GooglePlayStore.Dependencies.Parser, new[]{ "Unknown1", "Unknown2", "Dependency", "Unknown3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Dependency), global::GooglePlayStore.Dependency.Parser, new[]{ "PackageName", "Version", "Unknown4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.TestingProgramInfo), global::GooglePlayStore.TestingProgramInfo.Parser, new[]{ "Subscribed", "Subscribed1", "TestingProgramEmail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.EarlyAccessInfo), global::GooglePlayStore.EarlyAccessInfo.Parser, new[]{ "Email" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ArtistDetails), global::GooglePlayStore.ArtistDetails.Parser, new[]{ "DetailsUrl", "Name", "ExternalLinks" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ArtistExternalLinks), global::GooglePlayStore.ArtistExternalLinks.Parser, new[]{ "WebsiteUrl", "GooglePlusProfileUrl", "YoutubeChannelUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DocumentDetails), global::GooglePlayStore.DocumentDetails.Parser, new[]{ "AppDetails", "AlbumDetails", "ArtistDetails", "SongDetails", "BookDetails", "VideoDetails", "SubscriptionDetails", "MagazineDetails", "TvShowDetails", "TvSeasonDetails", "TvEpisodeDetails" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.FileMetadata), global::GooglePlayStore.FileMetadata.Parser, new[]{ "FileType", "VersionCode", "Size" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.MagazineDetails), global::GooglePlayStore.MagazineDetails.Parser, new[]{ "ParentDetailsUrl", "DeviceAvailabilityDescriptionHtml", "PsvDescription", "DeliveryFrequencyDescription" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.MusicDetails), global::GooglePlayStore.MusicDetails.Parser, new[]{ "Censoring", "DurationSec", "OriginalReleaseDate", "Label", "Artist", "Genre", "ReleaseDate", "ReleaseType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SongDetails), global::GooglePlayStore.SongDetails.Parser, new[]{ "Name", "Details", "AlbumName", "TrackNumber", "PreviewUrl", "DisplayArtist" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SubscriptionDetails), global::GooglePlayStore.SubscriptionDetails.Parser, new[]{ "SubscriptionPeriod" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Trailer), global::GooglePlayStore.Trailer.Parser, new[]{ "TrailerId", "Title", "ThumbnailUrl", "WatchUrl", "Duration" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.TvEpisodeDetails), global::GooglePlayStore.TvEpisodeDetails.Parser, new[]{ "ParentDetailsUrl", "EpisodeIndex", "ReleaseDate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.TvSeasonDetails), global::GooglePlayStore.TvSeasonDetails.Parser, new[]{ "ParentDetailsUrl", "SeasonIndex", "ReleaseDate", "Broadcaster" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.TvShowDetails), global::GooglePlayStore.TvShowDetails.Parser, new[]{ "SeasonCount", "StartYear", "EndYear", "Broadcaster" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.VideoCredit), global::GooglePlayStore.VideoCredit.Parser, new[]{ "CreditType", "Credit", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.VideoDetails), global::GooglePlayStore.VideoDetails.Parser, new[]{ "Credit", "Duration", "ReleaseDate", "ContentRating", "Likes", "Dislikes", "Genre", "Trailer", "RentalTerm" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.VideoRentalTerm), global::GooglePlayStore.VideoRentalTerm.Parser, new[]{ "OfferType", "OfferAbbreviation", "RentalHeader" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Bucket), global::GooglePlayStore.Bucket.Parser, new[]{ "Document", "MultiCorpus", "Title", "IconUrl", "FullContentsUrl", "Relevance", "EstimatedResults", "AnalyticsCookie", "FullContentsListUrl", "NextPageUrl", "Ordered" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ListResponse), global::GooglePlayStore.ListResponse.Parser, new[]{ "Bucket", "Doc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DocV1), global::GooglePlayStore.DocV1.Parser, new[]{ "FinskyDoc", "Docid", "DetailsUrl", "ReviewsUrl", "RelatedListUrl", "MoreByListUrl", "ShareUrl", "Creator", "Details", "DescriptionHtml", "RelatedBrowseUrl", "MoreByBrowseUrl", "RelatedHeader", "MoreByHeader", "Title", "PlusOneData", "WarningMessage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.DocV2), global::GooglePlayStore.DocV2.Parser, new[]{ "Docid", "BackendDocid", "DocType", "BackendId", "Title", "Creator", "DescriptionHtml", "Offer", "Availability", "Image", "Child", "ContainerMetadata", "Details", "AggregateRating", "RelatedLinks", "DetailsUrl", "ShareUrl", "ReviewsUrl", "BackendUrl", "PurchaseDetailsUrl", "DetailsReusable", "Subtitle", "Unknown25" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Unknown25), global::GooglePlayStore.Unknown25.Parser, new[]{ "Item" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Unknown25Item), global::GooglePlayStore.Unknown25Item.Parser, new[]{ "Label", "Container" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Unknown25Container), global::GooglePlayStore.Unknown25Container.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.RelatedLinks), global::GooglePlayStore.RelatedLinks.Parser, new[]{ "Unknown1", "PrivacyPolicyUrl", "YouMightAlsoLike", "Rated", "RelatedLinks_", "CategoryInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.RelatedLinksUnknown1), global::GooglePlayStore.RelatedLinksUnknown1.Parser, new[]{ "Unknown2" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.RelatedLinksUnknown2), global::GooglePlayStore.RelatedLinksUnknown2.Parser, new[]{ "NextPageUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Rated), global::GooglePlayStore.Rated.Parser, new[]{ "Label", "Image", "LearnMoreHtmlLink" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.RelatedLink), global::GooglePlayStore.RelatedLink.Parser, new[]{ "Label", "Url1", "Url2" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CategoryInfo), global::GooglePlayStore.CategoryInfo.Parser, new[]{ "AppType", "AppCategory" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.EncryptedSubscriberInfo), global::GooglePlayStore.EncryptedSubscriberInfo.Parser, new[]{ "Data", "EncryptedKey", "Signature", "InitVector", "GoogleKeyVersion", "CarrierKeyVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Availability), global::GooglePlayStore.Availability.Parser, new[]{ "Restriction", "OfferType", "Rule", "AvailableIfOwned", "Install", "FilterInfo", "OwnershipInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.FilterEvaluationInfo), global::GooglePlayStore.FilterEvaluationInfo.Parser, new[]{ "RuleEvaluation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Rule), global::GooglePlayStore.Rule.Parser, new[]{ "Negate", "Operator", "Key", "StringArg", "LongArg", "DoubleArg", "Subrule", "ResponseCode", "Comment", "StringArgHash", "ConstArg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.RuleEvaluation), global::GooglePlayStore.RuleEvaluation.Parser, new[]{ "Rule", "ActualStringValue", "ActualLongValue", "ActualBoolValue", "ActualDoubleValue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.LibraryAppDetails), global::GooglePlayStore.LibraryAppDetails.Parser, new[]{ "CertificateHash", "RefundTimeoutTimestampMsec", "PostDeliveryRefundWindowMsec" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.LibraryInAppDetails), global::GooglePlayStore.LibraryInAppDetails.Parser, new[]{ "SignedPurchaseData", "Signature" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.LibraryMutation), global::GooglePlayStore.LibraryMutation.Parser, new[]{ "Docid", "OfferType", "DocumentHash", "Deleted", "AppDetails", "SubscriptionDetails", "InAppDetails" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.LibrarySubscriptionDetails), global::GooglePlayStore.LibrarySubscriptionDetails.Parser, new[]{ "InitiationTimestampMsec", "ValidUntilTimestampMsec", "AutoRenewing", "TrialUntilTimestampMsec" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.LibraryUpdate), global::GooglePlayStore.LibraryUpdate.Parser, new[]{ "Status", "Corpus", "ServerToken", "Mutation", "HasMore", "LibraryId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidAppNotificationData), global::GooglePlayStore.AndroidAppNotificationData.Parser, new[]{ "VersionCode", "AssetId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.InAppNotificationData), global::GooglePlayStore.InAppNotificationData.Parser, new[]{ "CheckoutOrderId", "InAppNotificationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.LibraryDirtyData), global::GooglePlayStore.LibraryDirtyData.Parser, new[]{ "Backend" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Notification), global::GooglePlayStore.Notification.Parser, new[]{ "NotificationType", "Timestamp", "Docid", "DocTitle", "UserEmail", "AppData", "AppDeliveryData", "PurchaseRemovalData", "UserNotificationData", "InAppNotificationData", "PurchaseDeclinedData", "NotificationId", "LibraryUpdate", "LibraryDirtyData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PurchaseDeclinedData), global::GooglePlayStore.PurchaseDeclinedData.Parser, new[]{ "Reason", "ShowNotification" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PurchaseRemovalData), global::GooglePlayStore.PurchaseRemovalData.Parser, new[]{ "Malicious" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.UserNotificationData), global::GooglePlayStore.UserNotificationData.Parser, new[]{ "NotificationTitle", "NotificationText", "TickerText", "DialogTitle", "DialogText" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AggregateRating), global::GooglePlayStore.AggregateRating.Parser, new[]{ "Type", "StarRating", "RatingsCount", "OneStarRatings", "TwoStarRatings", "ThreeStarRatings", "FourStarRatings", "FiveStarRatings", "ThumbsUpCount", "ThumbsDownCount", "CommentCount", "BayesianMeanRating" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AcceptTosResponse), global::GooglePlayStore.AcceptTosResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CarrierBillingConfig), global::GooglePlayStore.CarrierBillingConfig.Parser, new[]{ "Id", "Name", "ApiVersion", "ProvisioningUrl", "CredentialsUrl", "TosRequired", "PerTransactionCredentialsRequired", "SendSubscriberIdWithCarrierBillingRequests" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.BillingConfig), global::GooglePlayStore.BillingConfig.Parser, new[]{ "CarrierBillingConfig", "MaxIabApiVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CorpusMetadata), global::GooglePlayStore.CorpusMetadata.Parser, new[]{ "Backend", "Name", "LandingUrl", "LibraryName", "RecsWidgetUrl", "ShopName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Experiments), global::GooglePlayStore.Experiments.Parser, new[]{ "ExperimentId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SelfUpdateConfig), global::GooglePlayStore.SelfUpdateConfig.Parser, new[]{ "LatestClientVersionCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.TocResponse), global::GooglePlayStore.TocResponse.Parser, new[]{ "Corpus", "TosVersionDeprecated", "TosContent", "HomeUrl", "Experiments", "TosCheckboxTextMarketingEmails", "TosToken", "IconOverrideUrl", "SelfUpdateConfig", "RequiresUploadDeviceConfig", "BillingConfig", "RecsWidgetUrl", "SocialHomeUrl", "AgeVerificationRequired", "GplusSignupEnabled", "RedeemEnabled", "HelpUrl", "ThemeId", "EntertainmentHomeUrl", "Cookie" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Payload), global::GooglePlayStore.Payload.Parser, new[]{ "ListResponse", "DetailsResponse", "ReviewResponse", "BuyResponse", "SearchResponse", "TocResponse", "BrowseResponse", "PurchaseStatusResponse", "LogResponse", "FlagContentResponse", "BulkDetailsResponse", "DeliveryResponse", "AcceptTosResponse", "AndroidCheckinResponse", "UploadDeviceConfigResponse", "SearchSuggestResponse", "TestingProgramResponse" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PreFetch), global::GooglePlayStore.PreFetch.Parser, new[]{ "Url", "Response", "Etag", "Ttl", "SoftTtl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ServerMetadata), global::GooglePlayStore.ServerMetadata.Parser, new[]{ "LatencyMillis" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Targets), global::GooglePlayStore.Targets.Parser, new[]{ "TargetId", "Signature" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ServerCookie), global::GooglePlayStore.ServerCookie.Parser, new[]{ "Type", "Token" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ServerCookies), global::GooglePlayStore.ServerCookies.Parser, new[]{ "ServerCookie" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ResponseWrapper), global::GooglePlayStore.ResponseWrapper.Parser, new[]{ "Payload", "Commands", "PreFetch", "Notification", "ServerMetadata", "Targets", "ServerCookies", "ServerLogsCookie" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ServerCommands), global::GooglePlayStore.ServerCommands.Parser, new[]{ "ClearCache", "DisplayErrorMessage", "LogErrorStacktrace" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.GetReviewsResponse), global::GooglePlayStore.GetReviewsResponse.Parser, new[]{ "Review", "MatchingCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Review), global::GooglePlayStore.Review.Parser, new[]{ "AuthorName", "Url", "Source", "DocumentVersion", "TimestampMsec", "StarRating", "Title", "Comment", "CommentId", "DeviceName", "ReplyText", "ReplyTimestampMsec", "Author", "Author2" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Author), global::GooglePlayStore.Author.Parser, new[]{ "Name", "Urls" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Author2), global::GooglePlayStore.Author2.Parser, new[]{ "PersonIdString", "PersonId", "Unknown1", "Unknown2", "Name", "Urls", "GooglePlusUrl", "GooglePlusTagline" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.Avatar), global::GooglePlayStore.Avatar.Parser, new[]{ "Unknown1", "Url", "SecureUrl", "Unknown2", "Unknown3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ReviewResponse), global::GooglePlayStore.ReviewResponse.Parser, new[]{ "GetResponse", "NextPageUrl", "UserReview" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.RelatedSearch), global::GooglePlayStore.RelatedSearch.Parser, new[]{ "SearchUrl", "Header", "BackendId", "DocType", "Current" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SearchResponse), global::GooglePlayStore.SearchResponse.Parser, new[]{ "OriginalQuery", "SuggestedQuery", "AggregateQuery", "Bucket", "Doc", "RelatedSearch", "NextPageUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SearchSuggestResponse), global::GooglePlayStore.SearchSuggestResponse.Parser, new[]{ "Entry" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SearchSuggestEntry), global::GooglePlayStore.SearchSuggestEntry.Parser, new[]{ "Type", "SuggestedQuery", "ImageContainer", "Title", "PackageNameContainer" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SearchSuggestEntry.Types.ImageContainer), global::GooglePlayStore.SearchSuggestEntry.Types.ImageContainer.Parser, new[]{ "ImageUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.SearchSuggestEntry.Types.PackageNameContainer), global::GooglePlayStore.SearchSuggestEntry.Types.PackageNameContainer.Parser, new[]{ "PackageName" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.TestingProgramResponse), global::GooglePlayStore.TestingProgramResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.TestingProgramResult), global::GooglePlayStore.TestingProgramResult.Parser, new[]{ "Details" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.TestingProgramDetails), global::GooglePlayStore.TestingProgramDetails.Parser, new[]{ "Flag1", "Id", "Unsubscribed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.LogRequest), global::GooglePlayStore.LogRequest.Parser, new[]{ "Timestamp", "DownloadConfirmationQuery" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.TestingProgramRequest), global::GooglePlayStore.TestingProgramRequest.Parser, new[]{ "PackageName", "Subscribe" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.UploadDeviceConfigRequest), global::GooglePlayStore.UploadDeviceConfigRequest.Parser, new[]{ "DeviceConfiguration", "Manufacturer", "GcmRegistrationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.UploadDeviceConfigResponse), global::GooglePlayStore.UploadDeviceConfigResponse.Parser, new[]{ "UploadDeviceConfigToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidCheckinRequest), global::GooglePlayStore.AndroidCheckinRequest.Parser, new[]{ "Imei", "Id", "Digest", "Checkin", "DesiredBuild", "Locale", "LoggingId", "MarketCheckin", "MacAddr", "Meid", "AccountCookie", "TimeZone", "SecurityToken", "Version", "OtaCert", "SerialNumber", "Esn", "DeviceConfiguration", "MacAddrType", "Fragment", "UserName", "UserSerialNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidCheckinResponse), global::GooglePlayStore.AndroidCheckinResponse.Parser, new[]{ "StatsOk", "Intent", "TimeMsec", "Digest", "Setting", "MarketOk", "AndroidId", "SecurityToken", "SettingsDiff", "DeleteSetting", "DeviceCheckinConsistencyToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.GservicesSetting), global::GooglePlayStore.GservicesSetting.Parser, new[]{ "Name", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidBuildProto), global::GooglePlayStore.AndroidBuildProto.Parser, new[]{ "Id", "Product", "Carrier", "Radio", "Bootloader", "Client", "Timestamp", "GoogleServices", "Device", "SdkVersion", "Model", "Manufacturer", "BuildProduct", "OtaInstalled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidCheckinProto), global::GooglePlayStore.AndroidCheckinProto.Parser, new[]{ "Build", "LastCheckinMsec", "Event", "Stat", "RequestedGroup", "CellOperator", "SimOperator", "Roaming", "UserNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidEventProto), global::GooglePlayStore.AndroidEventProto.Parser, new[]{ "Tag", "Value", "TimeMsec" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidIntentProto), global::GooglePlayStore.AndroidIntentProto.Parser, new[]{ "Action", "DataUri", "MimeType", "JavaClass" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidStatisticProto), global::GooglePlayStore.AndroidStatisticProto.Parser, new[]{ "Tag", "Count", "Sum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.ClientLibraryState), global::GooglePlayStore.ClientLibraryState.Parser, new[]{ "Corpus", "ServerToken", "HashCodeSum", "LibrarySize", "LibraryId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidDataUsageProto), global::GooglePlayStore.AndroidDataUsageProto.Parser, new[]{ "Version", "CurrentReportMsec", "KeyToPackageNameMapping", "PayloadLevelAppStat", "IpLayerNetworkStat" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AndroidUsageStatsReport), global::GooglePlayStore.AndroidUsageStatsReport.Parser, new[]{ "AndroidId", "LoggingId", "UsageStats" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.AppBucket), global::GooglePlayStore.AppBucket.Parser, new[]{ "BucketStartMsec", "BucketDurationMsec", "StatCounters", "OperationCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.CounterData), global::GooglePlayStore.CounterData.Parser, new[]{ "Bytes", "Packets" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.IpLayerAppStat), global::GooglePlayStore.IpLayerAppStat.Parser, new[]{ "PackageKey", "ApplicationTag", "IpLayerAppBucket" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.IpLayerNetworkBucket), global::GooglePlayStore.IpLayerNetworkBucket.Parser, new[]{ "BucketStartMsec", "BucketDurationMsec", "StatCounters", "NetworkActiveDuration" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.IpLayerNetworkStat), global::GooglePlayStore.IpLayerNetworkStat.Parser, new[]{ "NetworkDetails", "Type", "IpLayerNetworkBucket", "IpLayerAppStat" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.KeyToPackageNameMapping), global::GooglePlayStore.KeyToPackageNameMapping.Parser, new[]{ "PackageKey", "UidName", "SharedPackageList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PackageInfo), global::GooglePlayStore.PackageInfo.Parser, new[]{ "PkgName", "VersionCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.PayloadLevelAppStat), global::GooglePlayStore.PayloadLevelAppStat.Parser, new[]{ "PackageKey", "ApplicationTag", "PayloadLevelAppBucket" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.StatCounters), global::GooglePlayStore.StatCounters.Parser, new[]{ "NetworkProto", "Direction", "CounterData", "FgBg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GooglePlayStore.UsageStatsExtensionProto), global::GooglePlayStore.UsageStatsExtensionProto.Parser, new[]{ "DataUsage" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AndroidAppDeliveryData : pb::IMessage<AndroidAppDeliveryData> {
    private static readonly pb::MessageParser<AndroidAppDeliveryData> _parser = new pb::MessageParser<AndroidAppDeliveryData>(() => new AndroidAppDeliveryData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidAppDeliveryData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidAppDeliveryData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidAppDeliveryData(AndroidAppDeliveryData other) : this() {
      downloadSize_ = other.downloadSize_;
      signature_ = other.signature_;
      downloadUrl_ = other.downloadUrl_;
      additionalFile_ = other.additionalFile_.Clone();
      downloadAuthCookie_ = other.downloadAuthCookie_.Clone();
      forwardLocked_ = other.forwardLocked_;
      refundTimeout_ = other.refundTimeout_;
      serverInitiated_ = other.serverInitiated_;
      postInstallRefundWindowMillis_ = other.postInstallRefundWindowMillis_;
      immediateStartNeeded_ = other.immediateStartNeeded_;
      PatchData = other.patchData_ != null ? other.PatchData.Clone() : null;
      EncryptionParams = other.encryptionParams_ != null ? other.EncryptionParams.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidAppDeliveryData Clone() {
      return new AndroidAppDeliveryData(this);
    }

    /// <summary>Field number for the "downloadSize" field.</summary>
    public const int DownloadSizeFieldNumber = 1;
    private long downloadSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DownloadSize {
      get { return downloadSize_; }
      set {
        downloadSize_ = value;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private string signature_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "downloadUrl" field.</summary>
    public const int DownloadUrlFieldNumber = 3;
    private string downloadUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DownloadUrl {
      get { return downloadUrl_; }
      set {
        downloadUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "additionalFile" field.</summary>
    public const int AdditionalFileFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.AppFileMetadata> _repeated_additionalFile_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.AppFileMetadata.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.AppFileMetadata> additionalFile_ = new pbc::RepeatedField<global::GooglePlayStore.AppFileMetadata>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.AppFileMetadata> AdditionalFile {
      get { return additionalFile_; }
    }

    /// <summary>Field number for the "downloadAuthCookie" field.</summary>
    public const int DownloadAuthCookieFieldNumber = 5;
    private static readonly pb::FieldCodec<global::GooglePlayStore.HttpCookie> _repeated_downloadAuthCookie_codec
        = pb::FieldCodec.ForMessage(42, global::GooglePlayStore.HttpCookie.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.HttpCookie> downloadAuthCookie_ = new pbc::RepeatedField<global::GooglePlayStore.HttpCookie>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.HttpCookie> DownloadAuthCookie {
      get { return downloadAuthCookie_; }
    }

    /// <summary>Field number for the "forwardLocked" field.</summary>
    public const int ForwardLockedFieldNumber = 6;
    private bool forwardLocked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ForwardLocked {
      get { return forwardLocked_; }
      set {
        forwardLocked_ = value;
      }
    }

    /// <summary>Field number for the "refundTimeout" field.</summary>
    public const int RefundTimeoutFieldNumber = 7;
    private long refundTimeout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RefundTimeout {
      get { return refundTimeout_; }
      set {
        refundTimeout_ = value;
      }
    }

    /// <summary>Field number for the "serverInitiated" field.</summary>
    public const int ServerInitiatedFieldNumber = 8;
    private bool serverInitiated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ServerInitiated {
      get { return serverInitiated_; }
      set {
        serverInitiated_ = value;
      }
    }

    /// <summary>Field number for the "postInstallRefundWindowMillis" field.</summary>
    public const int PostInstallRefundWindowMillisFieldNumber = 9;
    private long postInstallRefundWindowMillis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PostInstallRefundWindowMillis {
      get { return postInstallRefundWindowMillis_; }
      set {
        postInstallRefundWindowMillis_ = value;
      }
    }

    /// <summary>Field number for the "immediateStartNeeded" field.</summary>
    public const int ImmediateStartNeededFieldNumber = 10;
    private bool immediateStartNeeded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ImmediateStartNeeded {
      get { return immediateStartNeeded_; }
      set {
        immediateStartNeeded_ = value;
      }
    }

    /// <summary>Field number for the "patchData" field.</summary>
    public const int PatchDataFieldNumber = 11;
    private global::GooglePlayStore.AndroidAppPatchData patchData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AndroidAppPatchData PatchData {
      get { return patchData_; }
      set {
        patchData_ = value;
      }
    }

    /// <summary>Field number for the "encryptionParams" field.</summary>
    public const int EncryptionParamsFieldNumber = 12;
    private global::GooglePlayStore.EncryptionParams encryptionParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.EncryptionParams EncryptionParams {
      get { return encryptionParams_; }
      set {
        encryptionParams_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidAppDeliveryData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidAppDeliveryData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DownloadSize != other.DownloadSize) return false;
      if (Signature != other.Signature) return false;
      if (DownloadUrl != other.DownloadUrl) return false;
      if(!additionalFile_.Equals(other.additionalFile_)) return false;
      if(!downloadAuthCookie_.Equals(other.downloadAuthCookie_)) return false;
      if (ForwardLocked != other.ForwardLocked) return false;
      if (RefundTimeout != other.RefundTimeout) return false;
      if (ServerInitiated != other.ServerInitiated) return false;
      if (PostInstallRefundWindowMillis != other.PostInstallRefundWindowMillis) return false;
      if (ImmediateStartNeeded != other.ImmediateStartNeeded) return false;
      if (!object.Equals(PatchData, other.PatchData)) return false;
      if (!object.Equals(EncryptionParams, other.EncryptionParams)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DownloadSize != 0L) hash ^= DownloadSize.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (DownloadUrl.Length != 0) hash ^= DownloadUrl.GetHashCode();
      hash ^= additionalFile_.GetHashCode();
      hash ^= downloadAuthCookie_.GetHashCode();
      if (ForwardLocked != false) hash ^= ForwardLocked.GetHashCode();
      if (RefundTimeout != 0L) hash ^= RefundTimeout.GetHashCode();
      if (ServerInitiated != false) hash ^= ServerInitiated.GetHashCode();
      if (PostInstallRefundWindowMillis != 0L) hash ^= PostInstallRefundWindowMillis.GetHashCode();
      if (ImmediateStartNeeded != false) hash ^= ImmediateStartNeeded.GetHashCode();
      if (patchData_ != null) hash ^= PatchData.GetHashCode();
      if (encryptionParams_ != null) hash ^= EncryptionParams.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DownloadSize != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(DownloadSize);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Signature);
      }
      if (DownloadUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DownloadUrl);
      }
      additionalFile_.WriteTo(output, _repeated_additionalFile_codec);
      downloadAuthCookie_.WriteTo(output, _repeated_downloadAuthCookie_codec);
      if (ForwardLocked != false) {
        output.WriteRawTag(48);
        output.WriteBool(ForwardLocked);
      }
      if (RefundTimeout != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(RefundTimeout);
      }
      if (ServerInitiated != false) {
        output.WriteRawTag(64);
        output.WriteBool(ServerInitiated);
      }
      if (PostInstallRefundWindowMillis != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(PostInstallRefundWindowMillis);
      }
      if (ImmediateStartNeeded != false) {
        output.WriteRawTag(80);
        output.WriteBool(ImmediateStartNeeded);
      }
      if (patchData_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(PatchData);
      }
      if (encryptionParams_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(EncryptionParams);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DownloadSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DownloadSize);
      }
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
      }
      if (DownloadUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DownloadUrl);
      }
      size += additionalFile_.CalculateSize(_repeated_additionalFile_codec);
      size += downloadAuthCookie_.CalculateSize(_repeated_downloadAuthCookie_codec);
      if (ForwardLocked != false) {
        size += 1 + 1;
      }
      if (RefundTimeout != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RefundTimeout);
      }
      if (ServerInitiated != false) {
        size += 1 + 1;
      }
      if (PostInstallRefundWindowMillis != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PostInstallRefundWindowMillis);
      }
      if (ImmediateStartNeeded != false) {
        size += 1 + 1;
      }
      if (patchData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PatchData);
      }
      if (encryptionParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EncryptionParams);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidAppDeliveryData other) {
      if (other == null) {
        return;
      }
      if (other.DownloadSize != 0L) {
        DownloadSize = other.DownloadSize;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      if (other.DownloadUrl.Length != 0) {
        DownloadUrl = other.DownloadUrl;
      }
      additionalFile_.Add(other.additionalFile_);
      downloadAuthCookie_.Add(other.downloadAuthCookie_);
      if (other.ForwardLocked != false) {
        ForwardLocked = other.ForwardLocked;
      }
      if (other.RefundTimeout != 0L) {
        RefundTimeout = other.RefundTimeout;
      }
      if (other.ServerInitiated != false) {
        ServerInitiated = other.ServerInitiated;
      }
      if (other.PostInstallRefundWindowMillis != 0L) {
        PostInstallRefundWindowMillis = other.PostInstallRefundWindowMillis;
      }
      if (other.ImmediateStartNeeded != false) {
        ImmediateStartNeeded = other.ImmediateStartNeeded;
      }
      if (other.patchData_ != null) {
        if (patchData_ == null) {
          patchData_ = new global::GooglePlayStore.AndroidAppPatchData();
        }
        PatchData.MergeFrom(other.PatchData);
      }
      if (other.encryptionParams_ != null) {
        if (encryptionParams_ == null) {
          encryptionParams_ = new global::GooglePlayStore.EncryptionParams();
        }
        EncryptionParams.MergeFrom(other.EncryptionParams);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            DownloadSize = input.ReadInt64();
            break;
          }
          case 18: {
            Signature = input.ReadString();
            break;
          }
          case 26: {
            DownloadUrl = input.ReadString();
            break;
          }
          case 34: {
            additionalFile_.AddEntriesFrom(input, _repeated_additionalFile_codec);
            break;
          }
          case 42: {
            downloadAuthCookie_.AddEntriesFrom(input, _repeated_downloadAuthCookie_codec);
            break;
          }
          case 48: {
            ForwardLocked = input.ReadBool();
            break;
          }
          case 56: {
            RefundTimeout = input.ReadInt64();
            break;
          }
          case 64: {
            ServerInitiated = input.ReadBool();
            break;
          }
          case 72: {
            PostInstallRefundWindowMillis = input.ReadInt64();
            break;
          }
          case 80: {
            ImmediateStartNeeded = input.ReadBool();
            break;
          }
          case 90: {
            if (patchData_ == null) {
              patchData_ = new global::GooglePlayStore.AndroidAppPatchData();
            }
            input.ReadMessage(patchData_);
            break;
          }
          case 98: {
            if (encryptionParams_ == null) {
              encryptionParams_ = new global::GooglePlayStore.EncryptionParams();
            }
            input.ReadMessage(encryptionParams_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AndroidAppPatchData : pb::IMessage<AndroidAppPatchData> {
    private static readonly pb::MessageParser<AndroidAppPatchData> _parser = new pb::MessageParser<AndroidAppPatchData>(() => new AndroidAppPatchData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidAppPatchData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidAppPatchData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidAppPatchData(AndroidAppPatchData other) : this() {
      baseVersionCode_ = other.baseVersionCode_;
      baseSignature_ = other.baseSignature_;
      downloadUrl_ = other.downloadUrl_;
      patchFormat_ = other.patchFormat_;
      maxPatchSize_ = other.maxPatchSize_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidAppPatchData Clone() {
      return new AndroidAppPatchData(this);
    }

    /// <summary>Field number for the "baseVersionCode" field.</summary>
    public const int BaseVersionCodeFieldNumber = 1;
    private int baseVersionCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BaseVersionCode {
      get { return baseVersionCode_; }
      set {
        baseVersionCode_ = value;
      }
    }

    /// <summary>Field number for the "baseSignature" field.</summary>
    public const int BaseSignatureFieldNumber = 2;
    private string baseSignature_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BaseSignature {
      get { return baseSignature_; }
      set {
        baseSignature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "downloadUrl" field.</summary>
    public const int DownloadUrlFieldNumber = 3;
    private string downloadUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DownloadUrl {
      get { return downloadUrl_; }
      set {
        downloadUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "patchFormat" field.</summary>
    public const int PatchFormatFieldNumber = 4;
    private int patchFormat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PatchFormat {
      get { return patchFormat_; }
      set {
        patchFormat_ = value;
      }
    }

    /// <summary>Field number for the "maxPatchSize" field.</summary>
    public const int MaxPatchSizeFieldNumber = 5;
    private long maxPatchSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxPatchSize {
      get { return maxPatchSize_; }
      set {
        maxPatchSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidAppPatchData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidAppPatchData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BaseVersionCode != other.BaseVersionCode) return false;
      if (BaseSignature != other.BaseSignature) return false;
      if (DownloadUrl != other.DownloadUrl) return false;
      if (PatchFormat != other.PatchFormat) return false;
      if (MaxPatchSize != other.MaxPatchSize) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BaseVersionCode != 0) hash ^= BaseVersionCode.GetHashCode();
      if (BaseSignature.Length != 0) hash ^= BaseSignature.GetHashCode();
      if (DownloadUrl.Length != 0) hash ^= DownloadUrl.GetHashCode();
      if (PatchFormat != 0) hash ^= PatchFormat.GetHashCode();
      if (MaxPatchSize != 0L) hash ^= MaxPatchSize.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BaseVersionCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BaseVersionCode);
      }
      if (BaseSignature.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BaseSignature);
      }
      if (DownloadUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DownloadUrl);
      }
      if (PatchFormat != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PatchFormat);
      }
      if (MaxPatchSize != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(MaxPatchSize);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BaseVersionCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BaseVersionCode);
      }
      if (BaseSignature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseSignature);
      }
      if (DownloadUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DownloadUrl);
      }
      if (PatchFormat != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PatchFormat);
      }
      if (MaxPatchSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxPatchSize);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidAppPatchData other) {
      if (other == null) {
        return;
      }
      if (other.BaseVersionCode != 0) {
        BaseVersionCode = other.BaseVersionCode;
      }
      if (other.BaseSignature.Length != 0) {
        BaseSignature = other.BaseSignature;
      }
      if (other.DownloadUrl.Length != 0) {
        DownloadUrl = other.DownloadUrl;
      }
      if (other.PatchFormat != 0) {
        PatchFormat = other.PatchFormat;
      }
      if (other.MaxPatchSize != 0L) {
        MaxPatchSize = other.MaxPatchSize;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            BaseVersionCode = input.ReadInt32();
            break;
          }
          case 18: {
            BaseSignature = input.ReadString();
            break;
          }
          case 26: {
            DownloadUrl = input.ReadString();
            break;
          }
          case 32: {
            PatchFormat = input.ReadInt32();
            break;
          }
          case 40: {
            MaxPatchSize = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppFileMetadata : pb::IMessage<AppFileMetadata> {
    private static readonly pb::MessageParser<AppFileMetadata> _parser = new pb::MessageParser<AppFileMetadata>(() => new AppFileMetadata());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppFileMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppFileMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppFileMetadata(AppFileMetadata other) : this() {
      fileType_ = other.fileType_;
      versionCode_ = other.versionCode_;
      size_ = other.size_;
      downloadUrl_ = other.downloadUrl_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppFileMetadata Clone() {
      return new AppFileMetadata(this);
    }

    /// <summary>Field number for the "fileType" field.</summary>
    public const int FileTypeFieldNumber = 1;
    private int fileType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FileType {
      get { return fileType_; }
      set {
        fileType_ = value;
      }
    }

    /// <summary>Field number for the "versionCode" field.</summary>
    public const int VersionCodeFieldNumber = 2;
    private int versionCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VersionCode {
      get { return versionCode_; }
      set {
        versionCode_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 3;
    private long size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "downloadUrl" field.</summary>
    public const int DownloadUrlFieldNumber = 4;
    private string downloadUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DownloadUrl {
      get { return downloadUrl_; }
      set {
        downloadUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppFileMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppFileMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileType != other.FileType) return false;
      if (VersionCode != other.VersionCode) return false;
      if (Size != other.Size) return false;
      if (DownloadUrl != other.DownloadUrl) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FileType != 0) hash ^= FileType.GetHashCode();
      if (VersionCode != 0) hash ^= VersionCode.GetHashCode();
      if (Size != 0L) hash ^= Size.GetHashCode();
      if (DownloadUrl.Length != 0) hash ^= DownloadUrl.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FileType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FileType);
      }
      if (VersionCode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(VersionCode);
      }
      if (Size != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Size);
      }
      if (DownloadUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DownloadUrl);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FileType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FileType);
      }
      if (VersionCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VersionCode);
      }
      if (Size != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Size);
      }
      if (DownloadUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DownloadUrl);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppFileMetadata other) {
      if (other == null) {
        return;
      }
      if (other.FileType != 0) {
        FileType = other.FileType;
      }
      if (other.VersionCode != 0) {
        VersionCode = other.VersionCode;
      }
      if (other.Size != 0L) {
        Size = other.Size;
      }
      if (other.DownloadUrl.Length != 0) {
        DownloadUrl = other.DownloadUrl;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            FileType = input.ReadInt32();
            break;
          }
          case 16: {
            VersionCode = input.ReadInt32();
            break;
          }
          case 24: {
            Size = input.ReadInt64();
            break;
          }
          case 34: {
            DownloadUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EncryptionParams : pb::IMessage<EncryptionParams> {
    private static readonly pb::MessageParser<EncryptionParams> _parser = new pb::MessageParser<EncryptionParams>(() => new EncryptionParams());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EncryptionParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionParams(EncryptionParams other) : this() {
      version_ = other.version_;
      encryptionKey_ = other.encryptionKey_;
      hmacKey_ = other.hmacKey_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionParams Clone() {
      return new EncryptionParams(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "encryptionKey" field.</summary>
    public const int EncryptionKeyFieldNumber = 2;
    private string encryptionKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EncryptionKey {
      get { return encryptionKey_; }
      set {
        encryptionKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hmacKey" field.</summary>
    public const int HmacKeyFieldNumber = 3;
    private string hmacKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HmacKey {
      get { return hmacKey_; }
      set {
        hmacKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EncryptionParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EncryptionParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (EncryptionKey != other.EncryptionKey) return false;
      if (HmacKey != other.HmacKey) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      if (EncryptionKey.Length != 0) hash ^= EncryptionKey.GetHashCode();
      if (HmacKey.Length != 0) hash ^= HmacKey.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Version);
      }
      if (EncryptionKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EncryptionKey);
      }
      if (HmacKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HmacKey);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (EncryptionKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EncryptionKey);
      }
      if (HmacKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HmacKey);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EncryptionParams other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.EncryptionKey.Length != 0) {
        EncryptionKey = other.EncryptionKey;
      }
      if (other.HmacKey.Length != 0) {
        HmacKey = other.HmacKey;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Version = input.ReadInt32();
            break;
          }
          case 18: {
            EncryptionKey = input.ReadString();
            break;
          }
          case 26: {
            HmacKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HttpCookie : pb::IMessage<HttpCookie> {
    private static readonly pb::MessageParser<HttpCookie> _parser = new pb::MessageParser<HttpCookie>(() => new HttpCookie());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HttpCookie> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpCookie() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpCookie(HttpCookie other) : this() {
      name_ = other.name_;
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpCookie Clone() {
      return new HttpCookie(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HttpCookie);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HttpCookie other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HttpCookie other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Address : pb::IMessage<Address> {
    private static readonly pb::MessageParser<Address> _parser = new pb::MessageParser<Address>(() => new Address());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Address> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address(Address other) : this() {
      name_ = other.name_;
      addressLine1_ = other.addressLine1_;
      addressLine2_ = other.addressLine2_;
      city_ = other.city_;
      state_ = other.state_;
      postalCode_ = other.postalCode_;
      postalCountry_ = other.postalCountry_;
      dependentLocality_ = other.dependentLocality_;
      sortingCode_ = other.sortingCode_;
      languageCode_ = other.languageCode_;
      phoneNumber_ = other.phoneNumber_;
      isReduced_ = other.isReduced_;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      email_ = other.email_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address Clone() {
      return new Address(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "addressLine1" field.</summary>
    public const int AddressLine1FieldNumber = 2;
    private string addressLine1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AddressLine1 {
      get { return addressLine1_; }
      set {
        addressLine1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "addressLine2" field.</summary>
    public const int AddressLine2FieldNumber = 3;
    private string addressLine2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AddressLine2 {
      get { return addressLine2_; }
      set {
        addressLine2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "city" field.</summary>
    public const int CityFieldNumber = 4;
    private string city_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string City {
      get { return city_; }
      set {
        city_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 5;
    private string state_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string State {
      get { return state_; }
      set {
        state_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "postalCode" field.</summary>
    public const int PostalCodeFieldNumber = 6;
    private string postalCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PostalCode {
      get { return postalCode_; }
      set {
        postalCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "postalCountry" field.</summary>
    public const int PostalCountryFieldNumber = 7;
    private string postalCountry_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PostalCountry {
      get { return postalCountry_; }
      set {
        postalCountry_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dependentLocality" field.</summary>
    public const int DependentLocalityFieldNumber = 8;
    private string dependentLocality_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DependentLocality {
      get { return dependentLocality_; }
      set {
        dependentLocality_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sortingCode" field.</summary>
    public const int SortingCodeFieldNumber = 9;
    private string sortingCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SortingCode {
      get { return sortingCode_; }
      set {
        sortingCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "languageCode" field.</summary>
    public const int LanguageCodeFieldNumber = 10;
    private string languageCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LanguageCode {
      get { return languageCode_; }
      set {
        languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phoneNumber" field.</summary>
    public const int PhoneNumberFieldNumber = 11;
    private string phoneNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PhoneNumber {
      get { return phoneNumber_; }
      set {
        phoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isReduced" field.</summary>
    public const int IsReducedFieldNumber = 12;
    private bool isReduced_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsReduced {
      get { return isReduced_; }
      set {
        isReduced_ = value;
      }
    }

    /// <summary>Field number for the "firstName" field.</summary>
    public const int FirstNameFieldNumber = 13;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lastName" field.</summary>
    public const int LastNameFieldNumber = 14;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 15;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Address);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Address other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (AddressLine1 != other.AddressLine1) return false;
      if (AddressLine2 != other.AddressLine2) return false;
      if (City != other.City) return false;
      if (State != other.State) return false;
      if (PostalCode != other.PostalCode) return false;
      if (PostalCountry != other.PostalCountry) return false;
      if (DependentLocality != other.DependentLocality) return false;
      if (SortingCode != other.SortingCode) return false;
      if (LanguageCode != other.LanguageCode) return false;
      if (PhoneNumber != other.PhoneNumber) return false;
      if (IsReduced != other.IsReduced) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (Email != other.Email) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (AddressLine1.Length != 0) hash ^= AddressLine1.GetHashCode();
      if (AddressLine2.Length != 0) hash ^= AddressLine2.GetHashCode();
      if (City.Length != 0) hash ^= City.GetHashCode();
      if (State.Length != 0) hash ^= State.GetHashCode();
      if (PostalCode.Length != 0) hash ^= PostalCode.GetHashCode();
      if (PostalCountry.Length != 0) hash ^= PostalCountry.GetHashCode();
      if (DependentLocality.Length != 0) hash ^= DependentLocality.GetHashCode();
      if (SortingCode.Length != 0) hash ^= SortingCode.GetHashCode();
      if (LanguageCode.Length != 0) hash ^= LanguageCode.GetHashCode();
      if (PhoneNumber.Length != 0) hash ^= PhoneNumber.GetHashCode();
      if (IsReduced != false) hash ^= IsReduced.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (AddressLine1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AddressLine1);
      }
      if (AddressLine2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AddressLine2);
      }
      if (City.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(City);
      }
      if (State.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(State);
      }
      if (PostalCode.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PostalCode);
      }
      if (PostalCountry.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PostalCountry);
      }
      if (DependentLocality.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DependentLocality);
      }
      if (SortingCode.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(SortingCode);
      }
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(LanguageCode);
      }
      if (PhoneNumber.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(PhoneNumber);
      }
      if (IsReduced != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsReduced);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(LastName);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Email);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (AddressLine1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AddressLine1);
      }
      if (AddressLine2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AddressLine2);
      }
      if (City.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(City);
      }
      if (State.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(State);
      }
      if (PostalCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PostalCode);
      }
      if (PostalCountry.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PostalCountry);
      }
      if (DependentLocality.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DependentLocality);
      }
      if (SortingCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SortingCode);
      }
      if (LanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
      }
      if (PhoneNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNumber);
      }
      if (IsReduced != false) {
        size += 1 + 1;
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Address other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.AddressLine1.Length != 0) {
        AddressLine1 = other.AddressLine1;
      }
      if (other.AddressLine2.Length != 0) {
        AddressLine2 = other.AddressLine2;
      }
      if (other.City.Length != 0) {
        City = other.City;
      }
      if (other.State.Length != 0) {
        State = other.State;
      }
      if (other.PostalCode.Length != 0) {
        PostalCode = other.PostalCode;
      }
      if (other.PostalCountry.Length != 0) {
        PostalCountry = other.PostalCountry;
      }
      if (other.DependentLocality.Length != 0) {
        DependentLocality = other.DependentLocality;
      }
      if (other.SortingCode.Length != 0) {
        SortingCode = other.SortingCode;
      }
      if (other.LanguageCode.Length != 0) {
        LanguageCode = other.LanguageCode;
      }
      if (other.PhoneNumber.Length != 0) {
        PhoneNumber = other.PhoneNumber;
      }
      if (other.IsReduced != false) {
        IsReduced = other.IsReduced;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            AddressLine1 = input.ReadString();
            break;
          }
          case 26: {
            AddressLine2 = input.ReadString();
            break;
          }
          case 34: {
            City = input.ReadString();
            break;
          }
          case 42: {
            State = input.ReadString();
            break;
          }
          case 50: {
            PostalCode = input.ReadString();
            break;
          }
          case 58: {
            PostalCountry = input.ReadString();
            break;
          }
          case 66: {
            DependentLocality = input.ReadString();
            break;
          }
          case 74: {
            SortingCode = input.ReadString();
            break;
          }
          case 82: {
            LanguageCode = input.ReadString();
            break;
          }
          case 90: {
            PhoneNumber = input.ReadString();
            break;
          }
          case 96: {
            IsReduced = input.ReadBool();
            break;
          }
          case 106: {
            FirstName = input.ReadString();
            break;
          }
          case 114: {
            LastName = input.ReadString();
            break;
          }
          case 122: {
            Email = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BookAuthor : pb::IMessage<BookAuthor> {
    private static readonly pb::MessageParser<BookAuthor> _parser = new pb::MessageParser<BookAuthor>(() => new BookAuthor());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BookAuthor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookAuthor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookAuthor(BookAuthor other) : this() {
      name_ = other.name_;
      deprecatedQuery_ = other.deprecatedQuery_;
      Docid = other.docid_ != null ? other.Docid.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookAuthor Clone() {
      return new BookAuthor(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deprecatedQuery" field.</summary>
    public const int DeprecatedQueryFieldNumber = 2;
    private string deprecatedQuery_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeprecatedQuery {
      get { return deprecatedQuery_; }
      set {
        deprecatedQuery_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "docid" field.</summary>
    public const int DocidFieldNumber = 3;
    private global::GooglePlayStore.Docid docid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Docid Docid {
      get { return docid_; }
      set {
        docid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BookAuthor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BookAuthor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DeprecatedQuery != other.DeprecatedQuery) return false;
      if (!object.Equals(Docid, other.Docid)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DeprecatedQuery.Length != 0) hash ^= DeprecatedQuery.GetHashCode();
      if (docid_ != null) hash ^= Docid.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DeprecatedQuery.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DeprecatedQuery);
      }
      if (docid_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Docid);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DeprecatedQuery.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeprecatedQuery);
      }
      if (docid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Docid);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BookAuthor other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DeprecatedQuery.Length != 0) {
        DeprecatedQuery = other.DeprecatedQuery;
      }
      if (other.docid_ != null) {
        if (docid_ == null) {
          docid_ = new global::GooglePlayStore.Docid();
        }
        Docid.MergeFrom(other.Docid);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DeprecatedQuery = input.ReadString();
            break;
          }
          case 26: {
            if (docid_ == null) {
              docid_ = new global::GooglePlayStore.Docid();
            }
            input.ReadMessage(docid_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BookDetails : pb::IMessage<BookDetails> {
    private static readonly pb::MessageParser<BookDetails> _parser = new pb::MessageParser<BookDetails>(() => new BookDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BookDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookDetails(BookDetails other) : this() {
      subject_ = other.subject_.Clone();
      publisher_ = other.publisher_;
      publicationDate_ = other.publicationDate_;
      isbn_ = other.isbn_;
      numberOfPages_ = other.numberOfPages_;
      subtitle_ = other.subtitle_;
      author_ = other.author_.Clone();
      readerUrl_ = other.readerUrl_;
      downloadEpubUrl_ = other.downloadEpubUrl_;
      downloadPdfUrl_ = other.downloadPdfUrl_;
      acsEpubTokenUrl_ = other.acsEpubTokenUrl_;
      acsPdfTokenUrl_ = other.acsPdfTokenUrl_;
      epubAvailable_ = other.epubAvailable_;
      pdfAvailable_ = other.pdfAvailable_;
      aboutTheAuthor_ = other.aboutTheAuthor_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookDetails Clone() {
      return new BookDetails(this);
    }

    /// <summary>Field number for the "subject" field.</summary>
    public const int SubjectFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.BookSubject> _repeated_subject_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.BookSubject.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.BookSubject> subject_ = new pbc::RepeatedField<global::GooglePlayStore.BookSubject>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.BookSubject> Subject {
      get { return subject_; }
    }

    /// <summary>Field number for the "publisher" field.</summary>
    public const int PublisherFieldNumber = 4;
    private string publisher_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Publisher {
      get { return publisher_; }
      set {
        publisher_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "publicationDate" field.</summary>
    public const int PublicationDateFieldNumber = 5;
    private string publicationDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PublicationDate {
      get { return publicationDate_; }
      set {
        publicationDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isbn" field.</summary>
    public const int IsbnFieldNumber = 6;
    private string isbn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Isbn {
      get { return isbn_; }
      set {
        isbn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "numberOfPages" field.</summary>
    public const int NumberOfPagesFieldNumber = 7;
    private int numberOfPages_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumberOfPages {
      get { return numberOfPages_; }
      set {
        numberOfPages_ = value;
      }
    }

    /// <summary>Field number for the "subtitle" field.</summary>
    public const int SubtitleFieldNumber = 8;
    private string subtitle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subtitle {
      get { return subtitle_; }
      set {
        subtitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "author" field.</summary>
    public const int AuthorFieldNumber = 9;
    private static readonly pb::FieldCodec<global::GooglePlayStore.BookAuthor> _repeated_author_codec
        = pb::FieldCodec.ForMessage(74, global::GooglePlayStore.BookAuthor.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.BookAuthor> author_ = new pbc::RepeatedField<global::GooglePlayStore.BookAuthor>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.BookAuthor> Author {
      get { return author_; }
    }

    /// <summary>Field number for the "readerUrl" field.</summary>
    public const int ReaderUrlFieldNumber = 10;
    private string readerUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReaderUrl {
      get { return readerUrl_; }
      set {
        readerUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "downloadEpubUrl" field.</summary>
    public const int DownloadEpubUrlFieldNumber = 11;
    private string downloadEpubUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DownloadEpubUrl {
      get { return downloadEpubUrl_; }
      set {
        downloadEpubUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "downloadPdfUrl" field.</summary>
    public const int DownloadPdfUrlFieldNumber = 12;
    private string downloadPdfUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DownloadPdfUrl {
      get { return downloadPdfUrl_; }
      set {
        downloadPdfUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "acsEpubTokenUrl" field.</summary>
    public const int AcsEpubTokenUrlFieldNumber = 13;
    private string acsEpubTokenUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AcsEpubTokenUrl {
      get { return acsEpubTokenUrl_; }
      set {
        acsEpubTokenUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "acsPdfTokenUrl" field.</summary>
    public const int AcsPdfTokenUrlFieldNumber = 14;
    private string acsPdfTokenUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AcsPdfTokenUrl {
      get { return acsPdfTokenUrl_; }
      set {
        acsPdfTokenUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "epubAvailable" field.</summary>
    public const int EpubAvailableFieldNumber = 15;
    private bool epubAvailable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EpubAvailable {
      get { return epubAvailable_; }
      set {
        epubAvailable_ = value;
      }
    }

    /// <summary>Field number for the "pdfAvailable" field.</summary>
    public const int PdfAvailableFieldNumber = 16;
    private bool pdfAvailable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PdfAvailable {
      get { return pdfAvailable_; }
      set {
        pdfAvailable_ = value;
      }
    }

    /// <summary>Field number for the "aboutTheAuthor" field.</summary>
    public const int AboutTheAuthorFieldNumber = 17;
    private string aboutTheAuthor_ = "";
    /// <summary>
    ///repeated group Identifier = 18 {
    ///int32 type = 19;
    ///string identifier = 20;
    ///}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AboutTheAuthor {
      get { return aboutTheAuthor_; }
      set {
        aboutTheAuthor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BookDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BookDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!subject_.Equals(other.subject_)) return false;
      if (Publisher != other.Publisher) return false;
      if (PublicationDate != other.PublicationDate) return false;
      if (Isbn != other.Isbn) return false;
      if (NumberOfPages != other.NumberOfPages) return false;
      if (Subtitle != other.Subtitle) return false;
      if(!author_.Equals(other.author_)) return false;
      if (ReaderUrl != other.ReaderUrl) return false;
      if (DownloadEpubUrl != other.DownloadEpubUrl) return false;
      if (DownloadPdfUrl != other.DownloadPdfUrl) return false;
      if (AcsEpubTokenUrl != other.AcsEpubTokenUrl) return false;
      if (AcsPdfTokenUrl != other.AcsPdfTokenUrl) return false;
      if (EpubAvailable != other.EpubAvailable) return false;
      if (PdfAvailable != other.PdfAvailable) return false;
      if (AboutTheAuthor != other.AboutTheAuthor) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= subject_.GetHashCode();
      if (Publisher.Length != 0) hash ^= Publisher.GetHashCode();
      if (PublicationDate.Length != 0) hash ^= PublicationDate.GetHashCode();
      if (Isbn.Length != 0) hash ^= Isbn.GetHashCode();
      if (NumberOfPages != 0) hash ^= NumberOfPages.GetHashCode();
      if (Subtitle.Length != 0) hash ^= Subtitle.GetHashCode();
      hash ^= author_.GetHashCode();
      if (ReaderUrl.Length != 0) hash ^= ReaderUrl.GetHashCode();
      if (DownloadEpubUrl.Length != 0) hash ^= DownloadEpubUrl.GetHashCode();
      if (DownloadPdfUrl.Length != 0) hash ^= DownloadPdfUrl.GetHashCode();
      if (AcsEpubTokenUrl.Length != 0) hash ^= AcsEpubTokenUrl.GetHashCode();
      if (AcsPdfTokenUrl.Length != 0) hash ^= AcsPdfTokenUrl.GetHashCode();
      if (EpubAvailable != false) hash ^= EpubAvailable.GetHashCode();
      if (PdfAvailable != false) hash ^= PdfAvailable.GetHashCode();
      if (AboutTheAuthor.Length != 0) hash ^= AboutTheAuthor.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      subject_.WriteTo(output, _repeated_subject_codec);
      if (Publisher.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Publisher);
      }
      if (PublicationDate.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PublicationDate);
      }
      if (Isbn.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Isbn);
      }
      if (NumberOfPages != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(NumberOfPages);
      }
      if (Subtitle.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Subtitle);
      }
      author_.WriteTo(output, _repeated_author_codec);
      if (ReaderUrl.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ReaderUrl);
      }
      if (DownloadEpubUrl.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(DownloadEpubUrl);
      }
      if (DownloadPdfUrl.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DownloadPdfUrl);
      }
      if (AcsEpubTokenUrl.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(AcsEpubTokenUrl);
      }
      if (AcsPdfTokenUrl.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(AcsPdfTokenUrl);
      }
      if (EpubAvailable != false) {
        output.WriteRawTag(120);
        output.WriteBool(EpubAvailable);
      }
      if (PdfAvailable != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(PdfAvailable);
      }
      if (AboutTheAuthor.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(AboutTheAuthor);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += subject_.CalculateSize(_repeated_subject_codec);
      if (Publisher.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Publisher);
      }
      if (PublicationDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PublicationDate);
      }
      if (Isbn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Isbn);
      }
      if (NumberOfPages != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberOfPages);
      }
      if (Subtitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subtitle);
      }
      size += author_.CalculateSize(_repeated_author_codec);
      if (ReaderUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReaderUrl);
      }
      if (DownloadEpubUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DownloadEpubUrl);
      }
      if (DownloadPdfUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DownloadPdfUrl);
      }
      if (AcsEpubTokenUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AcsEpubTokenUrl);
      }
      if (AcsPdfTokenUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AcsPdfTokenUrl);
      }
      if (EpubAvailable != false) {
        size += 1 + 1;
      }
      if (PdfAvailable != false) {
        size += 2 + 1;
      }
      if (AboutTheAuthor.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AboutTheAuthor);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BookDetails other) {
      if (other == null) {
        return;
      }
      subject_.Add(other.subject_);
      if (other.Publisher.Length != 0) {
        Publisher = other.Publisher;
      }
      if (other.PublicationDate.Length != 0) {
        PublicationDate = other.PublicationDate;
      }
      if (other.Isbn.Length != 0) {
        Isbn = other.Isbn;
      }
      if (other.NumberOfPages != 0) {
        NumberOfPages = other.NumberOfPages;
      }
      if (other.Subtitle.Length != 0) {
        Subtitle = other.Subtitle;
      }
      author_.Add(other.author_);
      if (other.ReaderUrl.Length != 0) {
        ReaderUrl = other.ReaderUrl;
      }
      if (other.DownloadEpubUrl.Length != 0) {
        DownloadEpubUrl = other.DownloadEpubUrl;
      }
      if (other.DownloadPdfUrl.Length != 0) {
        DownloadPdfUrl = other.DownloadPdfUrl;
      }
      if (other.AcsEpubTokenUrl.Length != 0) {
        AcsEpubTokenUrl = other.AcsEpubTokenUrl;
      }
      if (other.AcsPdfTokenUrl.Length != 0) {
        AcsPdfTokenUrl = other.AcsPdfTokenUrl;
      }
      if (other.EpubAvailable != false) {
        EpubAvailable = other.EpubAvailable;
      }
      if (other.PdfAvailable != false) {
        PdfAvailable = other.PdfAvailable;
      }
      if (other.AboutTheAuthor.Length != 0) {
        AboutTheAuthor = other.AboutTheAuthor;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 26: {
            subject_.AddEntriesFrom(input, _repeated_subject_codec);
            break;
          }
          case 34: {
            Publisher = input.ReadString();
            break;
          }
          case 42: {
            PublicationDate = input.ReadString();
            break;
          }
          case 50: {
            Isbn = input.ReadString();
            break;
          }
          case 56: {
            NumberOfPages = input.ReadInt32();
            break;
          }
          case 66: {
            Subtitle = input.ReadString();
            break;
          }
          case 74: {
            author_.AddEntriesFrom(input, _repeated_author_codec);
            break;
          }
          case 82: {
            ReaderUrl = input.ReadString();
            break;
          }
          case 90: {
            DownloadEpubUrl = input.ReadString();
            break;
          }
          case 98: {
            DownloadPdfUrl = input.ReadString();
            break;
          }
          case 106: {
            AcsEpubTokenUrl = input.ReadString();
            break;
          }
          case 114: {
            AcsPdfTokenUrl = input.ReadString();
            break;
          }
          case 120: {
            EpubAvailable = input.ReadBool();
            break;
          }
          case 128: {
            PdfAvailable = input.ReadBool();
            break;
          }
          case 138: {
            AboutTheAuthor = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BookSubject : pb::IMessage<BookSubject> {
    private static readonly pb::MessageParser<BookSubject> _parser = new pb::MessageParser<BookSubject>(() => new BookSubject());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BookSubject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookSubject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookSubject(BookSubject other) : this() {
      name_ = other.name_;
      query_ = other.query_;
      subjectId_ = other.subjectId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookSubject Clone() {
      return new BookSubject(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 2;
    private string query_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subjectId" field.</summary>
    public const int SubjectIdFieldNumber = 3;
    private string subjectId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubjectId {
      get { return subjectId_; }
      set {
        subjectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BookSubject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BookSubject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Query != other.Query) return false;
      if (SubjectId != other.SubjectId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (SubjectId.Length != 0) hash ^= SubjectId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Query);
      }
      if (SubjectId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SubjectId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (SubjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubjectId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BookSubject other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.SubjectId.Length != 0) {
        SubjectId = other.SubjectId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Query = input.ReadString();
            break;
          }
          case 26: {
            SubjectId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BrowseLink : pb::IMessage<BrowseLink> {
    private static readonly pb::MessageParser<BrowseLink> _parser = new pb::MessageParser<BrowseLink>(() => new BrowseLink());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BrowseLink> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrowseLink() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrowseLink(BrowseLink other) : this() {
      name_ = other.name_;
      dataUrl_ = other.dataUrl_;
      Icon = other.icon_ != null ? other.Icon.Clone() : null;
      UnknownCategoryContainer = other.unknownCategoryContainer_ != null ? other.UnknownCategoryContainer.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrowseLink Clone() {
      return new BrowseLink(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dataUrl" field.</summary>
    public const int DataUrlFieldNumber = 3;
    private string dataUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DataUrl {
      get { return dataUrl_; }
      set {
        dataUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 5;
    private global::GooglePlayStore.Image icon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Image Icon {
      get { return icon_; }
      set {
        icon_ = value;
      }
    }

    /// <summary>Field number for the "unknownCategoryContainer" field.</summary>
    public const int UnknownCategoryContainerFieldNumber = 4;
    private global::GooglePlayStore.UnknownCategoryContainer unknownCategoryContainer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.UnknownCategoryContainer UnknownCategoryContainer {
      get { return unknownCategoryContainer_; }
      set {
        unknownCategoryContainer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BrowseLink);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BrowseLink other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DataUrl != other.DataUrl) return false;
      if (!object.Equals(Icon, other.Icon)) return false;
      if (!object.Equals(UnknownCategoryContainer, other.UnknownCategoryContainer)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DataUrl.Length != 0) hash ^= DataUrl.GetHashCode();
      if (icon_ != null) hash ^= Icon.GetHashCode();
      if (unknownCategoryContainer_ != null) hash ^= UnknownCategoryContainer.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DataUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DataUrl);
      }
      if (unknownCategoryContainer_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UnknownCategoryContainer);
      }
      if (icon_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Icon);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DataUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DataUrl);
      }
      if (icon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Icon);
      }
      if (unknownCategoryContainer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnknownCategoryContainer);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BrowseLink other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DataUrl.Length != 0) {
        DataUrl = other.DataUrl;
      }
      if (other.icon_ != null) {
        if (icon_ == null) {
          icon_ = new global::GooglePlayStore.Image();
        }
        Icon.MergeFrom(other.Icon);
      }
      if (other.unknownCategoryContainer_ != null) {
        if (unknownCategoryContainer_ == null) {
          unknownCategoryContainer_ = new global::GooglePlayStore.UnknownCategoryContainer();
        }
        UnknownCategoryContainer.MergeFrom(other.UnknownCategoryContainer);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            DataUrl = input.ReadString();
            break;
          }
          case 34: {
            if (unknownCategoryContainer_ == null) {
              unknownCategoryContainer_ = new global::GooglePlayStore.UnknownCategoryContainer();
            }
            input.ReadMessage(unknownCategoryContainer_);
            break;
          }
          case 42: {
            if (icon_ == null) {
              icon_ = new global::GooglePlayStore.Image();
            }
            input.ReadMessage(icon_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnknownCategoryContainer : pb::IMessage<UnknownCategoryContainer> {
    private static readonly pb::MessageParser<UnknownCategoryContainer> _parser = new pb::MessageParser<UnknownCategoryContainer>(() => new UnknownCategoryContainer());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnknownCategoryContainer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnknownCategoryContainer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnknownCategoryContainer(UnknownCategoryContainer other) : this() {
      CategoryIdContainer = other.categoryIdContainer_ != null ? other.CategoryIdContainer.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnknownCategoryContainer Clone() {
      return new UnknownCategoryContainer(this);
    }

    /// <summary>Field number for the "categoryIdContainer" field.</summary>
    public const int CategoryIdContainerFieldNumber = 5;
    private global::GooglePlayStore.CategoryIdContainer categoryIdContainer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CategoryIdContainer CategoryIdContainer {
      get { return categoryIdContainer_; }
      set {
        categoryIdContainer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnknownCategoryContainer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnknownCategoryContainer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CategoryIdContainer, other.CategoryIdContainer)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (categoryIdContainer_ != null) hash ^= CategoryIdContainer.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (categoryIdContainer_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CategoryIdContainer);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (categoryIdContainer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CategoryIdContainer);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnknownCategoryContainer other) {
      if (other == null) {
        return;
      }
      if (other.categoryIdContainer_ != null) {
        if (categoryIdContainer_ == null) {
          categoryIdContainer_ = new global::GooglePlayStore.CategoryIdContainer();
        }
        CategoryIdContainer.MergeFrom(other.CategoryIdContainer);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 42: {
            if (categoryIdContainer_ == null) {
              categoryIdContainer_ = new global::GooglePlayStore.CategoryIdContainer();
            }
            input.ReadMessage(categoryIdContainer_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CategoryIdContainer : pb::IMessage<CategoryIdContainer> {
    private static readonly pb::MessageParser<CategoryIdContainer> _parser = new pb::MessageParser<CategoryIdContainer>(() => new CategoryIdContainer());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CategoryIdContainer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryIdContainer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryIdContainer(CategoryIdContainer other) : this() {
      categoryId_ = other.categoryId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryIdContainer Clone() {
      return new CategoryIdContainer(this);
    }

    /// <summary>Field number for the "categoryId" field.</summary>
    public const int CategoryIdFieldNumber = 4;
    private string categoryId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CategoryId {
      get { return categoryId_; }
      set {
        categoryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CategoryIdContainer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CategoryIdContainer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CategoryId != other.CategoryId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CategoryId.Length != 0) hash ^= CategoryId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CategoryId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CategoryId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CategoryId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CategoryId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CategoryIdContainer other) {
      if (other == null) {
        return;
      }
      if (other.CategoryId.Length != 0) {
        CategoryId = other.CategoryId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 34: {
            CategoryId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BrowseResponse : pb::IMessage<BrowseResponse> {
    private static readonly pb::MessageParser<BrowseResponse> _parser = new pb::MessageParser<BrowseResponse>(() => new BrowseResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BrowseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrowseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrowseResponse(BrowseResponse other) : this() {
      contentsUrl_ = other.contentsUrl_;
      promoUrl_ = other.promoUrl_;
      category_ = other.category_.Clone();
      breadcrumb_ = other.breadcrumb_.Clone();
      CategoryContainer = other.categoryContainer_ != null ? other.CategoryContainer.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrowseResponse Clone() {
      return new BrowseResponse(this);
    }

    /// <summary>Field number for the "contentsUrl" field.</summary>
    public const int ContentsUrlFieldNumber = 1;
    private string contentsUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentsUrl {
      get { return contentsUrl_; }
      set {
        contentsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "promoUrl" field.</summary>
    public const int PromoUrlFieldNumber = 2;
    private string promoUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PromoUrl {
      get { return promoUrl_; }
      set {
        promoUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.BrowseLink> _repeated_category_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.BrowseLink.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.BrowseLink> category_ = new pbc::RepeatedField<global::GooglePlayStore.BrowseLink>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.BrowseLink> Category {
      get { return category_; }
    }

    /// <summary>Field number for the "breadcrumb" field.</summary>
    public const int BreadcrumbFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.BrowseLink> _repeated_breadcrumb_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.BrowseLink.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.BrowseLink> breadcrumb_ = new pbc::RepeatedField<global::GooglePlayStore.BrowseLink>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.BrowseLink> Breadcrumb {
      get { return breadcrumb_; }
    }

    /// <summary>Field number for the "categoryContainer" field.</summary>
    public const int CategoryContainerFieldNumber = 9;
    private global::GooglePlayStore.CategoryContainer categoryContainer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CategoryContainer CategoryContainer {
      get { return categoryContainer_; }
      set {
        categoryContainer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BrowseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BrowseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContentsUrl != other.ContentsUrl) return false;
      if (PromoUrl != other.PromoUrl) return false;
      if(!category_.Equals(other.category_)) return false;
      if(!breadcrumb_.Equals(other.breadcrumb_)) return false;
      if (!object.Equals(CategoryContainer, other.CategoryContainer)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContentsUrl.Length != 0) hash ^= ContentsUrl.GetHashCode();
      if (PromoUrl.Length != 0) hash ^= PromoUrl.GetHashCode();
      hash ^= category_.GetHashCode();
      hash ^= breadcrumb_.GetHashCode();
      if (categoryContainer_ != null) hash ^= CategoryContainer.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContentsUrl.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContentsUrl);
      }
      if (PromoUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PromoUrl);
      }
      category_.WriteTo(output, _repeated_category_codec);
      breadcrumb_.WriteTo(output, _repeated_breadcrumb_codec);
      if (categoryContainer_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CategoryContainer);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContentsUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentsUrl);
      }
      if (PromoUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PromoUrl);
      }
      size += category_.CalculateSize(_repeated_category_codec);
      size += breadcrumb_.CalculateSize(_repeated_breadcrumb_codec);
      if (categoryContainer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CategoryContainer);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BrowseResponse other) {
      if (other == null) {
        return;
      }
      if (other.ContentsUrl.Length != 0) {
        ContentsUrl = other.ContentsUrl;
      }
      if (other.PromoUrl.Length != 0) {
        PromoUrl = other.PromoUrl;
      }
      category_.Add(other.category_);
      breadcrumb_.Add(other.breadcrumb_);
      if (other.categoryContainer_ != null) {
        if (categoryContainer_ == null) {
          categoryContainer_ = new global::GooglePlayStore.CategoryContainer();
        }
        CategoryContainer.MergeFrom(other.CategoryContainer);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ContentsUrl = input.ReadString();
            break;
          }
          case 18: {
            PromoUrl = input.ReadString();
            break;
          }
          case 26: {
            category_.AddEntriesFrom(input, _repeated_category_codec);
            break;
          }
          case 34: {
            breadcrumb_.AddEntriesFrom(input, _repeated_breadcrumb_codec);
            break;
          }
          case 74: {
            if (categoryContainer_ == null) {
              categoryContainer_ = new global::GooglePlayStore.CategoryContainer();
            }
            input.ReadMessage(categoryContainer_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CategoryContainer : pb::IMessage<CategoryContainer> {
    private static readonly pb::MessageParser<CategoryContainer> _parser = new pb::MessageParser<CategoryContainer>(() => new CategoryContainer());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CategoryContainer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryContainer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryContainer(CategoryContainer other) : this() {
      category_ = other.category_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryContainer Clone() {
      return new CategoryContainer(this);
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.BrowseLink> _repeated_category_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.BrowseLink.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.BrowseLink> category_ = new pbc::RepeatedField<global::GooglePlayStore.BrowseLink>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.BrowseLink> Category {
      get { return category_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CategoryContainer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CategoryContainer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!category_.Equals(other.category_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= category_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      category_.WriteTo(output, _repeated_category_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += category_.CalculateSize(_repeated_category_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CategoryContainer other) {
      if (other == null) {
        return;
      }
      category_.Add(other.category_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 34: {
            category_.AddEntriesFrom(input, _repeated_category_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddressChallenge : pb::IMessage<AddressChallenge> {
    private static readonly pb::MessageParser<AddressChallenge> _parser = new pb::MessageParser<AddressChallenge>(() => new AddressChallenge());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddressChallenge> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressChallenge() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressChallenge(AddressChallenge other) : this() {
      responseAddressParam_ = other.responseAddressParam_;
      responseCheckboxesParam_ = other.responseCheckboxesParam_;
      title_ = other.title_;
      descriptionHtml_ = other.descriptionHtml_;
      checkbox_ = other.checkbox_.Clone();
      Address = other.address_ != null ? other.Address.Clone() : null;
      errorInputField_ = other.errorInputField_.Clone();
      errorHtml_ = other.errorHtml_;
      requiredField_ = other.requiredField_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressChallenge Clone() {
      return new AddressChallenge(this);
    }

    /// <summary>Field number for the "responseAddressParam" field.</summary>
    public const int ResponseAddressParamFieldNumber = 1;
    private string responseAddressParam_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResponseAddressParam {
      get { return responseAddressParam_; }
      set {
        responseAddressParam_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "responseCheckboxesParam" field.</summary>
    public const int ResponseCheckboxesParamFieldNumber = 2;
    private string responseCheckboxesParam_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResponseCheckboxesParam {
      get { return responseCheckboxesParam_; }
      set {
        responseCheckboxesParam_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 3;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "descriptionHtml" field.</summary>
    public const int DescriptionHtmlFieldNumber = 4;
    private string descriptionHtml_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DescriptionHtml {
      get { return descriptionHtml_; }
      set {
        descriptionHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "checkbox" field.</summary>
    public const int CheckboxFieldNumber = 5;
    private static readonly pb::FieldCodec<global::GooglePlayStore.FormCheckbox> _repeated_checkbox_codec
        = pb::FieldCodec.ForMessage(42, global::GooglePlayStore.FormCheckbox.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.FormCheckbox> checkbox_ = new pbc::RepeatedField<global::GooglePlayStore.FormCheckbox>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.FormCheckbox> Checkbox {
      get { return checkbox_; }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 6;
    private global::GooglePlayStore.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "errorInputField" field.</summary>
    public const int ErrorInputFieldFieldNumber = 7;
    private static readonly pb::FieldCodec<global::GooglePlayStore.InputValidationError> _repeated_errorInputField_codec
        = pb::FieldCodec.ForMessage(58, global::GooglePlayStore.InputValidationError.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.InputValidationError> errorInputField_ = new pbc::RepeatedField<global::GooglePlayStore.InputValidationError>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.InputValidationError> ErrorInputField {
      get { return errorInputField_; }
    }

    /// <summary>Field number for the "errorHtml" field.</summary>
    public const int ErrorHtmlFieldNumber = 8;
    private string errorHtml_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorHtml {
      get { return errorHtml_; }
      set {
        errorHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "requiredField" field.</summary>
    public const int RequiredFieldFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_requiredField_codec
        = pb::FieldCodec.ForInt32(74);
    private readonly pbc::RepeatedField<int> requiredField_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RequiredField {
      get { return requiredField_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddressChallenge);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddressChallenge other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResponseAddressParam != other.ResponseAddressParam) return false;
      if (ResponseCheckboxesParam != other.ResponseCheckboxesParam) return false;
      if (Title != other.Title) return false;
      if (DescriptionHtml != other.DescriptionHtml) return false;
      if(!checkbox_.Equals(other.checkbox_)) return false;
      if (!object.Equals(Address, other.Address)) return false;
      if(!errorInputField_.Equals(other.errorInputField_)) return false;
      if (ErrorHtml != other.ErrorHtml) return false;
      if(!requiredField_.Equals(other.requiredField_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResponseAddressParam.Length != 0) hash ^= ResponseAddressParam.GetHashCode();
      if (ResponseCheckboxesParam.Length != 0) hash ^= ResponseCheckboxesParam.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (DescriptionHtml.Length != 0) hash ^= DescriptionHtml.GetHashCode();
      hash ^= checkbox_.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      hash ^= errorInputField_.GetHashCode();
      if (ErrorHtml.Length != 0) hash ^= ErrorHtml.GetHashCode();
      hash ^= requiredField_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResponseAddressParam.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResponseAddressParam);
      }
      if (ResponseCheckboxesParam.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ResponseCheckboxesParam);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (DescriptionHtml.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DescriptionHtml);
      }
      checkbox_.WriteTo(output, _repeated_checkbox_codec);
      if (address_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Address);
      }
      errorInputField_.WriteTo(output, _repeated_errorInputField_codec);
      if (ErrorHtml.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ErrorHtml);
      }
      requiredField_.WriteTo(output, _repeated_requiredField_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResponseAddressParam.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseAddressParam);
      }
      if (ResponseCheckboxesParam.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseCheckboxesParam);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (DescriptionHtml.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionHtml);
      }
      size += checkbox_.CalculateSize(_repeated_checkbox_codec);
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      size += errorInputField_.CalculateSize(_repeated_errorInputField_codec);
      if (ErrorHtml.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorHtml);
      }
      size += requiredField_.CalculateSize(_repeated_requiredField_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddressChallenge other) {
      if (other == null) {
        return;
      }
      if (other.ResponseAddressParam.Length != 0) {
        ResponseAddressParam = other.ResponseAddressParam;
      }
      if (other.ResponseCheckboxesParam.Length != 0) {
        ResponseCheckboxesParam = other.ResponseCheckboxesParam;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.DescriptionHtml.Length != 0) {
        DescriptionHtml = other.DescriptionHtml;
      }
      checkbox_.Add(other.checkbox_);
      if (other.address_ != null) {
        if (address_ == null) {
          address_ = new global::GooglePlayStore.Address();
        }
        Address.MergeFrom(other.Address);
      }
      errorInputField_.Add(other.errorInputField_);
      if (other.ErrorHtml.Length != 0) {
        ErrorHtml = other.ErrorHtml;
      }
      requiredField_.Add(other.requiredField_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ResponseAddressParam = input.ReadString();
            break;
          }
          case 18: {
            ResponseCheckboxesParam = input.ReadString();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 34: {
            DescriptionHtml = input.ReadString();
            break;
          }
          case 42: {
            checkbox_.AddEntriesFrom(input, _repeated_checkbox_codec);
            break;
          }
          case 50: {
            if (address_ == null) {
              address_ = new global::GooglePlayStore.Address();
            }
            input.ReadMessage(address_);
            break;
          }
          case 58: {
            errorInputField_.AddEntriesFrom(input, _repeated_errorInputField_codec);
            break;
          }
          case 66: {
            ErrorHtml = input.ReadString();
            break;
          }
          case 74:
          case 72: {
            requiredField_.AddEntriesFrom(input, _repeated_requiredField_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AuthenticationChallenge : pb::IMessage<AuthenticationChallenge> {
    private static readonly pb::MessageParser<AuthenticationChallenge> _parser = new pb::MessageParser<AuthenticationChallenge>(() => new AuthenticationChallenge());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthenticationChallenge> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthenticationChallenge() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthenticationChallenge(AuthenticationChallenge other) : this() {
      authenticationType_ = other.authenticationType_;
      responseAuthenticationTypeParam_ = other.responseAuthenticationTypeParam_;
      responseRetryCountParam_ = other.responseRetryCountParam_;
      pinHeaderText_ = other.pinHeaderText_;
      pinDescriptionTextHtml_ = other.pinDescriptionTextHtml_;
      gaiaHeaderText_ = other.gaiaHeaderText_;
      gaiaDescriptionTextHtml_ = other.gaiaDescriptionTextHtml_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthenticationChallenge Clone() {
      return new AuthenticationChallenge(this);
    }

    /// <summary>Field number for the "authenticationType" field.</summary>
    public const int AuthenticationTypeFieldNumber = 1;
    private int authenticationType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AuthenticationType {
      get { return authenticationType_; }
      set {
        authenticationType_ = value;
      }
    }

    /// <summary>Field number for the "responseAuthenticationTypeParam" field.</summary>
    public const int ResponseAuthenticationTypeParamFieldNumber = 2;
    private string responseAuthenticationTypeParam_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResponseAuthenticationTypeParam {
      get { return responseAuthenticationTypeParam_; }
      set {
        responseAuthenticationTypeParam_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "responseRetryCountParam" field.</summary>
    public const int ResponseRetryCountParamFieldNumber = 3;
    private string responseRetryCountParam_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResponseRetryCountParam {
      get { return responseRetryCountParam_; }
      set {
        responseRetryCountParam_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pinHeaderText" field.</summary>
    public const int PinHeaderTextFieldNumber = 4;
    private string pinHeaderText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PinHeaderText {
      get { return pinHeaderText_; }
      set {
        pinHeaderText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pinDescriptionTextHtml" field.</summary>
    public const int PinDescriptionTextHtmlFieldNumber = 5;
    private string pinDescriptionTextHtml_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PinDescriptionTextHtml {
      get { return pinDescriptionTextHtml_; }
      set {
        pinDescriptionTextHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gaiaHeaderText" field.</summary>
    public const int GaiaHeaderTextFieldNumber = 6;
    private string gaiaHeaderText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GaiaHeaderText {
      get { return gaiaHeaderText_; }
      set {
        gaiaHeaderText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gaiaDescriptionTextHtml" field.</summary>
    public const int GaiaDescriptionTextHtmlFieldNumber = 7;
    private string gaiaDescriptionTextHtml_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GaiaDescriptionTextHtml {
      get { return gaiaDescriptionTextHtml_; }
      set {
        gaiaDescriptionTextHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthenticationChallenge);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthenticationChallenge other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AuthenticationType != other.AuthenticationType) return false;
      if (ResponseAuthenticationTypeParam != other.ResponseAuthenticationTypeParam) return false;
      if (ResponseRetryCountParam != other.ResponseRetryCountParam) return false;
      if (PinHeaderText != other.PinHeaderText) return false;
      if (PinDescriptionTextHtml != other.PinDescriptionTextHtml) return false;
      if (GaiaHeaderText != other.GaiaHeaderText) return false;
      if (GaiaDescriptionTextHtml != other.GaiaDescriptionTextHtml) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AuthenticationType != 0) hash ^= AuthenticationType.GetHashCode();
      if (ResponseAuthenticationTypeParam.Length != 0) hash ^= ResponseAuthenticationTypeParam.GetHashCode();
      if (ResponseRetryCountParam.Length != 0) hash ^= ResponseRetryCountParam.GetHashCode();
      if (PinHeaderText.Length != 0) hash ^= PinHeaderText.GetHashCode();
      if (PinDescriptionTextHtml.Length != 0) hash ^= PinDescriptionTextHtml.GetHashCode();
      if (GaiaHeaderText.Length != 0) hash ^= GaiaHeaderText.GetHashCode();
      if (GaiaDescriptionTextHtml.Length != 0) hash ^= GaiaDescriptionTextHtml.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AuthenticationType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AuthenticationType);
      }
      if (ResponseAuthenticationTypeParam.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ResponseAuthenticationTypeParam);
      }
      if (ResponseRetryCountParam.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResponseRetryCountParam);
      }
      if (PinHeaderText.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PinHeaderText);
      }
      if (PinDescriptionTextHtml.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PinDescriptionTextHtml);
      }
      if (GaiaHeaderText.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(GaiaHeaderText);
      }
      if (GaiaDescriptionTextHtml.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(GaiaDescriptionTextHtml);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AuthenticationType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AuthenticationType);
      }
      if (ResponseAuthenticationTypeParam.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseAuthenticationTypeParam);
      }
      if (ResponseRetryCountParam.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseRetryCountParam);
      }
      if (PinHeaderText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PinHeaderText);
      }
      if (PinDescriptionTextHtml.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PinDescriptionTextHtml);
      }
      if (GaiaHeaderText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GaiaHeaderText);
      }
      if (GaiaDescriptionTextHtml.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GaiaDescriptionTextHtml);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthenticationChallenge other) {
      if (other == null) {
        return;
      }
      if (other.AuthenticationType != 0) {
        AuthenticationType = other.AuthenticationType;
      }
      if (other.ResponseAuthenticationTypeParam.Length != 0) {
        ResponseAuthenticationTypeParam = other.ResponseAuthenticationTypeParam;
      }
      if (other.ResponseRetryCountParam.Length != 0) {
        ResponseRetryCountParam = other.ResponseRetryCountParam;
      }
      if (other.PinHeaderText.Length != 0) {
        PinHeaderText = other.PinHeaderText;
      }
      if (other.PinDescriptionTextHtml.Length != 0) {
        PinDescriptionTextHtml = other.PinDescriptionTextHtml;
      }
      if (other.GaiaHeaderText.Length != 0) {
        GaiaHeaderText = other.GaiaHeaderText;
      }
      if (other.GaiaDescriptionTextHtml.Length != 0) {
        GaiaDescriptionTextHtml = other.GaiaDescriptionTextHtml;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            AuthenticationType = input.ReadInt32();
            break;
          }
          case 18: {
            ResponseAuthenticationTypeParam = input.ReadString();
            break;
          }
          case 26: {
            ResponseRetryCountParam = input.ReadString();
            break;
          }
          case 34: {
            PinHeaderText = input.ReadString();
            break;
          }
          case 42: {
            PinDescriptionTextHtml = input.ReadString();
            break;
          }
          case 50: {
            GaiaHeaderText = input.ReadString();
            break;
          }
          case 58: {
            GaiaDescriptionTextHtml = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BuyResponse : pb::IMessage<BuyResponse> {
    private static readonly pb::MessageParser<BuyResponse> _parser = new pb::MessageParser<BuyResponse>(() => new BuyResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyResponse(BuyResponse other) : this() {
      PurchaseResponse = other.purchaseResponse_ != null ? other.PurchaseResponse.Clone() : null;
      continueViaUrl_ = other.continueViaUrl_;
      purchaseStatusUrl_ = other.purchaseStatusUrl_;
      checkoutServiceId_ = other.checkoutServiceId_;
      checkoutTokenRequired_ = other.checkoutTokenRequired_;
      baseCheckoutUrl_ = other.baseCheckoutUrl_;
      tosCheckboxHtml_ = other.tosCheckboxHtml_.Clone();
      iabPermissionError_ = other.iabPermissionError_;
      PurchaseStatusResponse = other.purchaseStatusResponse_ != null ? other.PurchaseStatusResponse.Clone() : null;
      purchaseCookie_ = other.purchaseCookie_;
      Challenge = other.challenge_ != null ? other.Challenge.Clone() : null;
      downloadToken_ = other.downloadToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyResponse Clone() {
      return new BuyResponse(this);
    }

    /// <summary>Field number for the "purchaseResponse" field.</summary>
    public const int PurchaseResponseFieldNumber = 1;
    private global::GooglePlayStore.PurchaseNotificationResponse purchaseResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.PurchaseNotificationResponse PurchaseResponse {
      get { return purchaseResponse_; }
      set {
        purchaseResponse_ = value;
      }
    }

    /// <summary>Field number for the "continueViaUrl" field.</summary>
    public const int ContinueViaUrlFieldNumber = 8;
    private string continueViaUrl_ = "";
    /// <summary>
    ///
    ///group CheckoutInfo = 2 {
    ///LineItem item = 3;
    ///repeated LineItem subItem = 4;
    ///repeated group CheckoutOption = 5 {
    ///string formOfPayment = 6;
    ///string encodedAdjustedCart = 7;
    ///string instrumentId = 15;
    ///repeated LineItem item = 16;
    ///repeated LineItem subItem = 17;
    ///LineItem total = 18;
    ///repeated string footerHtml = 19;
    ///int32 instrumentFamily = 29;
    ///repeated int32 deprecatedInstrumentInapplicableReason = 30;
    ///bool selectedInstrument = 32;
    ///LineItem summary = 33;
    ///repeated string footnoteHtml = 35;
    ///Instrument instrument = 43;
    ///string purchaseCookie = 45;
    ///repeated string disabledReason = 48;
    ///}
    ///string deprecatedCheckoutUrl = 10;
    ///string addInstrumentUrl = 11;
    ///repeated string footerHtml = 20;
    ///repeated int32 eligibleInstrumentFamily = 31;
    ///repeated string footnoteHtml = 36;
    ///repeated Instrument eligibleInstrument = 44;
    ///}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContinueViaUrl {
      get { return continueViaUrl_; }
      set {
        continueViaUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "purchaseStatusUrl" field.</summary>
    public const int PurchaseStatusUrlFieldNumber = 9;
    private string purchaseStatusUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PurchaseStatusUrl {
      get { return purchaseStatusUrl_; }
      set {
        purchaseStatusUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "checkoutServiceId" field.</summary>
    public const int CheckoutServiceIdFieldNumber = 12;
    private string checkoutServiceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CheckoutServiceId {
      get { return checkoutServiceId_; }
      set {
        checkoutServiceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "checkoutTokenRequired" field.</summary>
    public const int CheckoutTokenRequiredFieldNumber = 13;
    private bool checkoutTokenRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CheckoutTokenRequired {
      get { return checkoutTokenRequired_; }
      set {
        checkoutTokenRequired_ = value;
      }
    }

    /// <summary>Field number for the "baseCheckoutUrl" field.</summary>
    public const int BaseCheckoutUrlFieldNumber = 14;
    private string baseCheckoutUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BaseCheckoutUrl {
      get { return baseCheckoutUrl_; }
      set {
        baseCheckoutUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tosCheckboxHtml" field.</summary>
    public const int TosCheckboxHtmlFieldNumber = 37;
    private static readonly pb::FieldCodec<string> _repeated_tosCheckboxHtml_codec
        = pb::FieldCodec.ForString(298);
    private readonly pbc::RepeatedField<string> tosCheckboxHtml_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TosCheckboxHtml {
      get { return tosCheckboxHtml_; }
    }

    /// <summary>Field number for the "iabPermissionError" field.</summary>
    public const int IabPermissionErrorFieldNumber = 38;
    private int iabPermissionError_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IabPermissionError {
      get { return iabPermissionError_; }
      set {
        iabPermissionError_ = value;
      }
    }

    /// <summary>Field number for the "purchaseStatusResponse" field.</summary>
    public const int PurchaseStatusResponseFieldNumber = 39;
    private global::GooglePlayStore.PurchaseStatusResponse purchaseStatusResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.PurchaseStatusResponse PurchaseStatusResponse {
      get { return purchaseStatusResponse_; }
      set {
        purchaseStatusResponse_ = value;
      }
    }

    /// <summary>Field number for the "purchaseCookie" field.</summary>
    public const int PurchaseCookieFieldNumber = 46;
    private string purchaseCookie_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PurchaseCookie {
      get { return purchaseCookie_; }
      set {
        purchaseCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "challenge" field.</summary>
    public const int ChallengeFieldNumber = 49;
    private global::GooglePlayStore.Challenge challenge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Challenge Challenge {
      get { return challenge_; }
      set {
        challenge_ = value;
      }
    }

    /// <summary>Field number for the "downloadToken" field.</summary>
    public const int DownloadTokenFieldNumber = 55;
    private string downloadToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DownloadToken {
      get { return downloadToken_; }
      set {
        downloadToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PurchaseResponse, other.PurchaseResponse)) return false;
      if (ContinueViaUrl != other.ContinueViaUrl) return false;
      if (PurchaseStatusUrl != other.PurchaseStatusUrl) return false;
      if (CheckoutServiceId != other.CheckoutServiceId) return false;
      if (CheckoutTokenRequired != other.CheckoutTokenRequired) return false;
      if (BaseCheckoutUrl != other.BaseCheckoutUrl) return false;
      if(!tosCheckboxHtml_.Equals(other.tosCheckboxHtml_)) return false;
      if (IabPermissionError != other.IabPermissionError) return false;
      if (!object.Equals(PurchaseStatusResponse, other.PurchaseStatusResponse)) return false;
      if (PurchaseCookie != other.PurchaseCookie) return false;
      if (!object.Equals(Challenge, other.Challenge)) return false;
      if (DownloadToken != other.DownloadToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (purchaseResponse_ != null) hash ^= PurchaseResponse.GetHashCode();
      if (ContinueViaUrl.Length != 0) hash ^= ContinueViaUrl.GetHashCode();
      if (PurchaseStatusUrl.Length != 0) hash ^= PurchaseStatusUrl.GetHashCode();
      if (CheckoutServiceId.Length != 0) hash ^= CheckoutServiceId.GetHashCode();
      if (CheckoutTokenRequired != false) hash ^= CheckoutTokenRequired.GetHashCode();
      if (BaseCheckoutUrl.Length != 0) hash ^= BaseCheckoutUrl.GetHashCode();
      hash ^= tosCheckboxHtml_.GetHashCode();
      if (IabPermissionError != 0) hash ^= IabPermissionError.GetHashCode();
      if (purchaseStatusResponse_ != null) hash ^= PurchaseStatusResponse.GetHashCode();
      if (PurchaseCookie.Length != 0) hash ^= PurchaseCookie.GetHashCode();
      if (challenge_ != null) hash ^= Challenge.GetHashCode();
      if (DownloadToken.Length != 0) hash ^= DownloadToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (purchaseResponse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PurchaseResponse);
      }
      if (ContinueViaUrl.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ContinueViaUrl);
      }
      if (PurchaseStatusUrl.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(PurchaseStatusUrl);
      }
      if (CheckoutServiceId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(CheckoutServiceId);
      }
      if (CheckoutTokenRequired != false) {
        output.WriteRawTag(104);
        output.WriteBool(CheckoutTokenRequired);
      }
      if (BaseCheckoutUrl.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(BaseCheckoutUrl);
      }
      tosCheckboxHtml_.WriteTo(output, _repeated_tosCheckboxHtml_codec);
      if (IabPermissionError != 0) {
        output.WriteRawTag(176, 2);
        output.WriteInt32(IabPermissionError);
      }
      if (purchaseStatusResponse_ != null) {
        output.WriteRawTag(186, 2);
        output.WriteMessage(PurchaseStatusResponse);
      }
      if (PurchaseCookie.Length != 0) {
        output.WriteRawTag(242, 2);
        output.WriteString(PurchaseCookie);
      }
      if (challenge_ != null) {
        output.WriteRawTag(138, 3);
        output.WriteMessage(Challenge);
      }
      if (DownloadToken.Length != 0) {
        output.WriteRawTag(186, 3);
        output.WriteString(DownloadToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (purchaseResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PurchaseResponse);
      }
      if (ContinueViaUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContinueViaUrl);
      }
      if (PurchaseStatusUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PurchaseStatusUrl);
      }
      if (CheckoutServiceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CheckoutServiceId);
      }
      if (CheckoutTokenRequired != false) {
        size += 1 + 1;
      }
      if (BaseCheckoutUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseCheckoutUrl);
      }
      size += tosCheckboxHtml_.CalculateSize(_repeated_tosCheckboxHtml_codec);
      if (IabPermissionError != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(IabPermissionError);
      }
      if (purchaseStatusResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PurchaseStatusResponse);
      }
      if (PurchaseCookie.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PurchaseCookie);
      }
      if (challenge_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Challenge);
      }
      if (DownloadToken.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DownloadToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuyResponse other) {
      if (other == null) {
        return;
      }
      if (other.purchaseResponse_ != null) {
        if (purchaseResponse_ == null) {
          purchaseResponse_ = new global::GooglePlayStore.PurchaseNotificationResponse();
        }
        PurchaseResponse.MergeFrom(other.PurchaseResponse);
      }
      if (other.ContinueViaUrl.Length != 0) {
        ContinueViaUrl = other.ContinueViaUrl;
      }
      if (other.PurchaseStatusUrl.Length != 0) {
        PurchaseStatusUrl = other.PurchaseStatusUrl;
      }
      if (other.CheckoutServiceId.Length != 0) {
        CheckoutServiceId = other.CheckoutServiceId;
      }
      if (other.CheckoutTokenRequired != false) {
        CheckoutTokenRequired = other.CheckoutTokenRequired;
      }
      if (other.BaseCheckoutUrl.Length != 0) {
        BaseCheckoutUrl = other.BaseCheckoutUrl;
      }
      tosCheckboxHtml_.Add(other.tosCheckboxHtml_);
      if (other.IabPermissionError != 0) {
        IabPermissionError = other.IabPermissionError;
      }
      if (other.purchaseStatusResponse_ != null) {
        if (purchaseStatusResponse_ == null) {
          purchaseStatusResponse_ = new global::GooglePlayStore.PurchaseStatusResponse();
        }
        PurchaseStatusResponse.MergeFrom(other.PurchaseStatusResponse);
      }
      if (other.PurchaseCookie.Length != 0) {
        PurchaseCookie = other.PurchaseCookie;
      }
      if (other.challenge_ != null) {
        if (challenge_ == null) {
          challenge_ = new global::GooglePlayStore.Challenge();
        }
        Challenge.MergeFrom(other.Challenge);
      }
      if (other.DownloadToken.Length != 0) {
        DownloadToken = other.DownloadToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (purchaseResponse_ == null) {
              purchaseResponse_ = new global::GooglePlayStore.PurchaseNotificationResponse();
            }
            input.ReadMessage(purchaseResponse_);
            break;
          }
          case 66: {
            ContinueViaUrl = input.ReadString();
            break;
          }
          case 74: {
            PurchaseStatusUrl = input.ReadString();
            break;
          }
          case 98: {
            CheckoutServiceId = input.ReadString();
            break;
          }
          case 104: {
            CheckoutTokenRequired = input.ReadBool();
            break;
          }
          case 114: {
            BaseCheckoutUrl = input.ReadString();
            break;
          }
          case 298: {
            tosCheckboxHtml_.AddEntriesFrom(input, _repeated_tosCheckboxHtml_codec);
            break;
          }
          case 304: {
            IabPermissionError = input.ReadInt32();
            break;
          }
          case 314: {
            if (purchaseStatusResponse_ == null) {
              purchaseStatusResponse_ = new global::GooglePlayStore.PurchaseStatusResponse();
            }
            input.ReadMessage(purchaseStatusResponse_);
            break;
          }
          case 370: {
            PurchaseCookie = input.ReadString();
            break;
          }
          case 394: {
            if (challenge_ == null) {
              challenge_ = new global::GooglePlayStore.Challenge();
            }
            input.ReadMessage(challenge_);
            break;
          }
          case 442: {
            DownloadToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Challenge : pb::IMessage<Challenge> {
    private static readonly pb::MessageParser<Challenge> _parser = new pb::MessageParser<Challenge>(() => new Challenge());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Challenge> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Challenge() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Challenge(Challenge other) : this() {
      AddressChallenge = other.addressChallenge_ != null ? other.AddressChallenge.Clone() : null;
      AuthenticationChallenge = other.authenticationChallenge_ != null ? other.AuthenticationChallenge.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Challenge Clone() {
      return new Challenge(this);
    }

    /// <summary>Field number for the "addressChallenge" field.</summary>
    public const int AddressChallengeFieldNumber = 1;
    private global::GooglePlayStore.AddressChallenge addressChallenge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AddressChallenge AddressChallenge {
      get { return addressChallenge_; }
      set {
        addressChallenge_ = value;
      }
    }

    /// <summary>Field number for the "authenticationChallenge" field.</summary>
    public const int AuthenticationChallengeFieldNumber = 2;
    private global::GooglePlayStore.AuthenticationChallenge authenticationChallenge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AuthenticationChallenge AuthenticationChallenge {
      get { return authenticationChallenge_; }
      set {
        authenticationChallenge_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Challenge);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Challenge other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AddressChallenge, other.AddressChallenge)) return false;
      if (!object.Equals(AuthenticationChallenge, other.AuthenticationChallenge)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (addressChallenge_ != null) hash ^= AddressChallenge.GetHashCode();
      if (authenticationChallenge_ != null) hash ^= AuthenticationChallenge.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (addressChallenge_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AddressChallenge);
      }
      if (authenticationChallenge_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AuthenticationChallenge);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (addressChallenge_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddressChallenge);
      }
      if (authenticationChallenge_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthenticationChallenge);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Challenge other) {
      if (other == null) {
        return;
      }
      if (other.addressChallenge_ != null) {
        if (addressChallenge_ == null) {
          addressChallenge_ = new global::GooglePlayStore.AddressChallenge();
        }
        AddressChallenge.MergeFrom(other.AddressChallenge);
      }
      if (other.authenticationChallenge_ != null) {
        if (authenticationChallenge_ == null) {
          authenticationChallenge_ = new global::GooglePlayStore.AuthenticationChallenge();
        }
        AuthenticationChallenge.MergeFrom(other.AuthenticationChallenge);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (addressChallenge_ == null) {
              addressChallenge_ = new global::GooglePlayStore.AddressChallenge();
            }
            input.ReadMessage(addressChallenge_);
            break;
          }
          case 18: {
            if (authenticationChallenge_ == null) {
              authenticationChallenge_ = new global::GooglePlayStore.AuthenticationChallenge();
            }
            input.ReadMessage(authenticationChallenge_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FormCheckbox : pb::IMessage<FormCheckbox> {
    private static readonly pb::MessageParser<FormCheckbox> _parser = new pb::MessageParser<FormCheckbox>(() => new FormCheckbox());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FormCheckbox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormCheckbox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormCheckbox(FormCheckbox other) : this() {
      description_ = other.description_;
      checked_ = other.checked_;
      required_ = other.required_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormCheckbox Clone() {
      return new FormCheckbox(this);
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "checked" field.</summary>
    public const int CheckedFieldNumber = 2;
    private bool checked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Checked {
      get { return checked_; }
      set {
        checked_ = value;
      }
    }

    /// <summary>Field number for the "required" field.</summary>
    public const int RequiredFieldNumber = 3;
    private bool required_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Required {
      get { return required_; }
      set {
        required_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FormCheckbox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FormCheckbox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      if (Checked != other.Checked) return false;
      if (Required != other.Required) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Checked != false) hash ^= Checked.GetHashCode();
      if (Required != false) hash ^= Required.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Description.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (Checked != false) {
        output.WriteRawTag(16);
        output.WriteBool(Checked);
      }
      if (Required != false) {
        output.WriteRawTag(24);
        output.WriteBool(Required);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Checked != false) {
        size += 1 + 1;
      }
      if (Required != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FormCheckbox other) {
      if (other == null) {
        return;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Checked != false) {
        Checked = other.Checked;
      }
      if (other.Required != false) {
        Required = other.Required;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 16: {
            Checked = input.ReadBool();
            break;
          }
          case 24: {
            Required = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LineItem : pb::IMessage<LineItem> {
    private static readonly pb::MessageParser<LineItem> _parser = new pb::MessageParser<LineItem>(() => new LineItem());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LineItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LineItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LineItem(LineItem other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      Offer = other.offer_ != null ? other.Offer.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LineItem Clone() {
      return new LineItem(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "offer" field.</summary>
    public const int OfferFieldNumber = 3;
    private global::GooglePlayStore.Offer offer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Offer Offer {
      get { return offer_; }
      set {
        offer_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private global::GooglePlayStore.Money amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Money Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LineItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LineItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(Offer, other.Offer)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (offer_ != null) hash ^= Offer.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (offer_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Offer);
      }
      if (amount_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Amount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (offer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Offer);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LineItem other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.offer_ != null) {
        if (offer_ == null) {
          offer_ = new global::GooglePlayStore.Offer();
        }
        Offer.MergeFrom(other.Offer);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::GooglePlayStore.Money();
        }
        Amount.MergeFrom(other.Amount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (offer_ == null) {
              offer_ = new global::GooglePlayStore.Offer();
            }
            input.ReadMessage(offer_);
            break;
          }
          case 34: {
            if (amount_ == null) {
              amount_ = new global::GooglePlayStore.Money();
            }
            input.ReadMessage(amount_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Money : pb::IMessage<Money> {
    private static readonly pb::MessageParser<Money> _parser = new pb::MessageParser<Money>(() => new Money());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Money> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Money() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Money(Money other) : this() {
      micros_ = other.micros_;
      currencyCode_ = other.currencyCode_;
      formattedAmount_ = other.formattedAmount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Money Clone() {
      return new Money(this);
    }

    /// <summary>Field number for the "micros" field.</summary>
    public const int MicrosFieldNumber = 1;
    private long micros_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Micros {
      get { return micros_; }
      set {
        micros_ = value;
      }
    }

    /// <summary>Field number for the "currencyCode" field.</summary>
    public const int CurrencyCodeFieldNumber = 2;
    private string currencyCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_; }
      set {
        currencyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "formattedAmount" field.</summary>
    public const int FormattedAmountFieldNumber = 3;
    private string formattedAmount_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FormattedAmount {
      get { return formattedAmount_; }
      set {
        formattedAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Money);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Money other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Micros != other.Micros) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      if (FormattedAmount != other.FormattedAmount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Micros != 0L) hash ^= Micros.GetHashCode();
      if (CurrencyCode.Length != 0) hash ^= CurrencyCode.GetHashCode();
      if (FormattedAmount.Length != 0) hash ^= FormattedAmount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Micros != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Micros);
      }
      if (CurrencyCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CurrencyCode);
      }
      if (FormattedAmount.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FormattedAmount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Micros != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Micros);
      }
      if (CurrencyCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyCode);
      }
      if (FormattedAmount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormattedAmount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Money other) {
      if (other == null) {
        return;
      }
      if (other.Micros != 0L) {
        Micros = other.Micros;
      }
      if (other.CurrencyCode.Length != 0) {
        CurrencyCode = other.CurrencyCode;
      }
      if (other.FormattedAmount.Length != 0) {
        FormattedAmount = other.FormattedAmount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Micros = input.ReadInt64();
            break;
          }
          case 18: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 26: {
            FormattedAmount = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PurchaseNotificationResponse : pb::IMessage<PurchaseNotificationResponse> {
    private static readonly pb::MessageParser<PurchaseNotificationResponse> _parser = new pb::MessageParser<PurchaseNotificationResponse>(() => new PurchaseNotificationResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PurchaseNotificationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseNotificationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseNotificationResponse(PurchaseNotificationResponse other) : this() {
      status_ = other.status_;
      DebugInfo = other.debugInfo_ != null ? other.DebugInfo.Clone() : null;
      localizedErrorMessage_ = other.localizedErrorMessage_;
      purchaseId_ = other.purchaseId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseNotificationResponse Clone() {
      return new PurchaseNotificationResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "debugInfo" field.</summary>
    public const int DebugInfoFieldNumber = 2;
    private global::GooglePlayStore.DebugInfo debugInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DebugInfo DebugInfo {
      get { return debugInfo_; }
      set {
        debugInfo_ = value;
      }
    }

    /// <summary>Field number for the "localizedErrorMessage" field.</summary>
    public const int LocalizedErrorMessageFieldNumber = 3;
    private string localizedErrorMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocalizedErrorMessage {
      get { return localizedErrorMessage_; }
      set {
        localizedErrorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "purchaseId" field.</summary>
    public const int PurchaseIdFieldNumber = 4;
    private string purchaseId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PurchaseId {
      get { return purchaseId_; }
      set {
        purchaseId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PurchaseNotificationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PurchaseNotificationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (!object.Equals(DebugInfo, other.DebugInfo)) return false;
      if (LocalizedErrorMessage != other.LocalizedErrorMessage) return false;
      if (PurchaseId != other.PurchaseId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (debugInfo_ != null) hash ^= DebugInfo.GetHashCode();
      if (LocalizedErrorMessage.Length != 0) hash ^= LocalizedErrorMessage.GetHashCode();
      if (PurchaseId.Length != 0) hash ^= PurchaseId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (debugInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DebugInfo);
      }
      if (LocalizedErrorMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LocalizedErrorMessage);
      }
      if (PurchaseId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PurchaseId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (debugInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DebugInfo);
      }
      if (LocalizedErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocalizedErrorMessage);
      }
      if (PurchaseId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PurchaseId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PurchaseNotificationResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.debugInfo_ != null) {
        if (debugInfo_ == null) {
          debugInfo_ = new global::GooglePlayStore.DebugInfo();
        }
        DebugInfo.MergeFrom(other.DebugInfo);
      }
      if (other.LocalizedErrorMessage.Length != 0) {
        LocalizedErrorMessage = other.LocalizedErrorMessage;
      }
      if (other.PurchaseId.Length != 0) {
        PurchaseId = other.PurchaseId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            if (debugInfo_ == null) {
              debugInfo_ = new global::GooglePlayStore.DebugInfo();
            }
            input.ReadMessage(debugInfo_);
            break;
          }
          case 26: {
            LocalizedErrorMessage = input.ReadString();
            break;
          }
          case 34: {
            PurchaseId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PurchaseStatusResponse : pb::IMessage<PurchaseStatusResponse> {
    private static readonly pb::MessageParser<PurchaseStatusResponse> _parser = new pb::MessageParser<PurchaseStatusResponse>(() => new PurchaseStatusResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PurchaseStatusResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseStatusResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseStatusResponse(PurchaseStatusResponse other) : this() {
      status_ = other.status_;
      statusMsg_ = other.statusMsg_;
      statusTitle_ = other.statusTitle_;
      briefMessage_ = other.briefMessage_;
      infoUrl_ = other.infoUrl_;
      LibraryUpdate = other.libraryUpdate_ != null ? other.LibraryUpdate.Clone() : null;
      RejectedInstrument = other.rejectedInstrument_ != null ? other.RejectedInstrument.Clone() : null;
      AppDeliveryData = other.appDeliveryData_ != null ? other.AppDeliveryData.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseStatusResponse Clone() {
      return new PurchaseStatusResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "statusMsg" field.</summary>
    public const int StatusMsgFieldNumber = 2;
    private string statusMsg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusMsg {
      get { return statusMsg_; }
      set {
        statusMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "statusTitle" field.</summary>
    public const int StatusTitleFieldNumber = 3;
    private string statusTitle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusTitle {
      get { return statusTitle_; }
      set {
        statusTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "briefMessage" field.</summary>
    public const int BriefMessageFieldNumber = 4;
    private string briefMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BriefMessage {
      get { return briefMessage_; }
      set {
        briefMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "infoUrl" field.</summary>
    public const int InfoUrlFieldNumber = 5;
    private string infoUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InfoUrl {
      get { return infoUrl_; }
      set {
        infoUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "libraryUpdate" field.</summary>
    public const int LibraryUpdateFieldNumber = 6;
    private global::GooglePlayStore.LibraryUpdate libraryUpdate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.LibraryUpdate LibraryUpdate {
      get { return libraryUpdate_; }
      set {
        libraryUpdate_ = value;
      }
    }

    /// <summary>Field number for the "rejectedInstrument" field.</summary>
    public const int RejectedInstrumentFieldNumber = 7;
    private global::GooglePlayStore.Instrument rejectedInstrument_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Instrument RejectedInstrument {
      get { return rejectedInstrument_; }
      set {
        rejectedInstrument_ = value;
      }
    }

    /// <summary>Field number for the "appDeliveryData" field.</summary>
    public const int AppDeliveryDataFieldNumber = 8;
    private global::GooglePlayStore.AndroidAppDeliveryData appDeliveryData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AndroidAppDeliveryData AppDeliveryData {
      get { return appDeliveryData_; }
      set {
        appDeliveryData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PurchaseStatusResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PurchaseStatusResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (StatusMsg != other.StatusMsg) return false;
      if (StatusTitle != other.StatusTitle) return false;
      if (BriefMessage != other.BriefMessage) return false;
      if (InfoUrl != other.InfoUrl) return false;
      if (!object.Equals(LibraryUpdate, other.LibraryUpdate)) return false;
      if (!object.Equals(RejectedInstrument, other.RejectedInstrument)) return false;
      if (!object.Equals(AppDeliveryData, other.AppDeliveryData)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (StatusMsg.Length != 0) hash ^= StatusMsg.GetHashCode();
      if (StatusTitle.Length != 0) hash ^= StatusTitle.GetHashCode();
      if (BriefMessage.Length != 0) hash ^= BriefMessage.GetHashCode();
      if (InfoUrl.Length != 0) hash ^= InfoUrl.GetHashCode();
      if (libraryUpdate_ != null) hash ^= LibraryUpdate.GetHashCode();
      if (rejectedInstrument_ != null) hash ^= RejectedInstrument.GetHashCode();
      if (appDeliveryData_ != null) hash ^= AppDeliveryData.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (StatusMsg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StatusMsg);
      }
      if (StatusTitle.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StatusTitle);
      }
      if (BriefMessage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BriefMessage);
      }
      if (InfoUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(InfoUrl);
      }
      if (libraryUpdate_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LibraryUpdate);
      }
      if (rejectedInstrument_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RejectedInstrument);
      }
      if (appDeliveryData_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(AppDeliveryData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (StatusMsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusMsg);
      }
      if (StatusTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusTitle);
      }
      if (BriefMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BriefMessage);
      }
      if (InfoUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InfoUrl);
      }
      if (libraryUpdate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LibraryUpdate);
      }
      if (rejectedInstrument_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RejectedInstrument);
      }
      if (appDeliveryData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppDeliveryData);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PurchaseStatusResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.StatusMsg.Length != 0) {
        StatusMsg = other.StatusMsg;
      }
      if (other.StatusTitle.Length != 0) {
        StatusTitle = other.StatusTitle;
      }
      if (other.BriefMessage.Length != 0) {
        BriefMessage = other.BriefMessage;
      }
      if (other.InfoUrl.Length != 0) {
        InfoUrl = other.InfoUrl;
      }
      if (other.libraryUpdate_ != null) {
        if (libraryUpdate_ == null) {
          libraryUpdate_ = new global::GooglePlayStore.LibraryUpdate();
        }
        LibraryUpdate.MergeFrom(other.LibraryUpdate);
      }
      if (other.rejectedInstrument_ != null) {
        if (rejectedInstrument_ == null) {
          rejectedInstrument_ = new global::GooglePlayStore.Instrument();
        }
        RejectedInstrument.MergeFrom(other.RejectedInstrument);
      }
      if (other.appDeliveryData_ != null) {
        if (appDeliveryData_ == null) {
          appDeliveryData_ = new global::GooglePlayStore.AndroidAppDeliveryData();
        }
        AppDeliveryData.MergeFrom(other.AppDeliveryData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            StatusMsg = input.ReadString();
            break;
          }
          case 26: {
            StatusTitle = input.ReadString();
            break;
          }
          case 34: {
            BriefMessage = input.ReadString();
            break;
          }
          case 42: {
            InfoUrl = input.ReadString();
            break;
          }
          case 50: {
            if (libraryUpdate_ == null) {
              libraryUpdate_ = new global::GooglePlayStore.LibraryUpdate();
            }
            input.ReadMessage(libraryUpdate_);
            break;
          }
          case 58: {
            if (rejectedInstrument_ == null) {
              rejectedInstrument_ = new global::GooglePlayStore.Instrument();
            }
            input.ReadMessage(rejectedInstrument_);
            break;
          }
          case 66: {
            if (appDeliveryData_ == null) {
              appDeliveryData_ = new global::GooglePlayStore.AndroidAppDeliveryData();
            }
            input.ReadMessage(appDeliveryData_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeliveryResponse : pb::IMessage<DeliveryResponse> {
    private static readonly pb::MessageParser<DeliveryResponse> _parser = new pb::MessageParser<DeliveryResponse>(() => new DeliveryResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeliveryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeliveryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeliveryResponse(DeliveryResponse other) : this() {
      status_ = other.status_;
      AppDeliveryData = other.appDeliveryData_ != null ? other.AppDeliveryData.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeliveryResponse Clone() {
      return new DeliveryResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "appDeliveryData" field.</summary>
    public const int AppDeliveryDataFieldNumber = 2;
    private global::GooglePlayStore.AndroidAppDeliveryData appDeliveryData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AndroidAppDeliveryData AppDeliveryData {
      get { return appDeliveryData_; }
      set {
        appDeliveryData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeliveryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeliveryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (!object.Equals(AppDeliveryData, other.AppDeliveryData)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (appDeliveryData_ != null) hash ^= AppDeliveryData.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (appDeliveryData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AppDeliveryData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (appDeliveryData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppDeliveryData);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeliveryResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.appDeliveryData_ != null) {
        if (appDeliveryData_ == null) {
          appDeliveryData_ = new global::GooglePlayStore.AndroidAppDeliveryData();
        }
        AppDeliveryData.MergeFrom(other.AppDeliveryData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            if (appDeliveryData_ == null) {
              appDeliveryData_ = new global::GooglePlayStore.AndroidAppDeliveryData();
            }
            input.ReadMessage(appDeliveryData_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Docid : pb::IMessage<Docid> {
    private static readonly pb::MessageParser<Docid> _parser = new pb::MessageParser<Docid>(() => new Docid());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Docid> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Docid() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Docid(Docid other) : this() {
      backendDocid_ = other.backendDocid_;
      type_ = other.type_;
      backend_ = other.backend_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Docid Clone() {
      return new Docid(this);
    }

    /// <summary>Field number for the "backendDocid" field.</summary>
    public const int BackendDocidFieldNumber = 1;
    private string backendDocid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BackendDocid {
      get { return backendDocid_; }
      set {
        backendDocid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "backend" field.</summary>
    public const int BackendFieldNumber = 3;
    private int backend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Backend {
      get { return backend_; }
      set {
        backend_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Docid);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Docid other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BackendDocid != other.BackendDocid) return false;
      if (Type != other.Type) return false;
      if (Backend != other.Backend) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BackendDocid.Length != 0) hash ^= BackendDocid.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Backend != 0) hash ^= Backend.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BackendDocid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BackendDocid);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (Backend != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Backend);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BackendDocid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BackendDocid);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Backend != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Backend);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Docid other) {
      if (other == null) {
        return;
      }
      if (other.BackendDocid.Length != 0) {
        BackendDocid = other.BackendDocid;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Backend != 0) {
        Backend = other.Backend;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            BackendDocid = input.ReadString();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 24: {
            Backend = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Install : pb::IMessage<Install> {
    private static readonly pb::MessageParser<Install> _parser = new pb::MessageParser<Install>(() => new Install());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Install> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Install() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Install(Install other) : this() {
      androidId_ = other.androidId_;
      version_ = other.version_;
      bundled_ = other.bundled_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Install Clone() {
      return new Install(this);
    }

    /// <summary>Field number for the "androidId" field.</summary>
    public const int AndroidIdFieldNumber = 1;
    private ulong androidId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AndroidId {
      get { return androidId_; }
      set {
        androidId_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "bundled" field.</summary>
    public const int BundledFieldNumber = 3;
    private bool bundled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Bundled {
      get { return bundled_; }
      set {
        bundled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Install);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Install other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AndroidId != other.AndroidId) return false;
      if (Version != other.Version) return false;
      if (Bundled != other.Bundled) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AndroidId != 0UL) hash ^= AndroidId.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (Bundled != false) hash ^= Bundled.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AndroidId != 0UL) {
        output.WriteRawTag(9);
        output.WriteFixed64(AndroidId);
      }
      if (Version != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Version);
      }
      if (Bundled != false) {
        output.WriteRawTag(24);
        output.WriteBool(Bundled);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AndroidId != 0UL) {
        size += 1 + 8;
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (Bundled != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Install other) {
      if (other == null) {
        return;
      }
      if (other.AndroidId != 0UL) {
        AndroidId = other.AndroidId;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.Bundled != false) {
        Bundled = other.Bundled;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            AndroidId = input.ReadFixed64();
            break;
          }
          case 16: {
            Version = input.ReadInt32();
            break;
          }
          case 24: {
            Bundled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Offer : pb::IMessage<Offer> {
    private static readonly pb::MessageParser<Offer> _parser = new pb::MessageParser<Offer>(() => new Offer());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Offer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Offer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Offer(Offer other) : this() {
      micros_ = other.micros_;
      currencyCode_ = other.currencyCode_;
      formattedAmount_ = other.formattedAmount_;
      convertedPrice_ = other.convertedPrice_.Clone();
      checkoutFlowRequired_ = other.checkoutFlowRequired_;
      fullPriceMicros_ = other.fullPriceMicros_;
      formattedFullAmount_ = other.formattedFullAmount_;
      offerType_ = other.offerType_;
      RentalTerms = other.rentalTerms_ != null ? other.RentalTerms.Clone() : null;
      onSaleDate_ = other.onSaleDate_;
      promotionLabel_ = other.promotionLabel_.Clone();
      SubscriptionTerms = other.subscriptionTerms_ != null ? other.SubscriptionTerms.Clone() : null;
      formattedName_ = other.formattedName_;
      formattedDescription_ = other.formattedDescription_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Offer Clone() {
      return new Offer(this);
    }

    /// <summary>Field number for the "micros" field.</summary>
    public const int MicrosFieldNumber = 1;
    private long micros_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Micros {
      get { return micros_; }
      set {
        micros_ = value;
      }
    }

    /// <summary>Field number for the "currencyCode" field.</summary>
    public const int CurrencyCodeFieldNumber = 2;
    private string currencyCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_; }
      set {
        currencyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "formattedAmount" field.</summary>
    public const int FormattedAmountFieldNumber = 3;
    private string formattedAmount_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FormattedAmount {
      get { return formattedAmount_; }
      set {
        formattedAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "convertedPrice" field.</summary>
    public const int ConvertedPriceFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Offer> _repeated_convertedPrice_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.Offer.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Offer> convertedPrice_ = new pbc::RepeatedField<global::GooglePlayStore.Offer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Offer> ConvertedPrice {
      get { return convertedPrice_; }
    }

    /// <summary>Field number for the "checkoutFlowRequired" field.</summary>
    public const int CheckoutFlowRequiredFieldNumber = 5;
    private bool checkoutFlowRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CheckoutFlowRequired {
      get { return checkoutFlowRequired_; }
      set {
        checkoutFlowRequired_ = value;
      }
    }

    /// <summary>Field number for the "fullPriceMicros" field.</summary>
    public const int FullPriceMicrosFieldNumber = 6;
    private long fullPriceMicros_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FullPriceMicros {
      get { return fullPriceMicros_; }
      set {
        fullPriceMicros_ = value;
      }
    }

    /// <summary>Field number for the "formattedFullAmount" field.</summary>
    public const int FormattedFullAmountFieldNumber = 7;
    private string formattedFullAmount_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FormattedFullAmount {
      get { return formattedFullAmount_; }
      set {
        formattedFullAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "offerType" field.</summary>
    public const int OfferTypeFieldNumber = 8;
    private int offerType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OfferType {
      get { return offerType_; }
      set {
        offerType_ = value;
      }
    }

    /// <summary>Field number for the "rentalTerms" field.</summary>
    public const int RentalTermsFieldNumber = 9;
    private global::GooglePlayStore.RentalTerms rentalTerms_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.RentalTerms RentalTerms {
      get { return rentalTerms_; }
      set {
        rentalTerms_ = value;
      }
    }

    /// <summary>Field number for the "onSaleDate" field.</summary>
    public const int OnSaleDateFieldNumber = 10;
    private long onSaleDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OnSaleDate {
      get { return onSaleDate_; }
      set {
        onSaleDate_ = value;
      }
    }

    /// <summary>Field number for the "promotionLabel" field.</summary>
    public const int PromotionLabelFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _repeated_promotionLabel_codec
        = pb::FieldCodec.ForString(90);
    private readonly pbc::RepeatedField<string> promotionLabel_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> PromotionLabel {
      get { return promotionLabel_; }
    }

    /// <summary>Field number for the "subscriptionTerms" field.</summary>
    public const int SubscriptionTermsFieldNumber = 12;
    private global::GooglePlayStore.SubscriptionTerms subscriptionTerms_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SubscriptionTerms SubscriptionTerms {
      get { return subscriptionTerms_; }
      set {
        subscriptionTerms_ = value;
      }
    }

    /// <summary>Field number for the "formattedName" field.</summary>
    public const int FormattedNameFieldNumber = 13;
    private string formattedName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FormattedName {
      get { return formattedName_; }
      set {
        formattedName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "formattedDescription" field.</summary>
    public const int FormattedDescriptionFieldNumber = 14;
    private string formattedDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FormattedDescription {
      get { return formattedDescription_; }
      set {
        formattedDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Offer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Offer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Micros != other.Micros) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      if (FormattedAmount != other.FormattedAmount) return false;
      if(!convertedPrice_.Equals(other.convertedPrice_)) return false;
      if (CheckoutFlowRequired != other.CheckoutFlowRequired) return false;
      if (FullPriceMicros != other.FullPriceMicros) return false;
      if (FormattedFullAmount != other.FormattedFullAmount) return false;
      if (OfferType != other.OfferType) return false;
      if (!object.Equals(RentalTerms, other.RentalTerms)) return false;
      if (OnSaleDate != other.OnSaleDate) return false;
      if(!promotionLabel_.Equals(other.promotionLabel_)) return false;
      if (!object.Equals(SubscriptionTerms, other.SubscriptionTerms)) return false;
      if (FormattedName != other.FormattedName) return false;
      if (FormattedDescription != other.FormattedDescription) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Micros != 0L) hash ^= Micros.GetHashCode();
      if (CurrencyCode.Length != 0) hash ^= CurrencyCode.GetHashCode();
      if (FormattedAmount.Length != 0) hash ^= FormattedAmount.GetHashCode();
      hash ^= convertedPrice_.GetHashCode();
      if (CheckoutFlowRequired != false) hash ^= CheckoutFlowRequired.GetHashCode();
      if (FullPriceMicros != 0L) hash ^= FullPriceMicros.GetHashCode();
      if (FormattedFullAmount.Length != 0) hash ^= FormattedFullAmount.GetHashCode();
      if (OfferType != 0) hash ^= OfferType.GetHashCode();
      if (rentalTerms_ != null) hash ^= RentalTerms.GetHashCode();
      if (OnSaleDate != 0L) hash ^= OnSaleDate.GetHashCode();
      hash ^= promotionLabel_.GetHashCode();
      if (subscriptionTerms_ != null) hash ^= SubscriptionTerms.GetHashCode();
      if (FormattedName.Length != 0) hash ^= FormattedName.GetHashCode();
      if (FormattedDescription.Length != 0) hash ^= FormattedDescription.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Micros != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Micros);
      }
      if (CurrencyCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CurrencyCode);
      }
      if (FormattedAmount.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FormattedAmount);
      }
      convertedPrice_.WriteTo(output, _repeated_convertedPrice_codec);
      if (CheckoutFlowRequired != false) {
        output.WriteRawTag(40);
        output.WriteBool(CheckoutFlowRequired);
      }
      if (FullPriceMicros != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(FullPriceMicros);
      }
      if (FormattedFullAmount.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(FormattedFullAmount);
      }
      if (OfferType != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(OfferType);
      }
      if (rentalTerms_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(RentalTerms);
      }
      if (OnSaleDate != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(OnSaleDate);
      }
      promotionLabel_.WriteTo(output, _repeated_promotionLabel_codec);
      if (subscriptionTerms_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(SubscriptionTerms);
      }
      if (FormattedName.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(FormattedName);
      }
      if (FormattedDescription.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(FormattedDescription);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Micros != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Micros);
      }
      if (CurrencyCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyCode);
      }
      if (FormattedAmount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormattedAmount);
      }
      size += convertedPrice_.CalculateSize(_repeated_convertedPrice_codec);
      if (CheckoutFlowRequired != false) {
        size += 1 + 1;
      }
      if (FullPriceMicros != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FullPriceMicros);
      }
      if (FormattedFullAmount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormattedFullAmount);
      }
      if (OfferType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OfferType);
      }
      if (rentalTerms_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RentalTerms);
      }
      if (OnSaleDate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OnSaleDate);
      }
      size += promotionLabel_.CalculateSize(_repeated_promotionLabel_codec);
      if (subscriptionTerms_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscriptionTerms);
      }
      if (FormattedName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormattedName);
      }
      if (FormattedDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormattedDescription);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Offer other) {
      if (other == null) {
        return;
      }
      if (other.Micros != 0L) {
        Micros = other.Micros;
      }
      if (other.CurrencyCode.Length != 0) {
        CurrencyCode = other.CurrencyCode;
      }
      if (other.FormattedAmount.Length != 0) {
        FormattedAmount = other.FormattedAmount;
      }
      convertedPrice_.Add(other.convertedPrice_);
      if (other.CheckoutFlowRequired != false) {
        CheckoutFlowRequired = other.CheckoutFlowRequired;
      }
      if (other.FullPriceMicros != 0L) {
        FullPriceMicros = other.FullPriceMicros;
      }
      if (other.FormattedFullAmount.Length != 0) {
        FormattedFullAmount = other.FormattedFullAmount;
      }
      if (other.OfferType != 0) {
        OfferType = other.OfferType;
      }
      if (other.rentalTerms_ != null) {
        if (rentalTerms_ == null) {
          rentalTerms_ = new global::GooglePlayStore.RentalTerms();
        }
        RentalTerms.MergeFrom(other.RentalTerms);
      }
      if (other.OnSaleDate != 0L) {
        OnSaleDate = other.OnSaleDate;
      }
      promotionLabel_.Add(other.promotionLabel_);
      if (other.subscriptionTerms_ != null) {
        if (subscriptionTerms_ == null) {
          subscriptionTerms_ = new global::GooglePlayStore.SubscriptionTerms();
        }
        SubscriptionTerms.MergeFrom(other.SubscriptionTerms);
      }
      if (other.FormattedName.Length != 0) {
        FormattedName = other.FormattedName;
      }
      if (other.FormattedDescription.Length != 0) {
        FormattedDescription = other.FormattedDescription;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Micros = input.ReadInt64();
            break;
          }
          case 18: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 26: {
            FormattedAmount = input.ReadString();
            break;
          }
          case 34: {
            convertedPrice_.AddEntriesFrom(input, _repeated_convertedPrice_codec);
            break;
          }
          case 40: {
            CheckoutFlowRequired = input.ReadBool();
            break;
          }
          case 48: {
            FullPriceMicros = input.ReadInt64();
            break;
          }
          case 58: {
            FormattedFullAmount = input.ReadString();
            break;
          }
          case 64: {
            OfferType = input.ReadInt32();
            break;
          }
          case 74: {
            if (rentalTerms_ == null) {
              rentalTerms_ = new global::GooglePlayStore.RentalTerms();
            }
            input.ReadMessage(rentalTerms_);
            break;
          }
          case 80: {
            OnSaleDate = input.ReadInt64();
            break;
          }
          case 90: {
            promotionLabel_.AddEntriesFrom(input, _repeated_promotionLabel_codec);
            break;
          }
          case 98: {
            if (subscriptionTerms_ == null) {
              subscriptionTerms_ = new global::GooglePlayStore.SubscriptionTerms();
            }
            input.ReadMessage(subscriptionTerms_);
            break;
          }
          case 106: {
            FormattedName = input.ReadString();
            break;
          }
          case 114: {
            FormattedDescription = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OwnershipInfo : pb::IMessage<OwnershipInfo> {
    private static readonly pb::MessageParser<OwnershipInfo> _parser = new pb::MessageParser<OwnershipInfo>(() => new OwnershipInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OwnershipInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OwnershipInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OwnershipInfo(OwnershipInfo other) : this() {
      initiationTimestampMsec_ = other.initiationTimestampMsec_;
      validUntilTimestampMsec_ = other.validUntilTimestampMsec_;
      autoRenewing_ = other.autoRenewing_;
      refundTimeoutTimestampMsec_ = other.refundTimeoutTimestampMsec_;
      postDeliveryRefundWindowMsec_ = other.postDeliveryRefundWindowMsec_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OwnershipInfo Clone() {
      return new OwnershipInfo(this);
    }

    /// <summary>Field number for the "initiationTimestampMsec" field.</summary>
    public const int InitiationTimestampMsecFieldNumber = 1;
    private long initiationTimestampMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InitiationTimestampMsec {
      get { return initiationTimestampMsec_; }
      set {
        initiationTimestampMsec_ = value;
      }
    }

    /// <summary>Field number for the "validUntilTimestampMsec" field.</summary>
    public const int ValidUntilTimestampMsecFieldNumber = 2;
    private long validUntilTimestampMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ValidUntilTimestampMsec {
      get { return validUntilTimestampMsec_; }
      set {
        validUntilTimestampMsec_ = value;
      }
    }

    /// <summary>Field number for the "autoRenewing" field.</summary>
    public const int AutoRenewingFieldNumber = 3;
    private bool autoRenewing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AutoRenewing {
      get { return autoRenewing_; }
      set {
        autoRenewing_ = value;
      }
    }

    /// <summary>Field number for the "refundTimeoutTimestampMsec" field.</summary>
    public const int RefundTimeoutTimestampMsecFieldNumber = 4;
    private long refundTimeoutTimestampMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RefundTimeoutTimestampMsec {
      get { return refundTimeoutTimestampMsec_; }
      set {
        refundTimeoutTimestampMsec_ = value;
      }
    }

    /// <summary>Field number for the "postDeliveryRefundWindowMsec" field.</summary>
    public const int PostDeliveryRefundWindowMsecFieldNumber = 5;
    private long postDeliveryRefundWindowMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PostDeliveryRefundWindowMsec {
      get { return postDeliveryRefundWindowMsec_; }
      set {
        postDeliveryRefundWindowMsec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OwnershipInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OwnershipInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InitiationTimestampMsec != other.InitiationTimestampMsec) return false;
      if (ValidUntilTimestampMsec != other.ValidUntilTimestampMsec) return false;
      if (AutoRenewing != other.AutoRenewing) return false;
      if (RefundTimeoutTimestampMsec != other.RefundTimeoutTimestampMsec) return false;
      if (PostDeliveryRefundWindowMsec != other.PostDeliveryRefundWindowMsec) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InitiationTimestampMsec != 0L) hash ^= InitiationTimestampMsec.GetHashCode();
      if (ValidUntilTimestampMsec != 0L) hash ^= ValidUntilTimestampMsec.GetHashCode();
      if (AutoRenewing != false) hash ^= AutoRenewing.GetHashCode();
      if (RefundTimeoutTimestampMsec != 0L) hash ^= RefundTimeoutTimestampMsec.GetHashCode();
      if (PostDeliveryRefundWindowMsec != 0L) hash ^= PostDeliveryRefundWindowMsec.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InitiationTimestampMsec != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(InitiationTimestampMsec);
      }
      if (ValidUntilTimestampMsec != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ValidUntilTimestampMsec);
      }
      if (AutoRenewing != false) {
        output.WriteRawTag(24);
        output.WriteBool(AutoRenewing);
      }
      if (RefundTimeoutTimestampMsec != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RefundTimeoutTimestampMsec);
      }
      if (PostDeliveryRefundWindowMsec != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(PostDeliveryRefundWindowMsec);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InitiationTimestampMsec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InitiationTimestampMsec);
      }
      if (ValidUntilTimestampMsec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ValidUntilTimestampMsec);
      }
      if (AutoRenewing != false) {
        size += 1 + 1;
      }
      if (RefundTimeoutTimestampMsec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RefundTimeoutTimestampMsec);
      }
      if (PostDeliveryRefundWindowMsec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PostDeliveryRefundWindowMsec);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OwnershipInfo other) {
      if (other == null) {
        return;
      }
      if (other.InitiationTimestampMsec != 0L) {
        InitiationTimestampMsec = other.InitiationTimestampMsec;
      }
      if (other.ValidUntilTimestampMsec != 0L) {
        ValidUntilTimestampMsec = other.ValidUntilTimestampMsec;
      }
      if (other.AutoRenewing != false) {
        AutoRenewing = other.AutoRenewing;
      }
      if (other.RefundTimeoutTimestampMsec != 0L) {
        RefundTimeoutTimestampMsec = other.RefundTimeoutTimestampMsec;
      }
      if (other.PostDeliveryRefundWindowMsec != 0L) {
        PostDeliveryRefundWindowMsec = other.PostDeliveryRefundWindowMsec;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            InitiationTimestampMsec = input.ReadInt64();
            break;
          }
          case 16: {
            ValidUntilTimestampMsec = input.ReadInt64();
            break;
          }
          case 24: {
            AutoRenewing = input.ReadBool();
            break;
          }
          case 32: {
            RefundTimeoutTimestampMsec = input.ReadInt64();
            break;
          }
          case 40: {
            PostDeliveryRefundWindowMsec = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RentalTerms : pb::IMessage<RentalTerms> {
    private static readonly pb::MessageParser<RentalTerms> _parser = new pb::MessageParser<RentalTerms>(() => new RentalTerms());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RentalTerms> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RentalTerms() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RentalTerms(RentalTerms other) : this() {
      grantPeriodSeconds_ = other.grantPeriodSeconds_;
      activatePeriodSeconds_ = other.activatePeriodSeconds_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RentalTerms Clone() {
      return new RentalTerms(this);
    }

    /// <summary>Field number for the "grantPeriodSeconds" field.</summary>
    public const int GrantPeriodSecondsFieldNumber = 1;
    private int grantPeriodSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GrantPeriodSeconds {
      get { return grantPeriodSeconds_; }
      set {
        grantPeriodSeconds_ = value;
      }
    }

    /// <summary>Field number for the "activatePeriodSeconds" field.</summary>
    public const int ActivatePeriodSecondsFieldNumber = 2;
    private int activatePeriodSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActivatePeriodSeconds {
      get { return activatePeriodSeconds_; }
      set {
        activatePeriodSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RentalTerms);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RentalTerms other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GrantPeriodSeconds != other.GrantPeriodSeconds) return false;
      if (ActivatePeriodSeconds != other.ActivatePeriodSeconds) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GrantPeriodSeconds != 0) hash ^= GrantPeriodSeconds.GetHashCode();
      if (ActivatePeriodSeconds != 0) hash ^= ActivatePeriodSeconds.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GrantPeriodSeconds != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GrantPeriodSeconds);
      }
      if (ActivatePeriodSeconds != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ActivatePeriodSeconds);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GrantPeriodSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GrantPeriodSeconds);
      }
      if (ActivatePeriodSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActivatePeriodSeconds);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RentalTerms other) {
      if (other == null) {
        return;
      }
      if (other.GrantPeriodSeconds != 0) {
        GrantPeriodSeconds = other.GrantPeriodSeconds;
      }
      if (other.ActivatePeriodSeconds != 0) {
        ActivatePeriodSeconds = other.ActivatePeriodSeconds;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            GrantPeriodSeconds = input.ReadInt32();
            break;
          }
          case 16: {
            ActivatePeriodSeconds = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscriptionTerms : pb::IMessage<SubscriptionTerms> {
    private static readonly pb::MessageParser<SubscriptionTerms> _parser = new pb::MessageParser<SubscriptionTerms>(() => new SubscriptionTerms());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscriptionTerms> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionTerms() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionTerms(SubscriptionTerms other) : this() {
      RecurringPeriod = other.recurringPeriod_ != null ? other.RecurringPeriod.Clone() : null;
      TrialPeriod = other.trialPeriod_ != null ? other.TrialPeriod.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionTerms Clone() {
      return new SubscriptionTerms(this);
    }

    /// <summary>Field number for the "recurringPeriod" field.</summary>
    public const int RecurringPeriodFieldNumber = 1;
    private global::GooglePlayStore.TimePeriod recurringPeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TimePeriod RecurringPeriod {
      get { return recurringPeriod_; }
      set {
        recurringPeriod_ = value;
      }
    }

    /// <summary>Field number for the "trialPeriod" field.</summary>
    public const int TrialPeriodFieldNumber = 2;
    private global::GooglePlayStore.TimePeriod trialPeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TimePeriod TrialPeriod {
      get { return trialPeriod_; }
      set {
        trialPeriod_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscriptionTerms);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscriptionTerms other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RecurringPeriod, other.RecurringPeriod)) return false;
      if (!object.Equals(TrialPeriod, other.TrialPeriod)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (recurringPeriod_ != null) hash ^= RecurringPeriod.GetHashCode();
      if (trialPeriod_ != null) hash ^= TrialPeriod.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (recurringPeriod_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RecurringPeriod);
      }
      if (trialPeriod_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TrialPeriod);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (recurringPeriod_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RecurringPeriod);
      }
      if (trialPeriod_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrialPeriod);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscriptionTerms other) {
      if (other == null) {
        return;
      }
      if (other.recurringPeriod_ != null) {
        if (recurringPeriod_ == null) {
          recurringPeriod_ = new global::GooglePlayStore.TimePeriod();
        }
        RecurringPeriod.MergeFrom(other.RecurringPeriod);
      }
      if (other.trialPeriod_ != null) {
        if (trialPeriod_ == null) {
          trialPeriod_ = new global::GooglePlayStore.TimePeriod();
        }
        TrialPeriod.MergeFrom(other.TrialPeriod);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (recurringPeriod_ == null) {
              recurringPeriod_ = new global::GooglePlayStore.TimePeriod();
            }
            input.ReadMessage(recurringPeriod_);
            break;
          }
          case 18: {
            if (trialPeriod_ == null) {
              trialPeriod_ = new global::GooglePlayStore.TimePeriod();
            }
            input.ReadMessage(trialPeriod_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TimePeriod : pb::IMessage<TimePeriod> {
    private static readonly pb::MessageParser<TimePeriod> _parser = new pb::MessageParser<TimePeriod>(() => new TimePeriod());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimePeriod> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimePeriod() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimePeriod(TimePeriod other) : this() {
      unit_ = other.unit_;
      count_ = other.count_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimePeriod Clone() {
      return new TimePeriod(this);
    }

    /// <summary>Field number for the "unit" field.</summary>
    public const int UnitFieldNumber = 1;
    private int unit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Unit {
      get { return unit_; }
      set {
        unit_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimePeriod);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimePeriod other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Unit != other.Unit) return false;
      if (Count != other.Count) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Unit != 0) hash ^= Unit.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Unit != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Unit);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Unit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unit);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimePeriod other) {
      if (other == null) {
        return;
      }
      if (other.Unit != 0) {
        Unit = other.Unit;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Unit = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BillingAddressSpec : pb::IMessage<BillingAddressSpec> {
    private static readonly pb::MessageParser<BillingAddressSpec> _parser = new pb::MessageParser<BillingAddressSpec>(() => new BillingAddressSpec());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BillingAddressSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingAddressSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingAddressSpec(BillingAddressSpec other) : this() {
      billingAddressType_ = other.billingAddressType_;
      requiredField_ = other.requiredField_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingAddressSpec Clone() {
      return new BillingAddressSpec(this);
    }

    /// <summary>Field number for the "billingAddressType" field.</summary>
    public const int BillingAddressTypeFieldNumber = 1;
    private int billingAddressType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BillingAddressType {
      get { return billingAddressType_; }
      set {
        billingAddressType_ = value;
      }
    }

    /// <summary>Field number for the "requiredField" field.</summary>
    public const int RequiredFieldFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_requiredField_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> requiredField_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RequiredField {
      get { return requiredField_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BillingAddressSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BillingAddressSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BillingAddressType != other.BillingAddressType) return false;
      if(!requiredField_.Equals(other.requiredField_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BillingAddressType != 0) hash ^= BillingAddressType.GetHashCode();
      hash ^= requiredField_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BillingAddressType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BillingAddressType);
      }
      requiredField_.WriteTo(output, _repeated_requiredField_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BillingAddressType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BillingAddressType);
      }
      size += requiredField_.CalculateSize(_repeated_requiredField_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BillingAddressSpec other) {
      if (other == null) {
        return;
      }
      if (other.BillingAddressType != 0) {
        BillingAddressType = other.BillingAddressType;
      }
      requiredField_.Add(other.requiredField_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            BillingAddressType = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            requiredField_.AddEntriesFrom(input, _repeated_requiredField_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CarrierBillingCredentials : pb::IMessage<CarrierBillingCredentials> {
    private static readonly pb::MessageParser<CarrierBillingCredentials> _parser = new pb::MessageParser<CarrierBillingCredentials>(() => new CarrierBillingCredentials());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CarrierBillingCredentials> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingCredentials() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingCredentials(CarrierBillingCredentials other) : this() {
      value_ = other.value_;
      expiration_ = other.expiration_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingCredentials Clone() {
      return new CarrierBillingCredentials(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expiration" field.</summary>
    public const int ExpirationFieldNumber = 2;
    private long expiration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Expiration {
      get { return expiration_; }
      set {
        expiration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CarrierBillingCredentials);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CarrierBillingCredentials other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if (Expiration != other.Expiration) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (Expiration != 0L) hash ^= Expiration.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Value);
      }
      if (Expiration != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Expiration);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (Expiration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Expiration);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CarrierBillingCredentials other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.Expiration != 0L) {
        Expiration = other.Expiration;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Value = input.ReadString();
            break;
          }
          case 16: {
            Expiration = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CarrierBillingInstrument : pb::IMessage<CarrierBillingInstrument> {
    private static readonly pb::MessageParser<CarrierBillingInstrument> _parser = new pb::MessageParser<CarrierBillingInstrument>(() => new CarrierBillingInstrument());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CarrierBillingInstrument> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingInstrument() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingInstrument(CarrierBillingInstrument other) : this() {
      instrumentKey_ = other.instrumentKey_;
      accountType_ = other.accountType_;
      currencyCode_ = other.currencyCode_;
      transactionLimit_ = other.transactionLimit_;
      subscriberIdentifier_ = other.subscriberIdentifier_;
      EncryptedSubscriberInfo = other.encryptedSubscriberInfo_ != null ? other.EncryptedSubscriberInfo.Clone() : null;
      Credentials = other.credentials_ != null ? other.Credentials.Clone() : null;
      AcceptedCarrierTos = other.acceptedCarrierTos_ != null ? other.AcceptedCarrierTos.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingInstrument Clone() {
      return new CarrierBillingInstrument(this);
    }

    /// <summary>Field number for the "instrumentKey" field.</summary>
    public const int InstrumentKeyFieldNumber = 1;
    private string instrumentKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstrumentKey {
      get { return instrumentKey_; }
      set {
        instrumentKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "accountType" field.</summary>
    public const int AccountTypeFieldNumber = 2;
    private string accountType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountType {
      get { return accountType_; }
      set {
        accountType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "currencyCode" field.</summary>
    public const int CurrencyCodeFieldNumber = 3;
    private string currencyCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_; }
      set {
        currencyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transactionLimit" field.</summary>
    public const int TransactionLimitFieldNumber = 4;
    private long transactionLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TransactionLimit {
      get { return transactionLimit_; }
      set {
        transactionLimit_ = value;
      }
    }

    /// <summary>Field number for the "subscriberIdentifier" field.</summary>
    public const int SubscriberIdentifierFieldNumber = 5;
    private string subscriberIdentifier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubscriberIdentifier {
      get { return subscriberIdentifier_; }
      set {
        subscriberIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "encryptedSubscriberInfo" field.</summary>
    public const int EncryptedSubscriberInfoFieldNumber = 6;
    private global::GooglePlayStore.EncryptedSubscriberInfo encryptedSubscriberInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.EncryptedSubscriberInfo EncryptedSubscriberInfo {
      get { return encryptedSubscriberInfo_; }
      set {
        encryptedSubscriberInfo_ = value;
      }
    }

    /// <summary>Field number for the "credentials" field.</summary>
    public const int CredentialsFieldNumber = 7;
    private global::GooglePlayStore.CarrierBillingCredentials credentials_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CarrierBillingCredentials Credentials {
      get { return credentials_; }
      set {
        credentials_ = value;
      }
    }

    /// <summary>Field number for the "acceptedCarrierTos" field.</summary>
    public const int AcceptedCarrierTosFieldNumber = 8;
    private global::GooglePlayStore.CarrierTos acceptedCarrierTos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CarrierTos AcceptedCarrierTos {
      get { return acceptedCarrierTos_; }
      set {
        acceptedCarrierTos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CarrierBillingInstrument);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CarrierBillingInstrument other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstrumentKey != other.InstrumentKey) return false;
      if (AccountType != other.AccountType) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      if (TransactionLimit != other.TransactionLimit) return false;
      if (SubscriberIdentifier != other.SubscriberIdentifier) return false;
      if (!object.Equals(EncryptedSubscriberInfo, other.EncryptedSubscriberInfo)) return false;
      if (!object.Equals(Credentials, other.Credentials)) return false;
      if (!object.Equals(AcceptedCarrierTos, other.AcceptedCarrierTos)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InstrumentKey.Length != 0) hash ^= InstrumentKey.GetHashCode();
      if (AccountType.Length != 0) hash ^= AccountType.GetHashCode();
      if (CurrencyCode.Length != 0) hash ^= CurrencyCode.GetHashCode();
      if (TransactionLimit != 0L) hash ^= TransactionLimit.GetHashCode();
      if (SubscriberIdentifier.Length != 0) hash ^= SubscriberIdentifier.GetHashCode();
      if (encryptedSubscriberInfo_ != null) hash ^= EncryptedSubscriberInfo.GetHashCode();
      if (credentials_ != null) hash ^= Credentials.GetHashCode();
      if (acceptedCarrierTos_ != null) hash ^= AcceptedCarrierTos.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InstrumentKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InstrumentKey);
      }
      if (AccountType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AccountType);
      }
      if (CurrencyCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CurrencyCode);
      }
      if (TransactionLimit != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TransactionLimit);
      }
      if (SubscriberIdentifier.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SubscriberIdentifier);
      }
      if (encryptedSubscriberInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(EncryptedSubscriberInfo);
      }
      if (credentials_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Credentials);
      }
      if (acceptedCarrierTos_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(AcceptedCarrierTos);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InstrumentKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentKey);
      }
      if (AccountType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountType);
      }
      if (CurrencyCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyCode);
      }
      if (TransactionLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TransactionLimit);
      }
      if (SubscriberIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubscriberIdentifier);
      }
      if (encryptedSubscriberInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EncryptedSubscriberInfo);
      }
      if (credentials_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Credentials);
      }
      if (acceptedCarrierTos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AcceptedCarrierTos);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CarrierBillingInstrument other) {
      if (other == null) {
        return;
      }
      if (other.InstrumentKey.Length != 0) {
        InstrumentKey = other.InstrumentKey;
      }
      if (other.AccountType.Length != 0) {
        AccountType = other.AccountType;
      }
      if (other.CurrencyCode.Length != 0) {
        CurrencyCode = other.CurrencyCode;
      }
      if (other.TransactionLimit != 0L) {
        TransactionLimit = other.TransactionLimit;
      }
      if (other.SubscriberIdentifier.Length != 0) {
        SubscriberIdentifier = other.SubscriberIdentifier;
      }
      if (other.encryptedSubscriberInfo_ != null) {
        if (encryptedSubscriberInfo_ == null) {
          encryptedSubscriberInfo_ = new global::GooglePlayStore.EncryptedSubscriberInfo();
        }
        EncryptedSubscriberInfo.MergeFrom(other.EncryptedSubscriberInfo);
      }
      if (other.credentials_ != null) {
        if (credentials_ == null) {
          credentials_ = new global::GooglePlayStore.CarrierBillingCredentials();
        }
        Credentials.MergeFrom(other.Credentials);
      }
      if (other.acceptedCarrierTos_ != null) {
        if (acceptedCarrierTos_ == null) {
          acceptedCarrierTos_ = new global::GooglePlayStore.CarrierTos();
        }
        AcceptedCarrierTos.MergeFrom(other.AcceptedCarrierTos);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            InstrumentKey = input.ReadString();
            break;
          }
          case 18: {
            AccountType = input.ReadString();
            break;
          }
          case 26: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 32: {
            TransactionLimit = input.ReadInt64();
            break;
          }
          case 42: {
            SubscriberIdentifier = input.ReadString();
            break;
          }
          case 50: {
            if (encryptedSubscriberInfo_ == null) {
              encryptedSubscriberInfo_ = new global::GooglePlayStore.EncryptedSubscriberInfo();
            }
            input.ReadMessage(encryptedSubscriberInfo_);
            break;
          }
          case 58: {
            if (credentials_ == null) {
              credentials_ = new global::GooglePlayStore.CarrierBillingCredentials();
            }
            input.ReadMessage(credentials_);
            break;
          }
          case 66: {
            if (acceptedCarrierTos_ == null) {
              acceptedCarrierTos_ = new global::GooglePlayStore.CarrierTos();
            }
            input.ReadMessage(acceptedCarrierTos_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CarrierBillingInstrumentStatus : pb::IMessage<CarrierBillingInstrumentStatus> {
    private static readonly pb::MessageParser<CarrierBillingInstrumentStatus> _parser = new pb::MessageParser<CarrierBillingInstrumentStatus>(() => new CarrierBillingInstrumentStatus());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CarrierBillingInstrumentStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingInstrumentStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingInstrumentStatus(CarrierBillingInstrumentStatus other) : this() {
      CarrierTos = other.carrierTos_ != null ? other.CarrierTos.Clone() : null;
      associationRequired_ = other.associationRequired_;
      passwordRequired_ = other.passwordRequired_;
      CarrierPasswordPrompt = other.carrierPasswordPrompt_ != null ? other.CarrierPasswordPrompt.Clone() : null;
      apiVersion_ = other.apiVersion_;
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingInstrumentStatus Clone() {
      return new CarrierBillingInstrumentStatus(this);
    }

    /// <summary>Field number for the "carrierTos" field.</summary>
    public const int CarrierTosFieldNumber = 1;
    private global::GooglePlayStore.CarrierTos carrierTos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CarrierTos CarrierTos {
      get { return carrierTos_; }
      set {
        carrierTos_ = value;
      }
    }

    /// <summary>Field number for the "associationRequired" field.</summary>
    public const int AssociationRequiredFieldNumber = 2;
    private bool associationRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AssociationRequired {
      get { return associationRequired_; }
      set {
        associationRequired_ = value;
      }
    }

    /// <summary>Field number for the "passwordRequired" field.</summary>
    public const int PasswordRequiredFieldNumber = 3;
    private bool passwordRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PasswordRequired {
      get { return passwordRequired_; }
      set {
        passwordRequired_ = value;
      }
    }

    /// <summary>Field number for the "carrierPasswordPrompt" field.</summary>
    public const int CarrierPasswordPromptFieldNumber = 4;
    private global::GooglePlayStore.PasswordPrompt carrierPasswordPrompt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.PasswordPrompt CarrierPasswordPrompt {
      get { return carrierPasswordPrompt_; }
      set {
        carrierPasswordPrompt_ = value;
      }
    }

    /// <summary>Field number for the "apiVersion" field.</summary>
    public const int ApiVersionFieldNumber = 5;
    private int apiVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApiVersion {
      get { return apiVersion_; }
      set {
        apiVersion_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CarrierBillingInstrumentStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CarrierBillingInstrumentStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CarrierTos, other.CarrierTos)) return false;
      if (AssociationRequired != other.AssociationRequired) return false;
      if (PasswordRequired != other.PasswordRequired) return false;
      if (!object.Equals(CarrierPasswordPrompt, other.CarrierPasswordPrompt)) return false;
      if (ApiVersion != other.ApiVersion) return false;
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (carrierTos_ != null) hash ^= CarrierTos.GetHashCode();
      if (AssociationRequired != false) hash ^= AssociationRequired.GetHashCode();
      if (PasswordRequired != false) hash ^= PasswordRequired.GetHashCode();
      if (carrierPasswordPrompt_ != null) hash ^= CarrierPasswordPrompt.GetHashCode();
      if (ApiVersion != 0) hash ^= ApiVersion.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (carrierTos_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CarrierTos);
      }
      if (AssociationRequired != false) {
        output.WriteRawTag(16);
        output.WriteBool(AssociationRequired);
      }
      if (PasswordRequired != false) {
        output.WriteRawTag(24);
        output.WriteBool(PasswordRequired);
      }
      if (carrierPasswordPrompt_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CarrierPasswordPrompt);
      }
      if (ApiVersion != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ApiVersion);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (carrierTos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CarrierTos);
      }
      if (AssociationRequired != false) {
        size += 1 + 1;
      }
      if (PasswordRequired != false) {
        size += 1 + 1;
      }
      if (carrierPasswordPrompt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CarrierPasswordPrompt);
      }
      if (ApiVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApiVersion);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CarrierBillingInstrumentStatus other) {
      if (other == null) {
        return;
      }
      if (other.carrierTos_ != null) {
        if (carrierTos_ == null) {
          carrierTos_ = new global::GooglePlayStore.CarrierTos();
        }
        CarrierTos.MergeFrom(other.CarrierTos);
      }
      if (other.AssociationRequired != false) {
        AssociationRequired = other.AssociationRequired;
      }
      if (other.PasswordRequired != false) {
        PasswordRequired = other.PasswordRequired;
      }
      if (other.carrierPasswordPrompt_ != null) {
        if (carrierPasswordPrompt_ == null) {
          carrierPasswordPrompt_ = new global::GooglePlayStore.PasswordPrompt();
        }
        CarrierPasswordPrompt.MergeFrom(other.CarrierPasswordPrompt);
      }
      if (other.ApiVersion != 0) {
        ApiVersion = other.ApiVersion;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (carrierTos_ == null) {
              carrierTos_ = new global::GooglePlayStore.CarrierTos();
            }
            input.ReadMessage(carrierTos_);
            break;
          }
          case 16: {
            AssociationRequired = input.ReadBool();
            break;
          }
          case 24: {
            PasswordRequired = input.ReadBool();
            break;
          }
          case 34: {
            if (carrierPasswordPrompt_ == null) {
              carrierPasswordPrompt_ = new global::GooglePlayStore.PasswordPrompt();
            }
            input.ReadMessage(carrierPasswordPrompt_);
            break;
          }
          case 40: {
            ApiVersion = input.ReadInt32();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CarrierTos : pb::IMessage<CarrierTos> {
    private static readonly pb::MessageParser<CarrierTos> _parser = new pb::MessageParser<CarrierTos>(() => new CarrierTos());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CarrierTos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierTos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierTos(CarrierTos other) : this() {
      DcbTos = other.dcbTos_ != null ? other.DcbTos.Clone() : null;
      PiiTos = other.piiTos_ != null ? other.PiiTos.Clone() : null;
      needsDcbTosAcceptance_ = other.needsDcbTosAcceptance_;
      needsPiiTosAcceptance_ = other.needsPiiTosAcceptance_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierTos Clone() {
      return new CarrierTos(this);
    }

    /// <summary>Field number for the "dcbTos" field.</summary>
    public const int DcbTosFieldNumber = 1;
    private global::GooglePlayStore.CarrierTosEntry dcbTos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CarrierTosEntry DcbTos {
      get { return dcbTos_; }
      set {
        dcbTos_ = value;
      }
    }

    /// <summary>Field number for the "piiTos" field.</summary>
    public const int PiiTosFieldNumber = 2;
    private global::GooglePlayStore.CarrierTosEntry piiTos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CarrierTosEntry PiiTos {
      get { return piiTos_; }
      set {
        piiTos_ = value;
      }
    }

    /// <summary>Field number for the "needsDcbTosAcceptance" field.</summary>
    public const int NeedsDcbTosAcceptanceFieldNumber = 3;
    private bool needsDcbTosAcceptance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NeedsDcbTosAcceptance {
      get { return needsDcbTosAcceptance_; }
      set {
        needsDcbTosAcceptance_ = value;
      }
    }

    /// <summary>Field number for the "needsPiiTosAcceptance" field.</summary>
    public const int NeedsPiiTosAcceptanceFieldNumber = 4;
    private bool needsPiiTosAcceptance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NeedsPiiTosAcceptance {
      get { return needsPiiTosAcceptance_; }
      set {
        needsPiiTosAcceptance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CarrierTos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CarrierTos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DcbTos, other.DcbTos)) return false;
      if (!object.Equals(PiiTos, other.PiiTos)) return false;
      if (NeedsDcbTosAcceptance != other.NeedsDcbTosAcceptance) return false;
      if (NeedsPiiTosAcceptance != other.NeedsPiiTosAcceptance) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dcbTos_ != null) hash ^= DcbTos.GetHashCode();
      if (piiTos_ != null) hash ^= PiiTos.GetHashCode();
      if (NeedsDcbTosAcceptance != false) hash ^= NeedsDcbTosAcceptance.GetHashCode();
      if (NeedsPiiTosAcceptance != false) hash ^= NeedsPiiTosAcceptance.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dcbTos_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DcbTos);
      }
      if (piiTos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PiiTos);
      }
      if (NeedsDcbTosAcceptance != false) {
        output.WriteRawTag(24);
        output.WriteBool(NeedsDcbTosAcceptance);
      }
      if (NeedsPiiTosAcceptance != false) {
        output.WriteRawTag(32);
        output.WriteBool(NeedsPiiTosAcceptance);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dcbTos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DcbTos);
      }
      if (piiTos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PiiTos);
      }
      if (NeedsDcbTosAcceptance != false) {
        size += 1 + 1;
      }
      if (NeedsPiiTosAcceptance != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CarrierTos other) {
      if (other == null) {
        return;
      }
      if (other.dcbTos_ != null) {
        if (dcbTos_ == null) {
          dcbTos_ = new global::GooglePlayStore.CarrierTosEntry();
        }
        DcbTos.MergeFrom(other.DcbTos);
      }
      if (other.piiTos_ != null) {
        if (piiTos_ == null) {
          piiTos_ = new global::GooglePlayStore.CarrierTosEntry();
        }
        PiiTos.MergeFrom(other.PiiTos);
      }
      if (other.NeedsDcbTosAcceptance != false) {
        NeedsDcbTosAcceptance = other.NeedsDcbTosAcceptance;
      }
      if (other.NeedsPiiTosAcceptance != false) {
        NeedsPiiTosAcceptance = other.NeedsPiiTosAcceptance;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (dcbTos_ == null) {
              dcbTos_ = new global::GooglePlayStore.CarrierTosEntry();
            }
            input.ReadMessage(dcbTos_);
            break;
          }
          case 18: {
            if (piiTos_ == null) {
              piiTos_ = new global::GooglePlayStore.CarrierTosEntry();
            }
            input.ReadMessage(piiTos_);
            break;
          }
          case 24: {
            NeedsDcbTosAcceptance = input.ReadBool();
            break;
          }
          case 32: {
            NeedsPiiTosAcceptance = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CarrierTosEntry : pb::IMessage<CarrierTosEntry> {
    private static readonly pb::MessageParser<CarrierTosEntry> _parser = new pb::MessageParser<CarrierTosEntry>(() => new CarrierTosEntry());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CarrierTosEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierTosEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierTosEntry(CarrierTosEntry other) : this() {
      url_ = other.url_;
      version_ = other.version_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierTosEntry Clone() {
      return new CarrierTosEntry(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CarrierTosEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CarrierTosEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (Version != other.Version) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CarrierTosEntry other) {
      if (other == null) {
        return;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreditCardInstrument : pb::IMessage<CreditCardInstrument> {
    private static readonly pb::MessageParser<CreditCardInstrument> _parser = new pb::MessageParser<CreditCardInstrument>(() => new CreditCardInstrument());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreditCardInstrument> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreditCardInstrument() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreditCardInstrument(CreditCardInstrument other) : this() {
      type_ = other.type_;
      escrowHandle_ = other.escrowHandle_;
      lastDigits_ = other.lastDigits_;
      expirationMonth_ = other.expirationMonth_;
      expirationYear_ = other.expirationYear_;
      escrowEfeParam_ = other.escrowEfeParam_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreditCardInstrument Clone() {
      return new CreditCardInstrument(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "escrowHandle" field.</summary>
    public const int EscrowHandleFieldNumber = 2;
    private string escrowHandle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EscrowHandle {
      get { return escrowHandle_; }
      set {
        escrowHandle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lastDigits" field.</summary>
    public const int LastDigitsFieldNumber = 3;
    private string lastDigits_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastDigits {
      get { return lastDigits_; }
      set {
        lastDigits_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expirationMonth" field.</summary>
    public const int ExpirationMonthFieldNumber = 4;
    private int expirationMonth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExpirationMonth {
      get { return expirationMonth_; }
      set {
        expirationMonth_ = value;
      }
    }

    /// <summary>Field number for the "expirationYear" field.</summary>
    public const int ExpirationYearFieldNumber = 5;
    private int expirationYear_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExpirationYear {
      get { return expirationYear_; }
      set {
        expirationYear_ = value;
      }
    }

    /// <summary>Field number for the "escrowEfeParam" field.</summary>
    public const int EscrowEfeParamFieldNumber = 6;
    private static readonly pb::FieldCodec<global::GooglePlayStore.EfeParam> _repeated_escrowEfeParam_codec
        = pb::FieldCodec.ForMessage(50, global::GooglePlayStore.EfeParam.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.EfeParam> escrowEfeParam_ = new pbc::RepeatedField<global::GooglePlayStore.EfeParam>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.EfeParam> EscrowEfeParam {
      get { return escrowEfeParam_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreditCardInstrument);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreditCardInstrument other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (EscrowHandle != other.EscrowHandle) return false;
      if (LastDigits != other.LastDigits) return false;
      if (ExpirationMonth != other.ExpirationMonth) return false;
      if (ExpirationYear != other.ExpirationYear) return false;
      if(!escrowEfeParam_.Equals(other.escrowEfeParam_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (EscrowHandle.Length != 0) hash ^= EscrowHandle.GetHashCode();
      if (LastDigits.Length != 0) hash ^= LastDigits.GetHashCode();
      if (ExpirationMonth != 0) hash ^= ExpirationMonth.GetHashCode();
      if (ExpirationYear != 0) hash ^= ExpirationYear.GetHashCode();
      hash ^= escrowEfeParam_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (EscrowHandle.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EscrowHandle);
      }
      if (LastDigits.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastDigits);
      }
      if (ExpirationMonth != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ExpirationMonth);
      }
      if (ExpirationYear != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ExpirationYear);
      }
      escrowEfeParam_.WriteTo(output, _repeated_escrowEfeParam_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (EscrowHandle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EscrowHandle);
      }
      if (LastDigits.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastDigits);
      }
      if (ExpirationMonth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExpirationMonth);
      }
      if (ExpirationYear != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExpirationYear);
      }
      size += escrowEfeParam_.CalculateSize(_repeated_escrowEfeParam_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreditCardInstrument other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.EscrowHandle.Length != 0) {
        EscrowHandle = other.EscrowHandle;
      }
      if (other.LastDigits.Length != 0) {
        LastDigits = other.LastDigits;
      }
      if (other.ExpirationMonth != 0) {
        ExpirationMonth = other.ExpirationMonth;
      }
      if (other.ExpirationYear != 0) {
        ExpirationYear = other.ExpirationYear;
      }
      escrowEfeParam_.Add(other.escrowEfeParam_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            EscrowHandle = input.ReadString();
            break;
          }
          case 26: {
            LastDigits = input.ReadString();
            break;
          }
          case 32: {
            ExpirationMonth = input.ReadInt32();
            break;
          }
          case 40: {
            ExpirationYear = input.ReadInt32();
            break;
          }
          case 50: {
            escrowEfeParam_.AddEntriesFrom(input, _repeated_escrowEfeParam_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EfeParam : pb::IMessage<EfeParam> {
    private static readonly pb::MessageParser<EfeParam> _parser = new pb::MessageParser<EfeParam>(() => new EfeParam());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EfeParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EfeParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EfeParam(EfeParam other) : this() {
      key_ = other.key_;
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EfeParam Clone() {
      return new EfeParam(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private int key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EfeParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EfeParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EfeParam other) {
      if (other == null) {
        return;
      }
      if (other.Key != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Key = input.ReadInt32();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InputValidationError : pb::IMessage<InputValidationError> {
    private static readonly pb::MessageParser<InputValidationError> _parser = new pb::MessageParser<InputValidationError>(() => new InputValidationError());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InputValidationError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputValidationError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputValidationError(InputValidationError other) : this() {
      inputField_ = other.inputField_;
      errorMessage_ = other.errorMessage_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputValidationError Clone() {
      return new InputValidationError(this);
    }

    /// <summary>Field number for the "inputField" field.</summary>
    public const int InputFieldFieldNumber = 1;
    private int inputField_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InputField {
      get { return inputField_; }
      set {
        inputField_ = value;
      }
    }

    /// <summary>Field number for the "errorMessage" field.</summary>
    public const int ErrorMessageFieldNumber = 2;
    private string errorMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InputValidationError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InputValidationError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputField != other.InputField) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InputField != 0) hash ^= InputField.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InputField != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InputField);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrorMessage);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InputField != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InputField);
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InputValidationError other) {
      if (other == null) {
        return;
      }
      if (other.InputField != 0) {
        InputField = other.InputField;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            InputField = input.ReadInt32();
            break;
          }
          case 18: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Instrument : pb::IMessage<Instrument> {
    private static readonly pb::MessageParser<Instrument> _parser = new pb::MessageParser<Instrument>(() => new Instrument());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Instrument> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Instrument() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Instrument(Instrument other) : this() {
      instrumentId_ = other.instrumentId_;
      BillingAddress = other.billingAddress_ != null ? other.BillingAddress.Clone() : null;
      CreditCard = other.creditCard_ != null ? other.CreditCard.Clone() : null;
      CarrierBilling = other.carrierBilling_ != null ? other.CarrierBilling.Clone() : null;
      BillingAddressSpec = other.billingAddressSpec_ != null ? other.BillingAddressSpec.Clone() : null;
      instrumentFamily_ = other.instrumentFamily_;
      CarrierBillingStatus = other.carrierBillingStatus_ != null ? other.CarrierBillingStatus.Clone() : null;
      displayTitle_ = other.displayTitle_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Instrument Clone() {
      return new Instrument(this);
    }

    /// <summary>Field number for the "instrumentId" field.</summary>
    public const int InstrumentIdFieldNumber = 1;
    private string instrumentId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstrumentId {
      get { return instrumentId_; }
      set {
        instrumentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "billingAddress" field.</summary>
    public const int BillingAddressFieldNumber = 2;
    private global::GooglePlayStore.Address billingAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Address BillingAddress {
      get { return billingAddress_; }
      set {
        billingAddress_ = value;
      }
    }

    /// <summary>Field number for the "creditCard" field.</summary>
    public const int CreditCardFieldNumber = 3;
    private global::GooglePlayStore.CreditCardInstrument creditCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CreditCardInstrument CreditCard {
      get { return creditCard_; }
      set {
        creditCard_ = value;
      }
    }

    /// <summary>Field number for the "carrierBilling" field.</summary>
    public const int CarrierBillingFieldNumber = 4;
    private global::GooglePlayStore.CarrierBillingInstrument carrierBilling_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CarrierBillingInstrument CarrierBilling {
      get { return carrierBilling_; }
      set {
        carrierBilling_ = value;
      }
    }

    /// <summary>Field number for the "billingAddressSpec" field.</summary>
    public const int BillingAddressSpecFieldNumber = 5;
    private global::GooglePlayStore.BillingAddressSpec billingAddressSpec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.BillingAddressSpec BillingAddressSpec {
      get { return billingAddressSpec_; }
      set {
        billingAddressSpec_ = value;
      }
    }

    /// <summary>Field number for the "instrumentFamily" field.</summary>
    public const int InstrumentFamilyFieldNumber = 6;
    private int instrumentFamily_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InstrumentFamily {
      get { return instrumentFamily_; }
      set {
        instrumentFamily_ = value;
      }
    }

    /// <summary>Field number for the "carrierBillingStatus" field.</summary>
    public const int CarrierBillingStatusFieldNumber = 7;
    private global::GooglePlayStore.CarrierBillingInstrumentStatus carrierBillingStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CarrierBillingInstrumentStatus CarrierBillingStatus {
      get { return carrierBillingStatus_; }
      set {
        carrierBillingStatus_ = value;
      }
    }

    /// <summary>Field number for the "displayTitle" field.</summary>
    public const int DisplayTitleFieldNumber = 8;
    private string displayTitle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayTitle {
      get { return displayTitle_; }
      set {
        displayTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Instrument);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Instrument other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstrumentId != other.InstrumentId) return false;
      if (!object.Equals(BillingAddress, other.BillingAddress)) return false;
      if (!object.Equals(CreditCard, other.CreditCard)) return false;
      if (!object.Equals(CarrierBilling, other.CarrierBilling)) return false;
      if (!object.Equals(BillingAddressSpec, other.BillingAddressSpec)) return false;
      if (InstrumentFamily != other.InstrumentFamily) return false;
      if (!object.Equals(CarrierBillingStatus, other.CarrierBillingStatus)) return false;
      if (DisplayTitle != other.DisplayTitle) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InstrumentId.Length != 0) hash ^= InstrumentId.GetHashCode();
      if (billingAddress_ != null) hash ^= BillingAddress.GetHashCode();
      if (creditCard_ != null) hash ^= CreditCard.GetHashCode();
      if (carrierBilling_ != null) hash ^= CarrierBilling.GetHashCode();
      if (billingAddressSpec_ != null) hash ^= BillingAddressSpec.GetHashCode();
      if (InstrumentFamily != 0) hash ^= InstrumentFamily.GetHashCode();
      if (carrierBillingStatus_ != null) hash ^= CarrierBillingStatus.GetHashCode();
      if (DisplayTitle.Length != 0) hash ^= DisplayTitle.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InstrumentId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InstrumentId);
      }
      if (billingAddress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BillingAddress);
      }
      if (creditCard_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreditCard);
      }
      if (carrierBilling_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CarrierBilling);
      }
      if (billingAddressSpec_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(BillingAddressSpec);
      }
      if (InstrumentFamily != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(InstrumentFamily);
      }
      if (carrierBillingStatus_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CarrierBillingStatus);
      }
      if (DisplayTitle.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DisplayTitle);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InstrumentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentId);
      }
      if (billingAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BillingAddress);
      }
      if (creditCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreditCard);
      }
      if (carrierBilling_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CarrierBilling);
      }
      if (billingAddressSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BillingAddressSpec);
      }
      if (InstrumentFamily != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InstrumentFamily);
      }
      if (carrierBillingStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CarrierBillingStatus);
      }
      if (DisplayTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayTitle);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Instrument other) {
      if (other == null) {
        return;
      }
      if (other.InstrumentId.Length != 0) {
        InstrumentId = other.InstrumentId;
      }
      if (other.billingAddress_ != null) {
        if (billingAddress_ == null) {
          billingAddress_ = new global::GooglePlayStore.Address();
        }
        BillingAddress.MergeFrom(other.BillingAddress);
      }
      if (other.creditCard_ != null) {
        if (creditCard_ == null) {
          creditCard_ = new global::GooglePlayStore.CreditCardInstrument();
        }
        CreditCard.MergeFrom(other.CreditCard);
      }
      if (other.carrierBilling_ != null) {
        if (carrierBilling_ == null) {
          carrierBilling_ = new global::GooglePlayStore.CarrierBillingInstrument();
        }
        CarrierBilling.MergeFrom(other.CarrierBilling);
      }
      if (other.billingAddressSpec_ != null) {
        if (billingAddressSpec_ == null) {
          billingAddressSpec_ = new global::GooglePlayStore.BillingAddressSpec();
        }
        BillingAddressSpec.MergeFrom(other.BillingAddressSpec);
      }
      if (other.InstrumentFamily != 0) {
        InstrumentFamily = other.InstrumentFamily;
      }
      if (other.carrierBillingStatus_ != null) {
        if (carrierBillingStatus_ == null) {
          carrierBillingStatus_ = new global::GooglePlayStore.CarrierBillingInstrumentStatus();
        }
        CarrierBillingStatus.MergeFrom(other.CarrierBillingStatus);
      }
      if (other.DisplayTitle.Length != 0) {
        DisplayTitle = other.DisplayTitle;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            InstrumentId = input.ReadString();
            break;
          }
          case 18: {
            if (billingAddress_ == null) {
              billingAddress_ = new global::GooglePlayStore.Address();
            }
            input.ReadMessage(billingAddress_);
            break;
          }
          case 26: {
            if (creditCard_ == null) {
              creditCard_ = new global::GooglePlayStore.CreditCardInstrument();
            }
            input.ReadMessage(creditCard_);
            break;
          }
          case 34: {
            if (carrierBilling_ == null) {
              carrierBilling_ = new global::GooglePlayStore.CarrierBillingInstrument();
            }
            input.ReadMessage(carrierBilling_);
            break;
          }
          case 42: {
            if (billingAddressSpec_ == null) {
              billingAddressSpec_ = new global::GooglePlayStore.BillingAddressSpec();
            }
            input.ReadMessage(billingAddressSpec_);
            break;
          }
          case 48: {
            InstrumentFamily = input.ReadInt32();
            break;
          }
          case 58: {
            if (carrierBillingStatus_ == null) {
              carrierBillingStatus_ = new global::GooglePlayStore.CarrierBillingInstrumentStatus();
            }
            input.ReadMessage(carrierBillingStatus_);
            break;
          }
          case 66: {
            DisplayTitle = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PasswordPrompt : pb::IMessage<PasswordPrompt> {
    private static readonly pb::MessageParser<PasswordPrompt> _parser = new pb::MessageParser<PasswordPrompt>(() => new PasswordPrompt());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PasswordPrompt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PasswordPrompt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PasswordPrompt(PasswordPrompt other) : this() {
      prompt_ = other.prompt_;
      forgotPasswordUrl_ = other.forgotPasswordUrl_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PasswordPrompt Clone() {
      return new PasswordPrompt(this);
    }

    /// <summary>Field number for the "prompt" field.</summary>
    public const int PromptFieldNumber = 1;
    private string prompt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Prompt {
      get { return prompt_; }
      set {
        prompt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "forgotPasswordUrl" field.</summary>
    public const int ForgotPasswordUrlFieldNumber = 2;
    private string forgotPasswordUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ForgotPasswordUrl {
      get { return forgotPasswordUrl_; }
      set {
        forgotPasswordUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PasswordPrompt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PasswordPrompt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Prompt != other.Prompt) return false;
      if (ForgotPasswordUrl != other.ForgotPasswordUrl) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Prompt.Length != 0) hash ^= Prompt.GetHashCode();
      if (ForgotPasswordUrl.Length != 0) hash ^= ForgotPasswordUrl.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Prompt.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Prompt);
      }
      if (ForgotPasswordUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ForgotPasswordUrl);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Prompt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Prompt);
      }
      if (ForgotPasswordUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ForgotPasswordUrl);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PasswordPrompt other) {
      if (other == null) {
        return;
      }
      if (other.Prompt.Length != 0) {
        Prompt = other.Prompt;
      }
      if (other.ForgotPasswordUrl.Length != 0) {
        ForgotPasswordUrl = other.ForgotPasswordUrl;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Prompt = input.ReadString();
            break;
          }
          case 18: {
            ForgotPasswordUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContainerMetadata : pb::IMessage<ContainerMetadata> {
    private static readonly pb::MessageParser<ContainerMetadata> _parser = new pb::MessageParser<ContainerMetadata>(() => new ContainerMetadata());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContainerMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerMetadata(ContainerMetadata other) : this() {
      browseUrl_ = other.browseUrl_;
      nextPageUrl_ = other.nextPageUrl_;
      relevance_ = other.relevance_;
      estimatedResults_ = other.estimatedResults_;
      analyticsCookie_ = other.analyticsCookie_;
      ordered_ = other.ordered_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerMetadata Clone() {
      return new ContainerMetadata(this);
    }

    /// <summary>Field number for the "browseUrl" field.</summary>
    public const int BrowseUrlFieldNumber = 1;
    private string browseUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BrowseUrl {
      get { return browseUrl_; }
      set {
        browseUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nextPageUrl" field.</summary>
    public const int NextPageUrlFieldNumber = 2;
    private string nextPageUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageUrl {
      get { return nextPageUrl_; }
      set {
        nextPageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "relevance" field.</summary>
    public const int RelevanceFieldNumber = 3;
    private double relevance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Relevance {
      get { return relevance_; }
      set {
        relevance_ = value;
      }
    }

    /// <summary>Field number for the "estimatedResults" field.</summary>
    public const int EstimatedResultsFieldNumber = 4;
    private long estimatedResults_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EstimatedResults {
      get { return estimatedResults_; }
      set {
        estimatedResults_ = value;
      }
    }

    /// <summary>Field number for the "analyticsCookie" field.</summary>
    public const int AnalyticsCookieFieldNumber = 5;
    private string analyticsCookie_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AnalyticsCookie {
      get { return analyticsCookie_; }
      set {
        analyticsCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ordered" field.</summary>
    public const int OrderedFieldNumber = 6;
    private bool ordered_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ordered {
      get { return ordered_; }
      set {
        ordered_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContainerMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContainerMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrowseUrl != other.BrowseUrl) return false;
      if (NextPageUrl != other.NextPageUrl) return false;
      if (Relevance != other.Relevance) return false;
      if (EstimatedResults != other.EstimatedResults) return false;
      if (AnalyticsCookie != other.AnalyticsCookie) return false;
      if (Ordered != other.Ordered) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BrowseUrl.Length != 0) hash ^= BrowseUrl.GetHashCode();
      if (NextPageUrl.Length != 0) hash ^= NextPageUrl.GetHashCode();
      if (Relevance != 0D) hash ^= Relevance.GetHashCode();
      if (EstimatedResults != 0L) hash ^= EstimatedResults.GetHashCode();
      if (AnalyticsCookie.Length != 0) hash ^= AnalyticsCookie.GetHashCode();
      if (Ordered != false) hash ^= Ordered.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BrowseUrl.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BrowseUrl);
      }
      if (NextPageUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageUrl);
      }
      if (Relevance != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Relevance);
      }
      if (EstimatedResults != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(EstimatedResults);
      }
      if (AnalyticsCookie.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AnalyticsCookie);
      }
      if (Ordered != false) {
        output.WriteRawTag(48);
        output.WriteBool(Ordered);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BrowseUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BrowseUrl);
      }
      if (NextPageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageUrl);
      }
      if (Relevance != 0D) {
        size += 1 + 8;
      }
      if (EstimatedResults != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EstimatedResults);
      }
      if (AnalyticsCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AnalyticsCookie);
      }
      if (Ordered != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContainerMetadata other) {
      if (other == null) {
        return;
      }
      if (other.BrowseUrl.Length != 0) {
        BrowseUrl = other.BrowseUrl;
      }
      if (other.NextPageUrl.Length != 0) {
        NextPageUrl = other.NextPageUrl;
      }
      if (other.Relevance != 0D) {
        Relevance = other.Relevance;
      }
      if (other.EstimatedResults != 0L) {
        EstimatedResults = other.EstimatedResults;
      }
      if (other.AnalyticsCookie.Length != 0) {
        AnalyticsCookie = other.AnalyticsCookie;
      }
      if (other.Ordered != false) {
        Ordered = other.Ordered;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            BrowseUrl = input.ReadString();
            break;
          }
          case 18: {
            NextPageUrl = input.ReadString();
            break;
          }
          case 25: {
            Relevance = input.ReadDouble();
            break;
          }
          case 32: {
            EstimatedResults = input.ReadInt64();
            break;
          }
          case 42: {
            AnalyticsCookie = input.ReadString();
            break;
          }
          case 48: {
            Ordered = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DebugInfo : pb::IMessage<DebugInfo> {
    private static readonly pb::MessageParser<DebugInfo> _parser = new pb::MessageParser<DebugInfo>(() => new DebugInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DebugInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DebugInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DebugInfo(DebugInfo other) : this() {
      message_ = other.message_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DebugInfo Clone() {
      return new DebugInfo(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_message_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> message_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///
    ///repeated group Timing = 2 {
    ///string name = 3;
    ///double timeInMs = 4;
    ///}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Message {
      get { return message_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DebugInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DebugInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!message_.Equals(other.message_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= message_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      message_.WriteTo(output, _repeated_message_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += message_.CalculateSize(_repeated_message_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DebugInfo other) {
      if (other == null) {
        return;
      }
      message_.Add(other.message_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            message_.AddEntriesFrom(input, _repeated_message_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BulkDetailsEntry : pb::IMessage<BulkDetailsEntry> {
    private static readonly pb::MessageParser<BulkDetailsEntry> _parser = new pb::MessageParser<BulkDetailsEntry>(() => new BulkDetailsEntry());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulkDetailsEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkDetailsEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkDetailsEntry(BulkDetailsEntry other) : this() {
      Doc = other.doc_ != null ? other.Doc.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkDetailsEntry Clone() {
      return new BulkDetailsEntry(this);
    }

    /// <summary>Field number for the "doc" field.</summary>
    public const int DocFieldNumber = 1;
    private global::GooglePlayStore.DocV2 doc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DocV2 Doc {
      get { return doc_; }
      set {
        doc_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulkDetailsEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulkDetailsEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Doc, other.Doc)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (doc_ != null) hash ^= Doc.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (doc_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Doc);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (doc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Doc);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulkDetailsEntry other) {
      if (other == null) {
        return;
      }
      if (other.doc_ != null) {
        if (doc_ == null) {
          doc_ = new global::GooglePlayStore.DocV2();
        }
        Doc.MergeFrom(other.Doc);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (doc_ == null) {
              doc_ = new global::GooglePlayStore.DocV2();
            }
            input.ReadMessage(doc_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BulkDetailsRequest : pb::IMessage<BulkDetailsRequest> {
    private static readonly pb::MessageParser<BulkDetailsRequest> _parser = new pb::MessageParser<BulkDetailsRequest>(() => new BulkDetailsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulkDetailsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkDetailsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkDetailsRequest(BulkDetailsRequest other) : this() {
      docid_ = other.docid_.Clone();
      includeChildDocs_ = other.includeChildDocs_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkDetailsRequest Clone() {
      return new BulkDetailsRequest(this);
    }

    /// <summary>Field number for the "docid" field.</summary>
    public const int DocidFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_docid_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> docid_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Docid {
      get { return docid_; }
    }

    /// <summary>Field number for the "includeChildDocs" field.</summary>
    public const int IncludeChildDocsFieldNumber = 2;
    private bool includeChildDocs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeChildDocs {
      get { return includeChildDocs_; }
      set {
        includeChildDocs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulkDetailsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulkDetailsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!docid_.Equals(other.docid_)) return false;
      if (IncludeChildDocs != other.IncludeChildDocs) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= docid_.GetHashCode();
      if (IncludeChildDocs != false) hash ^= IncludeChildDocs.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      docid_.WriteTo(output, _repeated_docid_codec);
      if (IncludeChildDocs != false) {
        output.WriteRawTag(16);
        output.WriteBool(IncludeChildDocs);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += docid_.CalculateSize(_repeated_docid_codec);
      if (IncludeChildDocs != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulkDetailsRequest other) {
      if (other == null) {
        return;
      }
      docid_.Add(other.docid_);
      if (other.IncludeChildDocs != false) {
        IncludeChildDocs = other.IncludeChildDocs;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            docid_.AddEntriesFrom(input, _repeated_docid_codec);
            break;
          }
          case 16: {
            IncludeChildDocs = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BulkDetailsResponse : pb::IMessage<BulkDetailsResponse> {
    private static readonly pb::MessageParser<BulkDetailsResponse> _parser = new pb::MessageParser<BulkDetailsResponse>(() => new BulkDetailsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulkDetailsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkDetailsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkDetailsResponse(BulkDetailsResponse other) : this() {
      entry_ = other.entry_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkDetailsResponse Clone() {
      return new BulkDetailsResponse(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GooglePlayStore.BulkDetailsEntry> _repeated_entry_codec
        = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.BulkDetailsEntry.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.BulkDetailsEntry> entry_ = new pbc::RepeatedField<global::GooglePlayStore.BulkDetailsEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.BulkDetailsEntry> Entry {
      get { return entry_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulkDetailsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulkDetailsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entry_.Equals(other.entry_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entry_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entry_.WriteTo(output, _repeated_entry_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entry_.CalculateSize(_repeated_entry_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulkDetailsResponse other) {
      if (other == null) {
        return;
      }
      entry_.Add(other.entry_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            entry_.AddEntriesFrom(input, _repeated_entry_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DetailsResponse : pb::IMessage<DetailsResponse> {
    private static readonly pb::MessageParser<DetailsResponse> _parser = new pb::MessageParser<DetailsResponse>(() => new DetailsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetailsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailsResponse(DetailsResponse other) : this() {
      DocV1 = other.docV1_ != null ? other.DocV1.Clone() : null;
      analyticsCookie_ = other.analyticsCookie_;
      UserReview = other.userReview_ != null ? other.UserReview.Clone() : null;
      DocV2 = other.docV2_ != null ? other.DocV2.Clone() : null;
      footerHtml_ = other.footerHtml_;
      badge_ = other.badge_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailsResponse Clone() {
      return new DetailsResponse(this);
    }

    /// <summary>Field number for the "docV1" field.</summary>
    public const int DocV1FieldNumber = 1;
    private global::GooglePlayStore.DocV1 docV1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DocV1 DocV1 {
      get { return docV1_; }
      set {
        docV1_ = value;
      }
    }

    /// <summary>Field number for the "analyticsCookie" field.</summary>
    public const int AnalyticsCookieFieldNumber = 2;
    private string analyticsCookie_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AnalyticsCookie {
      get { return analyticsCookie_; }
      set {
        analyticsCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userReview" field.</summary>
    public const int UserReviewFieldNumber = 3;
    private global::GooglePlayStore.Review userReview_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Review UserReview {
      get { return userReview_; }
      set {
        userReview_ = value;
      }
    }

    /// <summary>Field number for the "docV2" field.</summary>
    public const int DocV2FieldNumber = 4;
    private global::GooglePlayStore.DocV2 docV2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DocV2 DocV2 {
      get { return docV2_; }
      set {
        docV2_ = value;
      }
    }

    /// <summary>Field number for the "footerHtml" field.</summary>
    public const int FooterHtmlFieldNumber = 5;
    private string footerHtml_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FooterHtml {
      get { return footerHtml_; }
      set {
        footerHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "badge" field.</summary>
    public const int BadgeFieldNumber = 7;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Badge> _repeated_badge_codec
        = pb::FieldCodec.ForMessage(58, global::GooglePlayStore.Badge.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Badge> badge_ = new pbc::RepeatedField<global::GooglePlayStore.Badge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Badge> Badge {
      get { return badge_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetailsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetailsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DocV1, other.DocV1)) return false;
      if (AnalyticsCookie != other.AnalyticsCookie) return false;
      if (!object.Equals(UserReview, other.UserReview)) return false;
      if (!object.Equals(DocV2, other.DocV2)) return false;
      if (FooterHtml != other.FooterHtml) return false;
      if(!badge_.Equals(other.badge_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (docV1_ != null) hash ^= DocV1.GetHashCode();
      if (AnalyticsCookie.Length != 0) hash ^= AnalyticsCookie.GetHashCode();
      if (userReview_ != null) hash ^= UserReview.GetHashCode();
      if (docV2_ != null) hash ^= DocV2.GetHashCode();
      if (FooterHtml.Length != 0) hash ^= FooterHtml.GetHashCode();
      hash ^= badge_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (docV1_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DocV1);
      }
      if (AnalyticsCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AnalyticsCookie);
      }
      if (userReview_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserReview);
      }
      if (docV2_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DocV2);
      }
      if (FooterHtml.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(FooterHtml);
      }
      badge_.WriteTo(output, _repeated_badge_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (docV1_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DocV1);
      }
      if (AnalyticsCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AnalyticsCookie);
      }
      if (userReview_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserReview);
      }
      if (docV2_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DocV2);
      }
      if (FooterHtml.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FooterHtml);
      }
      size += badge_.CalculateSize(_repeated_badge_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetailsResponse other) {
      if (other == null) {
        return;
      }
      if (other.docV1_ != null) {
        if (docV1_ == null) {
          docV1_ = new global::GooglePlayStore.DocV1();
        }
        DocV1.MergeFrom(other.DocV1);
      }
      if (other.AnalyticsCookie.Length != 0) {
        AnalyticsCookie = other.AnalyticsCookie;
      }
      if (other.userReview_ != null) {
        if (userReview_ == null) {
          userReview_ = new global::GooglePlayStore.Review();
        }
        UserReview.MergeFrom(other.UserReview);
      }
      if (other.docV2_ != null) {
        if (docV2_ == null) {
          docV2_ = new global::GooglePlayStore.DocV2();
        }
        DocV2.MergeFrom(other.DocV2);
      }
      if (other.FooterHtml.Length != 0) {
        FooterHtml = other.FooterHtml;
      }
      badge_.Add(other.badge_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (docV1_ == null) {
              docV1_ = new global::GooglePlayStore.DocV1();
            }
            input.ReadMessage(docV1_);
            break;
          }
          case 18: {
            AnalyticsCookie = input.ReadString();
            break;
          }
          case 26: {
            if (userReview_ == null) {
              userReview_ = new global::GooglePlayStore.Review();
            }
            input.ReadMessage(userReview_);
            break;
          }
          case 34: {
            if (docV2_ == null) {
              docV2_ = new global::GooglePlayStore.DocV2();
            }
            input.ReadMessage(docV2_);
            break;
          }
          case 42: {
            FooterHtml = input.ReadString();
            break;
          }
          case 58: {
            badge_.AddEntriesFrom(input, _repeated_badge_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Badge : pb::IMessage<Badge> {
    private static readonly pb::MessageParser<Badge> _parser = new pb::MessageParser<Badge>(() => new Badge());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Badge> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Badge() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Badge(Badge other) : this() {
      label_ = other.label_;
      message_ = other.message_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Badge Clone() {
      return new Badge(this);
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 1;
    private string label_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 11;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Badge);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Badge other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Label != other.Label) return false;
      if (Message != other.Message) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Label.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Label);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Message);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Badge other) {
      if (other == null) {
        return;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Label = input.ReadString();
            break;
          }
          case 90: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeviceConfigurationProto : pb::IMessage<DeviceConfigurationProto> {
    private static readonly pb::MessageParser<DeviceConfigurationProto> _parser = new pb::MessageParser<DeviceConfigurationProto>(() => new DeviceConfigurationProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceConfigurationProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceConfigurationProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceConfigurationProto(DeviceConfigurationProto other) : this() {
      touchScreen_ = other.touchScreen_;
      keyboard_ = other.keyboard_;
      navigation_ = other.navigation_;
      screenLayout_ = other.screenLayout_;
      hasHardKeyboard_ = other.hasHardKeyboard_;
      hasFiveWayNavigation_ = other.hasFiveWayNavigation_;
      screenDensity_ = other.screenDensity_;
      glEsVersion_ = other.glEsVersion_;
      systemSharedLibrary_ = other.systemSharedLibrary_.Clone();
      systemAvailableFeature_ = other.systemAvailableFeature_.Clone();
      nativePlatform_ = other.nativePlatform_.Clone();
      screenWidth_ = other.screenWidth_;
      screenHeight_ = other.screenHeight_;
      systemSupportedLocale_ = other.systemSupportedLocale_.Clone();
      glExtension_ = other.glExtension_.Clone();
      deviceClass_ = other.deviceClass_;
      maxApkDownloadSizeMb_ = other.maxApkDownloadSizeMb_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceConfigurationProto Clone() {
      return new DeviceConfigurationProto(this);
    }

    /// <summary>Field number for the "touchScreen" field.</summary>
    public const int TouchScreenFieldNumber = 1;
    private int touchScreen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TouchScreen {
      get { return touchScreen_; }
      set {
        touchScreen_ = value;
      }
    }

    /// <summary>Field number for the "keyboard" field.</summary>
    public const int KeyboardFieldNumber = 2;
    private int keyboard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Keyboard {
      get { return keyboard_; }
      set {
        keyboard_ = value;
      }
    }

    /// <summary>Field number for the "navigation" field.</summary>
    public const int NavigationFieldNumber = 3;
    private int navigation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Navigation {
      get { return navigation_; }
      set {
        navigation_ = value;
      }
    }

    /// <summary>Field number for the "screenLayout" field.</summary>
    public const int ScreenLayoutFieldNumber = 4;
    private int screenLayout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ScreenLayout {
      get { return screenLayout_; }
      set {
        screenLayout_ = value;
      }
    }

    /// <summary>Field number for the "hasHardKeyboard" field.</summary>
    public const int HasHardKeyboardFieldNumber = 5;
    private bool hasHardKeyboard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHardKeyboard {
      get { return hasHardKeyboard_; }
      set {
        hasHardKeyboard_ = value;
      }
    }

    /// <summary>Field number for the "hasFiveWayNavigation" field.</summary>
    public const int HasFiveWayNavigationFieldNumber = 6;
    private bool hasFiveWayNavigation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFiveWayNavigation {
      get { return hasFiveWayNavigation_; }
      set {
        hasFiveWayNavigation_ = value;
      }
    }

    /// <summary>Field number for the "screenDensity" field.</summary>
    public const int ScreenDensityFieldNumber = 7;
    private int screenDensity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ScreenDensity {
      get { return screenDensity_; }
      set {
        screenDensity_ = value;
      }
    }

    /// <summary>Field number for the "glEsVersion" field.</summary>
    public const int GlEsVersionFieldNumber = 8;
    private int glEsVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GlEsVersion {
      get { return glEsVersion_; }
      set {
        glEsVersion_ = value;
      }
    }

    /// <summary>Field number for the "systemSharedLibrary" field.</summary>
    public const int SystemSharedLibraryFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_systemSharedLibrary_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> systemSharedLibrary_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SystemSharedLibrary {
      get { return systemSharedLibrary_; }
    }

    /// <summary>Field number for the "systemAvailableFeature" field.</summary>
    public const int SystemAvailableFeatureFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_systemAvailableFeature_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> systemAvailableFeature_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SystemAvailableFeature {
      get { return systemAvailableFeature_; }
    }

    /// <summary>Field number for the "nativePlatform" field.</summary>
    public const int NativePlatformFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _repeated_nativePlatform_codec
        = pb::FieldCodec.ForString(90);
    private readonly pbc::RepeatedField<string> nativePlatform_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> NativePlatform {
      get { return nativePlatform_; }
    }

    /// <summary>Field number for the "screenWidth" field.</summary>
    public const int ScreenWidthFieldNumber = 12;
    private int screenWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ScreenWidth {
      get { return screenWidth_; }
      set {
        screenWidth_ = value;
      }
    }

    /// <summary>Field number for the "screenHeight" field.</summary>
    public const int ScreenHeightFieldNumber = 13;
    private int screenHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ScreenHeight {
      get { return screenHeight_; }
      set {
        screenHeight_ = value;
      }
    }

    /// <summary>Field number for the "systemSupportedLocale" field.</summary>
    public const int SystemSupportedLocaleFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _repeated_systemSupportedLocale_codec
        = pb::FieldCodec.ForString(114);
    private readonly pbc::RepeatedField<string> systemSupportedLocale_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SystemSupportedLocale {
      get { return systemSupportedLocale_; }
    }

    /// <summary>Field number for the "glExtension" field.</summary>
    public const int GlExtensionFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _repeated_glExtension_codec
        = pb::FieldCodec.ForString(122);
    private readonly pbc::RepeatedField<string> glExtension_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> GlExtension {
      get { return glExtension_; }
    }

    /// <summary>Field number for the "deviceClass" field.</summary>
    public const int DeviceClassFieldNumber = 16;
    private int deviceClass_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeviceClass {
      get { return deviceClass_; }
      set {
        deviceClass_ = value;
      }
    }

    /// <summary>Field number for the "maxApkDownloadSizeMb" field.</summary>
    public const int MaxApkDownloadSizeMbFieldNumber = 17;
    private int maxApkDownloadSizeMb_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxApkDownloadSizeMb {
      get { return maxApkDownloadSizeMb_; }
      set {
        maxApkDownloadSizeMb_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceConfigurationProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceConfigurationProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TouchScreen != other.TouchScreen) return false;
      if (Keyboard != other.Keyboard) return false;
      if (Navigation != other.Navigation) return false;
      if (ScreenLayout != other.ScreenLayout) return false;
      if (HasHardKeyboard != other.HasHardKeyboard) return false;
      if (HasFiveWayNavigation != other.HasFiveWayNavigation) return false;
      if (ScreenDensity != other.ScreenDensity) return false;
      if (GlEsVersion != other.GlEsVersion) return false;
      if(!systemSharedLibrary_.Equals(other.systemSharedLibrary_)) return false;
      if(!systemAvailableFeature_.Equals(other.systemAvailableFeature_)) return false;
      if(!nativePlatform_.Equals(other.nativePlatform_)) return false;
      if (ScreenWidth != other.ScreenWidth) return false;
      if (ScreenHeight != other.ScreenHeight) return false;
      if(!systemSupportedLocale_.Equals(other.systemSupportedLocale_)) return false;
      if(!glExtension_.Equals(other.glExtension_)) return false;
      if (DeviceClass != other.DeviceClass) return false;
      if (MaxApkDownloadSizeMb != other.MaxApkDownloadSizeMb) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TouchScreen != 0) hash ^= TouchScreen.GetHashCode();
      if (Keyboard != 0) hash ^= Keyboard.GetHashCode();
      if (Navigation != 0) hash ^= Navigation.GetHashCode();
      if (ScreenLayout != 0) hash ^= ScreenLayout.GetHashCode();
      if (HasHardKeyboard != false) hash ^= HasHardKeyboard.GetHashCode();
      if (HasFiveWayNavigation != false) hash ^= HasFiveWayNavigation.GetHashCode();
      if (ScreenDensity != 0) hash ^= ScreenDensity.GetHashCode();
      if (GlEsVersion != 0) hash ^= GlEsVersion.GetHashCode();
      hash ^= systemSharedLibrary_.GetHashCode();
      hash ^= systemAvailableFeature_.GetHashCode();
      hash ^= nativePlatform_.GetHashCode();
      if (ScreenWidth != 0) hash ^= ScreenWidth.GetHashCode();
      if (ScreenHeight != 0) hash ^= ScreenHeight.GetHashCode();
      hash ^= systemSupportedLocale_.GetHashCode();
      hash ^= glExtension_.GetHashCode();
      if (DeviceClass != 0) hash ^= DeviceClass.GetHashCode();
      if (MaxApkDownloadSizeMb != 0) hash ^= MaxApkDownloadSizeMb.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TouchScreen != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TouchScreen);
      }
      if (Keyboard != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Keyboard);
      }
      if (Navigation != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Navigation);
      }
      if (ScreenLayout != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ScreenLayout);
      }
      if (HasHardKeyboard != false) {
        output.WriteRawTag(40);
        output.WriteBool(HasHardKeyboard);
      }
      if (HasFiveWayNavigation != false) {
        output.WriteRawTag(48);
        output.WriteBool(HasFiveWayNavigation);
      }
      if (ScreenDensity != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ScreenDensity);
      }
      if (GlEsVersion != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(GlEsVersion);
      }
      systemSharedLibrary_.WriteTo(output, _repeated_systemSharedLibrary_codec);
      systemAvailableFeature_.WriteTo(output, _repeated_systemAvailableFeature_codec);
      nativePlatform_.WriteTo(output, _repeated_nativePlatform_codec);
      if (ScreenWidth != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(ScreenWidth);
      }
      if (ScreenHeight != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(ScreenHeight);
      }
      systemSupportedLocale_.WriteTo(output, _repeated_systemSupportedLocale_codec);
      glExtension_.WriteTo(output, _repeated_glExtension_codec);
      if (DeviceClass != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(DeviceClass);
      }
      if (MaxApkDownloadSizeMb != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(MaxApkDownloadSizeMb);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TouchScreen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TouchScreen);
      }
      if (Keyboard != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Keyboard);
      }
      if (Navigation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Navigation);
      }
      if (ScreenLayout != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScreenLayout);
      }
      if (HasHardKeyboard != false) {
        size += 1 + 1;
      }
      if (HasFiveWayNavigation != false) {
        size += 1 + 1;
      }
      if (ScreenDensity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScreenDensity);
      }
      if (GlEsVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GlEsVersion);
      }
      size += systemSharedLibrary_.CalculateSize(_repeated_systemSharedLibrary_codec);
      size += systemAvailableFeature_.CalculateSize(_repeated_systemAvailableFeature_codec);
      size += nativePlatform_.CalculateSize(_repeated_nativePlatform_codec);
      if (ScreenWidth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScreenWidth);
      }
      if (ScreenHeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScreenHeight);
      }
      size += systemSupportedLocale_.CalculateSize(_repeated_systemSupportedLocale_codec);
      size += glExtension_.CalculateSize(_repeated_glExtension_codec);
      if (DeviceClass != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DeviceClass);
      }
      if (MaxApkDownloadSizeMb != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxApkDownloadSizeMb);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceConfigurationProto other) {
      if (other == null) {
        return;
      }
      if (other.TouchScreen != 0) {
        TouchScreen = other.TouchScreen;
      }
      if (other.Keyboard != 0) {
        Keyboard = other.Keyboard;
      }
      if (other.Navigation != 0) {
        Navigation = other.Navigation;
      }
      if (other.ScreenLayout != 0) {
        ScreenLayout = other.ScreenLayout;
      }
      if (other.HasHardKeyboard != false) {
        HasHardKeyboard = other.HasHardKeyboard;
      }
      if (other.HasFiveWayNavigation != false) {
        HasFiveWayNavigation = other.HasFiveWayNavigation;
      }
      if (other.ScreenDensity != 0) {
        ScreenDensity = other.ScreenDensity;
      }
      if (other.GlEsVersion != 0) {
        GlEsVersion = other.GlEsVersion;
      }
      systemSharedLibrary_.Add(other.systemSharedLibrary_);
      systemAvailableFeature_.Add(other.systemAvailableFeature_);
      nativePlatform_.Add(other.nativePlatform_);
      if (other.ScreenWidth != 0) {
        ScreenWidth = other.ScreenWidth;
      }
      if (other.ScreenHeight != 0) {
        ScreenHeight = other.ScreenHeight;
      }
      systemSupportedLocale_.Add(other.systemSupportedLocale_);
      glExtension_.Add(other.glExtension_);
      if (other.DeviceClass != 0) {
        DeviceClass = other.DeviceClass;
      }
      if (other.MaxApkDownloadSizeMb != 0) {
        MaxApkDownloadSizeMb = other.MaxApkDownloadSizeMb;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            TouchScreen = input.ReadInt32();
            break;
          }
          case 16: {
            Keyboard = input.ReadInt32();
            break;
          }
          case 24: {
            Navigation = input.ReadInt32();
            break;
          }
          case 32: {
            ScreenLayout = input.ReadInt32();
            break;
          }
          case 40: {
            HasHardKeyboard = input.ReadBool();
            break;
          }
          case 48: {
            HasFiveWayNavigation = input.ReadBool();
            break;
          }
          case 56: {
            ScreenDensity = input.ReadInt32();
            break;
          }
          case 64: {
            GlEsVersion = input.ReadInt32();
            break;
          }
          case 74: {
            systemSharedLibrary_.AddEntriesFrom(input, _repeated_systemSharedLibrary_codec);
            break;
          }
          case 82: {
            systemAvailableFeature_.AddEntriesFrom(input, _repeated_systemAvailableFeature_codec);
            break;
          }
          case 90: {
            nativePlatform_.AddEntriesFrom(input, _repeated_nativePlatform_codec);
            break;
          }
          case 96: {
            ScreenWidth = input.ReadInt32();
            break;
          }
          case 104: {
            ScreenHeight = input.ReadInt32();
            break;
          }
          case 114: {
            systemSupportedLocale_.AddEntriesFrom(input, _repeated_systemSupportedLocale_codec);
            break;
          }
          case 122: {
            glExtension_.AddEntriesFrom(input, _repeated_glExtension_codec);
            break;
          }
          case 128: {
            DeviceClass = input.ReadInt32();
            break;
          }
          case 136: {
            MaxApkDownloadSizeMb = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Document : pb::IMessage<Document> {
    private static readonly pb::MessageParser<Document> _parser = new pb::MessageParser<Document>(() => new Document());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Document> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Document() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Document(Document other) : this() {
      Docid = other.docid_ != null ? other.Docid.Clone() : null;
      FetchDocid = other.fetchDocid_ != null ? other.FetchDocid.Clone() : null;
      SampleDocid = other.sampleDocid_ != null ? other.SampleDocid.Clone() : null;
      title_ = other.title_;
      url_ = other.url_;
      snippet_ = other.snippet_.Clone();
      PriceDeprecated = other.priceDeprecated_ != null ? other.PriceDeprecated.Clone() : null;
      Availability = other.availability_ != null ? other.Availability.Clone() : null;
      image_ = other.image_.Clone();
      child_ = other.child_.Clone();
      AggregateRating = other.aggregateRating_ != null ? other.AggregateRating.Clone() : null;
      offer_ = other.offer_.Clone();
      translatedSnippet_ = other.translatedSnippet_.Clone();
      documentVariant_ = other.documentVariant_.Clone();
      categoryId_ = other.categoryId_.Clone();
      decoration_ = other.decoration_.Clone();
      parent_ = other.parent_.Clone();
      privacyPolicyUrl_ = other.privacyPolicyUrl_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Document Clone() {
      return new Document(this);
    }

    /// <summary>Field number for the "docid" field.</summary>
    public const int DocidFieldNumber = 1;
    private global::GooglePlayStore.Docid docid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Docid Docid {
      get { return docid_; }
      set {
        docid_ = value;
      }
    }

    /// <summary>Field number for the "fetchDocid" field.</summary>
    public const int FetchDocidFieldNumber = 2;
    private global::GooglePlayStore.Docid fetchDocid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Docid FetchDocid {
      get { return fetchDocid_; }
      set {
        fetchDocid_ = value;
      }
    }

    /// <summary>Field number for the "sampleDocid" field.</summary>
    public const int SampleDocidFieldNumber = 3;
    private global::GooglePlayStore.Docid sampleDocid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Docid SampleDocid {
      get { return sampleDocid_; }
      set {
        sampleDocid_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 4;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 5;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "snippet" field.</summary>
    public const int SnippetFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_snippet_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> snippet_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Snippet {
      get { return snippet_; }
    }

    /// <summary>Field number for the "priceDeprecated" field.</summary>
    public const int PriceDeprecatedFieldNumber = 7;
    private global::GooglePlayStore.Offer priceDeprecated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Offer PriceDeprecated {
      get { return priceDeprecated_; }
      set {
        priceDeprecated_ = value;
      }
    }

    /// <summary>Field number for the "availability" field.</summary>
    public const int AvailabilityFieldNumber = 9;
    private global::GooglePlayStore.Availability availability_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Availability Availability {
      get { return availability_; }
      set {
        availability_ = value;
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 10;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Image> _repeated_image_codec
        = pb::FieldCodec.ForMessage(82, global::GooglePlayStore.Image.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Image> image_ = new pbc::RepeatedField<global::GooglePlayStore.Image>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Image> Image {
      get { return image_; }
    }

    /// <summary>Field number for the "child" field.</summary>
    public const int ChildFieldNumber = 11;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Document> _repeated_child_codec
        = pb::FieldCodec.ForMessage(90, global::GooglePlayStore.Document.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Document> child_ = new pbc::RepeatedField<global::GooglePlayStore.Document>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Document> Child {
      get { return child_; }
    }

    /// <summary>Field number for the "aggregateRating" field.</summary>
    public const int AggregateRatingFieldNumber = 13;
    private global::GooglePlayStore.AggregateRating aggregateRating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AggregateRating AggregateRating {
      get { return aggregateRating_; }
      set {
        aggregateRating_ = value;
      }
    }

    /// <summary>Field number for the "offer" field.</summary>
    public const int OfferFieldNumber = 14;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Offer> _repeated_offer_codec
        = pb::FieldCodec.ForMessage(114, global::GooglePlayStore.Offer.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Offer> offer_ = new pbc::RepeatedField<global::GooglePlayStore.Offer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Offer> Offer {
      get { return offer_; }
    }

    /// <summary>Field number for the "translatedSnippet" field.</summary>
    public const int TranslatedSnippetFieldNumber = 15;
    private static readonly pb::FieldCodec<global::GooglePlayStore.TranslatedText> _repeated_translatedSnippet_codec
        = pb::FieldCodec.ForMessage(122, global::GooglePlayStore.TranslatedText.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.TranslatedText> translatedSnippet_ = new pbc::RepeatedField<global::GooglePlayStore.TranslatedText>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.TranslatedText> TranslatedSnippet {
      get { return translatedSnippet_; }
    }

    /// <summary>Field number for the "documentVariant" field.</summary>
    public const int DocumentVariantFieldNumber = 16;
    private static readonly pb::FieldCodec<global::GooglePlayStore.DocumentVariant> _repeated_documentVariant_codec
        = pb::FieldCodec.ForMessage(130, global::GooglePlayStore.DocumentVariant.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.DocumentVariant> documentVariant_ = new pbc::RepeatedField<global::GooglePlayStore.DocumentVariant>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.DocumentVariant> DocumentVariant {
      get { return documentVariant_; }
    }

    /// <summary>Field number for the "categoryId" field.</summary>
    public const int CategoryIdFieldNumber = 17;
    private static readonly pb::FieldCodec<string> _repeated_categoryId_codec
        = pb::FieldCodec.ForString(138);
    private readonly pbc::RepeatedField<string> categoryId_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CategoryId {
      get { return categoryId_; }
    }

    /// <summary>Field number for the "decoration" field.</summary>
    public const int DecorationFieldNumber = 18;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Document> _repeated_decoration_codec
        = pb::FieldCodec.ForMessage(146, global::GooglePlayStore.Document.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Document> decoration_ = new pbc::RepeatedField<global::GooglePlayStore.Document>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Document> Decoration {
      get { return decoration_; }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 19;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Document> _repeated_parent_codec
        = pb::FieldCodec.ForMessage(154, global::GooglePlayStore.Document.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Document> parent_ = new pbc::RepeatedField<global::GooglePlayStore.Document>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Document> Parent {
      get { return parent_; }
    }

    /// <summary>Field number for the "privacyPolicyUrl" field.</summary>
    public const int PrivacyPolicyUrlFieldNumber = 20;
    private string privacyPolicyUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrivacyPolicyUrl {
      get { return privacyPolicyUrl_; }
      set {
        privacyPolicyUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Document);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Document other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Docid, other.Docid)) return false;
      if (!object.Equals(FetchDocid, other.FetchDocid)) return false;
      if (!object.Equals(SampleDocid, other.SampleDocid)) return false;
      if (Title != other.Title) return false;
      if (Url != other.Url) return false;
      if(!snippet_.Equals(other.snippet_)) return false;
      if (!object.Equals(PriceDeprecated, other.PriceDeprecated)) return false;
      if (!object.Equals(Availability, other.Availability)) return false;
      if(!image_.Equals(other.image_)) return false;
      if(!child_.Equals(other.child_)) return false;
      if (!object.Equals(AggregateRating, other.AggregateRating)) return false;
      if(!offer_.Equals(other.offer_)) return false;
      if(!translatedSnippet_.Equals(other.translatedSnippet_)) return false;
      if(!documentVariant_.Equals(other.documentVariant_)) return false;
      if(!categoryId_.Equals(other.categoryId_)) return false;
      if(!decoration_.Equals(other.decoration_)) return false;
      if(!parent_.Equals(other.parent_)) return false;
      if (PrivacyPolicyUrl != other.PrivacyPolicyUrl) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (docid_ != null) hash ^= Docid.GetHashCode();
      if (fetchDocid_ != null) hash ^= FetchDocid.GetHashCode();
      if (sampleDocid_ != null) hash ^= SampleDocid.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      hash ^= snippet_.GetHashCode();
      if (priceDeprecated_ != null) hash ^= PriceDeprecated.GetHashCode();
      if (availability_ != null) hash ^= Availability.GetHashCode();
      hash ^= image_.GetHashCode();
      hash ^= child_.GetHashCode();
      if (aggregateRating_ != null) hash ^= AggregateRating.GetHashCode();
      hash ^= offer_.GetHashCode();
      hash ^= translatedSnippet_.GetHashCode();
      hash ^= documentVariant_.GetHashCode();
      hash ^= categoryId_.GetHashCode();
      hash ^= decoration_.GetHashCode();
      hash ^= parent_.GetHashCode();
      if (PrivacyPolicyUrl.Length != 0) hash ^= PrivacyPolicyUrl.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (docid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Docid);
      }
      if (fetchDocid_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FetchDocid);
      }
      if (sampleDocid_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SampleDocid);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Title);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Url);
      }
      snippet_.WriteTo(output, _repeated_snippet_codec);
      if (priceDeprecated_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PriceDeprecated);
      }
      if (availability_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Availability);
      }
      image_.WriteTo(output, _repeated_image_codec);
      child_.WriteTo(output, _repeated_child_codec);
      if (aggregateRating_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(AggregateRating);
      }
      offer_.WriteTo(output, _repeated_offer_codec);
      translatedSnippet_.WriteTo(output, _repeated_translatedSnippet_codec);
      documentVariant_.WriteTo(output, _repeated_documentVariant_codec);
      categoryId_.WriteTo(output, _repeated_categoryId_codec);
      decoration_.WriteTo(output, _repeated_decoration_codec);
      parent_.WriteTo(output, _repeated_parent_codec);
      if (PrivacyPolicyUrl.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(PrivacyPolicyUrl);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (docid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Docid);
      }
      if (fetchDocid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FetchDocid);
      }
      if (sampleDocid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SampleDocid);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      size += snippet_.CalculateSize(_repeated_snippet_codec);
      if (priceDeprecated_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PriceDeprecated);
      }
      if (availability_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Availability);
      }
      size += image_.CalculateSize(_repeated_image_codec);
      size += child_.CalculateSize(_repeated_child_codec);
      if (aggregateRating_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AggregateRating);
      }
      size += offer_.CalculateSize(_repeated_offer_codec);
      size += translatedSnippet_.CalculateSize(_repeated_translatedSnippet_codec);
      size += documentVariant_.CalculateSize(_repeated_documentVariant_codec);
      size += categoryId_.CalculateSize(_repeated_categoryId_codec);
      size += decoration_.CalculateSize(_repeated_decoration_codec);
      size += parent_.CalculateSize(_repeated_parent_codec);
      if (PrivacyPolicyUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PrivacyPolicyUrl);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Document other) {
      if (other == null) {
        return;
      }
      if (other.docid_ != null) {
        if (docid_ == null) {
          docid_ = new global::GooglePlayStore.Docid();
        }
        Docid.MergeFrom(other.Docid);
      }
      if (other.fetchDocid_ != null) {
        if (fetchDocid_ == null) {
          fetchDocid_ = new global::GooglePlayStore.Docid();
        }
        FetchDocid.MergeFrom(other.FetchDocid);
      }
      if (other.sampleDocid_ != null) {
        if (sampleDocid_ == null) {
          sampleDocid_ = new global::GooglePlayStore.Docid();
        }
        SampleDocid.MergeFrom(other.SampleDocid);
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      snippet_.Add(other.snippet_);
      if (other.priceDeprecated_ != null) {
        if (priceDeprecated_ == null) {
          priceDeprecated_ = new global::GooglePlayStore.Offer();
        }
        PriceDeprecated.MergeFrom(other.PriceDeprecated);
      }
      if (other.availability_ != null) {
        if (availability_ == null) {
          availability_ = new global::GooglePlayStore.Availability();
        }
        Availability.MergeFrom(other.Availability);
      }
      image_.Add(other.image_);
      child_.Add(other.child_);
      if (other.aggregateRating_ != null) {
        if (aggregateRating_ == null) {
          aggregateRating_ = new global::GooglePlayStore.AggregateRating();
        }
        AggregateRating.MergeFrom(other.AggregateRating);
      }
      offer_.Add(other.offer_);
      translatedSnippet_.Add(other.translatedSnippet_);
      documentVariant_.Add(other.documentVariant_);
      categoryId_.Add(other.categoryId_);
      decoration_.Add(other.decoration_);
      parent_.Add(other.parent_);
      if (other.PrivacyPolicyUrl.Length != 0) {
        PrivacyPolicyUrl = other.PrivacyPolicyUrl;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (docid_ == null) {
              docid_ = new global::GooglePlayStore.Docid();
            }
            input.ReadMessage(docid_);
            break;
          }
          case 18: {
            if (fetchDocid_ == null) {
              fetchDocid_ = new global::GooglePlayStore.Docid();
            }
            input.ReadMessage(fetchDocid_);
            break;
          }
          case 26: {
            if (sampleDocid_ == null) {
              sampleDocid_ = new global::GooglePlayStore.Docid();
            }
            input.ReadMessage(sampleDocid_);
            break;
          }
          case 34: {
            Title = input.ReadString();
            break;
          }
          case 42: {
            Url = input.ReadString();
            break;
          }
          case 50: {
            snippet_.AddEntriesFrom(input, _repeated_snippet_codec);
            break;
          }
          case 58: {
            if (priceDeprecated_ == null) {
              priceDeprecated_ = new global::GooglePlayStore.Offer();
            }
            input.ReadMessage(priceDeprecated_);
            break;
          }
          case 74: {
            if (availability_ == null) {
              availability_ = new global::GooglePlayStore.Availability();
            }
            input.ReadMessage(availability_);
            break;
          }
          case 82: {
            image_.AddEntriesFrom(input, _repeated_image_codec);
            break;
          }
          case 90: {
            child_.AddEntriesFrom(input, _repeated_child_codec);
            break;
          }
          case 106: {
            if (aggregateRating_ == null) {
              aggregateRating_ = new global::GooglePlayStore.AggregateRating();
            }
            input.ReadMessage(aggregateRating_);
            break;
          }
          case 114: {
            offer_.AddEntriesFrom(input, _repeated_offer_codec);
            break;
          }
          case 122: {
            translatedSnippet_.AddEntriesFrom(input, _repeated_translatedSnippet_codec);
            break;
          }
          case 130: {
            documentVariant_.AddEntriesFrom(input, _repeated_documentVariant_codec);
            break;
          }
          case 138: {
            categoryId_.AddEntriesFrom(input, _repeated_categoryId_codec);
            break;
          }
          case 146: {
            decoration_.AddEntriesFrom(input, _repeated_decoration_codec);
            break;
          }
          case 154: {
            parent_.AddEntriesFrom(input, _repeated_parent_codec);
            break;
          }
          case 162: {
            PrivacyPolicyUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DocumentVariant : pb::IMessage<DocumentVariant> {
    private static readonly pb::MessageParser<DocumentVariant> _parser = new pb::MessageParser<DocumentVariant>(() => new DocumentVariant());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DocumentVariant> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentVariant() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentVariant(DocumentVariant other) : this() {
      variationType_ = other.variationType_;
      Rule = other.rule_ != null ? other.Rule.Clone() : null;
      title_ = other.title_;
      snippet_ = other.snippet_.Clone();
      recentChanges_ = other.recentChanges_;
      autoTranslation_ = other.autoTranslation_.Clone();
      offer_ = other.offer_.Clone();
      channelId_ = other.channelId_;
      child_ = other.child_.Clone();
      decoration_ = other.decoration_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentVariant Clone() {
      return new DocumentVariant(this);
    }

    /// <summary>Field number for the "variationType" field.</summary>
    public const int VariationTypeFieldNumber = 1;
    private int variationType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VariationType {
      get { return variationType_; }
      set {
        variationType_ = value;
      }
    }

    /// <summary>Field number for the "rule" field.</summary>
    public const int RuleFieldNumber = 2;
    private global::GooglePlayStore.Rule rule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Rule Rule {
      get { return rule_; }
      set {
        rule_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 3;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "snippet" field.</summary>
    public const int SnippetFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_snippet_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> snippet_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Snippet {
      get { return snippet_; }
    }

    /// <summary>Field number for the "recentChanges" field.</summary>
    public const int RecentChangesFieldNumber = 5;
    private string recentChanges_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RecentChanges {
      get { return recentChanges_; }
      set {
        recentChanges_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "autoTranslation" field.</summary>
    public const int AutoTranslationFieldNumber = 6;
    private static readonly pb::FieldCodec<global::GooglePlayStore.TranslatedText> _repeated_autoTranslation_codec
        = pb::FieldCodec.ForMessage(50, global::GooglePlayStore.TranslatedText.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.TranslatedText> autoTranslation_ = new pbc::RepeatedField<global::GooglePlayStore.TranslatedText>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.TranslatedText> AutoTranslation {
      get { return autoTranslation_; }
    }

    /// <summary>Field number for the "offer" field.</summary>
    public const int OfferFieldNumber = 7;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Offer> _repeated_offer_codec
        = pb::FieldCodec.ForMessage(58, global::GooglePlayStore.Offer.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Offer> offer_ = new pbc::RepeatedField<global::GooglePlayStore.Offer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Offer> Offer {
      get { return offer_; }
    }

    /// <summary>Field number for the "channelId" field.</summary>
    public const int ChannelIdFieldNumber = 9;
    private long channelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    /// <summary>Field number for the "child" field.</summary>
    public const int ChildFieldNumber = 10;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Document> _repeated_child_codec
        = pb::FieldCodec.ForMessage(82, global::GooglePlayStore.Document.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Document> child_ = new pbc::RepeatedField<global::GooglePlayStore.Document>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Document> Child {
      get { return child_; }
    }

    /// <summary>Field number for the "decoration" field.</summary>
    public const int DecorationFieldNumber = 11;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Document> _repeated_decoration_codec
        = pb::FieldCodec.ForMessage(90, global::GooglePlayStore.Document.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Document> decoration_ = new pbc::RepeatedField<global::GooglePlayStore.Document>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Document> Decoration {
      get { return decoration_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DocumentVariant);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DocumentVariant other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VariationType != other.VariationType) return false;
      if (!object.Equals(Rule, other.Rule)) return false;
      if (Title != other.Title) return false;
      if(!snippet_.Equals(other.snippet_)) return false;
      if (RecentChanges != other.RecentChanges) return false;
      if(!autoTranslation_.Equals(other.autoTranslation_)) return false;
      if(!offer_.Equals(other.offer_)) return false;
      if (ChannelId != other.ChannelId) return false;
      if(!child_.Equals(other.child_)) return false;
      if(!decoration_.Equals(other.decoration_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VariationType != 0) hash ^= VariationType.GetHashCode();
      if (rule_ != null) hash ^= Rule.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      hash ^= snippet_.GetHashCode();
      if (RecentChanges.Length != 0) hash ^= RecentChanges.GetHashCode();
      hash ^= autoTranslation_.GetHashCode();
      hash ^= offer_.GetHashCode();
      if (ChannelId != 0L) hash ^= ChannelId.GetHashCode();
      hash ^= child_.GetHashCode();
      hash ^= decoration_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (VariationType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(VariationType);
      }
      if (rule_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Rule);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      snippet_.WriteTo(output, _repeated_snippet_codec);
      if (RecentChanges.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RecentChanges);
      }
      autoTranslation_.WriteTo(output, _repeated_autoTranslation_codec);
      offer_.WriteTo(output, _repeated_offer_codec);
      if (ChannelId != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(ChannelId);
      }
      child_.WriteTo(output, _repeated_child_codec);
      decoration_.WriteTo(output, _repeated_decoration_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VariationType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VariationType);
      }
      if (rule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rule);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      size += snippet_.CalculateSize(_repeated_snippet_codec);
      if (RecentChanges.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RecentChanges);
      }
      size += autoTranslation_.CalculateSize(_repeated_autoTranslation_codec);
      size += offer_.CalculateSize(_repeated_offer_codec);
      if (ChannelId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ChannelId);
      }
      size += child_.CalculateSize(_repeated_child_codec);
      size += decoration_.CalculateSize(_repeated_decoration_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DocumentVariant other) {
      if (other == null) {
        return;
      }
      if (other.VariationType != 0) {
        VariationType = other.VariationType;
      }
      if (other.rule_ != null) {
        if (rule_ == null) {
          rule_ = new global::GooglePlayStore.Rule();
        }
        Rule.MergeFrom(other.Rule);
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      snippet_.Add(other.snippet_);
      if (other.RecentChanges.Length != 0) {
        RecentChanges = other.RecentChanges;
      }
      autoTranslation_.Add(other.autoTranslation_);
      offer_.Add(other.offer_);
      if (other.ChannelId != 0L) {
        ChannelId = other.ChannelId;
      }
      child_.Add(other.child_);
      decoration_.Add(other.decoration_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            VariationType = input.ReadInt32();
            break;
          }
          case 18: {
            if (rule_ == null) {
              rule_ = new global::GooglePlayStore.Rule();
            }
            input.ReadMessage(rule_);
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 34: {
            snippet_.AddEntriesFrom(input, _repeated_snippet_codec);
            break;
          }
          case 42: {
            RecentChanges = input.ReadString();
            break;
          }
          case 50: {
            autoTranslation_.AddEntriesFrom(input, _repeated_autoTranslation_codec);
            break;
          }
          case 58: {
            offer_.AddEntriesFrom(input, _repeated_offer_codec);
            break;
          }
          case 72: {
            ChannelId = input.ReadInt64();
            break;
          }
          case 82: {
            child_.AddEntriesFrom(input, _repeated_child_codec);
            break;
          }
          case 90: {
            decoration_.AddEntriesFrom(input, _repeated_decoration_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Image : pb::IMessage<Image> {
    private static readonly pb::MessageParser<Image> _parser = new pb::MessageParser<Image>(() => new Image());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Image> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Image() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Image(Image other) : this() {
      imageType_ = other.imageType_;
      imageUrl_ = other.imageUrl_;
      altTextLocalized_ = other.altTextLocalized_;
      secureUrl_ = other.secureUrl_;
      positionInSequence_ = other.positionInSequence_;
      supportsFifeUrlOptions_ = other.supportsFifeUrlOptions_;
      color_ = other.color_;
      screenshotSetNumber_ = other.screenshotSetNumber_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Image Clone() {
      return new Image(this);
    }

    /// <summary>Field number for the "imageType" field.</summary>
    public const int ImageTypeFieldNumber = 1;
    private int imageType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ImageType {
      get { return imageType_; }
      set {
        imageType_ = value;
      }
    }

    /// <summary>Field number for the "imageUrl" field.</summary>
    public const int ImageUrlFieldNumber = 5;
    private string imageUrl_ = "";
    /// <summary>
    ///
    ///group Dimension = 2 {
    ///int32 width = 3;
    ///int32 height = 4;
    ///}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageUrl {
      get { return imageUrl_; }
      set {
        imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "altTextLocalized" field.</summary>
    public const int AltTextLocalizedFieldNumber = 6;
    private string altTextLocalized_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AltTextLocalized {
      get { return altTextLocalized_; }
      set {
        altTextLocalized_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secureUrl" field.</summary>
    public const int SecureUrlFieldNumber = 7;
    private string secureUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SecureUrl {
      get { return secureUrl_; }
      set {
        secureUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "positionInSequence" field.</summary>
    public const int PositionInSequenceFieldNumber = 8;
    private int positionInSequence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PositionInSequence {
      get { return positionInSequence_; }
      set {
        positionInSequence_ = value;
      }
    }

    /// <summary>Field number for the "supportsFifeUrlOptions" field.</summary>
    public const int SupportsFifeUrlOptionsFieldNumber = 9;
    private bool supportsFifeUrlOptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SupportsFifeUrlOptions {
      get { return supportsFifeUrlOptions_; }
      set {
        supportsFifeUrlOptions_ = value;
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 15;
    private string color_ = "";
    /// <summary>
    ///
    ///group Citation = 10 {
    ///string titleLocalized = 11;
    ///string url = 12;
    ///}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Color {
      get { return color_; }
      set {
        color_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "screenshotSetNumber" field.</summary>
    public const int ScreenshotSetNumberFieldNumber = 21;
    private int screenshotSetNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ScreenshotSetNumber {
      get { return screenshotSetNumber_; }
      set {
        screenshotSetNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Image);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Image other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ImageType != other.ImageType) return false;
      if (ImageUrl != other.ImageUrl) return false;
      if (AltTextLocalized != other.AltTextLocalized) return false;
      if (SecureUrl != other.SecureUrl) return false;
      if (PositionInSequence != other.PositionInSequence) return false;
      if (SupportsFifeUrlOptions != other.SupportsFifeUrlOptions) return false;
      if (Color != other.Color) return false;
      if (ScreenshotSetNumber != other.ScreenshotSetNumber) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ImageType != 0) hash ^= ImageType.GetHashCode();
      if (ImageUrl.Length != 0) hash ^= ImageUrl.GetHashCode();
      if (AltTextLocalized.Length != 0) hash ^= AltTextLocalized.GetHashCode();
      if (SecureUrl.Length != 0) hash ^= SecureUrl.GetHashCode();
      if (PositionInSequence != 0) hash ^= PositionInSequence.GetHashCode();
      if (SupportsFifeUrlOptions != false) hash ^= SupportsFifeUrlOptions.GetHashCode();
      if (Color.Length != 0) hash ^= Color.GetHashCode();
      if (ScreenshotSetNumber != 0) hash ^= ScreenshotSetNumber.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ImageType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ImageType);
      }
      if (ImageUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ImageUrl);
      }
      if (AltTextLocalized.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AltTextLocalized);
      }
      if (SecureUrl.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SecureUrl);
      }
      if (PositionInSequence != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PositionInSequence);
      }
      if (SupportsFifeUrlOptions != false) {
        output.WriteRawTag(72);
        output.WriteBool(SupportsFifeUrlOptions);
      }
      if (Color.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Color);
      }
      if (ScreenshotSetNumber != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(ScreenshotSetNumber);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ImageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ImageType);
      }
      if (ImageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
      }
      if (AltTextLocalized.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AltTextLocalized);
      }
      if (SecureUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecureUrl);
      }
      if (PositionInSequence != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PositionInSequence);
      }
      if (SupportsFifeUrlOptions != false) {
        size += 1 + 1;
      }
      if (Color.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Color);
      }
      if (ScreenshotSetNumber != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ScreenshotSetNumber);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Image other) {
      if (other == null) {
        return;
      }
      if (other.ImageType != 0) {
        ImageType = other.ImageType;
      }
      if (other.ImageUrl.Length != 0) {
        ImageUrl = other.ImageUrl;
      }
      if (other.AltTextLocalized.Length != 0) {
        AltTextLocalized = other.AltTextLocalized;
      }
      if (other.SecureUrl.Length != 0) {
        SecureUrl = other.SecureUrl;
      }
      if (other.PositionInSequence != 0) {
        PositionInSequence = other.PositionInSequence;
      }
      if (other.SupportsFifeUrlOptions != false) {
        SupportsFifeUrlOptions = other.SupportsFifeUrlOptions;
      }
      if (other.Color.Length != 0) {
        Color = other.Color;
      }
      if (other.ScreenshotSetNumber != 0) {
        ScreenshotSetNumber = other.ScreenshotSetNumber;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ImageType = input.ReadInt32();
            break;
          }
          case 42: {
            ImageUrl = input.ReadString();
            break;
          }
          case 50: {
            AltTextLocalized = input.ReadString();
            break;
          }
          case 58: {
            SecureUrl = input.ReadString();
            break;
          }
          case 64: {
            PositionInSequence = input.ReadInt32();
            break;
          }
          case 72: {
            SupportsFifeUrlOptions = input.ReadBool();
            break;
          }
          case 122: {
            Color = input.ReadString();
            break;
          }
          case 168: {
            ScreenshotSetNumber = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TranslatedText : pb::IMessage<TranslatedText> {
    private static readonly pb::MessageParser<TranslatedText> _parser = new pb::MessageParser<TranslatedText>(() => new TranslatedText());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TranslatedText> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslatedText() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslatedText(TranslatedText other) : this() {
      text_ = other.text_;
      sourceLocale_ = other.sourceLocale_;
      targetLocale_ = other.targetLocale_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslatedText Clone() {
      return new TranslatedText(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sourceLocale" field.</summary>
    public const int SourceLocaleFieldNumber = 2;
    private string sourceLocale_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceLocale {
      get { return sourceLocale_; }
      set {
        sourceLocale_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "targetLocale" field.</summary>
    public const int TargetLocaleFieldNumber = 3;
    private string targetLocale_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetLocale {
      get { return targetLocale_; }
      set {
        targetLocale_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TranslatedText);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TranslatedText other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      if (SourceLocale != other.SourceLocale) return false;
      if (TargetLocale != other.TargetLocale) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (SourceLocale.Length != 0) hash ^= SourceLocale.GetHashCode();
      if (TargetLocale.Length != 0) hash ^= TargetLocale.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (SourceLocale.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourceLocale);
      }
      if (TargetLocale.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TargetLocale);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (SourceLocale.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceLocale);
      }
      if (TargetLocale.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetLocale);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TranslatedText other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.SourceLocale.Length != 0) {
        SourceLocale = other.SourceLocale;
      }
      if (other.TargetLocale.Length != 0) {
        TargetLocale = other.TargetLocale;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
          case 18: {
            SourceLocale = input.ReadString();
            break;
          }
          case 26: {
            TargetLocale = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlusOneData : pb::IMessage<PlusOneData> {
    private static readonly pb::MessageParser<PlusOneData> _parser = new pb::MessageParser<PlusOneData>(() => new PlusOneData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlusOneData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlusOneData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlusOneData(PlusOneData other) : this() {
      setByUser_ = other.setByUser_;
      total_ = other.total_;
      circlesTotal_ = other.circlesTotal_;
      circlesPeople_ = other.circlesPeople_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlusOneData Clone() {
      return new PlusOneData(this);
    }

    /// <summary>Field number for the "setByUser" field.</summary>
    public const int SetByUserFieldNumber = 1;
    private bool setByUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SetByUser {
      get { return setByUser_; }
      set {
        setByUser_ = value;
      }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private long total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "circlesTotal" field.</summary>
    public const int CirclesTotalFieldNumber = 3;
    private long circlesTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CirclesTotal {
      get { return circlesTotal_; }
      set {
        circlesTotal_ = value;
      }
    }

    /// <summary>Field number for the "circlesPeople" field.</summary>
    public const int CirclesPeopleFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.PlusPerson> _repeated_circlesPeople_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.PlusPerson.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.PlusPerson> circlesPeople_ = new pbc::RepeatedField<global::GooglePlayStore.PlusPerson>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.PlusPerson> CirclesPeople {
      get { return circlesPeople_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlusOneData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlusOneData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SetByUser != other.SetByUser) return false;
      if (Total != other.Total) return false;
      if (CirclesTotal != other.CirclesTotal) return false;
      if(!circlesPeople_.Equals(other.circlesPeople_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SetByUser != false) hash ^= SetByUser.GetHashCode();
      if (Total != 0L) hash ^= Total.GetHashCode();
      if (CirclesTotal != 0L) hash ^= CirclesTotal.GetHashCode();
      hash ^= circlesPeople_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SetByUser != false) {
        output.WriteRawTag(8);
        output.WriteBool(SetByUser);
      }
      if (Total != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Total);
      }
      if (CirclesTotal != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CirclesTotal);
      }
      circlesPeople_.WriteTo(output, _repeated_circlesPeople_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SetByUser != false) {
        size += 1 + 1;
      }
      if (Total != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Total);
      }
      if (CirclesTotal != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CirclesTotal);
      }
      size += circlesPeople_.CalculateSize(_repeated_circlesPeople_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlusOneData other) {
      if (other == null) {
        return;
      }
      if (other.SetByUser != false) {
        SetByUser = other.SetByUser;
      }
      if (other.Total != 0L) {
        Total = other.Total;
      }
      if (other.CirclesTotal != 0L) {
        CirclesTotal = other.CirclesTotal;
      }
      circlesPeople_.Add(other.circlesPeople_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SetByUser = input.ReadBool();
            break;
          }
          case 16: {
            Total = input.ReadInt64();
            break;
          }
          case 24: {
            CirclesTotal = input.ReadInt64();
            break;
          }
          case 34: {
            circlesPeople_.AddEntriesFrom(input, _repeated_circlesPeople_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlusPerson : pb::IMessage<PlusPerson> {
    private static readonly pb::MessageParser<PlusPerson> _parser = new pb::MessageParser<PlusPerson>(() => new PlusPerson());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlusPerson> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlusPerson() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlusPerson(PlusPerson other) : this() {
      displayName_ = other.displayName_;
      profileImageUrl_ = other.profileImageUrl_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlusPerson Clone() {
      return new PlusPerson(this);
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "profileImageUrl" field.</summary>
    public const int ProfileImageUrlFieldNumber = 4;
    private string profileImageUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProfileImageUrl {
      get { return profileImageUrl_; }
      set {
        profileImageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlusPerson);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlusPerson other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DisplayName != other.DisplayName) return false;
      if (ProfileImageUrl != other.ProfileImageUrl) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (ProfileImageUrl.Length != 0) hash ^= ProfileImageUrl.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (ProfileImageUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ProfileImageUrl);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (ProfileImageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProfileImageUrl);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlusPerson other) {
      if (other == null) {
        return;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.ProfileImageUrl.Length != 0) {
        ProfileImageUrl = other.ProfileImageUrl;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 34: {
            ProfileImageUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AlbumDetails : pb::IMessage<AlbumDetails> {
    private static readonly pb::MessageParser<AlbumDetails> _parser = new pb::MessageParser<AlbumDetails>(() => new AlbumDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AlbumDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlbumDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlbumDetails(AlbumDetails other) : this() {
      name_ = other.name_;
      Details = other.details_ != null ? other.Details.Clone() : null;
      DisplayArtist = other.displayArtist_ != null ? other.DisplayArtist.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlbumDetails Clone() {
      return new AlbumDetails(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 2;
    private global::GooglePlayStore.MusicDetails details_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.MusicDetails Details {
      get { return details_; }
      set {
        details_ = value;
      }
    }

    /// <summary>Field number for the "displayArtist" field.</summary>
    public const int DisplayArtistFieldNumber = 3;
    private global::GooglePlayStore.ArtistDetails displayArtist_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ArtistDetails DisplayArtist {
      get { return displayArtist_; }
      set {
        displayArtist_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AlbumDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AlbumDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Details, other.Details)) return false;
      if (!object.Equals(DisplayArtist, other.DisplayArtist)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (details_ != null) hash ^= Details.GetHashCode();
      if (displayArtist_ != null) hash ^= DisplayArtist.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (details_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Details);
      }
      if (displayArtist_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DisplayArtist);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (details_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Details);
      }
      if (displayArtist_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DisplayArtist);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AlbumDetails other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.details_ != null) {
        if (details_ == null) {
          details_ = new global::GooglePlayStore.MusicDetails();
        }
        Details.MergeFrom(other.Details);
      }
      if (other.displayArtist_ != null) {
        if (displayArtist_ == null) {
          displayArtist_ = new global::GooglePlayStore.ArtistDetails();
        }
        DisplayArtist.MergeFrom(other.DisplayArtist);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (details_ == null) {
              details_ = new global::GooglePlayStore.MusicDetails();
            }
            input.ReadMessage(details_);
            break;
          }
          case 26: {
            if (displayArtist_ == null) {
              displayArtist_ = new global::GooglePlayStore.ArtistDetails();
            }
            input.ReadMessage(displayArtist_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppDetails : pb::IMessage<AppDetails> {
    private static readonly pb::MessageParser<AppDetails> _parser = new pb::MessageParser<AppDetails>(() => new AppDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppDetails(AppDetails other) : this() {
      developerName_ = other.developerName_;
      majorVersionNumber_ = other.majorVersionNumber_;
      versionCode_ = other.versionCode_;
      versionString_ = other.versionString_;
      title_ = other.title_;
      appCategory_ = other.appCategory_.Clone();
      contentRating_ = other.contentRating_;
      installationSize_ = other.installationSize_;
      permission_ = other.permission_.Clone();
      developerEmail_ = other.developerEmail_;
      developerWebsite_ = other.developerWebsite_;
      numDownloads_ = other.numDownloads_;
      packageName_ = other.packageName_;
      recentChangesHtml_ = other.recentChangesHtml_;
      uploadDate_ = other.uploadDate_;
      file_ = other.file_.Clone();
      appType_ = other.appType_;
      unstable_ = other.unstable_;
      containsAds_ = other.containsAds_;
      Dependencies = other.dependencies_ != null ? other.Dependencies.Clone() : null;
      TestingProgramInfo = other.testingProgramInfo_ != null ? other.TestingProgramInfo.Clone() : null;
      EarlyAccessInfo = other.earlyAccessInfo_ != null ? other.EarlyAccessInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppDetails Clone() {
      return new AppDetails(this);
    }

    /// <summary>Field number for the "developerName" field.</summary>
    public const int DeveloperNameFieldNumber = 1;
    private string developerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeveloperName {
      get { return developerName_; }
      set {
        developerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "majorVersionNumber" field.</summary>
    public const int MajorVersionNumberFieldNumber = 2;
    private int majorVersionNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MajorVersionNumber {
      get { return majorVersionNumber_; }
      set {
        majorVersionNumber_ = value;
      }
    }

    /// <summary>Field number for the "versionCode" field.</summary>
    public const int VersionCodeFieldNumber = 3;
    private int versionCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VersionCode {
      get { return versionCode_; }
      set {
        versionCode_ = value;
      }
    }

    /// <summary>Field number for the "versionString" field.</summary>
    public const int VersionStringFieldNumber = 4;
    private string versionString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionString {
      get { return versionString_; }
      set {
        versionString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 5;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "appCategory" field.</summary>
    public const int AppCategoryFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_appCategory_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> appCategory_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AppCategory {
      get { return appCategory_; }
    }

    /// <summary>Field number for the "contentRating" field.</summary>
    public const int ContentRatingFieldNumber = 8;
    private int contentRating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ContentRating {
      get { return contentRating_; }
      set {
        contentRating_ = value;
      }
    }

    /// <summary>Field number for the "installationSize" field.</summary>
    public const int InstallationSizeFieldNumber = 9;
    private long installationSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InstallationSize {
      get { return installationSize_; }
      set {
        installationSize_ = value;
      }
    }

    /// <summary>Field number for the "permission" field.</summary>
    public const int PermissionFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_permission_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> permission_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Permission {
      get { return permission_; }
    }

    /// <summary>Field number for the "developerEmail" field.</summary>
    public const int DeveloperEmailFieldNumber = 11;
    private string developerEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeveloperEmail {
      get { return developerEmail_; }
      set {
        developerEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "developerWebsite" field.</summary>
    public const int DeveloperWebsiteFieldNumber = 12;
    private string developerWebsite_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeveloperWebsite {
      get { return developerWebsite_; }
      set {
        developerWebsite_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "numDownloads" field.</summary>
    public const int NumDownloadsFieldNumber = 13;
    private string numDownloads_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NumDownloads {
      get { return numDownloads_; }
      set {
        numDownloads_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "packageName" field.</summary>
    public const int PackageNameFieldNumber = 14;
    private string packageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackageName {
      get { return packageName_; }
      set {
        packageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recentChangesHtml" field.</summary>
    public const int RecentChangesHtmlFieldNumber = 15;
    private string recentChangesHtml_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RecentChangesHtml {
      get { return recentChangesHtml_; }
      set {
        recentChangesHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uploadDate" field.</summary>
    public const int UploadDateFieldNumber = 16;
    private string uploadDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UploadDate {
      get { return uploadDate_; }
      set {
        uploadDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 17;
    private static readonly pb::FieldCodec<global::GooglePlayStore.FileMetadata> _repeated_file_codec
        = pb::FieldCodec.ForMessage(138, global::GooglePlayStore.FileMetadata.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.FileMetadata> file_ = new pbc::RepeatedField<global::GooglePlayStore.FileMetadata>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.FileMetadata> File {
      get { return file_; }
    }

    /// <summary>Field number for the "appType" field.</summary>
    public const int AppTypeFieldNumber = 18;
    private string appType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppType {
      get { return appType_; }
      set {
        appType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unstable" field.</summary>
    public const int UnstableFieldNumber = 21;
    private bool unstable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Unstable {
      get { return unstable_; }
      set {
        unstable_ = value;
      }
    }

    /// <summary>Field number for the "containsAds" field.</summary>
    public const int ContainsAdsFieldNumber = 30;
    private string containsAds_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContainsAds {
      get { return containsAds_; }
      set {
        containsAds_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dependencies" field.</summary>
    public const int DependenciesFieldNumber = 34;
    private global::GooglePlayStore.Dependencies dependencies_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Dependencies Dependencies {
      get { return dependencies_; }
      set {
        dependencies_ = value;
      }
    }

    /// <summary>Field number for the "testingProgramInfo" field.</summary>
    public const int TestingProgramInfoFieldNumber = 35;
    private global::GooglePlayStore.TestingProgramInfo testingProgramInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TestingProgramInfo TestingProgramInfo {
      get { return testingProgramInfo_; }
      set {
        testingProgramInfo_ = value;
      }
    }

    /// <summary>Field number for the "earlyAccessInfo" field.</summary>
    public const int EarlyAccessInfoFieldNumber = 36;
    private global::GooglePlayStore.EarlyAccessInfo earlyAccessInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.EarlyAccessInfo EarlyAccessInfo {
      get { return earlyAccessInfo_; }
      set {
        earlyAccessInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeveloperName != other.DeveloperName) return false;
      if (MajorVersionNumber != other.MajorVersionNumber) return false;
      if (VersionCode != other.VersionCode) return false;
      if (VersionString != other.VersionString) return false;
      if (Title != other.Title) return false;
      if(!appCategory_.Equals(other.appCategory_)) return false;
      if (ContentRating != other.ContentRating) return false;
      if (InstallationSize != other.InstallationSize) return false;
      if(!permission_.Equals(other.permission_)) return false;
      if (DeveloperEmail != other.DeveloperEmail) return false;
      if (DeveloperWebsite != other.DeveloperWebsite) return false;
      if (NumDownloads != other.NumDownloads) return false;
      if (PackageName != other.PackageName) return false;
      if (RecentChangesHtml != other.RecentChangesHtml) return false;
      if (UploadDate != other.UploadDate) return false;
      if(!file_.Equals(other.file_)) return false;
      if (AppType != other.AppType) return false;
      if (Unstable != other.Unstable) return false;
      if (ContainsAds != other.ContainsAds) return false;
      if (!object.Equals(Dependencies, other.Dependencies)) return false;
      if (!object.Equals(TestingProgramInfo, other.TestingProgramInfo)) return false;
      if (!object.Equals(EarlyAccessInfo, other.EarlyAccessInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeveloperName.Length != 0) hash ^= DeveloperName.GetHashCode();
      if (MajorVersionNumber != 0) hash ^= MajorVersionNumber.GetHashCode();
      if (VersionCode != 0) hash ^= VersionCode.GetHashCode();
      if (VersionString.Length != 0) hash ^= VersionString.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      hash ^= appCategory_.GetHashCode();
      if (ContentRating != 0) hash ^= ContentRating.GetHashCode();
      if (InstallationSize != 0L) hash ^= InstallationSize.GetHashCode();
      hash ^= permission_.GetHashCode();
      if (DeveloperEmail.Length != 0) hash ^= DeveloperEmail.GetHashCode();
      if (DeveloperWebsite.Length != 0) hash ^= DeveloperWebsite.GetHashCode();
      if (NumDownloads.Length != 0) hash ^= NumDownloads.GetHashCode();
      if (PackageName.Length != 0) hash ^= PackageName.GetHashCode();
      if (RecentChangesHtml.Length != 0) hash ^= RecentChangesHtml.GetHashCode();
      if (UploadDate.Length != 0) hash ^= UploadDate.GetHashCode();
      hash ^= file_.GetHashCode();
      if (AppType.Length != 0) hash ^= AppType.GetHashCode();
      if (Unstable != false) hash ^= Unstable.GetHashCode();
      if (ContainsAds.Length != 0) hash ^= ContainsAds.GetHashCode();
      if (dependencies_ != null) hash ^= Dependencies.GetHashCode();
      if (testingProgramInfo_ != null) hash ^= TestingProgramInfo.GetHashCode();
      if (earlyAccessInfo_ != null) hash ^= EarlyAccessInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DeveloperName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeveloperName);
      }
      if (MajorVersionNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MajorVersionNumber);
      }
      if (VersionCode != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(VersionCode);
      }
      if (VersionString.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(VersionString);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Title);
      }
      appCategory_.WriteTo(output, _repeated_appCategory_codec);
      if (ContentRating != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ContentRating);
      }
      if (InstallationSize != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(InstallationSize);
      }
      permission_.WriteTo(output, _repeated_permission_codec);
      if (DeveloperEmail.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(DeveloperEmail);
      }
      if (DeveloperWebsite.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DeveloperWebsite);
      }
      if (NumDownloads.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(NumDownloads);
      }
      if (PackageName.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(PackageName);
      }
      if (RecentChangesHtml.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(RecentChangesHtml);
      }
      if (UploadDate.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(UploadDate);
      }
      file_.WriteTo(output, _repeated_file_codec);
      if (AppType.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(AppType);
      }
      if (Unstable != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(Unstable);
      }
      if (ContainsAds.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(ContainsAds);
      }
      if (dependencies_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(Dependencies);
      }
      if (testingProgramInfo_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(TestingProgramInfo);
      }
      if (earlyAccessInfo_ != null) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(EarlyAccessInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeveloperName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeveloperName);
      }
      if (MajorVersionNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MajorVersionNumber);
      }
      if (VersionCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VersionCode);
      }
      if (VersionString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionString);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      size += appCategory_.CalculateSize(_repeated_appCategory_codec);
      if (ContentRating != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContentRating);
      }
      if (InstallationSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InstallationSize);
      }
      size += permission_.CalculateSize(_repeated_permission_codec);
      if (DeveloperEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeveloperEmail);
      }
      if (DeveloperWebsite.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeveloperWebsite);
      }
      if (NumDownloads.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NumDownloads);
      }
      if (PackageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageName);
      }
      if (RecentChangesHtml.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RecentChangesHtml);
      }
      if (UploadDate.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UploadDate);
      }
      size += file_.CalculateSize(_repeated_file_codec);
      if (AppType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AppType);
      }
      if (Unstable != false) {
        size += 2 + 1;
      }
      if (ContainsAds.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContainsAds);
      }
      if (dependencies_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Dependencies);
      }
      if (testingProgramInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TestingProgramInfo);
      }
      if (earlyAccessInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EarlyAccessInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppDetails other) {
      if (other == null) {
        return;
      }
      if (other.DeveloperName.Length != 0) {
        DeveloperName = other.DeveloperName;
      }
      if (other.MajorVersionNumber != 0) {
        MajorVersionNumber = other.MajorVersionNumber;
      }
      if (other.VersionCode != 0) {
        VersionCode = other.VersionCode;
      }
      if (other.VersionString.Length != 0) {
        VersionString = other.VersionString;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      appCategory_.Add(other.appCategory_);
      if (other.ContentRating != 0) {
        ContentRating = other.ContentRating;
      }
      if (other.InstallationSize != 0L) {
        InstallationSize = other.InstallationSize;
      }
      permission_.Add(other.permission_);
      if (other.DeveloperEmail.Length != 0) {
        DeveloperEmail = other.DeveloperEmail;
      }
      if (other.DeveloperWebsite.Length != 0) {
        DeveloperWebsite = other.DeveloperWebsite;
      }
      if (other.NumDownloads.Length != 0) {
        NumDownloads = other.NumDownloads;
      }
      if (other.PackageName.Length != 0) {
        PackageName = other.PackageName;
      }
      if (other.RecentChangesHtml.Length != 0) {
        RecentChangesHtml = other.RecentChangesHtml;
      }
      if (other.UploadDate.Length != 0) {
        UploadDate = other.UploadDate;
      }
      file_.Add(other.file_);
      if (other.AppType.Length != 0) {
        AppType = other.AppType;
      }
      if (other.Unstable != false) {
        Unstable = other.Unstable;
      }
      if (other.ContainsAds.Length != 0) {
        ContainsAds = other.ContainsAds;
      }
      if (other.dependencies_ != null) {
        if (dependencies_ == null) {
          dependencies_ = new global::GooglePlayStore.Dependencies();
        }
        Dependencies.MergeFrom(other.Dependencies);
      }
      if (other.testingProgramInfo_ != null) {
        if (testingProgramInfo_ == null) {
          testingProgramInfo_ = new global::GooglePlayStore.TestingProgramInfo();
        }
        TestingProgramInfo.MergeFrom(other.TestingProgramInfo);
      }
      if (other.earlyAccessInfo_ != null) {
        if (earlyAccessInfo_ == null) {
          earlyAccessInfo_ = new global::GooglePlayStore.EarlyAccessInfo();
        }
        EarlyAccessInfo.MergeFrom(other.EarlyAccessInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            DeveloperName = input.ReadString();
            break;
          }
          case 16: {
            MajorVersionNumber = input.ReadInt32();
            break;
          }
          case 24: {
            VersionCode = input.ReadInt32();
            break;
          }
          case 34: {
            VersionString = input.ReadString();
            break;
          }
          case 42: {
            Title = input.ReadString();
            break;
          }
          case 58: {
            appCategory_.AddEntriesFrom(input, _repeated_appCategory_codec);
            break;
          }
          case 64: {
            ContentRating = input.ReadInt32();
            break;
          }
          case 72: {
            InstallationSize = input.ReadInt64();
            break;
          }
          case 82: {
            permission_.AddEntriesFrom(input, _repeated_permission_codec);
            break;
          }
          case 90: {
            DeveloperEmail = input.ReadString();
            break;
          }
          case 98: {
            DeveloperWebsite = input.ReadString();
            break;
          }
          case 106: {
            NumDownloads = input.ReadString();
            break;
          }
          case 114: {
            PackageName = input.ReadString();
            break;
          }
          case 122: {
            RecentChangesHtml = input.ReadString();
            break;
          }
          case 130: {
            UploadDate = input.ReadString();
            break;
          }
          case 138: {
            file_.AddEntriesFrom(input, _repeated_file_codec);
            break;
          }
          case 146: {
            AppType = input.ReadString();
            break;
          }
          case 168: {
            Unstable = input.ReadBool();
            break;
          }
          case 242: {
            ContainsAds = input.ReadString();
            break;
          }
          case 274: {
            if (dependencies_ == null) {
              dependencies_ = new global::GooglePlayStore.Dependencies();
            }
            input.ReadMessage(dependencies_);
            break;
          }
          case 282: {
            if (testingProgramInfo_ == null) {
              testingProgramInfo_ = new global::GooglePlayStore.TestingProgramInfo();
            }
            input.ReadMessage(testingProgramInfo_);
            break;
          }
          case 290: {
            if (earlyAccessInfo_ == null) {
              earlyAccessInfo_ = new global::GooglePlayStore.EarlyAccessInfo();
            }
            input.ReadMessage(earlyAccessInfo_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Dependencies : pb::IMessage<Dependencies> {
    private static readonly pb::MessageParser<Dependencies> _parser = new pb::MessageParser<Dependencies>(() => new Dependencies());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dependencies> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dependencies() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dependencies(Dependencies other) : this() {
      unknown1_ = other.unknown1_;
      unknown2_ = other.unknown2_;
      dependency_ = other.dependency_.Clone();
      unknown3_ = other.unknown3_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dependencies Clone() {
      return new Dependencies(this);
    }

    /// <summary>Field number for the "unknown1" field.</summary>
    public const int Unknown1FieldNumber = 1;
    private int unknown1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Unknown1 {
      get { return unknown1_; }
      set {
        unknown1_ = value;
      }
    }

    /// <summary>Field number for the "unknown2" field.</summary>
    public const int Unknown2FieldNumber = 2;
    private long unknown2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Unknown2 {
      get { return unknown2_; }
      set {
        unknown2_ = value;
      }
    }

    /// <summary>Field number for the "dependency" field.</summary>
    public const int DependencyFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Dependency> _repeated_dependency_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.Dependency.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Dependency> dependency_ = new pbc::RepeatedField<global::GooglePlayStore.Dependency>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Dependency> Dependency {
      get { return dependency_; }
    }

    /// <summary>Field number for the "unknown3" field.</summary>
    public const int Unknown3FieldNumber = 4;
    private int unknown3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Unknown3 {
      get { return unknown3_; }
      set {
        unknown3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dependencies);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dependencies other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Unknown1 != other.Unknown1) return false;
      if (Unknown2 != other.Unknown2) return false;
      if(!dependency_.Equals(other.dependency_)) return false;
      if (Unknown3 != other.Unknown3) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Unknown1 != 0) hash ^= Unknown1.GetHashCode();
      if (Unknown2 != 0L) hash ^= Unknown2.GetHashCode();
      hash ^= dependency_.GetHashCode();
      if (Unknown3 != 0) hash ^= Unknown3.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Unknown1 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Unknown1);
      }
      if (Unknown2 != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Unknown2);
      }
      dependency_.WriteTo(output, _repeated_dependency_codec);
      if (Unknown3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Unknown3);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Unknown1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unknown1);
      }
      if (Unknown2 != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Unknown2);
      }
      size += dependency_.CalculateSize(_repeated_dependency_codec);
      if (Unknown3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unknown3);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dependencies other) {
      if (other == null) {
        return;
      }
      if (other.Unknown1 != 0) {
        Unknown1 = other.Unknown1;
      }
      if (other.Unknown2 != 0L) {
        Unknown2 = other.Unknown2;
      }
      dependency_.Add(other.dependency_);
      if (other.Unknown3 != 0) {
        Unknown3 = other.Unknown3;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Unknown1 = input.ReadInt32();
            break;
          }
          case 16: {
            Unknown2 = input.ReadInt64();
            break;
          }
          case 26: {
            dependency_.AddEntriesFrom(input, _repeated_dependency_codec);
            break;
          }
          case 32: {
            Unknown3 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Dependency : pb::IMessage<Dependency> {
    private static readonly pb::MessageParser<Dependency> _parser = new pb::MessageParser<Dependency>(() => new Dependency());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dependency> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dependency() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dependency(Dependency other) : this() {
      packageName_ = other.packageName_;
      version_ = other.version_;
      unknown4_ = other.unknown4_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dependency Clone() {
      return new Dependency(this);
    }

    /// <summary>Field number for the "packageName" field.</summary>
    public const int PackageNameFieldNumber = 1;
    private string packageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackageName {
      get { return packageName_; }
      set {
        packageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "unknown4" field.</summary>
    public const int Unknown4FieldNumber = 4;
    private int unknown4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Unknown4 {
      get { return unknown4_; }
      set {
        unknown4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dependency);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dependency other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PackageName != other.PackageName) return false;
      if (Version != other.Version) return false;
      if (Unknown4 != other.Unknown4) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PackageName.Length != 0) hash ^= PackageName.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (Unknown4 != 0) hash ^= Unknown4.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PackageName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PackageName);
      }
      if (Version != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Version);
      }
      if (Unknown4 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Unknown4);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PackageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageName);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (Unknown4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unknown4);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dependency other) {
      if (other == null) {
        return;
      }
      if (other.PackageName.Length != 0) {
        PackageName = other.PackageName;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.Unknown4 != 0) {
        Unknown4 = other.Unknown4;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            PackageName = input.ReadString();
            break;
          }
          case 16: {
            Version = input.ReadInt32();
            break;
          }
          case 32: {
            Unknown4 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestingProgramInfo : pb::IMessage<TestingProgramInfo> {
    private static readonly pb::MessageParser<TestingProgramInfo> _parser = new pb::MessageParser<TestingProgramInfo>(() => new TestingProgramInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestingProgramInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramInfo(TestingProgramInfo other) : this() {
      subscribed_ = other.subscribed_;
      subscribed1_ = other.subscribed1_;
      testingProgramEmail_ = other.testingProgramEmail_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramInfo Clone() {
      return new TestingProgramInfo(this);
    }

    /// <summary>Field number for the "subscribed" field.</summary>
    public const int SubscribedFieldNumber = 2;
    private bool subscribed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Subscribed {
      get { return subscribed_; }
      set {
        subscribed_ = value;
      }
    }

    /// <summary>Field number for the "subscribed1" field.</summary>
    public const int Subscribed1FieldNumber = 3;
    private bool subscribed1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Subscribed1 {
      get { return subscribed1_; }
      set {
        subscribed1_ = value;
      }
    }

    /// <summary>Field number for the "testingProgramEmail" field.</summary>
    public const int TestingProgramEmailFieldNumber = 5;
    private string testingProgramEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TestingProgramEmail {
      get { return testingProgramEmail_; }
      set {
        testingProgramEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestingProgramInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestingProgramInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Subscribed != other.Subscribed) return false;
      if (Subscribed1 != other.Subscribed1) return false;
      if (TestingProgramEmail != other.TestingProgramEmail) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Subscribed != false) hash ^= Subscribed.GetHashCode();
      if (Subscribed1 != false) hash ^= Subscribed1.GetHashCode();
      if (TestingProgramEmail.Length != 0) hash ^= TestingProgramEmail.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Subscribed != false) {
        output.WriteRawTag(16);
        output.WriteBool(Subscribed);
      }
      if (Subscribed1 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Subscribed1);
      }
      if (TestingProgramEmail.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TestingProgramEmail);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Subscribed != false) {
        size += 1 + 1;
      }
      if (Subscribed1 != false) {
        size += 1 + 1;
      }
      if (TestingProgramEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestingProgramEmail);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestingProgramInfo other) {
      if (other == null) {
        return;
      }
      if (other.Subscribed != false) {
        Subscribed = other.Subscribed;
      }
      if (other.Subscribed1 != false) {
        Subscribed1 = other.Subscribed1;
      }
      if (other.TestingProgramEmail.Length != 0) {
        TestingProgramEmail = other.TestingProgramEmail;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 16: {
            Subscribed = input.ReadBool();
            break;
          }
          case 24: {
            Subscribed1 = input.ReadBool();
            break;
          }
          case 42: {
            TestingProgramEmail = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EarlyAccessInfo : pb::IMessage<EarlyAccessInfo> {
    private static readonly pb::MessageParser<EarlyAccessInfo> _parser = new pb::MessageParser<EarlyAccessInfo>(() => new EarlyAccessInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EarlyAccessInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EarlyAccessInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EarlyAccessInfo(EarlyAccessInfo other) : this() {
      email_ = other.email_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EarlyAccessInfo Clone() {
      return new EarlyAccessInfo(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 3;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EarlyAccessInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EarlyAccessInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Email.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Email);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EarlyAccessInfo other) {
      if (other == null) {
        return;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 26: {
            Email = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArtistDetails : pb::IMessage<ArtistDetails> {
    private static readonly pb::MessageParser<ArtistDetails> _parser = new pb::MessageParser<ArtistDetails>(() => new ArtistDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArtistDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtistDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtistDetails(ArtistDetails other) : this() {
      detailsUrl_ = other.detailsUrl_;
      name_ = other.name_;
      ExternalLinks = other.externalLinks_ != null ? other.ExternalLinks.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtistDetails Clone() {
      return new ArtistDetails(this);
    }

    /// <summary>Field number for the "detailsUrl" field.</summary>
    public const int DetailsUrlFieldNumber = 1;
    private string detailsUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DetailsUrl {
      get { return detailsUrl_; }
      set {
        detailsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "externalLinks" field.</summary>
    public const int ExternalLinksFieldNumber = 3;
    private global::GooglePlayStore.ArtistExternalLinks externalLinks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ArtistExternalLinks ExternalLinks {
      get { return externalLinks_; }
      set {
        externalLinks_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArtistDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArtistDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DetailsUrl != other.DetailsUrl) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(ExternalLinks, other.ExternalLinks)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DetailsUrl.Length != 0) hash ^= DetailsUrl.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (externalLinks_ != null) hash ^= ExternalLinks.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DetailsUrl.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DetailsUrl);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (externalLinks_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExternalLinks);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DetailsUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DetailsUrl);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (externalLinks_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExternalLinks);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArtistDetails other) {
      if (other == null) {
        return;
      }
      if (other.DetailsUrl.Length != 0) {
        DetailsUrl = other.DetailsUrl;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.externalLinks_ != null) {
        if (externalLinks_ == null) {
          externalLinks_ = new global::GooglePlayStore.ArtistExternalLinks();
        }
        ExternalLinks.MergeFrom(other.ExternalLinks);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            DetailsUrl = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (externalLinks_ == null) {
              externalLinks_ = new global::GooglePlayStore.ArtistExternalLinks();
            }
            input.ReadMessage(externalLinks_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArtistExternalLinks : pb::IMessage<ArtistExternalLinks> {
    private static readonly pb::MessageParser<ArtistExternalLinks> _parser = new pb::MessageParser<ArtistExternalLinks>(() => new ArtistExternalLinks());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArtistExternalLinks> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtistExternalLinks() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtistExternalLinks(ArtistExternalLinks other) : this() {
      websiteUrl_ = other.websiteUrl_.Clone();
      googlePlusProfileUrl_ = other.googlePlusProfileUrl_;
      youtubeChannelUrl_ = other.youtubeChannelUrl_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtistExternalLinks Clone() {
      return new ArtistExternalLinks(this);
    }

    /// <summary>Field number for the "websiteUrl" field.</summary>
    public const int WebsiteUrlFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_websiteUrl_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> websiteUrl_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> WebsiteUrl {
      get { return websiteUrl_; }
    }

    /// <summary>Field number for the "googlePlusProfileUrl" field.</summary>
    public const int GooglePlusProfileUrlFieldNumber = 2;
    private string googlePlusProfileUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GooglePlusProfileUrl {
      get { return googlePlusProfileUrl_; }
      set {
        googlePlusProfileUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "youtubeChannelUrl" field.</summary>
    public const int YoutubeChannelUrlFieldNumber = 3;
    private string youtubeChannelUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string YoutubeChannelUrl {
      get { return youtubeChannelUrl_; }
      set {
        youtubeChannelUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArtistExternalLinks);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArtistExternalLinks other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!websiteUrl_.Equals(other.websiteUrl_)) return false;
      if (GooglePlusProfileUrl != other.GooglePlusProfileUrl) return false;
      if (YoutubeChannelUrl != other.YoutubeChannelUrl) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= websiteUrl_.GetHashCode();
      if (GooglePlusProfileUrl.Length != 0) hash ^= GooglePlusProfileUrl.GetHashCode();
      if (YoutubeChannelUrl.Length != 0) hash ^= YoutubeChannelUrl.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      websiteUrl_.WriteTo(output, _repeated_websiteUrl_codec);
      if (GooglePlusProfileUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GooglePlusProfileUrl);
      }
      if (YoutubeChannelUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(YoutubeChannelUrl);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += websiteUrl_.CalculateSize(_repeated_websiteUrl_codec);
      if (GooglePlusProfileUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GooglePlusProfileUrl);
      }
      if (YoutubeChannelUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(YoutubeChannelUrl);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArtistExternalLinks other) {
      if (other == null) {
        return;
      }
      websiteUrl_.Add(other.websiteUrl_);
      if (other.GooglePlusProfileUrl.Length != 0) {
        GooglePlusProfileUrl = other.GooglePlusProfileUrl;
      }
      if (other.YoutubeChannelUrl.Length != 0) {
        YoutubeChannelUrl = other.YoutubeChannelUrl;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            websiteUrl_.AddEntriesFrom(input, _repeated_websiteUrl_codec);
            break;
          }
          case 18: {
            GooglePlusProfileUrl = input.ReadString();
            break;
          }
          case 26: {
            YoutubeChannelUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DocumentDetails : pb::IMessage<DocumentDetails> {
    private static readonly pb::MessageParser<DocumentDetails> _parser = new pb::MessageParser<DocumentDetails>(() => new DocumentDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DocumentDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentDetails(DocumentDetails other) : this() {
      AppDetails = other.appDetails_ != null ? other.AppDetails.Clone() : null;
      AlbumDetails = other.albumDetails_ != null ? other.AlbumDetails.Clone() : null;
      ArtistDetails = other.artistDetails_ != null ? other.ArtistDetails.Clone() : null;
      SongDetails = other.songDetails_ != null ? other.SongDetails.Clone() : null;
      BookDetails = other.bookDetails_ != null ? other.BookDetails.Clone() : null;
      VideoDetails = other.videoDetails_ != null ? other.VideoDetails.Clone() : null;
      SubscriptionDetails = other.subscriptionDetails_ != null ? other.SubscriptionDetails.Clone() : null;
      MagazineDetails = other.magazineDetails_ != null ? other.MagazineDetails.Clone() : null;
      TvShowDetails = other.tvShowDetails_ != null ? other.TvShowDetails.Clone() : null;
      TvSeasonDetails = other.tvSeasonDetails_ != null ? other.TvSeasonDetails.Clone() : null;
      TvEpisodeDetails = other.tvEpisodeDetails_ != null ? other.TvEpisodeDetails.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentDetails Clone() {
      return new DocumentDetails(this);
    }

    /// <summary>Field number for the "appDetails" field.</summary>
    public const int AppDetailsFieldNumber = 1;
    private global::GooglePlayStore.AppDetails appDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AppDetails AppDetails {
      get { return appDetails_; }
      set {
        appDetails_ = value;
      }
    }

    /// <summary>Field number for the "albumDetails" field.</summary>
    public const int AlbumDetailsFieldNumber = 2;
    private global::GooglePlayStore.AlbumDetails albumDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AlbumDetails AlbumDetails {
      get { return albumDetails_; }
      set {
        albumDetails_ = value;
      }
    }

    /// <summary>Field number for the "artistDetails" field.</summary>
    public const int ArtistDetailsFieldNumber = 3;
    private global::GooglePlayStore.ArtistDetails artistDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ArtistDetails ArtistDetails {
      get { return artistDetails_; }
      set {
        artistDetails_ = value;
      }
    }

    /// <summary>Field number for the "songDetails" field.</summary>
    public const int SongDetailsFieldNumber = 4;
    private global::GooglePlayStore.SongDetails songDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SongDetails SongDetails {
      get { return songDetails_; }
      set {
        songDetails_ = value;
      }
    }

    /// <summary>Field number for the "bookDetails" field.</summary>
    public const int BookDetailsFieldNumber = 5;
    private global::GooglePlayStore.BookDetails bookDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.BookDetails BookDetails {
      get { return bookDetails_; }
      set {
        bookDetails_ = value;
      }
    }

    /// <summary>Field number for the "videoDetails" field.</summary>
    public const int VideoDetailsFieldNumber = 6;
    private global::GooglePlayStore.VideoDetails videoDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.VideoDetails VideoDetails {
      get { return videoDetails_; }
      set {
        videoDetails_ = value;
      }
    }

    /// <summary>Field number for the "subscriptionDetails" field.</summary>
    public const int SubscriptionDetailsFieldNumber = 7;
    private global::GooglePlayStore.SubscriptionDetails subscriptionDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SubscriptionDetails SubscriptionDetails {
      get { return subscriptionDetails_; }
      set {
        subscriptionDetails_ = value;
      }
    }

    /// <summary>Field number for the "magazineDetails" field.</summary>
    public const int MagazineDetailsFieldNumber = 8;
    private global::GooglePlayStore.MagazineDetails magazineDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.MagazineDetails MagazineDetails {
      get { return magazineDetails_; }
      set {
        magazineDetails_ = value;
      }
    }

    /// <summary>Field number for the "tvShowDetails" field.</summary>
    public const int TvShowDetailsFieldNumber = 9;
    private global::GooglePlayStore.TvShowDetails tvShowDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TvShowDetails TvShowDetails {
      get { return tvShowDetails_; }
      set {
        tvShowDetails_ = value;
      }
    }

    /// <summary>Field number for the "tvSeasonDetails" field.</summary>
    public const int TvSeasonDetailsFieldNumber = 10;
    private global::GooglePlayStore.TvSeasonDetails tvSeasonDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TvSeasonDetails TvSeasonDetails {
      get { return tvSeasonDetails_; }
      set {
        tvSeasonDetails_ = value;
      }
    }

    /// <summary>Field number for the "tvEpisodeDetails" field.</summary>
    public const int TvEpisodeDetailsFieldNumber = 11;
    private global::GooglePlayStore.TvEpisodeDetails tvEpisodeDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TvEpisodeDetails TvEpisodeDetails {
      get { return tvEpisodeDetails_; }
      set {
        tvEpisodeDetails_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DocumentDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DocumentDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AppDetails, other.AppDetails)) return false;
      if (!object.Equals(AlbumDetails, other.AlbumDetails)) return false;
      if (!object.Equals(ArtistDetails, other.ArtistDetails)) return false;
      if (!object.Equals(SongDetails, other.SongDetails)) return false;
      if (!object.Equals(BookDetails, other.BookDetails)) return false;
      if (!object.Equals(VideoDetails, other.VideoDetails)) return false;
      if (!object.Equals(SubscriptionDetails, other.SubscriptionDetails)) return false;
      if (!object.Equals(MagazineDetails, other.MagazineDetails)) return false;
      if (!object.Equals(TvShowDetails, other.TvShowDetails)) return false;
      if (!object.Equals(TvSeasonDetails, other.TvSeasonDetails)) return false;
      if (!object.Equals(TvEpisodeDetails, other.TvEpisodeDetails)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (appDetails_ != null) hash ^= AppDetails.GetHashCode();
      if (albumDetails_ != null) hash ^= AlbumDetails.GetHashCode();
      if (artistDetails_ != null) hash ^= ArtistDetails.GetHashCode();
      if (songDetails_ != null) hash ^= SongDetails.GetHashCode();
      if (bookDetails_ != null) hash ^= BookDetails.GetHashCode();
      if (videoDetails_ != null) hash ^= VideoDetails.GetHashCode();
      if (subscriptionDetails_ != null) hash ^= SubscriptionDetails.GetHashCode();
      if (magazineDetails_ != null) hash ^= MagazineDetails.GetHashCode();
      if (tvShowDetails_ != null) hash ^= TvShowDetails.GetHashCode();
      if (tvSeasonDetails_ != null) hash ^= TvSeasonDetails.GetHashCode();
      if (tvEpisodeDetails_ != null) hash ^= TvEpisodeDetails.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (appDetails_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AppDetails);
      }
      if (albumDetails_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AlbumDetails);
      }
      if (artistDetails_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ArtistDetails);
      }
      if (songDetails_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SongDetails);
      }
      if (bookDetails_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(BookDetails);
      }
      if (videoDetails_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(VideoDetails);
      }
      if (subscriptionDetails_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(SubscriptionDetails);
      }
      if (magazineDetails_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(MagazineDetails);
      }
      if (tvShowDetails_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TvShowDetails);
      }
      if (tvSeasonDetails_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(TvSeasonDetails);
      }
      if (tvEpisodeDetails_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(TvEpisodeDetails);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (appDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppDetails);
      }
      if (albumDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AlbumDetails);
      }
      if (artistDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArtistDetails);
      }
      if (songDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SongDetails);
      }
      if (bookDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BookDetails);
      }
      if (videoDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VideoDetails);
      }
      if (subscriptionDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscriptionDetails);
      }
      if (magazineDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MagazineDetails);
      }
      if (tvShowDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TvShowDetails);
      }
      if (tvSeasonDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TvSeasonDetails);
      }
      if (tvEpisodeDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TvEpisodeDetails);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DocumentDetails other) {
      if (other == null) {
        return;
      }
      if (other.appDetails_ != null) {
        if (appDetails_ == null) {
          appDetails_ = new global::GooglePlayStore.AppDetails();
        }
        AppDetails.MergeFrom(other.AppDetails);
      }
      if (other.albumDetails_ != null) {
        if (albumDetails_ == null) {
          albumDetails_ = new global::GooglePlayStore.AlbumDetails();
        }
        AlbumDetails.MergeFrom(other.AlbumDetails);
      }
      if (other.artistDetails_ != null) {
        if (artistDetails_ == null) {
          artistDetails_ = new global::GooglePlayStore.ArtistDetails();
        }
        ArtistDetails.MergeFrom(other.ArtistDetails);
      }
      if (other.songDetails_ != null) {
        if (songDetails_ == null) {
          songDetails_ = new global::GooglePlayStore.SongDetails();
        }
        SongDetails.MergeFrom(other.SongDetails);
      }
      if (other.bookDetails_ != null) {
        if (bookDetails_ == null) {
          bookDetails_ = new global::GooglePlayStore.BookDetails();
        }
        BookDetails.MergeFrom(other.BookDetails);
      }
      if (other.videoDetails_ != null) {
        if (videoDetails_ == null) {
          videoDetails_ = new global::GooglePlayStore.VideoDetails();
        }
        VideoDetails.MergeFrom(other.VideoDetails);
      }
      if (other.subscriptionDetails_ != null) {
        if (subscriptionDetails_ == null) {
          subscriptionDetails_ = new global::GooglePlayStore.SubscriptionDetails();
        }
        SubscriptionDetails.MergeFrom(other.SubscriptionDetails);
      }
      if (other.magazineDetails_ != null) {
        if (magazineDetails_ == null) {
          magazineDetails_ = new global::GooglePlayStore.MagazineDetails();
        }
        MagazineDetails.MergeFrom(other.MagazineDetails);
      }
      if (other.tvShowDetails_ != null) {
        if (tvShowDetails_ == null) {
          tvShowDetails_ = new global::GooglePlayStore.TvShowDetails();
        }
        TvShowDetails.MergeFrom(other.TvShowDetails);
      }
      if (other.tvSeasonDetails_ != null) {
        if (tvSeasonDetails_ == null) {
          tvSeasonDetails_ = new global::GooglePlayStore.TvSeasonDetails();
        }
        TvSeasonDetails.MergeFrom(other.TvSeasonDetails);
      }
      if (other.tvEpisodeDetails_ != null) {
        if (tvEpisodeDetails_ == null) {
          tvEpisodeDetails_ = new global::GooglePlayStore.TvEpisodeDetails();
        }
        TvEpisodeDetails.MergeFrom(other.TvEpisodeDetails);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (appDetails_ == null) {
              appDetails_ = new global::GooglePlayStore.AppDetails();
            }
            input.ReadMessage(appDetails_);
            break;
          }
          case 18: {
            if (albumDetails_ == null) {
              albumDetails_ = new global::GooglePlayStore.AlbumDetails();
            }
            input.ReadMessage(albumDetails_);
            break;
          }
          case 26: {
            if (artistDetails_ == null) {
              artistDetails_ = new global::GooglePlayStore.ArtistDetails();
            }
            input.ReadMessage(artistDetails_);
            break;
          }
          case 34: {
            if (songDetails_ == null) {
              songDetails_ = new global::GooglePlayStore.SongDetails();
            }
            input.ReadMessage(songDetails_);
            break;
          }
          case 42: {
            if (bookDetails_ == null) {
              bookDetails_ = new global::GooglePlayStore.BookDetails();
            }
            input.ReadMessage(bookDetails_);
            break;
          }
          case 50: {
            if (videoDetails_ == null) {
              videoDetails_ = new global::GooglePlayStore.VideoDetails();
            }
            input.ReadMessage(videoDetails_);
            break;
          }
          case 58: {
            if (subscriptionDetails_ == null) {
              subscriptionDetails_ = new global::GooglePlayStore.SubscriptionDetails();
            }
            input.ReadMessage(subscriptionDetails_);
            break;
          }
          case 66: {
            if (magazineDetails_ == null) {
              magazineDetails_ = new global::GooglePlayStore.MagazineDetails();
            }
            input.ReadMessage(magazineDetails_);
            break;
          }
          case 74: {
            if (tvShowDetails_ == null) {
              tvShowDetails_ = new global::GooglePlayStore.TvShowDetails();
            }
            input.ReadMessage(tvShowDetails_);
            break;
          }
          case 82: {
            if (tvSeasonDetails_ == null) {
              tvSeasonDetails_ = new global::GooglePlayStore.TvSeasonDetails();
            }
            input.ReadMessage(tvSeasonDetails_);
            break;
          }
          case 90: {
            if (tvEpisodeDetails_ == null) {
              tvEpisodeDetails_ = new global::GooglePlayStore.TvEpisodeDetails();
            }
            input.ReadMessage(tvEpisodeDetails_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FileMetadata : pb::IMessage<FileMetadata> {
    private static readonly pb::MessageParser<FileMetadata> _parser = new pb::MessageParser<FileMetadata>(() => new FileMetadata());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileMetadata(FileMetadata other) : this() {
      fileType_ = other.fileType_;
      versionCode_ = other.versionCode_;
      size_ = other.size_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileMetadata Clone() {
      return new FileMetadata(this);
    }

    /// <summary>Field number for the "fileType" field.</summary>
    public const int FileTypeFieldNumber = 1;
    private int fileType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FileType {
      get { return fileType_; }
      set {
        fileType_ = value;
      }
    }

    /// <summary>Field number for the "versionCode" field.</summary>
    public const int VersionCodeFieldNumber = 2;
    private int versionCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VersionCode {
      get { return versionCode_; }
      set {
        versionCode_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 3;
    private long size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileType != other.FileType) return false;
      if (VersionCode != other.VersionCode) return false;
      if (Size != other.Size) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FileType != 0) hash ^= FileType.GetHashCode();
      if (VersionCode != 0) hash ^= VersionCode.GetHashCode();
      if (Size != 0L) hash ^= Size.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FileType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FileType);
      }
      if (VersionCode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(VersionCode);
      }
      if (Size != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Size);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FileType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FileType);
      }
      if (VersionCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VersionCode);
      }
      if (Size != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Size);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileMetadata other) {
      if (other == null) {
        return;
      }
      if (other.FileType != 0) {
        FileType = other.FileType;
      }
      if (other.VersionCode != 0) {
        VersionCode = other.VersionCode;
      }
      if (other.Size != 0L) {
        Size = other.Size;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            FileType = input.ReadInt32();
            break;
          }
          case 16: {
            VersionCode = input.ReadInt32();
            break;
          }
          case 24: {
            Size = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MagazineDetails : pb::IMessage<MagazineDetails> {
    private static readonly pb::MessageParser<MagazineDetails> _parser = new pb::MessageParser<MagazineDetails>(() => new MagazineDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MagazineDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MagazineDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MagazineDetails(MagazineDetails other) : this() {
      parentDetailsUrl_ = other.parentDetailsUrl_;
      deviceAvailabilityDescriptionHtml_ = other.deviceAvailabilityDescriptionHtml_;
      psvDescription_ = other.psvDescription_;
      deliveryFrequencyDescription_ = other.deliveryFrequencyDescription_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MagazineDetails Clone() {
      return new MagazineDetails(this);
    }

    /// <summary>Field number for the "parentDetailsUrl" field.</summary>
    public const int ParentDetailsUrlFieldNumber = 1;
    private string parentDetailsUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParentDetailsUrl {
      get { return parentDetailsUrl_; }
      set {
        parentDetailsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deviceAvailabilityDescriptionHtml" field.</summary>
    public const int DeviceAvailabilityDescriptionHtmlFieldNumber = 2;
    private string deviceAvailabilityDescriptionHtml_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceAvailabilityDescriptionHtml {
      get { return deviceAvailabilityDescriptionHtml_; }
      set {
        deviceAvailabilityDescriptionHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "psvDescription" field.</summary>
    public const int PsvDescriptionFieldNumber = 3;
    private string psvDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PsvDescription {
      get { return psvDescription_; }
      set {
        psvDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deliveryFrequencyDescription" field.</summary>
    public const int DeliveryFrequencyDescriptionFieldNumber = 4;
    private string deliveryFrequencyDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeliveryFrequencyDescription {
      get { return deliveryFrequencyDescription_; }
      set {
        deliveryFrequencyDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MagazineDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MagazineDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParentDetailsUrl != other.ParentDetailsUrl) return false;
      if (DeviceAvailabilityDescriptionHtml != other.DeviceAvailabilityDescriptionHtml) return false;
      if (PsvDescription != other.PsvDescription) return false;
      if (DeliveryFrequencyDescription != other.DeliveryFrequencyDescription) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParentDetailsUrl.Length != 0) hash ^= ParentDetailsUrl.GetHashCode();
      if (DeviceAvailabilityDescriptionHtml.Length != 0) hash ^= DeviceAvailabilityDescriptionHtml.GetHashCode();
      if (PsvDescription.Length != 0) hash ^= PsvDescription.GetHashCode();
      if (DeliveryFrequencyDescription.Length != 0) hash ^= DeliveryFrequencyDescription.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParentDetailsUrl.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParentDetailsUrl);
      }
      if (DeviceAvailabilityDescriptionHtml.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DeviceAvailabilityDescriptionHtml);
      }
      if (PsvDescription.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PsvDescription);
      }
      if (DeliveryFrequencyDescription.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DeliveryFrequencyDescription);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParentDetailsUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentDetailsUrl);
      }
      if (DeviceAvailabilityDescriptionHtml.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceAvailabilityDescriptionHtml);
      }
      if (PsvDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PsvDescription);
      }
      if (DeliveryFrequencyDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeliveryFrequencyDescription);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MagazineDetails other) {
      if (other == null) {
        return;
      }
      if (other.ParentDetailsUrl.Length != 0) {
        ParentDetailsUrl = other.ParentDetailsUrl;
      }
      if (other.DeviceAvailabilityDescriptionHtml.Length != 0) {
        DeviceAvailabilityDescriptionHtml = other.DeviceAvailabilityDescriptionHtml;
      }
      if (other.PsvDescription.Length != 0) {
        PsvDescription = other.PsvDescription;
      }
      if (other.DeliveryFrequencyDescription.Length != 0) {
        DeliveryFrequencyDescription = other.DeliveryFrequencyDescription;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ParentDetailsUrl = input.ReadString();
            break;
          }
          case 18: {
            DeviceAvailabilityDescriptionHtml = input.ReadString();
            break;
          }
          case 26: {
            PsvDescription = input.ReadString();
            break;
          }
          case 34: {
            DeliveryFrequencyDescription = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MusicDetails : pb::IMessage<MusicDetails> {
    private static readonly pb::MessageParser<MusicDetails> _parser = new pb::MessageParser<MusicDetails>(() => new MusicDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MusicDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MusicDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MusicDetails(MusicDetails other) : this() {
      censoring_ = other.censoring_;
      durationSec_ = other.durationSec_;
      originalReleaseDate_ = other.originalReleaseDate_;
      label_ = other.label_;
      artist_ = other.artist_.Clone();
      genre_ = other.genre_.Clone();
      releaseDate_ = other.releaseDate_;
      releaseType_ = other.releaseType_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MusicDetails Clone() {
      return new MusicDetails(this);
    }

    /// <summary>Field number for the "censoring" field.</summary>
    public const int CensoringFieldNumber = 1;
    private int censoring_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Censoring {
      get { return censoring_; }
      set {
        censoring_ = value;
      }
    }

    /// <summary>Field number for the "durationSec" field.</summary>
    public const int DurationSecFieldNumber = 2;
    private int durationSec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DurationSec {
      get { return durationSec_; }
      set {
        durationSec_ = value;
      }
    }

    /// <summary>Field number for the "originalReleaseDate" field.</summary>
    public const int OriginalReleaseDateFieldNumber = 3;
    private string originalReleaseDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalReleaseDate {
      get { return originalReleaseDate_; }
      set {
        originalReleaseDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 4;
    private string label_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "artist" field.</summary>
    public const int ArtistFieldNumber = 5;
    private static readonly pb::FieldCodec<global::GooglePlayStore.ArtistDetails> _repeated_artist_codec
        = pb::FieldCodec.ForMessage(42, global::GooglePlayStore.ArtistDetails.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.ArtistDetails> artist_ = new pbc::RepeatedField<global::GooglePlayStore.ArtistDetails>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.ArtistDetails> Artist {
      get { return artist_; }
    }

    /// <summary>Field number for the "genre" field.</summary>
    public const int GenreFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_genre_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> genre_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Genre {
      get { return genre_; }
    }

    /// <summary>Field number for the "releaseDate" field.</summary>
    public const int ReleaseDateFieldNumber = 7;
    private string releaseDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReleaseDate {
      get { return releaseDate_; }
      set {
        releaseDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "releaseType" field.</summary>
    public const int ReleaseTypeFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_releaseType_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> releaseType_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ReleaseType {
      get { return releaseType_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MusicDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MusicDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Censoring != other.Censoring) return false;
      if (DurationSec != other.DurationSec) return false;
      if (OriginalReleaseDate != other.OriginalReleaseDate) return false;
      if (Label != other.Label) return false;
      if(!artist_.Equals(other.artist_)) return false;
      if(!genre_.Equals(other.genre_)) return false;
      if (ReleaseDate != other.ReleaseDate) return false;
      if(!releaseType_.Equals(other.releaseType_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Censoring != 0) hash ^= Censoring.GetHashCode();
      if (DurationSec != 0) hash ^= DurationSec.GetHashCode();
      if (OriginalReleaseDate.Length != 0) hash ^= OriginalReleaseDate.GetHashCode();
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      hash ^= artist_.GetHashCode();
      hash ^= genre_.GetHashCode();
      if (ReleaseDate.Length != 0) hash ^= ReleaseDate.GetHashCode();
      hash ^= releaseType_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Censoring != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Censoring);
      }
      if (DurationSec != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DurationSec);
      }
      if (OriginalReleaseDate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OriginalReleaseDate);
      }
      if (Label.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Label);
      }
      artist_.WriteTo(output, _repeated_artist_codec);
      genre_.WriteTo(output, _repeated_genre_codec);
      if (ReleaseDate.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ReleaseDate);
      }
      releaseType_.WriteTo(output, _repeated_releaseType_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Censoring != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Censoring);
      }
      if (DurationSec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DurationSec);
      }
      if (OriginalReleaseDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalReleaseDate);
      }
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      size += artist_.CalculateSize(_repeated_artist_codec);
      size += genre_.CalculateSize(_repeated_genre_codec);
      if (ReleaseDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReleaseDate);
      }
      size += releaseType_.CalculateSize(_repeated_releaseType_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MusicDetails other) {
      if (other == null) {
        return;
      }
      if (other.Censoring != 0) {
        Censoring = other.Censoring;
      }
      if (other.DurationSec != 0) {
        DurationSec = other.DurationSec;
      }
      if (other.OriginalReleaseDate.Length != 0) {
        OriginalReleaseDate = other.OriginalReleaseDate;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      artist_.Add(other.artist_);
      genre_.Add(other.genre_);
      if (other.ReleaseDate.Length != 0) {
        ReleaseDate = other.ReleaseDate;
      }
      releaseType_.Add(other.releaseType_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Censoring = input.ReadInt32();
            break;
          }
          case 16: {
            DurationSec = input.ReadInt32();
            break;
          }
          case 26: {
            OriginalReleaseDate = input.ReadString();
            break;
          }
          case 34: {
            Label = input.ReadString();
            break;
          }
          case 42: {
            artist_.AddEntriesFrom(input, _repeated_artist_codec);
            break;
          }
          case 50: {
            genre_.AddEntriesFrom(input, _repeated_genre_codec);
            break;
          }
          case 58: {
            ReleaseDate = input.ReadString();
            break;
          }
          case 66:
          case 64: {
            releaseType_.AddEntriesFrom(input, _repeated_releaseType_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SongDetails : pb::IMessage<SongDetails> {
    private static readonly pb::MessageParser<SongDetails> _parser = new pb::MessageParser<SongDetails>(() => new SongDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SongDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SongDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SongDetails(SongDetails other) : this() {
      name_ = other.name_;
      Details = other.details_ != null ? other.Details.Clone() : null;
      albumName_ = other.albumName_;
      trackNumber_ = other.trackNumber_;
      previewUrl_ = other.previewUrl_;
      DisplayArtist = other.displayArtist_ != null ? other.DisplayArtist.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SongDetails Clone() {
      return new SongDetails(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 2;
    private global::GooglePlayStore.MusicDetails details_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.MusicDetails Details {
      get { return details_; }
      set {
        details_ = value;
      }
    }

    /// <summary>Field number for the "albumName" field.</summary>
    public const int AlbumNameFieldNumber = 3;
    private string albumName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AlbumName {
      get { return albumName_; }
      set {
        albumName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trackNumber" field.</summary>
    public const int TrackNumberFieldNumber = 4;
    private int trackNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TrackNumber {
      get { return trackNumber_; }
      set {
        trackNumber_ = value;
      }
    }

    /// <summary>Field number for the "previewUrl" field.</summary>
    public const int PreviewUrlFieldNumber = 5;
    private string previewUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PreviewUrl {
      get { return previewUrl_; }
      set {
        previewUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "displayArtist" field.</summary>
    public const int DisplayArtistFieldNumber = 6;
    private global::GooglePlayStore.ArtistDetails displayArtist_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ArtistDetails DisplayArtist {
      get { return displayArtist_; }
      set {
        displayArtist_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SongDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SongDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Details, other.Details)) return false;
      if (AlbumName != other.AlbumName) return false;
      if (TrackNumber != other.TrackNumber) return false;
      if (PreviewUrl != other.PreviewUrl) return false;
      if (!object.Equals(DisplayArtist, other.DisplayArtist)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (details_ != null) hash ^= Details.GetHashCode();
      if (AlbumName.Length != 0) hash ^= AlbumName.GetHashCode();
      if (TrackNumber != 0) hash ^= TrackNumber.GetHashCode();
      if (PreviewUrl.Length != 0) hash ^= PreviewUrl.GetHashCode();
      if (displayArtist_ != null) hash ^= DisplayArtist.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (details_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Details);
      }
      if (AlbumName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AlbumName);
      }
      if (TrackNumber != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TrackNumber);
      }
      if (PreviewUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PreviewUrl);
      }
      if (displayArtist_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DisplayArtist);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (details_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Details);
      }
      if (AlbumName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AlbumName);
      }
      if (TrackNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TrackNumber);
      }
      if (PreviewUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PreviewUrl);
      }
      if (displayArtist_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DisplayArtist);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SongDetails other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.details_ != null) {
        if (details_ == null) {
          details_ = new global::GooglePlayStore.MusicDetails();
        }
        Details.MergeFrom(other.Details);
      }
      if (other.AlbumName.Length != 0) {
        AlbumName = other.AlbumName;
      }
      if (other.TrackNumber != 0) {
        TrackNumber = other.TrackNumber;
      }
      if (other.PreviewUrl.Length != 0) {
        PreviewUrl = other.PreviewUrl;
      }
      if (other.displayArtist_ != null) {
        if (displayArtist_ == null) {
          displayArtist_ = new global::GooglePlayStore.ArtistDetails();
        }
        DisplayArtist.MergeFrom(other.DisplayArtist);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (details_ == null) {
              details_ = new global::GooglePlayStore.MusicDetails();
            }
            input.ReadMessage(details_);
            break;
          }
          case 26: {
            AlbumName = input.ReadString();
            break;
          }
          case 32: {
            TrackNumber = input.ReadInt32();
            break;
          }
          case 42: {
            PreviewUrl = input.ReadString();
            break;
          }
          case 50: {
            if (displayArtist_ == null) {
              displayArtist_ = new global::GooglePlayStore.ArtistDetails();
            }
            input.ReadMessage(displayArtist_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscriptionDetails : pb::IMessage<SubscriptionDetails> {
    private static readonly pb::MessageParser<SubscriptionDetails> _parser = new pb::MessageParser<SubscriptionDetails>(() => new SubscriptionDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscriptionDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionDetails(SubscriptionDetails other) : this() {
      subscriptionPeriod_ = other.subscriptionPeriod_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionDetails Clone() {
      return new SubscriptionDetails(this);
    }

    /// <summary>Field number for the "subscriptionPeriod" field.</summary>
    public const int SubscriptionPeriodFieldNumber = 1;
    private int subscriptionPeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubscriptionPeriod {
      get { return subscriptionPeriod_; }
      set {
        subscriptionPeriod_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscriptionDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscriptionDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubscriptionPeriod != other.SubscriptionPeriod) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubscriptionPeriod != 0) hash ^= SubscriptionPeriod.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubscriptionPeriod != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SubscriptionPeriod);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubscriptionPeriod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubscriptionPeriod);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscriptionDetails other) {
      if (other == null) {
        return;
      }
      if (other.SubscriptionPeriod != 0) {
        SubscriptionPeriod = other.SubscriptionPeriod;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SubscriptionPeriod = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Trailer : pb::IMessage<Trailer> {
    private static readonly pb::MessageParser<Trailer> _parser = new pb::MessageParser<Trailer>(() => new Trailer());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Trailer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Trailer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Trailer(Trailer other) : this() {
      trailerId_ = other.trailerId_;
      title_ = other.title_;
      thumbnailUrl_ = other.thumbnailUrl_;
      watchUrl_ = other.watchUrl_;
      duration_ = other.duration_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Trailer Clone() {
      return new Trailer(this);
    }

    /// <summary>Field number for the "trailerId" field.</summary>
    public const int TrailerIdFieldNumber = 1;
    private string trailerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TrailerId {
      get { return trailerId_; }
      set {
        trailerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "thumbnailUrl" field.</summary>
    public const int ThumbnailUrlFieldNumber = 3;
    private string thumbnailUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ThumbnailUrl {
      get { return thumbnailUrl_; }
      set {
        thumbnailUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "watchUrl" field.</summary>
    public const int WatchUrlFieldNumber = 4;
    private string watchUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WatchUrl {
      get { return watchUrl_; }
      set {
        watchUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 5;
    private string duration_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Duration {
      get { return duration_; }
      set {
        duration_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Trailer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Trailer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TrailerId != other.TrailerId) return false;
      if (Title != other.Title) return false;
      if (ThumbnailUrl != other.ThumbnailUrl) return false;
      if (WatchUrl != other.WatchUrl) return false;
      if (Duration != other.Duration) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TrailerId.Length != 0) hash ^= TrailerId.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (ThumbnailUrl.Length != 0) hash ^= ThumbnailUrl.GetHashCode();
      if (WatchUrl.Length != 0) hash ^= WatchUrl.GetHashCode();
      if (Duration.Length != 0) hash ^= Duration.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TrailerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TrailerId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (ThumbnailUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ThumbnailUrl);
      }
      if (WatchUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(WatchUrl);
      }
      if (Duration.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Duration);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TrailerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrailerId);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (ThumbnailUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ThumbnailUrl);
      }
      if (WatchUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WatchUrl);
      }
      if (Duration.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Duration);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Trailer other) {
      if (other == null) {
        return;
      }
      if (other.TrailerId.Length != 0) {
        TrailerId = other.TrailerId;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.ThumbnailUrl.Length != 0) {
        ThumbnailUrl = other.ThumbnailUrl;
      }
      if (other.WatchUrl.Length != 0) {
        WatchUrl = other.WatchUrl;
      }
      if (other.Duration.Length != 0) {
        Duration = other.Duration;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            TrailerId = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            ThumbnailUrl = input.ReadString();
            break;
          }
          case 34: {
            WatchUrl = input.ReadString();
            break;
          }
          case 42: {
            Duration = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TvEpisodeDetails : pb::IMessage<TvEpisodeDetails> {
    private static readonly pb::MessageParser<TvEpisodeDetails> _parser = new pb::MessageParser<TvEpisodeDetails>(() => new TvEpisodeDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TvEpisodeDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TvEpisodeDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TvEpisodeDetails(TvEpisodeDetails other) : this() {
      parentDetailsUrl_ = other.parentDetailsUrl_;
      episodeIndex_ = other.episodeIndex_;
      releaseDate_ = other.releaseDate_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TvEpisodeDetails Clone() {
      return new TvEpisodeDetails(this);
    }

    /// <summary>Field number for the "parentDetailsUrl" field.</summary>
    public const int ParentDetailsUrlFieldNumber = 1;
    private string parentDetailsUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParentDetailsUrl {
      get { return parentDetailsUrl_; }
      set {
        parentDetailsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "episodeIndex" field.</summary>
    public const int EpisodeIndexFieldNumber = 2;
    private int episodeIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EpisodeIndex {
      get { return episodeIndex_; }
      set {
        episodeIndex_ = value;
      }
    }

    /// <summary>Field number for the "releaseDate" field.</summary>
    public const int ReleaseDateFieldNumber = 3;
    private string releaseDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReleaseDate {
      get { return releaseDate_; }
      set {
        releaseDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TvEpisodeDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TvEpisodeDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParentDetailsUrl != other.ParentDetailsUrl) return false;
      if (EpisodeIndex != other.EpisodeIndex) return false;
      if (ReleaseDate != other.ReleaseDate) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParentDetailsUrl.Length != 0) hash ^= ParentDetailsUrl.GetHashCode();
      if (EpisodeIndex != 0) hash ^= EpisodeIndex.GetHashCode();
      if (ReleaseDate.Length != 0) hash ^= ReleaseDate.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParentDetailsUrl.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParentDetailsUrl);
      }
      if (EpisodeIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EpisodeIndex);
      }
      if (ReleaseDate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ReleaseDate);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParentDetailsUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentDetailsUrl);
      }
      if (EpisodeIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EpisodeIndex);
      }
      if (ReleaseDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReleaseDate);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TvEpisodeDetails other) {
      if (other == null) {
        return;
      }
      if (other.ParentDetailsUrl.Length != 0) {
        ParentDetailsUrl = other.ParentDetailsUrl;
      }
      if (other.EpisodeIndex != 0) {
        EpisodeIndex = other.EpisodeIndex;
      }
      if (other.ReleaseDate.Length != 0) {
        ReleaseDate = other.ReleaseDate;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ParentDetailsUrl = input.ReadString();
            break;
          }
          case 16: {
            EpisodeIndex = input.ReadInt32();
            break;
          }
          case 26: {
            ReleaseDate = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TvSeasonDetails : pb::IMessage<TvSeasonDetails> {
    private static readonly pb::MessageParser<TvSeasonDetails> _parser = new pb::MessageParser<TvSeasonDetails>(() => new TvSeasonDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TvSeasonDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TvSeasonDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TvSeasonDetails(TvSeasonDetails other) : this() {
      parentDetailsUrl_ = other.parentDetailsUrl_;
      seasonIndex_ = other.seasonIndex_;
      releaseDate_ = other.releaseDate_;
      broadcaster_ = other.broadcaster_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TvSeasonDetails Clone() {
      return new TvSeasonDetails(this);
    }

    /// <summary>Field number for the "parentDetailsUrl" field.</summary>
    public const int ParentDetailsUrlFieldNumber = 1;
    private string parentDetailsUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParentDetailsUrl {
      get { return parentDetailsUrl_; }
      set {
        parentDetailsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seasonIndex" field.</summary>
    public const int SeasonIndexFieldNumber = 2;
    private int seasonIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SeasonIndex {
      get { return seasonIndex_; }
      set {
        seasonIndex_ = value;
      }
    }

    /// <summary>Field number for the "releaseDate" field.</summary>
    public const int ReleaseDateFieldNumber = 3;
    private string releaseDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReleaseDate {
      get { return releaseDate_; }
      set {
        releaseDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "broadcaster" field.</summary>
    public const int BroadcasterFieldNumber = 4;
    private string broadcaster_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Broadcaster {
      get { return broadcaster_; }
      set {
        broadcaster_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TvSeasonDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TvSeasonDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParentDetailsUrl != other.ParentDetailsUrl) return false;
      if (SeasonIndex != other.SeasonIndex) return false;
      if (ReleaseDate != other.ReleaseDate) return false;
      if (Broadcaster != other.Broadcaster) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParentDetailsUrl.Length != 0) hash ^= ParentDetailsUrl.GetHashCode();
      if (SeasonIndex != 0) hash ^= SeasonIndex.GetHashCode();
      if (ReleaseDate.Length != 0) hash ^= ReleaseDate.GetHashCode();
      if (Broadcaster.Length != 0) hash ^= Broadcaster.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParentDetailsUrl.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParentDetailsUrl);
      }
      if (SeasonIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SeasonIndex);
      }
      if (ReleaseDate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ReleaseDate);
      }
      if (Broadcaster.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Broadcaster);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParentDetailsUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentDetailsUrl);
      }
      if (SeasonIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeasonIndex);
      }
      if (ReleaseDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReleaseDate);
      }
      if (Broadcaster.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Broadcaster);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TvSeasonDetails other) {
      if (other == null) {
        return;
      }
      if (other.ParentDetailsUrl.Length != 0) {
        ParentDetailsUrl = other.ParentDetailsUrl;
      }
      if (other.SeasonIndex != 0) {
        SeasonIndex = other.SeasonIndex;
      }
      if (other.ReleaseDate.Length != 0) {
        ReleaseDate = other.ReleaseDate;
      }
      if (other.Broadcaster.Length != 0) {
        Broadcaster = other.Broadcaster;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ParentDetailsUrl = input.ReadString();
            break;
          }
          case 16: {
            SeasonIndex = input.ReadInt32();
            break;
          }
          case 26: {
            ReleaseDate = input.ReadString();
            break;
          }
          case 34: {
            Broadcaster = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TvShowDetails : pb::IMessage<TvShowDetails> {
    private static readonly pb::MessageParser<TvShowDetails> _parser = new pb::MessageParser<TvShowDetails>(() => new TvShowDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TvShowDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TvShowDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TvShowDetails(TvShowDetails other) : this() {
      seasonCount_ = other.seasonCount_;
      startYear_ = other.startYear_;
      endYear_ = other.endYear_;
      broadcaster_ = other.broadcaster_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TvShowDetails Clone() {
      return new TvShowDetails(this);
    }

    /// <summary>Field number for the "seasonCount" field.</summary>
    public const int SeasonCountFieldNumber = 1;
    private int seasonCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SeasonCount {
      get { return seasonCount_; }
      set {
        seasonCount_ = value;
      }
    }

    /// <summary>Field number for the "startYear" field.</summary>
    public const int StartYearFieldNumber = 2;
    private int startYear_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartYear {
      get { return startYear_; }
      set {
        startYear_ = value;
      }
    }

    /// <summary>Field number for the "endYear" field.</summary>
    public const int EndYearFieldNumber = 3;
    private int endYear_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndYear {
      get { return endYear_; }
      set {
        endYear_ = value;
      }
    }

    /// <summary>Field number for the "broadcaster" field.</summary>
    public const int BroadcasterFieldNumber = 4;
    private string broadcaster_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Broadcaster {
      get { return broadcaster_; }
      set {
        broadcaster_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TvShowDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TvShowDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SeasonCount != other.SeasonCount) return false;
      if (StartYear != other.StartYear) return false;
      if (EndYear != other.EndYear) return false;
      if (Broadcaster != other.Broadcaster) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SeasonCount != 0) hash ^= SeasonCount.GetHashCode();
      if (StartYear != 0) hash ^= StartYear.GetHashCode();
      if (EndYear != 0) hash ^= EndYear.GetHashCode();
      if (Broadcaster.Length != 0) hash ^= Broadcaster.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SeasonCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SeasonCount);
      }
      if (StartYear != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StartYear);
      }
      if (EndYear != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EndYear);
      }
      if (Broadcaster.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Broadcaster);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SeasonCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeasonCount);
      }
      if (StartYear != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartYear);
      }
      if (EndYear != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndYear);
      }
      if (Broadcaster.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Broadcaster);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TvShowDetails other) {
      if (other == null) {
        return;
      }
      if (other.SeasonCount != 0) {
        SeasonCount = other.SeasonCount;
      }
      if (other.StartYear != 0) {
        StartYear = other.StartYear;
      }
      if (other.EndYear != 0) {
        EndYear = other.EndYear;
      }
      if (other.Broadcaster.Length != 0) {
        Broadcaster = other.Broadcaster;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SeasonCount = input.ReadInt32();
            break;
          }
          case 16: {
            StartYear = input.ReadInt32();
            break;
          }
          case 24: {
            EndYear = input.ReadInt32();
            break;
          }
          case 34: {
            Broadcaster = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VideoCredit : pb::IMessage<VideoCredit> {
    private static readonly pb::MessageParser<VideoCredit> _parser = new pb::MessageParser<VideoCredit>(() => new VideoCredit());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VideoCredit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoCredit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoCredit(VideoCredit other) : this() {
      creditType_ = other.creditType_;
      credit_ = other.credit_;
      name_ = other.name_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoCredit Clone() {
      return new VideoCredit(this);
    }

    /// <summary>Field number for the "creditType" field.</summary>
    public const int CreditTypeFieldNumber = 1;
    private int creditType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CreditType {
      get { return creditType_; }
      set {
        creditType_ = value;
      }
    }

    /// <summary>Field number for the "credit" field.</summary>
    public const int CreditFieldNumber = 2;
    private string credit_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Credit {
      get { return credit_; }
      set {
        credit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_name_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> name_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Name {
      get { return name_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VideoCredit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VideoCredit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CreditType != other.CreditType) return false;
      if (Credit != other.Credit) return false;
      if(!name_.Equals(other.name_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CreditType != 0) hash ^= CreditType.GetHashCode();
      if (Credit.Length != 0) hash ^= Credit.GetHashCode();
      hash ^= name_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CreditType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CreditType);
      }
      if (Credit.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Credit);
      }
      name_.WriteTo(output, _repeated_name_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CreditType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CreditType);
      }
      if (Credit.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Credit);
      }
      size += name_.CalculateSize(_repeated_name_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VideoCredit other) {
      if (other == null) {
        return;
      }
      if (other.CreditType != 0) {
        CreditType = other.CreditType;
      }
      if (other.Credit.Length != 0) {
        Credit = other.Credit;
      }
      name_.Add(other.name_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CreditType = input.ReadInt32();
            break;
          }
          case 18: {
            Credit = input.ReadString();
            break;
          }
          case 26: {
            name_.AddEntriesFrom(input, _repeated_name_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VideoDetails : pb::IMessage<VideoDetails> {
    private static readonly pb::MessageParser<VideoDetails> _parser = new pb::MessageParser<VideoDetails>(() => new VideoDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VideoDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoDetails(VideoDetails other) : this() {
      credit_ = other.credit_.Clone();
      duration_ = other.duration_;
      releaseDate_ = other.releaseDate_;
      contentRating_ = other.contentRating_;
      likes_ = other.likes_;
      dislikes_ = other.dislikes_;
      genre_ = other.genre_.Clone();
      trailer_ = other.trailer_.Clone();
      rentalTerm_ = other.rentalTerm_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoDetails Clone() {
      return new VideoDetails(this);
    }

    /// <summary>Field number for the "credit" field.</summary>
    public const int CreditFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GooglePlayStore.VideoCredit> _repeated_credit_codec
        = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.VideoCredit.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.VideoCredit> credit_ = new pbc::RepeatedField<global::GooglePlayStore.VideoCredit>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.VideoCredit> Credit {
      get { return credit_; }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 2;
    private string duration_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Duration {
      get { return duration_; }
      set {
        duration_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "releaseDate" field.</summary>
    public const int ReleaseDateFieldNumber = 3;
    private string releaseDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReleaseDate {
      get { return releaseDate_; }
      set {
        releaseDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contentRating" field.</summary>
    public const int ContentRatingFieldNumber = 4;
    private string contentRating_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentRating {
      get { return contentRating_; }
      set {
        contentRating_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "likes" field.</summary>
    public const int LikesFieldNumber = 5;
    private long likes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Likes {
      get { return likes_; }
      set {
        likes_ = value;
      }
    }

    /// <summary>Field number for the "dislikes" field.</summary>
    public const int DislikesFieldNumber = 6;
    private long dislikes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Dislikes {
      get { return dislikes_; }
      set {
        dislikes_ = value;
      }
    }

    /// <summary>Field number for the "genre" field.</summary>
    public const int GenreFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_genre_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> genre_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Genre {
      get { return genre_; }
    }

    /// <summary>Field number for the "trailer" field.</summary>
    public const int TrailerFieldNumber = 8;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Trailer> _repeated_trailer_codec
        = pb::FieldCodec.ForMessage(66, global::GooglePlayStore.Trailer.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Trailer> trailer_ = new pbc::RepeatedField<global::GooglePlayStore.Trailer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Trailer> Trailer {
      get { return trailer_; }
    }

    /// <summary>Field number for the "rentalTerm" field.</summary>
    public const int RentalTermFieldNumber = 9;
    private static readonly pb::FieldCodec<global::GooglePlayStore.VideoRentalTerm> _repeated_rentalTerm_codec
        = pb::FieldCodec.ForMessage(74, global::GooglePlayStore.VideoRentalTerm.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.VideoRentalTerm> rentalTerm_ = new pbc::RepeatedField<global::GooglePlayStore.VideoRentalTerm>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.VideoRentalTerm> RentalTerm {
      get { return rentalTerm_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VideoDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VideoDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!credit_.Equals(other.credit_)) return false;
      if (Duration != other.Duration) return false;
      if (ReleaseDate != other.ReleaseDate) return false;
      if (ContentRating != other.ContentRating) return false;
      if (Likes != other.Likes) return false;
      if (Dislikes != other.Dislikes) return false;
      if(!genre_.Equals(other.genre_)) return false;
      if(!trailer_.Equals(other.trailer_)) return false;
      if(!rentalTerm_.Equals(other.rentalTerm_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= credit_.GetHashCode();
      if (Duration.Length != 0) hash ^= Duration.GetHashCode();
      if (ReleaseDate.Length != 0) hash ^= ReleaseDate.GetHashCode();
      if (ContentRating.Length != 0) hash ^= ContentRating.GetHashCode();
      if (Likes != 0L) hash ^= Likes.GetHashCode();
      if (Dislikes != 0L) hash ^= Dislikes.GetHashCode();
      hash ^= genre_.GetHashCode();
      hash ^= trailer_.GetHashCode();
      hash ^= rentalTerm_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      credit_.WriteTo(output, _repeated_credit_codec);
      if (Duration.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Duration);
      }
      if (ReleaseDate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ReleaseDate);
      }
      if (ContentRating.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ContentRating);
      }
      if (Likes != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Likes);
      }
      if (Dislikes != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Dislikes);
      }
      genre_.WriteTo(output, _repeated_genre_codec);
      trailer_.WriteTo(output, _repeated_trailer_codec);
      rentalTerm_.WriteTo(output, _repeated_rentalTerm_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += credit_.CalculateSize(_repeated_credit_codec);
      if (Duration.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Duration);
      }
      if (ReleaseDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReleaseDate);
      }
      if (ContentRating.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentRating);
      }
      if (Likes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Likes);
      }
      if (Dislikes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Dislikes);
      }
      size += genre_.CalculateSize(_repeated_genre_codec);
      size += trailer_.CalculateSize(_repeated_trailer_codec);
      size += rentalTerm_.CalculateSize(_repeated_rentalTerm_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VideoDetails other) {
      if (other == null) {
        return;
      }
      credit_.Add(other.credit_);
      if (other.Duration.Length != 0) {
        Duration = other.Duration;
      }
      if (other.ReleaseDate.Length != 0) {
        ReleaseDate = other.ReleaseDate;
      }
      if (other.ContentRating.Length != 0) {
        ContentRating = other.ContentRating;
      }
      if (other.Likes != 0L) {
        Likes = other.Likes;
      }
      if (other.Dislikes != 0L) {
        Dislikes = other.Dislikes;
      }
      genre_.Add(other.genre_);
      trailer_.Add(other.trailer_);
      rentalTerm_.Add(other.rentalTerm_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            credit_.AddEntriesFrom(input, _repeated_credit_codec);
            break;
          }
          case 18: {
            Duration = input.ReadString();
            break;
          }
          case 26: {
            ReleaseDate = input.ReadString();
            break;
          }
          case 34: {
            ContentRating = input.ReadString();
            break;
          }
          case 40: {
            Likes = input.ReadInt64();
            break;
          }
          case 48: {
            Dislikes = input.ReadInt64();
            break;
          }
          case 58: {
            genre_.AddEntriesFrom(input, _repeated_genre_codec);
            break;
          }
          case 66: {
            trailer_.AddEntriesFrom(input, _repeated_trailer_codec);
            break;
          }
          case 74: {
            rentalTerm_.AddEntriesFrom(input, _repeated_rentalTerm_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VideoRentalTerm : pb::IMessage<VideoRentalTerm> {
    private static readonly pb::MessageParser<VideoRentalTerm> _parser = new pb::MessageParser<VideoRentalTerm>(() => new VideoRentalTerm());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VideoRentalTerm> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoRentalTerm() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoRentalTerm(VideoRentalTerm other) : this() {
      offerType_ = other.offerType_;
      offerAbbreviation_ = other.offerAbbreviation_;
      rentalHeader_ = other.rentalHeader_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoRentalTerm Clone() {
      return new VideoRentalTerm(this);
    }

    /// <summary>Field number for the "offerType" field.</summary>
    public const int OfferTypeFieldNumber = 1;
    private int offerType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OfferType {
      get { return offerType_; }
      set {
        offerType_ = value;
      }
    }

    /// <summary>Field number for the "offerAbbreviation" field.</summary>
    public const int OfferAbbreviationFieldNumber = 2;
    private string offerAbbreviation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfferAbbreviation {
      get { return offerAbbreviation_; }
      set {
        offerAbbreviation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rentalHeader" field.</summary>
    public const int RentalHeaderFieldNumber = 3;
    private string rentalHeader_ = "";
    /// <summary>
    ///
    ///repeated group Term = 4 {
    ///string header = 5;
    ///string body = 6;
    ///}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RentalHeader {
      get { return rentalHeader_; }
      set {
        rentalHeader_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VideoRentalTerm);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VideoRentalTerm other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OfferType != other.OfferType) return false;
      if (OfferAbbreviation != other.OfferAbbreviation) return false;
      if (RentalHeader != other.RentalHeader) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OfferType != 0) hash ^= OfferType.GetHashCode();
      if (OfferAbbreviation.Length != 0) hash ^= OfferAbbreviation.GetHashCode();
      if (RentalHeader.Length != 0) hash ^= RentalHeader.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OfferType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(OfferType);
      }
      if (OfferAbbreviation.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OfferAbbreviation);
      }
      if (RentalHeader.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RentalHeader);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OfferType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OfferType);
      }
      if (OfferAbbreviation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OfferAbbreviation);
      }
      if (RentalHeader.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RentalHeader);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VideoRentalTerm other) {
      if (other == null) {
        return;
      }
      if (other.OfferType != 0) {
        OfferType = other.OfferType;
      }
      if (other.OfferAbbreviation.Length != 0) {
        OfferAbbreviation = other.OfferAbbreviation;
      }
      if (other.RentalHeader.Length != 0) {
        RentalHeader = other.RentalHeader;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            OfferType = input.ReadInt32();
            break;
          }
          case 18: {
            OfferAbbreviation = input.ReadString();
            break;
          }
          case 26: {
            RentalHeader = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Bucket : pb::IMessage<Bucket> {
    private static readonly pb::MessageParser<Bucket> _parser = new pb::MessageParser<Bucket>(() => new Bucket());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Bucket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bucket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bucket(Bucket other) : this() {
      document_ = other.document_.Clone();
      multiCorpus_ = other.multiCorpus_;
      title_ = other.title_;
      iconUrl_ = other.iconUrl_;
      fullContentsUrl_ = other.fullContentsUrl_;
      relevance_ = other.relevance_;
      estimatedResults_ = other.estimatedResults_;
      analyticsCookie_ = other.analyticsCookie_;
      fullContentsListUrl_ = other.fullContentsListUrl_;
      nextPageUrl_ = other.nextPageUrl_;
      ordered_ = other.ordered_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bucket Clone() {
      return new Bucket(this);
    }

    /// <summary>Field number for the "document" field.</summary>
    public const int DocumentFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GooglePlayStore.DocV1> _repeated_document_codec
        = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.DocV1.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.DocV1> document_ = new pbc::RepeatedField<global::GooglePlayStore.DocV1>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.DocV1> Document {
      get { return document_; }
    }

    /// <summary>Field number for the "multiCorpus" field.</summary>
    public const int MultiCorpusFieldNumber = 2;
    private bool multiCorpus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MultiCorpus {
      get { return multiCorpus_; }
      set {
        multiCorpus_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 3;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iconUrl" field.</summary>
    public const int IconUrlFieldNumber = 4;
    private string iconUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IconUrl {
      get { return iconUrl_; }
      set {
        iconUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fullContentsUrl" field.</summary>
    public const int FullContentsUrlFieldNumber = 5;
    private string fullContentsUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FullContentsUrl {
      get { return fullContentsUrl_; }
      set {
        fullContentsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "relevance" field.</summary>
    public const int RelevanceFieldNumber = 6;
    private double relevance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Relevance {
      get { return relevance_; }
      set {
        relevance_ = value;
      }
    }

    /// <summary>Field number for the "estimatedResults" field.</summary>
    public const int EstimatedResultsFieldNumber = 7;
    private long estimatedResults_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EstimatedResults {
      get { return estimatedResults_; }
      set {
        estimatedResults_ = value;
      }
    }

    /// <summary>Field number for the "analyticsCookie" field.</summary>
    public const int AnalyticsCookieFieldNumber = 8;
    private string analyticsCookie_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AnalyticsCookie {
      get { return analyticsCookie_; }
      set {
        analyticsCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fullContentsListUrl" field.</summary>
    public const int FullContentsListUrlFieldNumber = 9;
    private string fullContentsListUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FullContentsListUrl {
      get { return fullContentsListUrl_; }
      set {
        fullContentsListUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nextPageUrl" field.</summary>
    public const int NextPageUrlFieldNumber = 10;
    private string nextPageUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageUrl {
      get { return nextPageUrl_; }
      set {
        nextPageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ordered" field.</summary>
    public const int OrderedFieldNumber = 11;
    private bool ordered_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ordered {
      get { return ordered_; }
      set {
        ordered_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Bucket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Bucket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!document_.Equals(other.document_)) return false;
      if (MultiCorpus != other.MultiCorpus) return false;
      if (Title != other.Title) return false;
      if (IconUrl != other.IconUrl) return false;
      if (FullContentsUrl != other.FullContentsUrl) return false;
      if (Relevance != other.Relevance) return false;
      if (EstimatedResults != other.EstimatedResults) return false;
      if (AnalyticsCookie != other.AnalyticsCookie) return false;
      if (FullContentsListUrl != other.FullContentsListUrl) return false;
      if (NextPageUrl != other.NextPageUrl) return false;
      if (Ordered != other.Ordered) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= document_.GetHashCode();
      if (MultiCorpus != false) hash ^= MultiCorpus.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (IconUrl.Length != 0) hash ^= IconUrl.GetHashCode();
      if (FullContentsUrl.Length != 0) hash ^= FullContentsUrl.GetHashCode();
      if (Relevance != 0D) hash ^= Relevance.GetHashCode();
      if (EstimatedResults != 0L) hash ^= EstimatedResults.GetHashCode();
      if (AnalyticsCookie.Length != 0) hash ^= AnalyticsCookie.GetHashCode();
      if (FullContentsListUrl.Length != 0) hash ^= FullContentsListUrl.GetHashCode();
      if (NextPageUrl.Length != 0) hash ^= NextPageUrl.GetHashCode();
      if (Ordered != false) hash ^= Ordered.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      document_.WriteTo(output, _repeated_document_codec);
      if (MultiCorpus != false) {
        output.WriteRawTag(16);
        output.WriteBool(MultiCorpus);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (IconUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(IconUrl);
      }
      if (FullContentsUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(FullContentsUrl);
      }
      if (Relevance != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Relevance);
      }
      if (EstimatedResults != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(EstimatedResults);
      }
      if (AnalyticsCookie.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(AnalyticsCookie);
      }
      if (FullContentsListUrl.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(FullContentsListUrl);
      }
      if (NextPageUrl.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(NextPageUrl);
      }
      if (Ordered != false) {
        output.WriteRawTag(88);
        output.WriteBool(Ordered);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += document_.CalculateSize(_repeated_document_codec);
      if (MultiCorpus != false) {
        size += 1 + 1;
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (IconUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconUrl);
      }
      if (FullContentsUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FullContentsUrl);
      }
      if (Relevance != 0D) {
        size += 1 + 8;
      }
      if (EstimatedResults != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EstimatedResults);
      }
      if (AnalyticsCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AnalyticsCookie);
      }
      if (FullContentsListUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FullContentsListUrl);
      }
      if (NextPageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageUrl);
      }
      if (Ordered != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Bucket other) {
      if (other == null) {
        return;
      }
      document_.Add(other.document_);
      if (other.MultiCorpus != false) {
        MultiCorpus = other.MultiCorpus;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.IconUrl.Length != 0) {
        IconUrl = other.IconUrl;
      }
      if (other.FullContentsUrl.Length != 0) {
        FullContentsUrl = other.FullContentsUrl;
      }
      if (other.Relevance != 0D) {
        Relevance = other.Relevance;
      }
      if (other.EstimatedResults != 0L) {
        EstimatedResults = other.EstimatedResults;
      }
      if (other.AnalyticsCookie.Length != 0) {
        AnalyticsCookie = other.AnalyticsCookie;
      }
      if (other.FullContentsListUrl.Length != 0) {
        FullContentsListUrl = other.FullContentsListUrl;
      }
      if (other.NextPageUrl.Length != 0) {
        NextPageUrl = other.NextPageUrl;
      }
      if (other.Ordered != false) {
        Ordered = other.Ordered;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            document_.AddEntriesFrom(input, _repeated_document_codec);
            break;
          }
          case 16: {
            MultiCorpus = input.ReadBool();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 34: {
            IconUrl = input.ReadString();
            break;
          }
          case 42: {
            FullContentsUrl = input.ReadString();
            break;
          }
          case 49: {
            Relevance = input.ReadDouble();
            break;
          }
          case 56: {
            EstimatedResults = input.ReadInt64();
            break;
          }
          case 66: {
            AnalyticsCookie = input.ReadString();
            break;
          }
          case 74: {
            FullContentsListUrl = input.ReadString();
            break;
          }
          case 82: {
            NextPageUrl = input.ReadString();
            break;
          }
          case 88: {
            Ordered = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListResponse : pb::IMessage<ListResponse> {
    private static readonly pb::MessageParser<ListResponse> _parser = new pb::MessageParser<ListResponse>(() => new ListResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListResponse(ListResponse other) : this() {
      bucket_ = other.bucket_.Clone();
      doc_ = other.doc_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListResponse Clone() {
      return new ListResponse(this);
    }

    /// <summary>Field number for the "bucket" field.</summary>
    public const int BucketFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Bucket> _repeated_bucket_codec
        = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.Bucket.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Bucket> bucket_ = new pbc::RepeatedField<global::GooglePlayStore.Bucket>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Bucket> Bucket {
      get { return bucket_; }
    }

    /// <summary>Field number for the "doc" field.</summary>
    public const int DocFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GooglePlayStore.DocV2> _repeated_doc_codec
        = pb::FieldCodec.ForMessage(18, global::GooglePlayStore.DocV2.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.DocV2> doc_ = new pbc::RepeatedField<global::GooglePlayStore.DocV2>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.DocV2> Doc {
      get { return doc_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!bucket_.Equals(other.bucket_)) return false;
      if(!doc_.Equals(other.doc_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= bucket_.GetHashCode();
      hash ^= doc_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      bucket_.WriteTo(output, _repeated_bucket_codec);
      doc_.WriteTo(output, _repeated_doc_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bucket_.CalculateSize(_repeated_bucket_codec);
      size += doc_.CalculateSize(_repeated_doc_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListResponse other) {
      if (other == null) {
        return;
      }
      bucket_.Add(other.bucket_);
      doc_.Add(other.doc_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            bucket_.AddEntriesFrom(input, _repeated_bucket_codec);
            break;
          }
          case 18: {
            doc_.AddEntriesFrom(input, _repeated_doc_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DocV1 : pb::IMessage<DocV1> {
    private static readonly pb::MessageParser<DocV1> _parser = new pb::MessageParser<DocV1>(() => new DocV1());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DocV1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocV1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocV1(DocV1 other) : this() {
      FinskyDoc = other.finskyDoc_ != null ? other.FinskyDoc.Clone() : null;
      docid_ = other.docid_;
      detailsUrl_ = other.detailsUrl_;
      reviewsUrl_ = other.reviewsUrl_;
      relatedListUrl_ = other.relatedListUrl_;
      moreByListUrl_ = other.moreByListUrl_;
      shareUrl_ = other.shareUrl_;
      creator_ = other.creator_;
      Details = other.details_ != null ? other.Details.Clone() : null;
      descriptionHtml_ = other.descriptionHtml_;
      relatedBrowseUrl_ = other.relatedBrowseUrl_;
      moreByBrowseUrl_ = other.moreByBrowseUrl_;
      relatedHeader_ = other.relatedHeader_;
      moreByHeader_ = other.moreByHeader_;
      title_ = other.title_;
      PlusOneData = other.plusOneData_ != null ? other.PlusOneData.Clone() : null;
      warningMessage_ = other.warningMessage_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocV1 Clone() {
      return new DocV1(this);
    }

    /// <summary>Field number for the "finskyDoc" field.</summary>
    public const int FinskyDocFieldNumber = 1;
    private global::GooglePlayStore.Document finskyDoc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Document FinskyDoc {
      get { return finskyDoc_; }
      set {
        finskyDoc_ = value;
      }
    }

    /// <summary>Field number for the "docid" field.</summary>
    public const int DocidFieldNumber = 2;
    private string docid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Docid {
      get { return docid_; }
      set {
        docid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "detailsUrl" field.</summary>
    public const int DetailsUrlFieldNumber = 3;
    private string detailsUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DetailsUrl {
      get { return detailsUrl_; }
      set {
        detailsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reviewsUrl" field.</summary>
    public const int ReviewsUrlFieldNumber = 4;
    private string reviewsUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReviewsUrl {
      get { return reviewsUrl_; }
      set {
        reviewsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "relatedListUrl" field.</summary>
    public const int RelatedListUrlFieldNumber = 5;
    private string relatedListUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RelatedListUrl {
      get { return relatedListUrl_; }
      set {
        relatedListUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "moreByListUrl" field.</summary>
    public const int MoreByListUrlFieldNumber = 6;
    private string moreByListUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MoreByListUrl {
      get { return moreByListUrl_; }
      set {
        moreByListUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shareUrl" field.</summary>
    public const int ShareUrlFieldNumber = 7;
    private string shareUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShareUrl {
      get { return shareUrl_; }
      set {
        shareUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "creator" field.</summary>
    public const int CreatorFieldNumber = 8;
    private string creator_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Creator {
      get { return creator_; }
      set {
        creator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 9;
    private global::GooglePlayStore.DocumentDetails details_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DocumentDetails Details {
      get { return details_; }
      set {
        details_ = value;
      }
    }

    /// <summary>Field number for the "descriptionHtml" field.</summary>
    public const int DescriptionHtmlFieldNumber = 10;
    private string descriptionHtml_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DescriptionHtml {
      get { return descriptionHtml_; }
      set {
        descriptionHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "relatedBrowseUrl" field.</summary>
    public const int RelatedBrowseUrlFieldNumber = 11;
    private string relatedBrowseUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RelatedBrowseUrl {
      get { return relatedBrowseUrl_; }
      set {
        relatedBrowseUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "moreByBrowseUrl" field.</summary>
    public const int MoreByBrowseUrlFieldNumber = 12;
    private string moreByBrowseUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MoreByBrowseUrl {
      get { return moreByBrowseUrl_; }
      set {
        moreByBrowseUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "relatedHeader" field.</summary>
    public const int RelatedHeaderFieldNumber = 13;
    private string relatedHeader_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RelatedHeader {
      get { return relatedHeader_; }
      set {
        relatedHeader_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "moreByHeader" field.</summary>
    public const int MoreByHeaderFieldNumber = 14;
    private string moreByHeader_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MoreByHeader {
      get { return moreByHeader_; }
      set {
        moreByHeader_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 15;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "plusOneData" field.</summary>
    public const int PlusOneDataFieldNumber = 16;
    private global::GooglePlayStore.PlusOneData plusOneData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.PlusOneData PlusOneData {
      get { return plusOneData_; }
      set {
        plusOneData_ = value;
      }
    }

    /// <summary>Field number for the "warningMessage" field.</summary>
    public const int WarningMessageFieldNumber = 17;
    private string warningMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WarningMessage {
      get { return warningMessage_; }
      set {
        warningMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DocV1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DocV1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FinskyDoc, other.FinskyDoc)) return false;
      if (Docid != other.Docid) return false;
      if (DetailsUrl != other.DetailsUrl) return false;
      if (ReviewsUrl != other.ReviewsUrl) return false;
      if (RelatedListUrl != other.RelatedListUrl) return false;
      if (MoreByListUrl != other.MoreByListUrl) return false;
      if (ShareUrl != other.ShareUrl) return false;
      if (Creator != other.Creator) return false;
      if (!object.Equals(Details, other.Details)) return false;
      if (DescriptionHtml != other.DescriptionHtml) return false;
      if (RelatedBrowseUrl != other.RelatedBrowseUrl) return false;
      if (MoreByBrowseUrl != other.MoreByBrowseUrl) return false;
      if (RelatedHeader != other.RelatedHeader) return false;
      if (MoreByHeader != other.MoreByHeader) return false;
      if (Title != other.Title) return false;
      if (!object.Equals(PlusOneData, other.PlusOneData)) return false;
      if (WarningMessage != other.WarningMessage) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (finskyDoc_ != null) hash ^= FinskyDoc.GetHashCode();
      if (Docid.Length != 0) hash ^= Docid.GetHashCode();
      if (DetailsUrl.Length != 0) hash ^= DetailsUrl.GetHashCode();
      if (ReviewsUrl.Length != 0) hash ^= ReviewsUrl.GetHashCode();
      if (RelatedListUrl.Length != 0) hash ^= RelatedListUrl.GetHashCode();
      if (MoreByListUrl.Length != 0) hash ^= MoreByListUrl.GetHashCode();
      if (ShareUrl.Length != 0) hash ^= ShareUrl.GetHashCode();
      if (Creator.Length != 0) hash ^= Creator.GetHashCode();
      if (details_ != null) hash ^= Details.GetHashCode();
      if (DescriptionHtml.Length != 0) hash ^= DescriptionHtml.GetHashCode();
      if (RelatedBrowseUrl.Length != 0) hash ^= RelatedBrowseUrl.GetHashCode();
      if (MoreByBrowseUrl.Length != 0) hash ^= MoreByBrowseUrl.GetHashCode();
      if (RelatedHeader.Length != 0) hash ^= RelatedHeader.GetHashCode();
      if (MoreByHeader.Length != 0) hash ^= MoreByHeader.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (plusOneData_ != null) hash ^= PlusOneData.GetHashCode();
      if (WarningMessage.Length != 0) hash ^= WarningMessage.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (finskyDoc_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FinskyDoc);
      }
      if (Docid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Docid);
      }
      if (DetailsUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DetailsUrl);
      }
      if (ReviewsUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ReviewsUrl);
      }
      if (RelatedListUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RelatedListUrl);
      }
      if (MoreByListUrl.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MoreByListUrl);
      }
      if (ShareUrl.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ShareUrl);
      }
      if (Creator.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Creator);
      }
      if (details_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Details);
      }
      if (DescriptionHtml.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(DescriptionHtml);
      }
      if (RelatedBrowseUrl.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(RelatedBrowseUrl);
      }
      if (MoreByBrowseUrl.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(MoreByBrowseUrl);
      }
      if (RelatedHeader.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(RelatedHeader);
      }
      if (MoreByHeader.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(MoreByHeader);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Title);
      }
      if (plusOneData_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(PlusOneData);
      }
      if (WarningMessage.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(WarningMessage);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (finskyDoc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FinskyDoc);
      }
      if (Docid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Docid);
      }
      if (DetailsUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DetailsUrl);
      }
      if (ReviewsUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReviewsUrl);
      }
      if (RelatedListUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RelatedListUrl);
      }
      if (MoreByListUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MoreByListUrl);
      }
      if (ShareUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShareUrl);
      }
      if (Creator.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Creator);
      }
      if (details_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Details);
      }
      if (DescriptionHtml.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionHtml);
      }
      if (RelatedBrowseUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RelatedBrowseUrl);
      }
      if (MoreByBrowseUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MoreByBrowseUrl);
      }
      if (RelatedHeader.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RelatedHeader);
      }
      if (MoreByHeader.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MoreByHeader);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (plusOneData_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PlusOneData);
      }
      if (WarningMessage.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(WarningMessage);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DocV1 other) {
      if (other == null) {
        return;
      }
      if (other.finskyDoc_ != null) {
        if (finskyDoc_ == null) {
          finskyDoc_ = new global::GooglePlayStore.Document();
        }
        FinskyDoc.MergeFrom(other.FinskyDoc);
      }
      if (other.Docid.Length != 0) {
        Docid = other.Docid;
      }
      if (other.DetailsUrl.Length != 0) {
        DetailsUrl = other.DetailsUrl;
      }
      if (other.ReviewsUrl.Length != 0) {
        ReviewsUrl = other.ReviewsUrl;
      }
      if (other.RelatedListUrl.Length != 0) {
        RelatedListUrl = other.RelatedListUrl;
      }
      if (other.MoreByListUrl.Length != 0) {
        MoreByListUrl = other.MoreByListUrl;
      }
      if (other.ShareUrl.Length != 0) {
        ShareUrl = other.ShareUrl;
      }
      if (other.Creator.Length != 0) {
        Creator = other.Creator;
      }
      if (other.details_ != null) {
        if (details_ == null) {
          details_ = new global::GooglePlayStore.DocumentDetails();
        }
        Details.MergeFrom(other.Details);
      }
      if (other.DescriptionHtml.Length != 0) {
        DescriptionHtml = other.DescriptionHtml;
      }
      if (other.RelatedBrowseUrl.Length != 0) {
        RelatedBrowseUrl = other.RelatedBrowseUrl;
      }
      if (other.MoreByBrowseUrl.Length != 0) {
        MoreByBrowseUrl = other.MoreByBrowseUrl;
      }
      if (other.RelatedHeader.Length != 0) {
        RelatedHeader = other.RelatedHeader;
      }
      if (other.MoreByHeader.Length != 0) {
        MoreByHeader = other.MoreByHeader;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.plusOneData_ != null) {
        if (plusOneData_ == null) {
          plusOneData_ = new global::GooglePlayStore.PlusOneData();
        }
        PlusOneData.MergeFrom(other.PlusOneData);
      }
      if (other.WarningMessage.Length != 0) {
        WarningMessage = other.WarningMessage;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (finskyDoc_ == null) {
              finskyDoc_ = new global::GooglePlayStore.Document();
            }
            input.ReadMessage(finskyDoc_);
            break;
          }
          case 18: {
            Docid = input.ReadString();
            break;
          }
          case 26: {
            DetailsUrl = input.ReadString();
            break;
          }
          case 34: {
            ReviewsUrl = input.ReadString();
            break;
          }
          case 42: {
            RelatedListUrl = input.ReadString();
            break;
          }
          case 50: {
            MoreByListUrl = input.ReadString();
            break;
          }
          case 58: {
            ShareUrl = input.ReadString();
            break;
          }
          case 66: {
            Creator = input.ReadString();
            break;
          }
          case 74: {
            if (details_ == null) {
              details_ = new global::GooglePlayStore.DocumentDetails();
            }
            input.ReadMessage(details_);
            break;
          }
          case 82: {
            DescriptionHtml = input.ReadString();
            break;
          }
          case 90: {
            RelatedBrowseUrl = input.ReadString();
            break;
          }
          case 98: {
            MoreByBrowseUrl = input.ReadString();
            break;
          }
          case 106: {
            RelatedHeader = input.ReadString();
            break;
          }
          case 114: {
            MoreByHeader = input.ReadString();
            break;
          }
          case 122: {
            Title = input.ReadString();
            break;
          }
          case 130: {
            if (plusOneData_ == null) {
              plusOneData_ = new global::GooglePlayStore.PlusOneData();
            }
            input.ReadMessage(plusOneData_);
            break;
          }
          case 138: {
            WarningMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DocV2 : pb::IMessage<DocV2> {
    private static readonly pb::MessageParser<DocV2> _parser = new pb::MessageParser<DocV2>(() => new DocV2());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DocV2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocV2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocV2(DocV2 other) : this() {
      docid_ = other.docid_;
      backendDocid_ = other.backendDocid_;
      docType_ = other.docType_;
      backendId_ = other.backendId_;
      title_ = other.title_;
      creator_ = other.creator_;
      descriptionHtml_ = other.descriptionHtml_;
      offer_ = other.offer_.Clone();
      Availability = other.availability_ != null ? other.Availability.Clone() : null;
      image_ = other.image_.Clone();
      child_ = other.child_.Clone();
      ContainerMetadata = other.containerMetadata_ != null ? other.ContainerMetadata.Clone() : null;
      Details = other.details_ != null ? other.Details.Clone() : null;
      AggregateRating = other.aggregateRating_ != null ? other.AggregateRating.Clone() : null;
      RelatedLinks = other.relatedLinks_ != null ? other.RelatedLinks.Clone() : null;
      detailsUrl_ = other.detailsUrl_;
      shareUrl_ = other.shareUrl_;
      reviewsUrl_ = other.reviewsUrl_;
      backendUrl_ = other.backendUrl_;
      purchaseDetailsUrl_ = other.purchaseDetailsUrl_;
      detailsReusable_ = other.detailsReusable_;
      subtitle_ = other.subtitle_;
      Unknown25 = other.unknown25_ != null ? other.Unknown25.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocV2 Clone() {
      return new DocV2(this);
    }

    /// <summary>Field number for the "docid" field.</summary>
    public const int DocidFieldNumber = 1;
    private string docid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Docid {
      get { return docid_; }
      set {
        docid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "backendDocid" field.</summary>
    public const int BackendDocidFieldNumber = 2;
    private string backendDocid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BackendDocid {
      get { return backendDocid_; }
      set {
        backendDocid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "docType" field.</summary>
    public const int DocTypeFieldNumber = 3;
    private int docType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DocType {
      get { return docType_; }
      set {
        docType_ = value;
      }
    }

    /// <summary>Field number for the "backendId" field.</summary>
    public const int BackendIdFieldNumber = 4;
    private int backendId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BackendId {
      get { return backendId_; }
      set {
        backendId_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 5;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "creator" field.</summary>
    public const int CreatorFieldNumber = 6;
    private string creator_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Creator {
      get { return creator_; }
      set {
        creator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "descriptionHtml" field.</summary>
    public const int DescriptionHtmlFieldNumber = 7;
    private string descriptionHtml_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DescriptionHtml {
      get { return descriptionHtml_; }
      set {
        descriptionHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "offer" field.</summary>
    public const int OfferFieldNumber = 8;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Offer> _repeated_offer_codec
        = pb::FieldCodec.ForMessage(66, global::GooglePlayStore.Offer.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Offer> offer_ = new pbc::RepeatedField<global::GooglePlayStore.Offer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Offer> Offer {
      get { return offer_; }
    }

    /// <summary>Field number for the "availability" field.</summary>
    public const int AvailabilityFieldNumber = 9;
    private global::GooglePlayStore.Availability availability_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Availability Availability {
      get { return availability_; }
      set {
        availability_ = value;
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 10;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Image> _repeated_image_codec
        = pb::FieldCodec.ForMessage(82, global::GooglePlayStore.Image.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Image> image_ = new pbc::RepeatedField<global::GooglePlayStore.Image>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Image> Image {
      get { return image_; }
    }

    /// <summary>Field number for the "child" field.</summary>
    public const int ChildFieldNumber = 11;
    private static readonly pb::FieldCodec<global::GooglePlayStore.DocV2> _repeated_child_codec
        = pb::FieldCodec.ForMessage(90, global::GooglePlayStore.DocV2.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.DocV2> child_ = new pbc::RepeatedField<global::GooglePlayStore.DocV2>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.DocV2> Child {
      get { return child_; }
    }

    /// <summary>Field number for the "containerMetadata" field.</summary>
    public const int ContainerMetadataFieldNumber = 12;
    private global::GooglePlayStore.ContainerMetadata containerMetadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ContainerMetadata ContainerMetadata {
      get { return containerMetadata_; }
      set {
        containerMetadata_ = value;
      }
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 13;
    private global::GooglePlayStore.DocumentDetails details_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DocumentDetails Details {
      get { return details_; }
      set {
        details_ = value;
      }
    }

    /// <summary>Field number for the "aggregateRating" field.</summary>
    public const int AggregateRatingFieldNumber = 14;
    private global::GooglePlayStore.AggregateRating aggregateRating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AggregateRating AggregateRating {
      get { return aggregateRating_; }
      set {
        aggregateRating_ = value;
      }
    }

    /// <summary>Field number for the "relatedLinks" field.</summary>
    public const int RelatedLinksFieldNumber = 15;
    private global::GooglePlayStore.RelatedLinks relatedLinks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.RelatedLinks RelatedLinks {
      get { return relatedLinks_; }
      set {
        relatedLinks_ = value;
      }
    }

    /// <summary>Field number for the "detailsUrl" field.</summary>
    public const int DetailsUrlFieldNumber = 16;
    private string detailsUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DetailsUrl {
      get { return detailsUrl_; }
      set {
        detailsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shareUrl" field.</summary>
    public const int ShareUrlFieldNumber = 17;
    private string shareUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShareUrl {
      get { return shareUrl_; }
      set {
        shareUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reviewsUrl" field.</summary>
    public const int ReviewsUrlFieldNumber = 18;
    private string reviewsUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReviewsUrl {
      get { return reviewsUrl_; }
      set {
        reviewsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "backendUrl" field.</summary>
    public const int BackendUrlFieldNumber = 19;
    private string backendUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BackendUrl {
      get { return backendUrl_; }
      set {
        backendUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "purchaseDetailsUrl" field.</summary>
    public const int PurchaseDetailsUrlFieldNumber = 20;
    private string purchaseDetailsUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PurchaseDetailsUrl {
      get { return purchaseDetailsUrl_; }
      set {
        purchaseDetailsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "detailsReusable" field.</summary>
    public const int DetailsReusableFieldNumber = 21;
    private bool detailsReusable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DetailsReusable {
      get { return detailsReusable_; }
      set {
        detailsReusable_ = value;
      }
    }

    /// <summary>Field number for the "subtitle" field.</summary>
    public const int SubtitleFieldNumber = 22;
    private string subtitle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subtitle {
      get { return subtitle_; }
      set {
        subtitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unknown25" field.</summary>
    public const int Unknown25FieldNumber = 25;
    private global::GooglePlayStore.Unknown25 unknown25_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Unknown25 Unknown25 {
      get { return unknown25_; }
      set {
        unknown25_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DocV2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DocV2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Docid != other.Docid) return false;
      if (BackendDocid != other.BackendDocid) return false;
      if (DocType != other.DocType) return false;
      if (BackendId != other.BackendId) return false;
      if (Title != other.Title) return false;
      if (Creator != other.Creator) return false;
      if (DescriptionHtml != other.DescriptionHtml) return false;
      if(!offer_.Equals(other.offer_)) return false;
      if (!object.Equals(Availability, other.Availability)) return false;
      if(!image_.Equals(other.image_)) return false;
      if(!child_.Equals(other.child_)) return false;
      if (!object.Equals(ContainerMetadata, other.ContainerMetadata)) return false;
      if (!object.Equals(Details, other.Details)) return false;
      if (!object.Equals(AggregateRating, other.AggregateRating)) return false;
      if (!object.Equals(RelatedLinks, other.RelatedLinks)) return false;
      if (DetailsUrl != other.DetailsUrl) return false;
      if (ShareUrl != other.ShareUrl) return false;
      if (ReviewsUrl != other.ReviewsUrl) return false;
      if (BackendUrl != other.BackendUrl) return false;
      if (PurchaseDetailsUrl != other.PurchaseDetailsUrl) return false;
      if (DetailsReusable != other.DetailsReusable) return false;
      if (Subtitle != other.Subtitle) return false;
      if (!object.Equals(Unknown25, other.Unknown25)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Docid.Length != 0) hash ^= Docid.GetHashCode();
      if (BackendDocid.Length != 0) hash ^= BackendDocid.GetHashCode();
      if (DocType != 0) hash ^= DocType.GetHashCode();
      if (BackendId != 0) hash ^= BackendId.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Creator.Length != 0) hash ^= Creator.GetHashCode();
      if (DescriptionHtml.Length != 0) hash ^= DescriptionHtml.GetHashCode();
      hash ^= offer_.GetHashCode();
      if (availability_ != null) hash ^= Availability.GetHashCode();
      hash ^= image_.GetHashCode();
      hash ^= child_.GetHashCode();
      if (containerMetadata_ != null) hash ^= ContainerMetadata.GetHashCode();
      if (details_ != null) hash ^= Details.GetHashCode();
      if (aggregateRating_ != null) hash ^= AggregateRating.GetHashCode();
      if (relatedLinks_ != null) hash ^= RelatedLinks.GetHashCode();
      if (DetailsUrl.Length != 0) hash ^= DetailsUrl.GetHashCode();
      if (ShareUrl.Length != 0) hash ^= ShareUrl.GetHashCode();
      if (ReviewsUrl.Length != 0) hash ^= ReviewsUrl.GetHashCode();
      if (BackendUrl.Length != 0) hash ^= BackendUrl.GetHashCode();
      if (PurchaseDetailsUrl.Length != 0) hash ^= PurchaseDetailsUrl.GetHashCode();
      if (DetailsReusable != false) hash ^= DetailsReusable.GetHashCode();
      if (Subtitle.Length != 0) hash ^= Subtitle.GetHashCode();
      if (unknown25_ != null) hash ^= Unknown25.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Docid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Docid);
      }
      if (BackendDocid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BackendDocid);
      }
      if (DocType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DocType);
      }
      if (BackendId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BackendId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Title);
      }
      if (Creator.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Creator);
      }
      if (DescriptionHtml.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(DescriptionHtml);
      }
      offer_.WriteTo(output, _repeated_offer_codec);
      if (availability_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Availability);
      }
      image_.WriteTo(output, _repeated_image_codec);
      child_.WriteTo(output, _repeated_child_codec);
      if (containerMetadata_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ContainerMetadata);
      }
      if (details_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Details);
      }
      if (aggregateRating_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(AggregateRating);
      }
      if (relatedLinks_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(RelatedLinks);
      }
      if (DetailsUrl.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(DetailsUrl);
      }
      if (ShareUrl.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(ShareUrl);
      }
      if (ReviewsUrl.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(ReviewsUrl);
      }
      if (BackendUrl.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(BackendUrl);
      }
      if (PurchaseDetailsUrl.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(PurchaseDetailsUrl);
      }
      if (DetailsReusable != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(DetailsReusable);
      }
      if (Subtitle.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(Subtitle);
      }
      if (unknown25_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(Unknown25);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Docid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Docid);
      }
      if (BackendDocid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BackendDocid);
      }
      if (DocType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DocType);
      }
      if (BackendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BackendId);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Creator.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Creator);
      }
      if (DescriptionHtml.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionHtml);
      }
      size += offer_.CalculateSize(_repeated_offer_codec);
      if (availability_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Availability);
      }
      size += image_.CalculateSize(_repeated_image_codec);
      size += child_.CalculateSize(_repeated_child_codec);
      if (containerMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContainerMetadata);
      }
      if (details_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Details);
      }
      if (aggregateRating_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AggregateRating);
      }
      if (relatedLinks_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RelatedLinks);
      }
      if (DetailsUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DetailsUrl);
      }
      if (ShareUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ShareUrl);
      }
      if (ReviewsUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ReviewsUrl);
      }
      if (BackendUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BackendUrl);
      }
      if (PurchaseDetailsUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PurchaseDetailsUrl);
      }
      if (DetailsReusable != false) {
        size += 2 + 1;
      }
      if (Subtitle.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Subtitle);
      }
      if (unknown25_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Unknown25);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DocV2 other) {
      if (other == null) {
        return;
      }
      if (other.Docid.Length != 0) {
        Docid = other.Docid;
      }
      if (other.BackendDocid.Length != 0) {
        BackendDocid = other.BackendDocid;
      }
      if (other.DocType != 0) {
        DocType = other.DocType;
      }
      if (other.BackendId != 0) {
        BackendId = other.BackendId;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Creator.Length != 0) {
        Creator = other.Creator;
      }
      if (other.DescriptionHtml.Length != 0) {
        DescriptionHtml = other.DescriptionHtml;
      }
      offer_.Add(other.offer_);
      if (other.availability_ != null) {
        if (availability_ == null) {
          availability_ = new global::GooglePlayStore.Availability();
        }
        Availability.MergeFrom(other.Availability);
      }
      image_.Add(other.image_);
      child_.Add(other.child_);
      if (other.containerMetadata_ != null) {
        if (containerMetadata_ == null) {
          containerMetadata_ = new global::GooglePlayStore.ContainerMetadata();
        }
        ContainerMetadata.MergeFrom(other.ContainerMetadata);
      }
      if (other.details_ != null) {
        if (details_ == null) {
          details_ = new global::GooglePlayStore.DocumentDetails();
        }
        Details.MergeFrom(other.Details);
      }
      if (other.aggregateRating_ != null) {
        if (aggregateRating_ == null) {
          aggregateRating_ = new global::GooglePlayStore.AggregateRating();
        }
        AggregateRating.MergeFrom(other.AggregateRating);
      }
      if (other.relatedLinks_ != null) {
        if (relatedLinks_ == null) {
          relatedLinks_ = new global::GooglePlayStore.RelatedLinks();
        }
        RelatedLinks.MergeFrom(other.RelatedLinks);
      }
      if (other.DetailsUrl.Length != 0) {
        DetailsUrl = other.DetailsUrl;
      }
      if (other.ShareUrl.Length != 0) {
        ShareUrl = other.ShareUrl;
      }
      if (other.ReviewsUrl.Length != 0) {
        ReviewsUrl = other.ReviewsUrl;
      }
      if (other.BackendUrl.Length != 0) {
        BackendUrl = other.BackendUrl;
      }
      if (other.PurchaseDetailsUrl.Length != 0) {
        PurchaseDetailsUrl = other.PurchaseDetailsUrl;
      }
      if (other.DetailsReusable != false) {
        DetailsReusable = other.DetailsReusable;
      }
      if (other.Subtitle.Length != 0) {
        Subtitle = other.Subtitle;
      }
      if (other.unknown25_ != null) {
        if (unknown25_ == null) {
          unknown25_ = new global::GooglePlayStore.Unknown25();
        }
        Unknown25.MergeFrom(other.Unknown25);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Docid = input.ReadString();
            break;
          }
          case 18: {
            BackendDocid = input.ReadString();
            break;
          }
          case 24: {
            DocType = input.ReadInt32();
            break;
          }
          case 32: {
            BackendId = input.ReadInt32();
            break;
          }
          case 42: {
            Title = input.ReadString();
            break;
          }
          case 50: {
            Creator = input.ReadString();
            break;
          }
          case 58: {
            DescriptionHtml = input.ReadString();
            break;
          }
          case 66: {
            offer_.AddEntriesFrom(input, _repeated_offer_codec);
            break;
          }
          case 74: {
            if (availability_ == null) {
              availability_ = new global::GooglePlayStore.Availability();
            }
            input.ReadMessage(availability_);
            break;
          }
          case 82: {
            image_.AddEntriesFrom(input, _repeated_image_codec);
            break;
          }
          case 90: {
            child_.AddEntriesFrom(input, _repeated_child_codec);
            break;
          }
          case 98: {
            if (containerMetadata_ == null) {
              containerMetadata_ = new global::GooglePlayStore.ContainerMetadata();
            }
            input.ReadMessage(containerMetadata_);
            break;
          }
          case 106: {
            if (details_ == null) {
              details_ = new global::GooglePlayStore.DocumentDetails();
            }
            input.ReadMessage(details_);
            break;
          }
          case 114: {
            if (aggregateRating_ == null) {
              aggregateRating_ = new global::GooglePlayStore.AggregateRating();
            }
            input.ReadMessage(aggregateRating_);
            break;
          }
          case 122: {
            if (relatedLinks_ == null) {
              relatedLinks_ = new global::GooglePlayStore.RelatedLinks();
            }
            input.ReadMessage(relatedLinks_);
            break;
          }
          case 130: {
            DetailsUrl = input.ReadString();
            break;
          }
          case 138: {
            ShareUrl = input.ReadString();
            break;
          }
          case 146: {
            ReviewsUrl = input.ReadString();
            break;
          }
          case 154: {
            BackendUrl = input.ReadString();
            break;
          }
          case 162: {
            PurchaseDetailsUrl = input.ReadString();
            break;
          }
          case 168: {
            DetailsReusable = input.ReadBool();
            break;
          }
          case 178: {
            Subtitle = input.ReadString();
            break;
          }
          case 202: {
            if (unknown25_ == null) {
              unknown25_ = new global::GooglePlayStore.Unknown25();
            }
            input.ReadMessage(unknown25_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Unknown25 : pb::IMessage<Unknown25> {
    private static readonly pb::MessageParser<Unknown25> _parser = new pb::MessageParser<Unknown25>(() => new Unknown25());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Unknown25> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unknown25() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unknown25(Unknown25 other) : this() {
      item_ = other.item_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unknown25 Clone() {
      return new Unknown25(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Unknown25Item> _repeated_item_codec
        = pb::FieldCodec.ForMessage(18, global::GooglePlayStore.Unknown25Item.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Unknown25Item> item_ = new pbc::RepeatedField<global::GooglePlayStore.Unknown25Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Unknown25Item> Item {
      get { return item_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Unknown25);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Unknown25 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!item_.Equals(other.item_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= item_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      item_.WriteTo(output, _repeated_item_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += item_.CalculateSize(_repeated_item_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Unknown25 other) {
      if (other == null) {
        return;
      }
      item_.Add(other.item_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            item_.AddEntriesFrom(input, _repeated_item_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Unknown25Item : pb::IMessage<Unknown25Item> {
    private static readonly pb::MessageParser<Unknown25Item> _parser = new pb::MessageParser<Unknown25Item>(() => new Unknown25Item());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Unknown25Item> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unknown25Item() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unknown25Item(Unknown25Item other) : this() {
      label_ = other.label_;
      Container = other.container_ != null ? other.Container.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unknown25Item Clone() {
      return new Unknown25Item(this);
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 1;
    private string label_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "container" field.</summary>
    public const int ContainerFieldNumber = 3;
    private global::GooglePlayStore.Unknown25Container container_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Unknown25Container Container {
      get { return container_; }
      set {
        container_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Unknown25Item);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Unknown25Item other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Label != other.Label) return false;
      if (!object.Equals(Container, other.Container)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      if (container_ != null) hash ^= Container.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Label.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Label);
      }
      if (container_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Container);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (container_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Container);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Unknown25Item other) {
      if (other == null) {
        return;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      if (other.container_ != null) {
        if (container_ == null) {
          container_ = new global::GooglePlayStore.Unknown25Container();
        }
        Container.MergeFrom(other.Container);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Label = input.ReadString();
            break;
          }
          case 26: {
            if (container_ == null) {
              container_ = new global::GooglePlayStore.Unknown25Container();
            }
            input.ReadMessage(container_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Unknown25Container : pb::IMessage<Unknown25Container> {
    private static readonly pb::MessageParser<Unknown25Container> _parser = new pb::MessageParser<Unknown25Container>(() => new Unknown25Container());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Unknown25Container> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unknown25Container() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unknown25Container(Unknown25Container other) : this() {
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unknown25Container Clone() {
      return new Unknown25Container(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Unknown25Container);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Unknown25Container other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Unknown25Container other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RelatedLinks : pb::IMessage<RelatedLinks> {
    private static readonly pb::MessageParser<RelatedLinks> _parser = new pb::MessageParser<RelatedLinks>(() => new RelatedLinks());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RelatedLinks> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedLinks() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedLinks(RelatedLinks other) : this() {
      Unknown1 = other.unknown1_ != null ? other.Unknown1.Clone() : null;
      privacyPolicyUrl_ = other.privacyPolicyUrl_;
      YouMightAlsoLike = other.youMightAlsoLike_ != null ? other.YouMightAlsoLike.Clone() : null;
      Rated = other.rated_ != null ? other.Rated.Clone() : null;
      relatedLinks_ = other.relatedLinks_.Clone();
      CategoryInfo = other.categoryInfo_ != null ? other.CategoryInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedLinks Clone() {
      return new RelatedLinks(this);
    }

    /// <summary>Field number for the "unknown1" field.</summary>
    public const int Unknown1FieldNumber = 10;
    private global::GooglePlayStore.RelatedLinksUnknown1 unknown1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.RelatedLinksUnknown1 Unknown1 {
      get { return unknown1_; }
      set {
        unknown1_ = value;
      }
    }

    /// <summary>Field number for the "privacyPolicyUrl" field.</summary>
    public const int PrivacyPolicyUrlFieldNumber = 18;
    private string privacyPolicyUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrivacyPolicyUrl {
      get { return privacyPolicyUrl_; }
      set {
        privacyPolicyUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "youMightAlsoLike" field.</summary>
    public const int YouMightAlsoLikeFieldNumber = 24;
    private global::GooglePlayStore.RelatedLink youMightAlsoLike_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.RelatedLink YouMightAlsoLike {
      get { return youMightAlsoLike_; }
      set {
        youMightAlsoLike_ = value;
      }
    }

    /// <summary>Field number for the "rated" field.</summary>
    public const int RatedFieldNumber = 29;
    private global::GooglePlayStore.Rated rated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Rated Rated {
      get { return rated_; }
      set {
        rated_ = value;
      }
    }

    /// <summary>Field number for the "relatedLinks" field.</summary>
    public const int RelatedLinks_FieldNumber = 34;
    private static readonly pb::FieldCodec<global::GooglePlayStore.RelatedLink> _repeated_relatedLinks_codec
        = pb::FieldCodec.ForMessage(274, global::GooglePlayStore.RelatedLink.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.RelatedLink> relatedLinks_ = new pbc::RepeatedField<global::GooglePlayStore.RelatedLink>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.RelatedLink> RelatedLinks_ {
      get { return relatedLinks_; }
    }

    /// <summary>Field number for the "categoryInfo" field.</summary>
    public const int CategoryInfoFieldNumber = 53;
    private global::GooglePlayStore.CategoryInfo categoryInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CategoryInfo CategoryInfo {
      get { return categoryInfo_; }
      set {
        categoryInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RelatedLinks);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RelatedLinks other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Unknown1, other.Unknown1)) return false;
      if (PrivacyPolicyUrl != other.PrivacyPolicyUrl) return false;
      if (!object.Equals(YouMightAlsoLike, other.YouMightAlsoLike)) return false;
      if (!object.Equals(Rated, other.Rated)) return false;
      if(!relatedLinks_.Equals(other.relatedLinks_)) return false;
      if (!object.Equals(CategoryInfo, other.CategoryInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (unknown1_ != null) hash ^= Unknown1.GetHashCode();
      if (PrivacyPolicyUrl.Length != 0) hash ^= PrivacyPolicyUrl.GetHashCode();
      if (youMightAlsoLike_ != null) hash ^= YouMightAlsoLike.GetHashCode();
      if (rated_ != null) hash ^= Rated.GetHashCode();
      hash ^= relatedLinks_.GetHashCode();
      if (categoryInfo_ != null) hash ^= CategoryInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (unknown1_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Unknown1);
      }
      if (PrivacyPolicyUrl.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(PrivacyPolicyUrl);
      }
      if (youMightAlsoLike_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(YouMightAlsoLike);
      }
      if (rated_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(Rated);
      }
      relatedLinks_.WriteTo(output, _repeated_relatedLinks_codec);
      if (categoryInfo_ != null) {
        output.WriteRawTag(170, 3);
        output.WriteMessage(CategoryInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (unknown1_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unknown1);
      }
      if (PrivacyPolicyUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PrivacyPolicyUrl);
      }
      if (youMightAlsoLike_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(YouMightAlsoLike);
      }
      if (rated_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Rated);
      }
      size += relatedLinks_.CalculateSize(_repeated_relatedLinks_codec);
      if (categoryInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CategoryInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RelatedLinks other) {
      if (other == null) {
        return;
      }
      if (other.unknown1_ != null) {
        if (unknown1_ == null) {
          unknown1_ = new global::GooglePlayStore.RelatedLinksUnknown1();
        }
        Unknown1.MergeFrom(other.Unknown1);
      }
      if (other.PrivacyPolicyUrl.Length != 0) {
        PrivacyPolicyUrl = other.PrivacyPolicyUrl;
      }
      if (other.youMightAlsoLike_ != null) {
        if (youMightAlsoLike_ == null) {
          youMightAlsoLike_ = new global::GooglePlayStore.RelatedLink();
        }
        YouMightAlsoLike.MergeFrom(other.YouMightAlsoLike);
      }
      if (other.rated_ != null) {
        if (rated_ == null) {
          rated_ = new global::GooglePlayStore.Rated();
        }
        Rated.MergeFrom(other.Rated);
      }
      relatedLinks_.Add(other.relatedLinks_);
      if (other.categoryInfo_ != null) {
        if (categoryInfo_ == null) {
          categoryInfo_ = new global::GooglePlayStore.CategoryInfo();
        }
        CategoryInfo.MergeFrom(other.CategoryInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 82: {
            if (unknown1_ == null) {
              unknown1_ = new global::GooglePlayStore.RelatedLinksUnknown1();
            }
            input.ReadMessage(unknown1_);
            break;
          }
          case 146: {
            PrivacyPolicyUrl = input.ReadString();
            break;
          }
          case 194: {
            if (youMightAlsoLike_ == null) {
              youMightAlsoLike_ = new global::GooglePlayStore.RelatedLink();
            }
            input.ReadMessage(youMightAlsoLike_);
            break;
          }
          case 234: {
            if (rated_ == null) {
              rated_ = new global::GooglePlayStore.Rated();
            }
            input.ReadMessage(rated_);
            break;
          }
          case 274: {
            relatedLinks_.AddEntriesFrom(input, _repeated_relatedLinks_codec);
            break;
          }
          case 426: {
            if (categoryInfo_ == null) {
              categoryInfo_ = new global::GooglePlayStore.CategoryInfo();
            }
            input.ReadMessage(categoryInfo_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RelatedLinksUnknown1 : pb::IMessage<RelatedLinksUnknown1> {
    private static readonly pb::MessageParser<RelatedLinksUnknown1> _parser = new pb::MessageParser<RelatedLinksUnknown1>(() => new RelatedLinksUnknown1());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RelatedLinksUnknown1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedLinksUnknown1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedLinksUnknown1(RelatedLinksUnknown1 other) : this() {
      Unknown2 = other.unknown2_ != null ? other.Unknown2.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedLinksUnknown1 Clone() {
      return new RelatedLinksUnknown1(this);
    }

    /// <summary>Field number for the "unknown2" field.</summary>
    public const int Unknown2FieldNumber = 2;
    private global::GooglePlayStore.RelatedLinksUnknown2 unknown2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.RelatedLinksUnknown2 Unknown2 {
      get { return unknown2_; }
      set {
        unknown2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RelatedLinksUnknown1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RelatedLinksUnknown1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Unknown2, other.Unknown2)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (unknown2_ != null) hash ^= Unknown2.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (unknown2_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Unknown2);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (unknown2_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unknown2);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RelatedLinksUnknown1 other) {
      if (other == null) {
        return;
      }
      if (other.unknown2_ != null) {
        if (unknown2_ == null) {
          unknown2_ = new global::GooglePlayStore.RelatedLinksUnknown2();
        }
        Unknown2.MergeFrom(other.Unknown2);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            if (unknown2_ == null) {
              unknown2_ = new global::GooglePlayStore.RelatedLinksUnknown2();
            }
            input.ReadMessage(unknown2_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RelatedLinksUnknown2 : pb::IMessage<RelatedLinksUnknown2> {
    private static readonly pb::MessageParser<RelatedLinksUnknown2> _parser = new pb::MessageParser<RelatedLinksUnknown2>(() => new RelatedLinksUnknown2());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RelatedLinksUnknown2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedLinksUnknown2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedLinksUnknown2(RelatedLinksUnknown2 other) : this() {
      nextPageUrl_ = other.nextPageUrl_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedLinksUnknown2 Clone() {
      return new RelatedLinksUnknown2(this);
    }

    /// <summary>Field number for the "nextPageUrl" field.</summary>
    public const int NextPageUrlFieldNumber = 3;
    private string nextPageUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageUrl {
      get { return nextPageUrl_; }
      set {
        nextPageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RelatedLinksUnknown2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RelatedLinksUnknown2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NextPageUrl != other.NextPageUrl) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NextPageUrl.Length != 0) hash ^= NextPageUrl.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NextPageUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NextPageUrl);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NextPageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageUrl);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RelatedLinksUnknown2 other) {
      if (other == null) {
        return;
      }
      if (other.NextPageUrl.Length != 0) {
        NextPageUrl = other.NextPageUrl;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 26: {
            NextPageUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Rated : pb::IMessage<Rated> {
    private static readonly pb::MessageParser<Rated> _parser = new pb::MessageParser<Rated>(() => new Rated());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Rated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rated(Rated other) : this() {
      label_ = other.label_;
      Image = other.image_ != null ? other.Image.Clone() : null;
      learnMoreHtmlLink_ = other.learnMoreHtmlLink_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rated Clone() {
      return new Rated(this);
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 1;
    private string label_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 2;
    private global::GooglePlayStore.Image image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Image Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    /// <summary>Field number for the "learnMoreHtmlLink" field.</summary>
    public const int LearnMoreHtmlLinkFieldNumber = 4;
    private string learnMoreHtmlLink_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LearnMoreHtmlLink {
      get { return learnMoreHtmlLink_; }
      set {
        learnMoreHtmlLink_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Rated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Rated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Label != other.Label) return false;
      if (!object.Equals(Image, other.Image)) return false;
      if (LearnMoreHtmlLink != other.LearnMoreHtmlLink) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      if (image_ != null) hash ^= Image.GetHashCode();
      if (LearnMoreHtmlLink.Length != 0) hash ^= LearnMoreHtmlLink.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Label.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Label);
      }
      if (image_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Image);
      }
      if (LearnMoreHtmlLink.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LearnMoreHtmlLink);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (LearnMoreHtmlLink.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LearnMoreHtmlLink);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Rated other) {
      if (other == null) {
        return;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      if (other.image_ != null) {
        if (image_ == null) {
          image_ = new global::GooglePlayStore.Image();
        }
        Image.MergeFrom(other.Image);
      }
      if (other.LearnMoreHtmlLink.Length != 0) {
        LearnMoreHtmlLink = other.LearnMoreHtmlLink;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Label = input.ReadString();
            break;
          }
          case 18: {
            if (image_ == null) {
              image_ = new global::GooglePlayStore.Image();
            }
            input.ReadMessage(image_);
            break;
          }
          case 34: {
            LearnMoreHtmlLink = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RelatedLink : pb::IMessage<RelatedLink> {
    private static readonly pb::MessageParser<RelatedLink> _parser = new pb::MessageParser<RelatedLink>(() => new RelatedLink());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RelatedLink> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedLink() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedLink(RelatedLink other) : this() {
      label_ = other.label_;
      url1_ = other.url1_;
      url2_ = other.url2_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedLink Clone() {
      return new RelatedLink(this);
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 1;
    private string label_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url1" field.</summary>
    public const int Url1FieldNumber = 2;
    private string url1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url1 {
      get { return url1_; }
      set {
        url1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url2" field.</summary>
    public const int Url2FieldNumber = 3;
    private string url2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url2 {
      get { return url2_; }
      set {
        url2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RelatedLink);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RelatedLink other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Label != other.Label) return false;
      if (Url1 != other.Url1) return false;
      if (Url2 != other.Url2) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      if (Url1.Length != 0) hash ^= Url1.GetHashCode();
      if (Url2.Length != 0) hash ^= Url2.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Label.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Label);
      }
      if (Url1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Url1);
      }
      if (Url2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Url2);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (Url1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url1);
      }
      if (Url2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url2);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RelatedLink other) {
      if (other == null) {
        return;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      if (other.Url1.Length != 0) {
        Url1 = other.Url1;
      }
      if (other.Url2.Length != 0) {
        Url2 = other.Url2;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Label = input.ReadString();
            break;
          }
          case 18: {
            Url1 = input.ReadString();
            break;
          }
          case 26: {
            Url2 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CategoryInfo : pb::IMessage<CategoryInfo> {
    private static readonly pb::MessageParser<CategoryInfo> _parser = new pb::MessageParser<CategoryInfo>(() => new CategoryInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CategoryInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryInfo(CategoryInfo other) : this() {
      appType_ = other.appType_;
      appCategory_ = other.appCategory_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryInfo Clone() {
      return new CategoryInfo(this);
    }

    /// <summary>Field number for the "appType" field.</summary>
    public const int AppTypeFieldNumber = 1;
    private string appType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppType {
      get { return appType_; }
      set {
        appType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "appCategory" field.</summary>
    public const int AppCategoryFieldNumber = 2;
    private string appCategory_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppCategory {
      get { return appCategory_; }
      set {
        appCategory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CategoryInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CategoryInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppType != other.AppType) return false;
      if (AppCategory != other.AppCategory) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppType.Length != 0) hash ^= AppType.GetHashCode();
      if (AppCategory.Length != 0) hash ^= AppCategory.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppType);
      }
      if (AppCategory.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppCategory);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppType);
      }
      if (AppCategory.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppCategory);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CategoryInfo other) {
      if (other == null) {
        return;
      }
      if (other.AppType.Length != 0) {
        AppType = other.AppType;
      }
      if (other.AppCategory.Length != 0) {
        AppCategory = other.AppCategory;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            AppType = input.ReadString();
            break;
          }
          case 18: {
            AppCategory = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EncryptedSubscriberInfo : pb::IMessage<EncryptedSubscriberInfo> {
    private static readonly pb::MessageParser<EncryptedSubscriberInfo> _parser = new pb::MessageParser<EncryptedSubscriberInfo>(() => new EncryptedSubscriberInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EncryptedSubscriberInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptedSubscriberInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptedSubscriberInfo(EncryptedSubscriberInfo other) : this() {
      data_ = other.data_;
      encryptedKey_ = other.encryptedKey_;
      signature_ = other.signature_;
      initVector_ = other.initVector_;
      googleKeyVersion_ = other.googleKeyVersion_;
      carrierKeyVersion_ = other.carrierKeyVersion_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptedSubscriberInfo Clone() {
      return new EncryptedSubscriberInfo(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private string data_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "encryptedKey" field.</summary>
    public const int EncryptedKeyFieldNumber = 2;
    private string encryptedKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EncryptedKey {
      get { return encryptedKey_; }
      set {
        encryptedKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 3;
    private string signature_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "initVector" field.</summary>
    public const int InitVectorFieldNumber = 4;
    private string initVector_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InitVector {
      get { return initVector_; }
      set {
        initVector_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "googleKeyVersion" field.</summary>
    public const int GoogleKeyVersionFieldNumber = 5;
    private int googleKeyVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoogleKeyVersion {
      get { return googleKeyVersion_; }
      set {
        googleKeyVersion_ = value;
      }
    }

    /// <summary>Field number for the "carrierKeyVersion" field.</summary>
    public const int CarrierKeyVersionFieldNumber = 6;
    private int carrierKeyVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CarrierKeyVersion {
      get { return carrierKeyVersion_; }
      set {
        carrierKeyVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EncryptedSubscriberInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EncryptedSubscriberInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      if (EncryptedKey != other.EncryptedKey) return false;
      if (Signature != other.Signature) return false;
      if (InitVector != other.InitVector) return false;
      if (GoogleKeyVersion != other.GoogleKeyVersion) return false;
      if (CarrierKeyVersion != other.CarrierKeyVersion) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (EncryptedKey.Length != 0) hash ^= EncryptedKey.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (InitVector.Length != 0) hash ^= InitVector.GetHashCode();
      if (GoogleKeyVersion != 0) hash ^= GoogleKeyVersion.GetHashCode();
      if (CarrierKeyVersion != 0) hash ^= CarrierKeyVersion.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data);
      }
      if (EncryptedKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EncryptedKey);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Signature);
      }
      if (InitVector.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(InitVector);
      }
      if (GoogleKeyVersion != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(GoogleKeyVersion);
      }
      if (CarrierKeyVersion != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CarrierKeyVersion);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (EncryptedKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EncryptedKey);
      }
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
      }
      if (InitVector.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InitVector);
      }
      if (GoogleKeyVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoogleKeyVersion);
      }
      if (CarrierKeyVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CarrierKeyVersion);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EncryptedSubscriberInfo other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.EncryptedKey.Length != 0) {
        EncryptedKey = other.EncryptedKey;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      if (other.InitVector.Length != 0) {
        InitVector = other.InitVector;
      }
      if (other.GoogleKeyVersion != 0) {
        GoogleKeyVersion = other.GoogleKeyVersion;
      }
      if (other.CarrierKeyVersion != 0) {
        CarrierKeyVersion = other.CarrierKeyVersion;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Data = input.ReadString();
            break;
          }
          case 18: {
            EncryptedKey = input.ReadString();
            break;
          }
          case 26: {
            Signature = input.ReadString();
            break;
          }
          case 34: {
            InitVector = input.ReadString();
            break;
          }
          case 40: {
            GoogleKeyVersion = input.ReadInt32();
            break;
          }
          case 48: {
            CarrierKeyVersion = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Availability : pb::IMessage<Availability> {
    private static readonly pb::MessageParser<Availability> _parser = new pb::MessageParser<Availability>(() => new Availability());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Availability> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Availability() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Availability(Availability other) : this() {
      restriction_ = other.restriction_;
      offerType_ = other.offerType_;
      Rule = other.rule_ != null ? other.Rule.Clone() : null;
      availableIfOwned_ = other.availableIfOwned_;
      install_ = other.install_.Clone();
      FilterInfo = other.filterInfo_ != null ? other.FilterInfo.Clone() : null;
      OwnershipInfo = other.ownershipInfo_ != null ? other.OwnershipInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Availability Clone() {
      return new Availability(this);
    }

    /// <summary>Field number for the "restriction" field.</summary>
    public const int RestrictionFieldNumber = 5;
    private int restriction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Restriction {
      get { return restriction_; }
      set {
        restriction_ = value;
      }
    }

    /// <summary>Field number for the "offerType" field.</summary>
    public const int OfferTypeFieldNumber = 6;
    private int offerType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OfferType {
      get { return offerType_; }
      set {
        offerType_ = value;
      }
    }

    /// <summary>Field number for the "rule" field.</summary>
    public const int RuleFieldNumber = 7;
    private global::GooglePlayStore.Rule rule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Rule Rule {
      get { return rule_; }
      set {
        rule_ = value;
      }
    }

    /// <summary>Field number for the "availableIfOwned" field.</summary>
    public const int AvailableIfOwnedFieldNumber = 13;
    private bool availableIfOwned_;
    /// <summary>
    ///
    ///repeated group PerDeviceAvailabilityRestriction = 9 {
    ///fixed64 androidId = 10;
    ///int32 deviceRestriction = 11;
    ///int64 channelId = 12;
    ///FilterEvaluationInfo filterInfo = 15;
    ///}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AvailableIfOwned {
      get { return availableIfOwned_; }
      set {
        availableIfOwned_ = value;
      }
    }

    /// <summary>Field number for the "install" field.</summary>
    public const int InstallFieldNumber = 14;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Install> _repeated_install_codec
        = pb::FieldCodec.ForMessage(114, global::GooglePlayStore.Install.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Install> install_ = new pbc::RepeatedField<global::GooglePlayStore.Install>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Install> Install {
      get { return install_; }
    }

    /// <summary>Field number for the "filterInfo" field.</summary>
    public const int FilterInfoFieldNumber = 16;
    private global::GooglePlayStore.FilterEvaluationInfo filterInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.FilterEvaluationInfo FilterInfo {
      get { return filterInfo_; }
      set {
        filterInfo_ = value;
      }
    }

    /// <summary>Field number for the "ownershipInfo" field.</summary>
    public const int OwnershipInfoFieldNumber = 17;
    private global::GooglePlayStore.OwnershipInfo ownershipInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.OwnershipInfo OwnershipInfo {
      get { return ownershipInfo_; }
      set {
        ownershipInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Availability);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Availability other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Restriction != other.Restriction) return false;
      if (OfferType != other.OfferType) return false;
      if (!object.Equals(Rule, other.Rule)) return false;
      if (AvailableIfOwned != other.AvailableIfOwned) return false;
      if(!install_.Equals(other.install_)) return false;
      if (!object.Equals(FilterInfo, other.FilterInfo)) return false;
      if (!object.Equals(OwnershipInfo, other.OwnershipInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Restriction != 0) hash ^= Restriction.GetHashCode();
      if (OfferType != 0) hash ^= OfferType.GetHashCode();
      if (rule_ != null) hash ^= Rule.GetHashCode();
      if (AvailableIfOwned != false) hash ^= AvailableIfOwned.GetHashCode();
      hash ^= install_.GetHashCode();
      if (filterInfo_ != null) hash ^= FilterInfo.GetHashCode();
      if (ownershipInfo_ != null) hash ^= OwnershipInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Restriction != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Restriction);
      }
      if (OfferType != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(OfferType);
      }
      if (rule_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Rule);
      }
      if (AvailableIfOwned != false) {
        output.WriteRawTag(104);
        output.WriteBool(AvailableIfOwned);
      }
      install_.WriteTo(output, _repeated_install_codec);
      if (filterInfo_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(FilterInfo);
      }
      if (ownershipInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(OwnershipInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Restriction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Restriction);
      }
      if (OfferType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OfferType);
      }
      if (rule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rule);
      }
      if (AvailableIfOwned != false) {
        size += 1 + 1;
      }
      size += install_.CalculateSize(_repeated_install_codec);
      if (filterInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FilterInfo);
      }
      if (ownershipInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OwnershipInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Availability other) {
      if (other == null) {
        return;
      }
      if (other.Restriction != 0) {
        Restriction = other.Restriction;
      }
      if (other.OfferType != 0) {
        OfferType = other.OfferType;
      }
      if (other.rule_ != null) {
        if (rule_ == null) {
          rule_ = new global::GooglePlayStore.Rule();
        }
        Rule.MergeFrom(other.Rule);
      }
      if (other.AvailableIfOwned != false) {
        AvailableIfOwned = other.AvailableIfOwned;
      }
      install_.Add(other.install_);
      if (other.filterInfo_ != null) {
        if (filterInfo_ == null) {
          filterInfo_ = new global::GooglePlayStore.FilterEvaluationInfo();
        }
        FilterInfo.MergeFrom(other.FilterInfo);
      }
      if (other.ownershipInfo_ != null) {
        if (ownershipInfo_ == null) {
          ownershipInfo_ = new global::GooglePlayStore.OwnershipInfo();
        }
        OwnershipInfo.MergeFrom(other.OwnershipInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 40: {
            Restriction = input.ReadInt32();
            break;
          }
          case 48: {
            OfferType = input.ReadInt32();
            break;
          }
          case 58: {
            if (rule_ == null) {
              rule_ = new global::GooglePlayStore.Rule();
            }
            input.ReadMessage(rule_);
            break;
          }
          case 104: {
            AvailableIfOwned = input.ReadBool();
            break;
          }
          case 114: {
            install_.AddEntriesFrom(input, _repeated_install_codec);
            break;
          }
          case 130: {
            if (filterInfo_ == null) {
              filterInfo_ = new global::GooglePlayStore.FilterEvaluationInfo();
            }
            input.ReadMessage(filterInfo_);
            break;
          }
          case 138: {
            if (ownershipInfo_ == null) {
              ownershipInfo_ = new global::GooglePlayStore.OwnershipInfo();
            }
            input.ReadMessage(ownershipInfo_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FilterEvaluationInfo : pb::IMessage<FilterEvaluationInfo> {
    private static readonly pb::MessageParser<FilterEvaluationInfo> _parser = new pb::MessageParser<FilterEvaluationInfo>(() => new FilterEvaluationInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FilterEvaluationInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterEvaluationInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterEvaluationInfo(FilterEvaluationInfo other) : this() {
      ruleEvaluation_ = other.ruleEvaluation_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterEvaluationInfo Clone() {
      return new FilterEvaluationInfo(this);
    }

    /// <summary>Field number for the "ruleEvaluation" field.</summary>
    public const int RuleEvaluationFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GooglePlayStore.RuleEvaluation> _repeated_ruleEvaluation_codec
        = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.RuleEvaluation.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.RuleEvaluation> ruleEvaluation_ = new pbc::RepeatedField<global::GooglePlayStore.RuleEvaluation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.RuleEvaluation> RuleEvaluation {
      get { return ruleEvaluation_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FilterEvaluationInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FilterEvaluationInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ruleEvaluation_.Equals(other.ruleEvaluation_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ruleEvaluation_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ruleEvaluation_.WriteTo(output, _repeated_ruleEvaluation_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ruleEvaluation_.CalculateSize(_repeated_ruleEvaluation_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FilterEvaluationInfo other) {
      if (other == null) {
        return;
      }
      ruleEvaluation_.Add(other.ruleEvaluation_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ruleEvaluation_.AddEntriesFrom(input, _repeated_ruleEvaluation_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Rule : pb::IMessage<Rule> {
    private static readonly pb::MessageParser<Rule> _parser = new pb::MessageParser<Rule>(() => new Rule());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Rule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rule(Rule other) : this() {
      negate_ = other.negate_;
      operator_ = other.operator_;
      key_ = other.key_;
      stringArg_ = other.stringArg_.Clone();
      longArg_ = other.longArg_.Clone();
      doubleArg_ = other.doubleArg_.Clone();
      subrule_ = other.subrule_.Clone();
      responseCode_ = other.responseCode_;
      comment_ = other.comment_;
      stringArgHash_ = other.stringArgHash_.Clone();
      constArg_ = other.constArg_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rule Clone() {
      return new Rule(this);
    }

    /// <summary>Field number for the "negate" field.</summary>
    public const int NegateFieldNumber = 1;
    private bool negate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Negate {
      get { return negate_; }
      set {
        negate_ = value;
      }
    }

    /// <summary>Field number for the "operator" field.</summary>
    public const int OperatorFieldNumber = 2;
    private int operator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Operator {
      get { return operator_; }
      set {
        operator_ = value;
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 3;
    private int key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "stringArg" field.</summary>
    public const int StringArgFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_stringArg_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> stringArg_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> StringArg {
      get { return stringArg_; }
    }

    /// <summary>Field number for the "longArg" field.</summary>
    public const int LongArgFieldNumber = 5;
    private static readonly pb::FieldCodec<long> _repeated_longArg_codec
        = pb::FieldCodec.ForInt64(42);
    private readonly pbc::RepeatedField<long> longArg_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> LongArg {
      get { return longArg_; }
    }

    /// <summary>Field number for the "doubleArg" field.</summary>
    public const int DoubleArgFieldNumber = 6;
    private static readonly pb::FieldCodec<double> _repeated_doubleArg_codec
        = pb::FieldCodec.ForDouble(50);
    private readonly pbc::RepeatedField<double> doubleArg_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> DoubleArg {
      get { return doubleArg_; }
    }

    /// <summary>Field number for the "subrule" field.</summary>
    public const int SubruleFieldNumber = 7;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Rule> _repeated_subrule_codec
        = pb::FieldCodec.ForMessage(58, global::GooglePlayStore.Rule.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Rule> subrule_ = new pbc::RepeatedField<global::GooglePlayStore.Rule>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Rule> Subrule {
      get { return subrule_; }
    }

    /// <summary>Field number for the "responseCode" field.</summary>
    public const int ResponseCodeFieldNumber = 8;
    private int responseCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ResponseCode {
      get { return responseCode_; }
      set {
        responseCode_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 9;
    private string comment_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stringArgHash" field.</summary>
    public const int StringArgHashFieldNumber = 10;
    private static readonly pb::FieldCodec<ulong> _repeated_stringArgHash_codec
        = pb::FieldCodec.ForFixed64(82);
    private readonly pbc::RepeatedField<ulong> stringArgHash_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> StringArgHash {
      get { return stringArgHash_; }
    }

    /// <summary>Field number for the "constArg" field.</summary>
    public const int ConstArgFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_constArg_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> constArg_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ConstArg {
      get { return constArg_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Rule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Rule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Negate != other.Negate) return false;
      if (Operator != other.Operator) return false;
      if (Key != other.Key) return false;
      if(!stringArg_.Equals(other.stringArg_)) return false;
      if(!longArg_.Equals(other.longArg_)) return false;
      if(!doubleArg_.Equals(other.doubleArg_)) return false;
      if(!subrule_.Equals(other.subrule_)) return false;
      if (ResponseCode != other.ResponseCode) return false;
      if (Comment != other.Comment) return false;
      if(!stringArgHash_.Equals(other.stringArgHash_)) return false;
      if(!constArg_.Equals(other.constArg_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Negate != false) hash ^= Negate.GetHashCode();
      if (Operator != 0) hash ^= Operator.GetHashCode();
      if (Key != 0) hash ^= Key.GetHashCode();
      hash ^= stringArg_.GetHashCode();
      hash ^= longArg_.GetHashCode();
      hash ^= doubleArg_.GetHashCode();
      hash ^= subrule_.GetHashCode();
      if (ResponseCode != 0) hash ^= ResponseCode.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      hash ^= stringArgHash_.GetHashCode();
      hash ^= constArg_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Negate != false) {
        output.WriteRawTag(8);
        output.WriteBool(Negate);
      }
      if (Operator != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Operator);
      }
      if (Key != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Key);
      }
      stringArg_.WriteTo(output, _repeated_stringArg_codec);
      longArg_.WriteTo(output, _repeated_longArg_codec);
      doubleArg_.WriteTo(output, _repeated_doubleArg_codec);
      subrule_.WriteTo(output, _repeated_subrule_codec);
      if (ResponseCode != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ResponseCode);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Comment);
      }
      stringArgHash_.WriteTo(output, _repeated_stringArgHash_codec);
      constArg_.WriteTo(output, _repeated_constArg_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Negate != false) {
        size += 1 + 1;
      }
      if (Operator != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Operator);
      }
      if (Key != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Key);
      }
      size += stringArg_.CalculateSize(_repeated_stringArg_codec);
      size += longArg_.CalculateSize(_repeated_longArg_codec);
      size += doubleArg_.CalculateSize(_repeated_doubleArg_codec);
      size += subrule_.CalculateSize(_repeated_subrule_codec);
      if (ResponseCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResponseCode);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      size += stringArgHash_.CalculateSize(_repeated_stringArgHash_codec);
      size += constArg_.CalculateSize(_repeated_constArg_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Rule other) {
      if (other == null) {
        return;
      }
      if (other.Negate != false) {
        Negate = other.Negate;
      }
      if (other.Operator != 0) {
        Operator = other.Operator;
      }
      if (other.Key != 0) {
        Key = other.Key;
      }
      stringArg_.Add(other.stringArg_);
      longArg_.Add(other.longArg_);
      doubleArg_.Add(other.doubleArg_);
      subrule_.Add(other.subrule_);
      if (other.ResponseCode != 0) {
        ResponseCode = other.ResponseCode;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      stringArgHash_.Add(other.stringArgHash_);
      constArg_.Add(other.constArg_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Negate = input.ReadBool();
            break;
          }
          case 16: {
            Operator = input.ReadInt32();
            break;
          }
          case 24: {
            Key = input.ReadInt32();
            break;
          }
          case 34: {
            stringArg_.AddEntriesFrom(input, _repeated_stringArg_codec);
            break;
          }
          case 42:
          case 40: {
            longArg_.AddEntriesFrom(input, _repeated_longArg_codec);
            break;
          }
          case 50:
          case 49: {
            doubleArg_.AddEntriesFrom(input, _repeated_doubleArg_codec);
            break;
          }
          case 58: {
            subrule_.AddEntriesFrom(input, _repeated_subrule_codec);
            break;
          }
          case 64: {
            ResponseCode = input.ReadInt32();
            break;
          }
          case 74: {
            Comment = input.ReadString();
            break;
          }
          case 82:
          case 81: {
            stringArgHash_.AddEntriesFrom(input, _repeated_stringArgHash_codec);
            break;
          }
          case 90:
          case 88: {
            constArg_.AddEntriesFrom(input, _repeated_constArg_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RuleEvaluation : pb::IMessage<RuleEvaluation> {
    private static readonly pb::MessageParser<RuleEvaluation> _parser = new pb::MessageParser<RuleEvaluation>(() => new RuleEvaluation());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RuleEvaluation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuleEvaluation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuleEvaluation(RuleEvaluation other) : this() {
      Rule = other.rule_ != null ? other.Rule.Clone() : null;
      actualStringValue_ = other.actualStringValue_.Clone();
      actualLongValue_ = other.actualLongValue_.Clone();
      actualBoolValue_ = other.actualBoolValue_.Clone();
      actualDoubleValue_ = other.actualDoubleValue_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuleEvaluation Clone() {
      return new RuleEvaluation(this);
    }

    /// <summary>Field number for the "rule" field.</summary>
    public const int RuleFieldNumber = 1;
    private global::GooglePlayStore.Rule rule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Rule Rule {
      get { return rule_; }
      set {
        rule_ = value;
      }
    }

    /// <summary>Field number for the "actualStringValue" field.</summary>
    public const int ActualStringValueFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_actualStringValue_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> actualStringValue_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ActualStringValue {
      get { return actualStringValue_; }
    }

    /// <summary>Field number for the "actualLongValue" field.</summary>
    public const int ActualLongValueFieldNumber = 3;
    private static readonly pb::FieldCodec<long> _repeated_actualLongValue_codec
        = pb::FieldCodec.ForInt64(26);
    private readonly pbc::RepeatedField<long> actualLongValue_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> ActualLongValue {
      get { return actualLongValue_; }
    }

    /// <summary>Field number for the "actualBoolValue" field.</summary>
    public const int ActualBoolValueFieldNumber = 4;
    private static readonly pb::FieldCodec<bool> _repeated_actualBoolValue_codec
        = pb::FieldCodec.ForBool(34);
    private readonly pbc::RepeatedField<bool> actualBoolValue_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool> ActualBoolValue {
      get { return actualBoolValue_; }
    }

    /// <summary>Field number for the "actualDoubleValue" field.</summary>
    public const int ActualDoubleValueFieldNumber = 5;
    private static readonly pb::FieldCodec<double> _repeated_actualDoubleValue_codec
        = pb::FieldCodec.ForDouble(42);
    private readonly pbc::RepeatedField<double> actualDoubleValue_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> ActualDoubleValue {
      get { return actualDoubleValue_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RuleEvaluation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RuleEvaluation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Rule, other.Rule)) return false;
      if(!actualStringValue_.Equals(other.actualStringValue_)) return false;
      if(!actualLongValue_.Equals(other.actualLongValue_)) return false;
      if(!actualBoolValue_.Equals(other.actualBoolValue_)) return false;
      if(!actualDoubleValue_.Equals(other.actualDoubleValue_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rule_ != null) hash ^= Rule.GetHashCode();
      hash ^= actualStringValue_.GetHashCode();
      hash ^= actualLongValue_.GetHashCode();
      hash ^= actualBoolValue_.GetHashCode();
      hash ^= actualDoubleValue_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (rule_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Rule);
      }
      actualStringValue_.WriteTo(output, _repeated_actualStringValue_codec);
      actualLongValue_.WriteTo(output, _repeated_actualLongValue_codec);
      actualBoolValue_.WriteTo(output, _repeated_actualBoolValue_codec);
      actualDoubleValue_.WriteTo(output, _repeated_actualDoubleValue_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rule);
      }
      size += actualStringValue_.CalculateSize(_repeated_actualStringValue_codec);
      size += actualLongValue_.CalculateSize(_repeated_actualLongValue_codec);
      size += actualBoolValue_.CalculateSize(_repeated_actualBoolValue_codec);
      size += actualDoubleValue_.CalculateSize(_repeated_actualDoubleValue_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RuleEvaluation other) {
      if (other == null) {
        return;
      }
      if (other.rule_ != null) {
        if (rule_ == null) {
          rule_ = new global::GooglePlayStore.Rule();
        }
        Rule.MergeFrom(other.Rule);
      }
      actualStringValue_.Add(other.actualStringValue_);
      actualLongValue_.Add(other.actualLongValue_);
      actualBoolValue_.Add(other.actualBoolValue_);
      actualDoubleValue_.Add(other.actualDoubleValue_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (rule_ == null) {
              rule_ = new global::GooglePlayStore.Rule();
            }
            input.ReadMessage(rule_);
            break;
          }
          case 18: {
            actualStringValue_.AddEntriesFrom(input, _repeated_actualStringValue_codec);
            break;
          }
          case 26:
          case 24: {
            actualLongValue_.AddEntriesFrom(input, _repeated_actualLongValue_codec);
            break;
          }
          case 34:
          case 32: {
            actualBoolValue_.AddEntriesFrom(input, _repeated_actualBoolValue_codec);
            break;
          }
          case 42:
          case 41: {
            actualDoubleValue_.AddEntriesFrom(input, _repeated_actualDoubleValue_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LibraryAppDetails : pb::IMessage<LibraryAppDetails> {
    private static readonly pb::MessageParser<LibraryAppDetails> _parser = new pb::MessageParser<LibraryAppDetails>(() => new LibraryAppDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LibraryAppDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryAppDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryAppDetails(LibraryAppDetails other) : this() {
      certificateHash_ = other.certificateHash_;
      refundTimeoutTimestampMsec_ = other.refundTimeoutTimestampMsec_;
      postDeliveryRefundWindowMsec_ = other.postDeliveryRefundWindowMsec_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryAppDetails Clone() {
      return new LibraryAppDetails(this);
    }

    /// <summary>Field number for the "certificateHash" field.</summary>
    public const int CertificateHashFieldNumber = 2;
    private string certificateHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CertificateHash {
      get { return certificateHash_; }
      set {
        certificateHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "refundTimeoutTimestampMsec" field.</summary>
    public const int RefundTimeoutTimestampMsecFieldNumber = 3;
    private long refundTimeoutTimestampMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RefundTimeoutTimestampMsec {
      get { return refundTimeoutTimestampMsec_; }
      set {
        refundTimeoutTimestampMsec_ = value;
      }
    }

    /// <summary>Field number for the "postDeliveryRefundWindowMsec" field.</summary>
    public const int PostDeliveryRefundWindowMsecFieldNumber = 4;
    private long postDeliveryRefundWindowMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PostDeliveryRefundWindowMsec {
      get { return postDeliveryRefundWindowMsec_; }
      set {
        postDeliveryRefundWindowMsec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LibraryAppDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LibraryAppDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CertificateHash != other.CertificateHash) return false;
      if (RefundTimeoutTimestampMsec != other.RefundTimeoutTimestampMsec) return false;
      if (PostDeliveryRefundWindowMsec != other.PostDeliveryRefundWindowMsec) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CertificateHash.Length != 0) hash ^= CertificateHash.GetHashCode();
      if (RefundTimeoutTimestampMsec != 0L) hash ^= RefundTimeoutTimestampMsec.GetHashCode();
      if (PostDeliveryRefundWindowMsec != 0L) hash ^= PostDeliveryRefundWindowMsec.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CertificateHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CertificateHash);
      }
      if (RefundTimeoutTimestampMsec != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(RefundTimeoutTimestampMsec);
      }
      if (PostDeliveryRefundWindowMsec != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(PostDeliveryRefundWindowMsec);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CertificateHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CertificateHash);
      }
      if (RefundTimeoutTimestampMsec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RefundTimeoutTimestampMsec);
      }
      if (PostDeliveryRefundWindowMsec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PostDeliveryRefundWindowMsec);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LibraryAppDetails other) {
      if (other == null) {
        return;
      }
      if (other.CertificateHash.Length != 0) {
        CertificateHash = other.CertificateHash;
      }
      if (other.RefundTimeoutTimestampMsec != 0L) {
        RefundTimeoutTimestampMsec = other.RefundTimeoutTimestampMsec;
      }
      if (other.PostDeliveryRefundWindowMsec != 0L) {
        PostDeliveryRefundWindowMsec = other.PostDeliveryRefundWindowMsec;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            CertificateHash = input.ReadString();
            break;
          }
          case 24: {
            RefundTimeoutTimestampMsec = input.ReadInt64();
            break;
          }
          case 32: {
            PostDeliveryRefundWindowMsec = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LibraryInAppDetails : pb::IMessage<LibraryInAppDetails> {
    private static readonly pb::MessageParser<LibraryInAppDetails> _parser = new pb::MessageParser<LibraryInAppDetails>(() => new LibraryInAppDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LibraryInAppDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[96]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryInAppDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryInAppDetails(LibraryInAppDetails other) : this() {
      signedPurchaseData_ = other.signedPurchaseData_;
      signature_ = other.signature_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryInAppDetails Clone() {
      return new LibraryInAppDetails(this);
    }

    /// <summary>Field number for the "signedPurchaseData" field.</summary>
    public const int SignedPurchaseDataFieldNumber = 1;
    private string signedPurchaseData_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SignedPurchaseData {
      get { return signedPurchaseData_; }
      set {
        signedPurchaseData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private string signature_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LibraryInAppDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LibraryInAppDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SignedPurchaseData != other.SignedPurchaseData) return false;
      if (Signature != other.Signature) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SignedPurchaseData.Length != 0) hash ^= SignedPurchaseData.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SignedPurchaseData.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SignedPurchaseData);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Signature);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SignedPurchaseData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SignedPurchaseData);
      }
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LibraryInAppDetails other) {
      if (other == null) {
        return;
      }
      if (other.SignedPurchaseData.Length != 0) {
        SignedPurchaseData = other.SignedPurchaseData;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SignedPurchaseData = input.ReadString();
            break;
          }
          case 18: {
            Signature = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LibraryMutation : pb::IMessage<LibraryMutation> {
    private static readonly pb::MessageParser<LibraryMutation> _parser = new pb::MessageParser<LibraryMutation>(() => new LibraryMutation());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LibraryMutation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[97]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryMutation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryMutation(LibraryMutation other) : this() {
      Docid = other.docid_ != null ? other.Docid.Clone() : null;
      offerType_ = other.offerType_;
      documentHash_ = other.documentHash_;
      deleted_ = other.deleted_;
      AppDetails = other.appDetails_ != null ? other.AppDetails.Clone() : null;
      SubscriptionDetails = other.subscriptionDetails_ != null ? other.SubscriptionDetails.Clone() : null;
      InAppDetails = other.inAppDetails_ != null ? other.InAppDetails.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryMutation Clone() {
      return new LibraryMutation(this);
    }

    /// <summary>Field number for the "docid" field.</summary>
    public const int DocidFieldNumber = 1;
    private global::GooglePlayStore.Docid docid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Docid Docid {
      get { return docid_; }
      set {
        docid_ = value;
      }
    }

    /// <summary>Field number for the "offerType" field.</summary>
    public const int OfferTypeFieldNumber = 2;
    private int offerType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OfferType {
      get { return offerType_; }
      set {
        offerType_ = value;
      }
    }

    /// <summary>Field number for the "documentHash" field.</summary>
    public const int DocumentHashFieldNumber = 3;
    private long documentHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DocumentHash {
      get { return documentHash_; }
      set {
        documentHash_ = value;
      }
    }

    /// <summary>Field number for the "deleted" field.</summary>
    public const int DeletedFieldNumber = 4;
    private bool deleted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Deleted {
      get { return deleted_; }
      set {
        deleted_ = value;
      }
    }

    /// <summary>Field number for the "appDetails" field.</summary>
    public const int AppDetailsFieldNumber = 5;
    private global::GooglePlayStore.LibraryAppDetails appDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.LibraryAppDetails AppDetails {
      get { return appDetails_; }
      set {
        appDetails_ = value;
      }
    }

    /// <summary>Field number for the "subscriptionDetails" field.</summary>
    public const int SubscriptionDetailsFieldNumber = 6;
    private global::GooglePlayStore.LibrarySubscriptionDetails subscriptionDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.LibrarySubscriptionDetails SubscriptionDetails {
      get { return subscriptionDetails_; }
      set {
        subscriptionDetails_ = value;
      }
    }

    /// <summary>Field number for the "inAppDetails" field.</summary>
    public const int InAppDetailsFieldNumber = 7;
    private global::GooglePlayStore.LibraryInAppDetails inAppDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.LibraryInAppDetails InAppDetails {
      get { return inAppDetails_; }
      set {
        inAppDetails_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LibraryMutation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LibraryMutation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Docid, other.Docid)) return false;
      if (OfferType != other.OfferType) return false;
      if (DocumentHash != other.DocumentHash) return false;
      if (Deleted != other.Deleted) return false;
      if (!object.Equals(AppDetails, other.AppDetails)) return false;
      if (!object.Equals(SubscriptionDetails, other.SubscriptionDetails)) return false;
      if (!object.Equals(InAppDetails, other.InAppDetails)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (docid_ != null) hash ^= Docid.GetHashCode();
      if (OfferType != 0) hash ^= OfferType.GetHashCode();
      if (DocumentHash != 0L) hash ^= DocumentHash.GetHashCode();
      if (Deleted != false) hash ^= Deleted.GetHashCode();
      if (appDetails_ != null) hash ^= AppDetails.GetHashCode();
      if (subscriptionDetails_ != null) hash ^= SubscriptionDetails.GetHashCode();
      if (inAppDetails_ != null) hash ^= InAppDetails.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (docid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Docid);
      }
      if (OfferType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(OfferType);
      }
      if (DocumentHash != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(DocumentHash);
      }
      if (Deleted != false) {
        output.WriteRawTag(32);
        output.WriteBool(Deleted);
      }
      if (appDetails_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(AppDetails);
      }
      if (subscriptionDetails_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SubscriptionDetails);
      }
      if (inAppDetails_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(InAppDetails);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (docid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Docid);
      }
      if (OfferType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OfferType);
      }
      if (DocumentHash != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DocumentHash);
      }
      if (Deleted != false) {
        size += 1 + 1;
      }
      if (appDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppDetails);
      }
      if (subscriptionDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscriptionDetails);
      }
      if (inAppDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InAppDetails);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LibraryMutation other) {
      if (other == null) {
        return;
      }
      if (other.docid_ != null) {
        if (docid_ == null) {
          docid_ = new global::GooglePlayStore.Docid();
        }
        Docid.MergeFrom(other.Docid);
      }
      if (other.OfferType != 0) {
        OfferType = other.OfferType;
      }
      if (other.DocumentHash != 0L) {
        DocumentHash = other.DocumentHash;
      }
      if (other.Deleted != false) {
        Deleted = other.Deleted;
      }
      if (other.appDetails_ != null) {
        if (appDetails_ == null) {
          appDetails_ = new global::GooglePlayStore.LibraryAppDetails();
        }
        AppDetails.MergeFrom(other.AppDetails);
      }
      if (other.subscriptionDetails_ != null) {
        if (subscriptionDetails_ == null) {
          subscriptionDetails_ = new global::GooglePlayStore.LibrarySubscriptionDetails();
        }
        SubscriptionDetails.MergeFrom(other.SubscriptionDetails);
      }
      if (other.inAppDetails_ != null) {
        if (inAppDetails_ == null) {
          inAppDetails_ = new global::GooglePlayStore.LibraryInAppDetails();
        }
        InAppDetails.MergeFrom(other.InAppDetails);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (docid_ == null) {
              docid_ = new global::GooglePlayStore.Docid();
            }
            input.ReadMessage(docid_);
            break;
          }
          case 16: {
            OfferType = input.ReadInt32();
            break;
          }
          case 24: {
            DocumentHash = input.ReadInt64();
            break;
          }
          case 32: {
            Deleted = input.ReadBool();
            break;
          }
          case 42: {
            if (appDetails_ == null) {
              appDetails_ = new global::GooglePlayStore.LibraryAppDetails();
            }
            input.ReadMessage(appDetails_);
            break;
          }
          case 50: {
            if (subscriptionDetails_ == null) {
              subscriptionDetails_ = new global::GooglePlayStore.LibrarySubscriptionDetails();
            }
            input.ReadMessage(subscriptionDetails_);
            break;
          }
          case 58: {
            if (inAppDetails_ == null) {
              inAppDetails_ = new global::GooglePlayStore.LibraryInAppDetails();
            }
            input.ReadMessage(inAppDetails_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LibrarySubscriptionDetails : pb::IMessage<LibrarySubscriptionDetails> {
    private static readonly pb::MessageParser<LibrarySubscriptionDetails> _parser = new pb::MessageParser<LibrarySubscriptionDetails>(() => new LibrarySubscriptionDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LibrarySubscriptionDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[98]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibrarySubscriptionDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibrarySubscriptionDetails(LibrarySubscriptionDetails other) : this() {
      initiationTimestampMsec_ = other.initiationTimestampMsec_;
      validUntilTimestampMsec_ = other.validUntilTimestampMsec_;
      autoRenewing_ = other.autoRenewing_;
      trialUntilTimestampMsec_ = other.trialUntilTimestampMsec_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibrarySubscriptionDetails Clone() {
      return new LibrarySubscriptionDetails(this);
    }

    /// <summary>Field number for the "initiationTimestampMsec" field.</summary>
    public const int InitiationTimestampMsecFieldNumber = 1;
    private long initiationTimestampMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InitiationTimestampMsec {
      get { return initiationTimestampMsec_; }
      set {
        initiationTimestampMsec_ = value;
      }
    }

    /// <summary>Field number for the "validUntilTimestampMsec" field.</summary>
    public const int ValidUntilTimestampMsecFieldNumber = 2;
    private long validUntilTimestampMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ValidUntilTimestampMsec {
      get { return validUntilTimestampMsec_; }
      set {
        validUntilTimestampMsec_ = value;
      }
    }

    /// <summary>Field number for the "autoRenewing" field.</summary>
    public const int AutoRenewingFieldNumber = 3;
    private bool autoRenewing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AutoRenewing {
      get { return autoRenewing_; }
      set {
        autoRenewing_ = value;
      }
    }

    /// <summary>Field number for the "trialUntilTimestampMsec" field.</summary>
    public const int TrialUntilTimestampMsecFieldNumber = 4;
    private long trialUntilTimestampMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TrialUntilTimestampMsec {
      get { return trialUntilTimestampMsec_; }
      set {
        trialUntilTimestampMsec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LibrarySubscriptionDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LibrarySubscriptionDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InitiationTimestampMsec != other.InitiationTimestampMsec) return false;
      if (ValidUntilTimestampMsec != other.ValidUntilTimestampMsec) return false;
      if (AutoRenewing != other.AutoRenewing) return false;
      if (TrialUntilTimestampMsec != other.TrialUntilTimestampMsec) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InitiationTimestampMsec != 0L) hash ^= InitiationTimestampMsec.GetHashCode();
      if (ValidUntilTimestampMsec != 0L) hash ^= ValidUntilTimestampMsec.GetHashCode();
      if (AutoRenewing != false) hash ^= AutoRenewing.GetHashCode();
      if (TrialUntilTimestampMsec != 0L) hash ^= TrialUntilTimestampMsec.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InitiationTimestampMsec != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(InitiationTimestampMsec);
      }
      if (ValidUntilTimestampMsec != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ValidUntilTimestampMsec);
      }
      if (AutoRenewing != false) {
        output.WriteRawTag(24);
        output.WriteBool(AutoRenewing);
      }
      if (TrialUntilTimestampMsec != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TrialUntilTimestampMsec);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InitiationTimestampMsec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InitiationTimestampMsec);
      }
      if (ValidUntilTimestampMsec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ValidUntilTimestampMsec);
      }
      if (AutoRenewing != false) {
        size += 1 + 1;
      }
      if (TrialUntilTimestampMsec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TrialUntilTimestampMsec);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LibrarySubscriptionDetails other) {
      if (other == null) {
        return;
      }
      if (other.InitiationTimestampMsec != 0L) {
        InitiationTimestampMsec = other.InitiationTimestampMsec;
      }
      if (other.ValidUntilTimestampMsec != 0L) {
        ValidUntilTimestampMsec = other.ValidUntilTimestampMsec;
      }
      if (other.AutoRenewing != false) {
        AutoRenewing = other.AutoRenewing;
      }
      if (other.TrialUntilTimestampMsec != 0L) {
        TrialUntilTimestampMsec = other.TrialUntilTimestampMsec;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            InitiationTimestampMsec = input.ReadInt64();
            break;
          }
          case 16: {
            ValidUntilTimestampMsec = input.ReadInt64();
            break;
          }
          case 24: {
            AutoRenewing = input.ReadBool();
            break;
          }
          case 32: {
            TrialUntilTimestampMsec = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LibraryUpdate : pb::IMessage<LibraryUpdate> {
    private static readonly pb::MessageParser<LibraryUpdate> _parser = new pb::MessageParser<LibraryUpdate>(() => new LibraryUpdate());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LibraryUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[99]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryUpdate(LibraryUpdate other) : this() {
      status_ = other.status_;
      corpus_ = other.corpus_;
      serverToken_ = other.serverToken_;
      mutation_ = other.mutation_.Clone();
      hasMore_ = other.hasMore_;
      libraryId_ = other.libraryId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryUpdate Clone() {
      return new LibraryUpdate(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "corpus" field.</summary>
    public const int CorpusFieldNumber = 2;
    private int corpus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Corpus {
      get { return corpus_; }
      set {
        corpus_ = value;
      }
    }

    /// <summary>Field number for the "serverToken" field.</summary>
    public const int ServerTokenFieldNumber = 3;
    private pb::ByteString serverToken_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ServerToken {
      get { return serverToken_; }
      set {
        serverToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mutation" field.</summary>
    public const int MutationFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.LibraryMutation> _repeated_mutation_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.LibraryMutation.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.LibraryMutation> mutation_ = new pbc::RepeatedField<global::GooglePlayStore.LibraryMutation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.LibraryMutation> Mutation {
      get { return mutation_; }
    }

    /// <summary>Field number for the "hasMore" field.</summary>
    public const int HasMoreFieldNumber = 5;
    private bool hasMore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMore {
      get { return hasMore_; }
      set {
        hasMore_ = value;
      }
    }

    /// <summary>Field number for the "libraryId" field.</summary>
    public const int LibraryIdFieldNumber = 6;
    private string libraryId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LibraryId {
      get { return libraryId_; }
      set {
        libraryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LibraryUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LibraryUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Corpus != other.Corpus) return false;
      if (ServerToken != other.ServerToken) return false;
      if(!mutation_.Equals(other.mutation_)) return false;
      if (HasMore != other.HasMore) return false;
      if (LibraryId != other.LibraryId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Corpus != 0) hash ^= Corpus.GetHashCode();
      if (ServerToken.Length != 0) hash ^= ServerToken.GetHashCode();
      hash ^= mutation_.GetHashCode();
      if (HasMore != false) hash ^= HasMore.GetHashCode();
      if (LibraryId.Length != 0) hash ^= LibraryId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (Corpus != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Corpus);
      }
      if (ServerToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ServerToken);
      }
      mutation_.WriteTo(output, _repeated_mutation_codec);
      if (HasMore != false) {
        output.WriteRawTag(40);
        output.WriteBool(HasMore);
      }
      if (LibraryId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(LibraryId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Corpus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Corpus);
      }
      if (ServerToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ServerToken);
      }
      size += mutation_.CalculateSize(_repeated_mutation_codec);
      if (HasMore != false) {
        size += 1 + 1;
      }
      if (LibraryId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LibraryId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LibraryUpdate other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Corpus != 0) {
        Corpus = other.Corpus;
      }
      if (other.ServerToken.Length != 0) {
        ServerToken = other.ServerToken;
      }
      mutation_.Add(other.mutation_);
      if (other.HasMore != false) {
        HasMore = other.HasMore;
      }
      if (other.LibraryId.Length != 0) {
        LibraryId = other.LibraryId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 16: {
            Corpus = input.ReadInt32();
            break;
          }
          case 26: {
            ServerToken = input.ReadBytes();
            break;
          }
          case 34: {
            mutation_.AddEntriesFrom(input, _repeated_mutation_codec);
            break;
          }
          case 40: {
            HasMore = input.ReadBool();
            break;
          }
          case 50: {
            LibraryId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AndroidAppNotificationData : pb::IMessage<AndroidAppNotificationData> {
    private static readonly pb::MessageParser<AndroidAppNotificationData> _parser = new pb::MessageParser<AndroidAppNotificationData>(() => new AndroidAppNotificationData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidAppNotificationData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[100]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidAppNotificationData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidAppNotificationData(AndroidAppNotificationData other) : this() {
      versionCode_ = other.versionCode_;
      assetId_ = other.assetId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidAppNotificationData Clone() {
      return new AndroidAppNotificationData(this);
    }

    /// <summary>Field number for the "versionCode" field.</summary>
    public const int VersionCodeFieldNumber = 1;
    private int versionCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VersionCode {
      get { return versionCode_; }
      set {
        versionCode_ = value;
      }
    }

    /// <summary>Field number for the "assetId" field.</summary>
    public const int AssetIdFieldNumber = 2;
    private string assetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetId {
      get { return assetId_; }
      set {
        assetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidAppNotificationData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidAppNotificationData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VersionCode != other.VersionCode) return false;
      if (AssetId != other.AssetId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VersionCode != 0) hash ^= VersionCode.GetHashCode();
      if (AssetId.Length != 0) hash ^= AssetId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (VersionCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(VersionCode);
      }
      if (AssetId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AssetId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VersionCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VersionCode);
      }
      if (AssetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidAppNotificationData other) {
      if (other == null) {
        return;
      }
      if (other.VersionCode != 0) {
        VersionCode = other.VersionCode;
      }
      if (other.AssetId.Length != 0) {
        AssetId = other.AssetId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            VersionCode = input.ReadInt32();
            break;
          }
          case 18: {
            AssetId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InAppNotificationData : pb::IMessage<InAppNotificationData> {
    private static readonly pb::MessageParser<InAppNotificationData> _parser = new pb::MessageParser<InAppNotificationData>(() => new InAppNotificationData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InAppNotificationData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[101]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InAppNotificationData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InAppNotificationData(InAppNotificationData other) : this() {
      checkoutOrderId_ = other.checkoutOrderId_;
      inAppNotificationId_ = other.inAppNotificationId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InAppNotificationData Clone() {
      return new InAppNotificationData(this);
    }

    /// <summary>Field number for the "checkoutOrderId" field.</summary>
    public const int CheckoutOrderIdFieldNumber = 1;
    private string checkoutOrderId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CheckoutOrderId {
      get { return checkoutOrderId_; }
      set {
        checkoutOrderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inAppNotificationId" field.</summary>
    public const int InAppNotificationIdFieldNumber = 2;
    private string inAppNotificationId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InAppNotificationId {
      get { return inAppNotificationId_; }
      set {
        inAppNotificationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InAppNotificationData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InAppNotificationData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CheckoutOrderId != other.CheckoutOrderId) return false;
      if (InAppNotificationId != other.InAppNotificationId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CheckoutOrderId.Length != 0) hash ^= CheckoutOrderId.GetHashCode();
      if (InAppNotificationId.Length != 0) hash ^= InAppNotificationId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CheckoutOrderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CheckoutOrderId);
      }
      if (InAppNotificationId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InAppNotificationId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CheckoutOrderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CheckoutOrderId);
      }
      if (InAppNotificationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InAppNotificationId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InAppNotificationData other) {
      if (other == null) {
        return;
      }
      if (other.CheckoutOrderId.Length != 0) {
        CheckoutOrderId = other.CheckoutOrderId;
      }
      if (other.InAppNotificationId.Length != 0) {
        InAppNotificationId = other.InAppNotificationId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            CheckoutOrderId = input.ReadString();
            break;
          }
          case 18: {
            InAppNotificationId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LibraryDirtyData : pb::IMessage<LibraryDirtyData> {
    private static readonly pb::MessageParser<LibraryDirtyData> _parser = new pb::MessageParser<LibraryDirtyData>(() => new LibraryDirtyData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LibraryDirtyData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[102]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryDirtyData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryDirtyData(LibraryDirtyData other) : this() {
      backend_ = other.backend_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryDirtyData Clone() {
      return new LibraryDirtyData(this);
    }

    /// <summary>Field number for the "backend" field.</summary>
    public const int BackendFieldNumber = 1;
    private int backend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Backend {
      get { return backend_; }
      set {
        backend_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LibraryDirtyData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LibraryDirtyData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Backend != other.Backend) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Backend != 0) hash ^= Backend.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Backend != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Backend);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Backend != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Backend);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LibraryDirtyData other) {
      if (other == null) {
        return;
      }
      if (other.Backend != 0) {
        Backend = other.Backend;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Backend = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Notification : pb::IMessage<Notification> {
    private static readonly pb::MessageParser<Notification> _parser = new pb::MessageParser<Notification>(() => new Notification());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[103]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notification(Notification other) : this() {
      notificationType_ = other.notificationType_;
      timestamp_ = other.timestamp_;
      Docid = other.docid_ != null ? other.Docid.Clone() : null;
      docTitle_ = other.docTitle_;
      userEmail_ = other.userEmail_;
      AppData = other.appData_ != null ? other.AppData.Clone() : null;
      AppDeliveryData = other.appDeliveryData_ != null ? other.AppDeliveryData.Clone() : null;
      PurchaseRemovalData = other.purchaseRemovalData_ != null ? other.PurchaseRemovalData.Clone() : null;
      UserNotificationData = other.userNotificationData_ != null ? other.UserNotificationData.Clone() : null;
      InAppNotificationData = other.inAppNotificationData_ != null ? other.InAppNotificationData.Clone() : null;
      PurchaseDeclinedData = other.purchaseDeclinedData_ != null ? other.PurchaseDeclinedData.Clone() : null;
      notificationId_ = other.notificationId_;
      LibraryUpdate = other.libraryUpdate_ != null ? other.LibraryUpdate.Clone() : null;
      LibraryDirtyData = other.libraryDirtyData_ != null ? other.LibraryDirtyData.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notification Clone() {
      return new Notification(this);
    }

    /// <summary>Field number for the "notificationType" field.</summary>
    public const int NotificationTypeFieldNumber = 1;
    private int notificationType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NotificationType {
      get { return notificationType_; }
      set {
        notificationType_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "docid" field.</summary>
    public const int DocidFieldNumber = 4;
    private global::GooglePlayStore.Docid docid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Docid Docid {
      get { return docid_; }
      set {
        docid_ = value;
      }
    }

    /// <summary>Field number for the "docTitle" field.</summary>
    public const int DocTitleFieldNumber = 5;
    private string docTitle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DocTitle {
      get { return docTitle_; }
      set {
        docTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userEmail" field.</summary>
    public const int UserEmailFieldNumber = 6;
    private string userEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserEmail {
      get { return userEmail_; }
      set {
        userEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "appData" field.</summary>
    public const int AppDataFieldNumber = 7;
    private global::GooglePlayStore.AndroidAppNotificationData appData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AndroidAppNotificationData AppData {
      get { return appData_; }
      set {
        appData_ = value;
      }
    }

    /// <summary>Field number for the "appDeliveryData" field.</summary>
    public const int AppDeliveryDataFieldNumber = 8;
    private global::GooglePlayStore.AndroidAppDeliveryData appDeliveryData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AndroidAppDeliveryData AppDeliveryData {
      get { return appDeliveryData_; }
      set {
        appDeliveryData_ = value;
      }
    }

    /// <summary>Field number for the "purchaseRemovalData" field.</summary>
    public const int PurchaseRemovalDataFieldNumber = 9;
    private global::GooglePlayStore.PurchaseRemovalData purchaseRemovalData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.PurchaseRemovalData PurchaseRemovalData {
      get { return purchaseRemovalData_; }
      set {
        purchaseRemovalData_ = value;
      }
    }

    /// <summary>Field number for the "userNotificationData" field.</summary>
    public const int UserNotificationDataFieldNumber = 10;
    private global::GooglePlayStore.UserNotificationData userNotificationData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.UserNotificationData UserNotificationData {
      get { return userNotificationData_; }
      set {
        userNotificationData_ = value;
      }
    }

    /// <summary>Field number for the "inAppNotificationData" field.</summary>
    public const int InAppNotificationDataFieldNumber = 11;
    private global::GooglePlayStore.InAppNotificationData inAppNotificationData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.InAppNotificationData InAppNotificationData {
      get { return inAppNotificationData_; }
      set {
        inAppNotificationData_ = value;
      }
    }

    /// <summary>Field number for the "purchaseDeclinedData" field.</summary>
    public const int PurchaseDeclinedDataFieldNumber = 12;
    private global::GooglePlayStore.PurchaseDeclinedData purchaseDeclinedData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.PurchaseDeclinedData PurchaseDeclinedData {
      get { return purchaseDeclinedData_; }
      set {
        purchaseDeclinedData_ = value;
      }
    }

    /// <summary>Field number for the "notificationId" field.</summary>
    public const int NotificationIdFieldNumber = 13;
    private string notificationId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotificationId {
      get { return notificationId_; }
      set {
        notificationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "libraryUpdate" field.</summary>
    public const int LibraryUpdateFieldNumber = 14;
    private global::GooglePlayStore.LibraryUpdate libraryUpdate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.LibraryUpdate LibraryUpdate {
      get { return libraryUpdate_; }
      set {
        libraryUpdate_ = value;
      }
    }

    /// <summary>Field number for the "libraryDirtyData" field.</summary>
    public const int LibraryDirtyDataFieldNumber = 15;
    private global::GooglePlayStore.LibraryDirtyData libraryDirtyData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.LibraryDirtyData LibraryDirtyData {
      get { return libraryDirtyData_; }
      set {
        libraryDirtyData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NotificationType != other.NotificationType) return false;
      if (Timestamp != other.Timestamp) return false;
      if (!object.Equals(Docid, other.Docid)) return false;
      if (DocTitle != other.DocTitle) return false;
      if (UserEmail != other.UserEmail) return false;
      if (!object.Equals(AppData, other.AppData)) return false;
      if (!object.Equals(AppDeliveryData, other.AppDeliveryData)) return false;
      if (!object.Equals(PurchaseRemovalData, other.PurchaseRemovalData)) return false;
      if (!object.Equals(UserNotificationData, other.UserNotificationData)) return false;
      if (!object.Equals(InAppNotificationData, other.InAppNotificationData)) return false;
      if (!object.Equals(PurchaseDeclinedData, other.PurchaseDeclinedData)) return false;
      if (NotificationId != other.NotificationId) return false;
      if (!object.Equals(LibraryUpdate, other.LibraryUpdate)) return false;
      if (!object.Equals(LibraryDirtyData, other.LibraryDirtyData)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NotificationType != 0) hash ^= NotificationType.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (docid_ != null) hash ^= Docid.GetHashCode();
      if (DocTitle.Length != 0) hash ^= DocTitle.GetHashCode();
      if (UserEmail.Length != 0) hash ^= UserEmail.GetHashCode();
      if (appData_ != null) hash ^= AppData.GetHashCode();
      if (appDeliveryData_ != null) hash ^= AppDeliveryData.GetHashCode();
      if (purchaseRemovalData_ != null) hash ^= PurchaseRemovalData.GetHashCode();
      if (userNotificationData_ != null) hash ^= UserNotificationData.GetHashCode();
      if (inAppNotificationData_ != null) hash ^= InAppNotificationData.GetHashCode();
      if (purchaseDeclinedData_ != null) hash ^= PurchaseDeclinedData.GetHashCode();
      if (NotificationId.Length != 0) hash ^= NotificationId.GetHashCode();
      if (libraryUpdate_ != null) hash ^= LibraryUpdate.GetHashCode();
      if (libraryDirtyData_ != null) hash ^= LibraryDirtyData.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NotificationType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NotificationType);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (docid_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Docid);
      }
      if (DocTitle.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DocTitle);
      }
      if (UserEmail.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(UserEmail);
      }
      if (appData_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AppData);
      }
      if (appDeliveryData_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(AppDeliveryData);
      }
      if (purchaseRemovalData_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PurchaseRemovalData);
      }
      if (userNotificationData_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(UserNotificationData);
      }
      if (inAppNotificationData_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(InAppNotificationData);
      }
      if (purchaseDeclinedData_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(PurchaseDeclinedData);
      }
      if (NotificationId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(NotificationId);
      }
      if (libraryUpdate_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(LibraryUpdate);
      }
      if (libraryDirtyData_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(LibraryDirtyData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NotificationType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NotificationType);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (docid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Docid);
      }
      if (DocTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DocTitle);
      }
      if (UserEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserEmail);
      }
      if (appData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppData);
      }
      if (appDeliveryData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppDeliveryData);
      }
      if (purchaseRemovalData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PurchaseRemovalData);
      }
      if (userNotificationData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserNotificationData);
      }
      if (inAppNotificationData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InAppNotificationData);
      }
      if (purchaseDeclinedData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PurchaseDeclinedData);
      }
      if (NotificationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotificationId);
      }
      if (libraryUpdate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LibraryUpdate);
      }
      if (libraryDirtyData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LibraryDirtyData);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Notification other) {
      if (other == null) {
        return;
      }
      if (other.NotificationType != 0) {
        NotificationType = other.NotificationType;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.docid_ != null) {
        if (docid_ == null) {
          docid_ = new global::GooglePlayStore.Docid();
        }
        Docid.MergeFrom(other.Docid);
      }
      if (other.DocTitle.Length != 0) {
        DocTitle = other.DocTitle;
      }
      if (other.UserEmail.Length != 0) {
        UserEmail = other.UserEmail;
      }
      if (other.appData_ != null) {
        if (appData_ == null) {
          appData_ = new global::GooglePlayStore.AndroidAppNotificationData();
        }
        AppData.MergeFrom(other.AppData);
      }
      if (other.appDeliveryData_ != null) {
        if (appDeliveryData_ == null) {
          appDeliveryData_ = new global::GooglePlayStore.AndroidAppDeliveryData();
        }
        AppDeliveryData.MergeFrom(other.AppDeliveryData);
      }
      if (other.purchaseRemovalData_ != null) {
        if (purchaseRemovalData_ == null) {
          purchaseRemovalData_ = new global::GooglePlayStore.PurchaseRemovalData();
        }
        PurchaseRemovalData.MergeFrom(other.PurchaseRemovalData);
      }
      if (other.userNotificationData_ != null) {
        if (userNotificationData_ == null) {
          userNotificationData_ = new global::GooglePlayStore.UserNotificationData();
        }
        UserNotificationData.MergeFrom(other.UserNotificationData);
      }
      if (other.inAppNotificationData_ != null) {
        if (inAppNotificationData_ == null) {
          inAppNotificationData_ = new global::GooglePlayStore.InAppNotificationData();
        }
        InAppNotificationData.MergeFrom(other.InAppNotificationData);
      }
      if (other.purchaseDeclinedData_ != null) {
        if (purchaseDeclinedData_ == null) {
          purchaseDeclinedData_ = new global::GooglePlayStore.PurchaseDeclinedData();
        }
        PurchaseDeclinedData.MergeFrom(other.PurchaseDeclinedData);
      }
      if (other.NotificationId.Length != 0) {
        NotificationId = other.NotificationId;
      }
      if (other.libraryUpdate_ != null) {
        if (libraryUpdate_ == null) {
          libraryUpdate_ = new global::GooglePlayStore.LibraryUpdate();
        }
        LibraryUpdate.MergeFrom(other.LibraryUpdate);
      }
      if (other.libraryDirtyData_ != null) {
        if (libraryDirtyData_ == null) {
          libraryDirtyData_ = new global::GooglePlayStore.LibraryDirtyData();
        }
        LibraryDirtyData.MergeFrom(other.LibraryDirtyData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            NotificationType = input.ReadInt32();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 34: {
            if (docid_ == null) {
              docid_ = new global::GooglePlayStore.Docid();
            }
            input.ReadMessage(docid_);
            break;
          }
          case 42: {
            DocTitle = input.ReadString();
            break;
          }
          case 50: {
            UserEmail = input.ReadString();
            break;
          }
          case 58: {
            if (appData_ == null) {
              appData_ = new global::GooglePlayStore.AndroidAppNotificationData();
            }
            input.ReadMessage(appData_);
            break;
          }
          case 66: {
            if (appDeliveryData_ == null) {
              appDeliveryData_ = new global::GooglePlayStore.AndroidAppDeliveryData();
            }
            input.ReadMessage(appDeliveryData_);
            break;
          }
          case 74: {
            if (purchaseRemovalData_ == null) {
              purchaseRemovalData_ = new global::GooglePlayStore.PurchaseRemovalData();
            }
            input.ReadMessage(purchaseRemovalData_);
            break;
          }
          case 82: {
            if (userNotificationData_ == null) {
              userNotificationData_ = new global::GooglePlayStore.UserNotificationData();
            }
            input.ReadMessage(userNotificationData_);
            break;
          }
          case 90: {
            if (inAppNotificationData_ == null) {
              inAppNotificationData_ = new global::GooglePlayStore.InAppNotificationData();
            }
            input.ReadMessage(inAppNotificationData_);
            break;
          }
          case 98: {
            if (purchaseDeclinedData_ == null) {
              purchaseDeclinedData_ = new global::GooglePlayStore.PurchaseDeclinedData();
            }
            input.ReadMessage(purchaseDeclinedData_);
            break;
          }
          case 106: {
            NotificationId = input.ReadString();
            break;
          }
          case 114: {
            if (libraryUpdate_ == null) {
              libraryUpdate_ = new global::GooglePlayStore.LibraryUpdate();
            }
            input.ReadMessage(libraryUpdate_);
            break;
          }
          case 122: {
            if (libraryDirtyData_ == null) {
              libraryDirtyData_ = new global::GooglePlayStore.LibraryDirtyData();
            }
            input.ReadMessage(libraryDirtyData_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PurchaseDeclinedData : pb::IMessage<PurchaseDeclinedData> {
    private static readonly pb::MessageParser<PurchaseDeclinedData> _parser = new pb::MessageParser<PurchaseDeclinedData>(() => new PurchaseDeclinedData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PurchaseDeclinedData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[104]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseDeclinedData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseDeclinedData(PurchaseDeclinedData other) : this() {
      reason_ = other.reason_;
      showNotification_ = other.showNotification_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseDeclinedData Clone() {
      return new PurchaseDeclinedData(this);
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 1;
    private int reason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Reason {
      get { return reason_; }
      set {
        reason_ = value;
      }
    }

    /// <summary>Field number for the "showNotification" field.</summary>
    public const int ShowNotificationFieldNumber = 2;
    private bool showNotification_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShowNotification {
      get { return showNotification_; }
      set {
        showNotification_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PurchaseDeclinedData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PurchaseDeclinedData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Reason != other.Reason) return false;
      if (ShowNotification != other.ShowNotification) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Reason != 0) hash ^= Reason.GetHashCode();
      if (ShowNotification != false) hash ^= ShowNotification.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Reason != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Reason);
      }
      if (ShowNotification != false) {
        output.WriteRawTag(16);
        output.WriteBool(ShowNotification);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Reason != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Reason);
      }
      if (ShowNotification != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PurchaseDeclinedData other) {
      if (other == null) {
        return;
      }
      if (other.Reason != 0) {
        Reason = other.Reason;
      }
      if (other.ShowNotification != false) {
        ShowNotification = other.ShowNotification;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Reason = input.ReadInt32();
            break;
          }
          case 16: {
            ShowNotification = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PurchaseRemovalData : pb::IMessage<PurchaseRemovalData> {
    private static readonly pb::MessageParser<PurchaseRemovalData> _parser = new pb::MessageParser<PurchaseRemovalData>(() => new PurchaseRemovalData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PurchaseRemovalData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[105]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseRemovalData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseRemovalData(PurchaseRemovalData other) : this() {
      malicious_ = other.malicious_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseRemovalData Clone() {
      return new PurchaseRemovalData(this);
    }

    /// <summary>Field number for the "malicious" field.</summary>
    public const int MaliciousFieldNumber = 1;
    private bool malicious_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Malicious {
      get { return malicious_; }
      set {
        malicious_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PurchaseRemovalData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PurchaseRemovalData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Malicious != other.Malicious) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Malicious != false) hash ^= Malicious.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Malicious != false) {
        output.WriteRawTag(8);
        output.WriteBool(Malicious);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Malicious != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PurchaseRemovalData other) {
      if (other == null) {
        return;
      }
      if (other.Malicious != false) {
        Malicious = other.Malicious;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Malicious = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserNotificationData : pb::IMessage<UserNotificationData> {
    private static readonly pb::MessageParser<UserNotificationData> _parser = new pb::MessageParser<UserNotificationData>(() => new UserNotificationData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserNotificationData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[106]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserNotificationData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserNotificationData(UserNotificationData other) : this() {
      notificationTitle_ = other.notificationTitle_;
      notificationText_ = other.notificationText_;
      tickerText_ = other.tickerText_;
      dialogTitle_ = other.dialogTitle_;
      dialogText_ = other.dialogText_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserNotificationData Clone() {
      return new UserNotificationData(this);
    }

    /// <summary>Field number for the "notificationTitle" field.</summary>
    public const int NotificationTitleFieldNumber = 1;
    private string notificationTitle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotificationTitle {
      get { return notificationTitle_; }
      set {
        notificationTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "notificationText" field.</summary>
    public const int NotificationTextFieldNumber = 2;
    private string notificationText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotificationText {
      get { return notificationText_; }
      set {
        notificationText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tickerText" field.</summary>
    public const int TickerTextFieldNumber = 3;
    private string tickerText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TickerText {
      get { return tickerText_; }
      set {
        tickerText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dialogTitle" field.</summary>
    public const int DialogTitleFieldNumber = 4;
    private string dialogTitle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DialogTitle {
      get { return dialogTitle_; }
      set {
        dialogTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dialogText" field.</summary>
    public const int DialogTextFieldNumber = 5;
    private string dialogText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DialogText {
      get { return dialogText_; }
      set {
        dialogText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserNotificationData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserNotificationData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NotificationTitle != other.NotificationTitle) return false;
      if (NotificationText != other.NotificationText) return false;
      if (TickerText != other.TickerText) return false;
      if (DialogTitle != other.DialogTitle) return false;
      if (DialogText != other.DialogText) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NotificationTitle.Length != 0) hash ^= NotificationTitle.GetHashCode();
      if (NotificationText.Length != 0) hash ^= NotificationText.GetHashCode();
      if (TickerText.Length != 0) hash ^= TickerText.GetHashCode();
      if (DialogTitle.Length != 0) hash ^= DialogTitle.GetHashCode();
      if (DialogText.Length != 0) hash ^= DialogText.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NotificationTitle.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NotificationTitle);
      }
      if (NotificationText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NotificationText);
      }
      if (TickerText.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TickerText);
      }
      if (DialogTitle.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DialogTitle);
      }
      if (DialogText.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DialogText);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NotificationTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotificationTitle);
      }
      if (NotificationText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotificationText);
      }
      if (TickerText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TickerText);
      }
      if (DialogTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DialogTitle);
      }
      if (DialogText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DialogText);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserNotificationData other) {
      if (other == null) {
        return;
      }
      if (other.NotificationTitle.Length != 0) {
        NotificationTitle = other.NotificationTitle;
      }
      if (other.NotificationText.Length != 0) {
        NotificationText = other.NotificationText;
      }
      if (other.TickerText.Length != 0) {
        TickerText = other.TickerText;
      }
      if (other.DialogTitle.Length != 0) {
        DialogTitle = other.DialogTitle;
      }
      if (other.DialogText.Length != 0) {
        DialogText = other.DialogText;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            NotificationTitle = input.ReadString();
            break;
          }
          case 18: {
            NotificationText = input.ReadString();
            break;
          }
          case 26: {
            TickerText = input.ReadString();
            break;
          }
          case 34: {
            DialogTitle = input.ReadString();
            break;
          }
          case 42: {
            DialogText = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AggregateRating : pb::IMessage<AggregateRating> {
    private static readonly pb::MessageParser<AggregateRating> _parser = new pb::MessageParser<AggregateRating>(() => new AggregateRating());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AggregateRating> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[107]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregateRating() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregateRating(AggregateRating other) : this() {
      type_ = other.type_;
      starRating_ = other.starRating_;
      ratingsCount_ = other.ratingsCount_;
      oneStarRatings_ = other.oneStarRatings_;
      twoStarRatings_ = other.twoStarRatings_;
      threeStarRatings_ = other.threeStarRatings_;
      fourStarRatings_ = other.fourStarRatings_;
      fiveStarRatings_ = other.fiveStarRatings_;
      thumbsUpCount_ = other.thumbsUpCount_;
      thumbsDownCount_ = other.thumbsDownCount_;
      commentCount_ = other.commentCount_;
      bayesianMeanRating_ = other.bayesianMeanRating_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregateRating Clone() {
      return new AggregateRating(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "starRating" field.</summary>
    public const int StarRatingFieldNumber = 2;
    private float starRating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float StarRating {
      get { return starRating_; }
      set {
        starRating_ = value;
      }
    }

    /// <summary>Field number for the "ratingsCount" field.</summary>
    public const int RatingsCountFieldNumber = 3;
    private ulong ratingsCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RatingsCount {
      get { return ratingsCount_; }
      set {
        ratingsCount_ = value;
      }
    }

    /// <summary>Field number for the "oneStarRatings" field.</summary>
    public const int OneStarRatingsFieldNumber = 4;
    private ulong oneStarRatings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong OneStarRatings {
      get { return oneStarRatings_; }
      set {
        oneStarRatings_ = value;
      }
    }

    /// <summary>Field number for the "twoStarRatings" field.</summary>
    public const int TwoStarRatingsFieldNumber = 5;
    private ulong twoStarRatings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TwoStarRatings {
      get { return twoStarRatings_; }
      set {
        twoStarRatings_ = value;
      }
    }

    /// <summary>Field number for the "threeStarRatings" field.</summary>
    public const int ThreeStarRatingsFieldNumber = 6;
    private ulong threeStarRatings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ThreeStarRatings {
      get { return threeStarRatings_; }
      set {
        threeStarRatings_ = value;
      }
    }

    /// <summary>Field number for the "fourStarRatings" field.</summary>
    public const int FourStarRatingsFieldNumber = 7;
    private ulong fourStarRatings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FourStarRatings {
      get { return fourStarRatings_; }
      set {
        fourStarRatings_ = value;
      }
    }

    /// <summary>Field number for the "fiveStarRatings" field.</summary>
    public const int FiveStarRatingsFieldNumber = 8;
    private ulong fiveStarRatings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FiveStarRatings {
      get { return fiveStarRatings_; }
      set {
        fiveStarRatings_ = value;
      }
    }

    /// <summary>Field number for the "thumbsUpCount" field.</summary>
    public const int ThumbsUpCountFieldNumber = 9;
    private ulong thumbsUpCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ThumbsUpCount {
      get { return thumbsUpCount_; }
      set {
        thumbsUpCount_ = value;
      }
    }

    /// <summary>Field number for the "thumbsDownCount" field.</summary>
    public const int ThumbsDownCountFieldNumber = 10;
    private ulong thumbsDownCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ThumbsDownCount {
      get { return thumbsDownCount_; }
      set {
        thumbsDownCount_ = value;
      }
    }

    /// <summary>Field number for the "commentCount" field.</summary>
    public const int CommentCountFieldNumber = 11;
    private ulong commentCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CommentCount {
      get { return commentCount_; }
      set {
        commentCount_ = value;
      }
    }

    /// <summary>Field number for the "bayesianMeanRating" field.</summary>
    public const int BayesianMeanRatingFieldNumber = 12;
    private double bayesianMeanRating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BayesianMeanRating {
      get { return bayesianMeanRating_; }
      set {
        bayesianMeanRating_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AggregateRating);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AggregateRating other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (StarRating != other.StarRating) return false;
      if (RatingsCount != other.RatingsCount) return false;
      if (OneStarRatings != other.OneStarRatings) return false;
      if (TwoStarRatings != other.TwoStarRatings) return false;
      if (ThreeStarRatings != other.ThreeStarRatings) return false;
      if (FourStarRatings != other.FourStarRatings) return false;
      if (FiveStarRatings != other.FiveStarRatings) return false;
      if (ThumbsUpCount != other.ThumbsUpCount) return false;
      if (ThumbsDownCount != other.ThumbsDownCount) return false;
      if (CommentCount != other.CommentCount) return false;
      if (BayesianMeanRating != other.BayesianMeanRating) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (StarRating != 0F) hash ^= StarRating.GetHashCode();
      if (RatingsCount != 0UL) hash ^= RatingsCount.GetHashCode();
      if (OneStarRatings != 0UL) hash ^= OneStarRatings.GetHashCode();
      if (TwoStarRatings != 0UL) hash ^= TwoStarRatings.GetHashCode();
      if (ThreeStarRatings != 0UL) hash ^= ThreeStarRatings.GetHashCode();
      if (FourStarRatings != 0UL) hash ^= FourStarRatings.GetHashCode();
      if (FiveStarRatings != 0UL) hash ^= FiveStarRatings.GetHashCode();
      if (ThumbsUpCount != 0UL) hash ^= ThumbsUpCount.GetHashCode();
      if (ThumbsDownCount != 0UL) hash ^= ThumbsDownCount.GetHashCode();
      if (CommentCount != 0UL) hash ^= CommentCount.GetHashCode();
      if (BayesianMeanRating != 0D) hash ^= BayesianMeanRating.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (StarRating != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(StarRating);
      }
      if (RatingsCount != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(RatingsCount);
      }
      if (OneStarRatings != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(OneStarRatings);
      }
      if (TwoStarRatings != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(TwoStarRatings);
      }
      if (ThreeStarRatings != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(ThreeStarRatings);
      }
      if (FourStarRatings != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(FourStarRatings);
      }
      if (FiveStarRatings != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(FiveStarRatings);
      }
      if (ThumbsUpCount != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(ThumbsUpCount);
      }
      if (ThumbsDownCount != 0UL) {
        output.WriteRawTag(80);
        output.WriteUInt64(ThumbsDownCount);
      }
      if (CommentCount != 0UL) {
        output.WriteRawTag(88);
        output.WriteUInt64(CommentCount);
      }
      if (BayesianMeanRating != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(BayesianMeanRating);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (StarRating != 0F) {
        size += 1 + 4;
      }
      if (RatingsCount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RatingsCount);
      }
      if (OneStarRatings != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(OneStarRatings);
      }
      if (TwoStarRatings != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TwoStarRatings);
      }
      if (ThreeStarRatings != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ThreeStarRatings);
      }
      if (FourStarRatings != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FourStarRatings);
      }
      if (FiveStarRatings != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FiveStarRatings);
      }
      if (ThumbsUpCount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ThumbsUpCount);
      }
      if (ThumbsDownCount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ThumbsDownCount);
      }
      if (CommentCount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CommentCount);
      }
      if (BayesianMeanRating != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AggregateRating other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.StarRating != 0F) {
        StarRating = other.StarRating;
      }
      if (other.RatingsCount != 0UL) {
        RatingsCount = other.RatingsCount;
      }
      if (other.OneStarRatings != 0UL) {
        OneStarRatings = other.OneStarRatings;
      }
      if (other.TwoStarRatings != 0UL) {
        TwoStarRatings = other.TwoStarRatings;
      }
      if (other.ThreeStarRatings != 0UL) {
        ThreeStarRatings = other.ThreeStarRatings;
      }
      if (other.FourStarRatings != 0UL) {
        FourStarRatings = other.FourStarRatings;
      }
      if (other.FiveStarRatings != 0UL) {
        FiveStarRatings = other.FiveStarRatings;
      }
      if (other.ThumbsUpCount != 0UL) {
        ThumbsUpCount = other.ThumbsUpCount;
      }
      if (other.ThumbsDownCount != 0UL) {
        ThumbsDownCount = other.ThumbsDownCount;
      }
      if (other.CommentCount != 0UL) {
        CommentCount = other.CommentCount;
      }
      if (other.BayesianMeanRating != 0D) {
        BayesianMeanRating = other.BayesianMeanRating;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 21: {
            StarRating = input.ReadFloat();
            break;
          }
          case 24: {
            RatingsCount = input.ReadUInt64();
            break;
          }
          case 32: {
            OneStarRatings = input.ReadUInt64();
            break;
          }
          case 40: {
            TwoStarRatings = input.ReadUInt64();
            break;
          }
          case 48: {
            ThreeStarRatings = input.ReadUInt64();
            break;
          }
          case 56: {
            FourStarRatings = input.ReadUInt64();
            break;
          }
          case 64: {
            FiveStarRatings = input.ReadUInt64();
            break;
          }
          case 72: {
            ThumbsUpCount = input.ReadUInt64();
            break;
          }
          case 80: {
            ThumbsDownCount = input.ReadUInt64();
            break;
          }
          case 88: {
            CommentCount = input.ReadUInt64();
            break;
          }
          case 97: {
            BayesianMeanRating = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AcceptTosResponse : pb::IMessage<AcceptTosResponse> {
    private static readonly pb::MessageParser<AcceptTosResponse> _parser = new pb::MessageParser<AcceptTosResponse>(() => new AcceptTosResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AcceptTosResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[108]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptTosResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptTosResponse(AcceptTosResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptTosResponse Clone() {
      return new AcceptTosResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AcceptTosResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AcceptTosResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AcceptTosResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class CarrierBillingConfig : pb::IMessage<CarrierBillingConfig> {
    private static readonly pb::MessageParser<CarrierBillingConfig> _parser = new pb::MessageParser<CarrierBillingConfig>(() => new CarrierBillingConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CarrierBillingConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[109]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingConfig(CarrierBillingConfig other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      apiVersion_ = other.apiVersion_;
      provisioningUrl_ = other.provisioningUrl_;
      credentialsUrl_ = other.credentialsUrl_;
      tosRequired_ = other.tosRequired_;
      perTransactionCredentialsRequired_ = other.perTransactionCredentialsRequired_;
      sendSubscriberIdWithCarrierBillingRequests_ = other.sendSubscriberIdWithCarrierBillingRequests_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CarrierBillingConfig Clone() {
      return new CarrierBillingConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "apiVersion" field.</summary>
    public const int ApiVersionFieldNumber = 3;
    private int apiVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApiVersion {
      get { return apiVersion_; }
      set {
        apiVersion_ = value;
      }
    }

    /// <summary>Field number for the "provisioningUrl" field.</summary>
    public const int ProvisioningUrlFieldNumber = 4;
    private string provisioningUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProvisioningUrl {
      get { return provisioningUrl_; }
      set {
        provisioningUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "credentialsUrl" field.</summary>
    public const int CredentialsUrlFieldNumber = 5;
    private string credentialsUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CredentialsUrl {
      get { return credentialsUrl_; }
      set {
        credentialsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tosRequired" field.</summary>
    public const int TosRequiredFieldNumber = 6;
    private bool tosRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TosRequired {
      get { return tosRequired_; }
      set {
        tosRequired_ = value;
      }
    }

    /// <summary>Field number for the "perTransactionCredentialsRequired" field.</summary>
    public const int PerTransactionCredentialsRequiredFieldNumber = 7;
    private bool perTransactionCredentialsRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PerTransactionCredentialsRequired {
      get { return perTransactionCredentialsRequired_; }
      set {
        perTransactionCredentialsRequired_ = value;
      }
    }

    /// <summary>Field number for the "sendSubscriberIdWithCarrierBillingRequests" field.</summary>
    public const int SendSubscriberIdWithCarrierBillingRequestsFieldNumber = 8;
    private bool sendSubscriberIdWithCarrierBillingRequests_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SendSubscriberIdWithCarrierBillingRequests {
      get { return sendSubscriberIdWithCarrierBillingRequests_; }
      set {
        sendSubscriberIdWithCarrierBillingRequests_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CarrierBillingConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CarrierBillingConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (ApiVersion != other.ApiVersion) return false;
      if (ProvisioningUrl != other.ProvisioningUrl) return false;
      if (CredentialsUrl != other.CredentialsUrl) return false;
      if (TosRequired != other.TosRequired) return false;
      if (PerTransactionCredentialsRequired != other.PerTransactionCredentialsRequired) return false;
      if (SendSubscriberIdWithCarrierBillingRequests != other.SendSubscriberIdWithCarrierBillingRequests) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ApiVersion != 0) hash ^= ApiVersion.GetHashCode();
      if (ProvisioningUrl.Length != 0) hash ^= ProvisioningUrl.GetHashCode();
      if (CredentialsUrl.Length != 0) hash ^= CredentialsUrl.GetHashCode();
      if (TosRequired != false) hash ^= TosRequired.GetHashCode();
      if (PerTransactionCredentialsRequired != false) hash ^= PerTransactionCredentialsRequired.GetHashCode();
      if (SendSubscriberIdWithCarrierBillingRequests != false) hash ^= SendSubscriberIdWithCarrierBillingRequests.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (ApiVersion != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ApiVersion);
      }
      if (ProvisioningUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ProvisioningUrl);
      }
      if (CredentialsUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CredentialsUrl);
      }
      if (TosRequired != false) {
        output.WriteRawTag(48);
        output.WriteBool(TosRequired);
      }
      if (PerTransactionCredentialsRequired != false) {
        output.WriteRawTag(56);
        output.WriteBool(PerTransactionCredentialsRequired);
      }
      if (SendSubscriberIdWithCarrierBillingRequests != false) {
        output.WriteRawTag(64);
        output.WriteBool(SendSubscriberIdWithCarrierBillingRequests);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ApiVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApiVersion);
      }
      if (ProvisioningUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProvisioningUrl);
      }
      if (CredentialsUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CredentialsUrl);
      }
      if (TosRequired != false) {
        size += 1 + 1;
      }
      if (PerTransactionCredentialsRequired != false) {
        size += 1 + 1;
      }
      if (SendSubscriberIdWithCarrierBillingRequests != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CarrierBillingConfig other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ApiVersion != 0) {
        ApiVersion = other.ApiVersion;
      }
      if (other.ProvisioningUrl.Length != 0) {
        ProvisioningUrl = other.ProvisioningUrl;
      }
      if (other.CredentialsUrl.Length != 0) {
        CredentialsUrl = other.CredentialsUrl;
      }
      if (other.TosRequired != false) {
        TosRequired = other.TosRequired;
      }
      if (other.PerTransactionCredentialsRequired != false) {
        PerTransactionCredentialsRequired = other.PerTransactionCredentialsRequired;
      }
      if (other.SendSubscriberIdWithCarrierBillingRequests != false) {
        SendSubscriberIdWithCarrierBillingRequests = other.SendSubscriberIdWithCarrierBillingRequests;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            ApiVersion = input.ReadInt32();
            break;
          }
          case 34: {
            ProvisioningUrl = input.ReadString();
            break;
          }
          case 42: {
            CredentialsUrl = input.ReadString();
            break;
          }
          case 48: {
            TosRequired = input.ReadBool();
            break;
          }
          case 56: {
            PerTransactionCredentialsRequired = input.ReadBool();
            break;
          }
          case 64: {
            SendSubscriberIdWithCarrierBillingRequests = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BillingConfig : pb::IMessage<BillingConfig> {
    private static readonly pb::MessageParser<BillingConfig> _parser = new pb::MessageParser<BillingConfig>(() => new BillingConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BillingConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[110]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingConfig(BillingConfig other) : this() {
      CarrierBillingConfig = other.carrierBillingConfig_ != null ? other.CarrierBillingConfig.Clone() : null;
      maxIabApiVersion_ = other.maxIabApiVersion_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingConfig Clone() {
      return new BillingConfig(this);
    }

    /// <summary>Field number for the "carrierBillingConfig" field.</summary>
    public const int CarrierBillingConfigFieldNumber = 1;
    private global::GooglePlayStore.CarrierBillingConfig carrierBillingConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CarrierBillingConfig CarrierBillingConfig {
      get { return carrierBillingConfig_; }
      set {
        carrierBillingConfig_ = value;
      }
    }

    /// <summary>Field number for the "maxIabApiVersion" field.</summary>
    public const int MaxIabApiVersionFieldNumber = 2;
    private int maxIabApiVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxIabApiVersion {
      get { return maxIabApiVersion_; }
      set {
        maxIabApiVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BillingConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BillingConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CarrierBillingConfig, other.CarrierBillingConfig)) return false;
      if (MaxIabApiVersion != other.MaxIabApiVersion) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (carrierBillingConfig_ != null) hash ^= CarrierBillingConfig.GetHashCode();
      if (MaxIabApiVersion != 0) hash ^= MaxIabApiVersion.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (carrierBillingConfig_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CarrierBillingConfig);
      }
      if (MaxIabApiVersion != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxIabApiVersion);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (carrierBillingConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CarrierBillingConfig);
      }
      if (MaxIabApiVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxIabApiVersion);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BillingConfig other) {
      if (other == null) {
        return;
      }
      if (other.carrierBillingConfig_ != null) {
        if (carrierBillingConfig_ == null) {
          carrierBillingConfig_ = new global::GooglePlayStore.CarrierBillingConfig();
        }
        CarrierBillingConfig.MergeFrom(other.CarrierBillingConfig);
      }
      if (other.MaxIabApiVersion != 0) {
        MaxIabApiVersion = other.MaxIabApiVersion;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (carrierBillingConfig_ == null) {
              carrierBillingConfig_ = new global::GooglePlayStore.CarrierBillingConfig();
            }
            input.ReadMessage(carrierBillingConfig_);
            break;
          }
          case 16: {
            MaxIabApiVersion = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CorpusMetadata : pb::IMessage<CorpusMetadata> {
    private static readonly pb::MessageParser<CorpusMetadata> _parser = new pb::MessageParser<CorpusMetadata>(() => new CorpusMetadata());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CorpusMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[111]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CorpusMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CorpusMetadata(CorpusMetadata other) : this() {
      backend_ = other.backend_;
      name_ = other.name_;
      landingUrl_ = other.landingUrl_;
      libraryName_ = other.libraryName_;
      recsWidgetUrl_ = other.recsWidgetUrl_;
      shopName_ = other.shopName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CorpusMetadata Clone() {
      return new CorpusMetadata(this);
    }

    /// <summary>Field number for the "backend" field.</summary>
    public const int BackendFieldNumber = 1;
    private int backend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Backend {
      get { return backend_; }
      set {
        backend_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "landingUrl" field.</summary>
    public const int LandingUrlFieldNumber = 3;
    private string landingUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LandingUrl {
      get { return landingUrl_; }
      set {
        landingUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "libraryName" field.</summary>
    public const int LibraryNameFieldNumber = 4;
    private string libraryName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LibraryName {
      get { return libraryName_; }
      set {
        libraryName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recsWidgetUrl" field.</summary>
    public const int RecsWidgetUrlFieldNumber = 6;
    private string recsWidgetUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RecsWidgetUrl {
      get { return recsWidgetUrl_; }
      set {
        recsWidgetUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shopName" field.</summary>
    public const int ShopNameFieldNumber = 7;
    private string shopName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShopName {
      get { return shopName_; }
      set {
        shopName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CorpusMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CorpusMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Backend != other.Backend) return false;
      if (Name != other.Name) return false;
      if (LandingUrl != other.LandingUrl) return false;
      if (LibraryName != other.LibraryName) return false;
      if (RecsWidgetUrl != other.RecsWidgetUrl) return false;
      if (ShopName != other.ShopName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Backend != 0) hash ^= Backend.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (LandingUrl.Length != 0) hash ^= LandingUrl.GetHashCode();
      if (LibraryName.Length != 0) hash ^= LibraryName.GetHashCode();
      if (RecsWidgetUrl.Length != 0) hash ^= RecsWidgetUrl.GetHashCode();
      if (ShopName.Length != 0) hash ^= ShopName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Backend != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Backend);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (LandingUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LandingUrl);
      }
      if (LibraryName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LibraryName);
      }
      if (RecsWidgetUrl.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RecsWidgetUrl);
      }
      if (ShopName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ShopName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Backend != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Backend);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (LandingUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LandingUrl);
      }
      if (LibraryName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LibraryName);
      }
      if (RecsWidgetUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RecsWidgetUrl);
      }
      if (ShopName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShopName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CorpusMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Backend != 0) {
        Backend = other.Backend;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.LandingUrl.Length != 0) {
        LandingUrl = other.LandingUrl;
      }
      if (other.LibraryName.Length != 0) {
        LibraryName = other.LibraryName;
      }
      if (other.RecsWidgetUrl.Length != 0) {
        RecsWidgetUrl = other.RecsWidgetUrl;
      }
      if (other.ShopName.Length != 0) {
        ShopName = other.ShopName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Backend = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            LandingUrl = input.ReadString();
            break;
          }
          case 34: {
            LibraryName = input.ReadString();
            break;
          }
          case 50: {
            RecsWidgetUrl = input.ReadString();
            break;
          }
          case 58: {
            ShopName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Experiments : pb::IMessage<Experiments> {
    private static readonly pb::MessageParser<Experiments> _parser = new pb::MessageParser<Experiments>(() => new Experiments());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Experiments> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[112]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Experiments() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Experiments(Experiments other) : this() {
      experimentId_ = other.experimentId_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Experiments Clone() {
      return new Experiments(this);
    }

    /// <summary>Field number for the "experimentId" field.</summary>
    public const int ExperimentIdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_experimentId_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> experimentId_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ExperimentId {
      get { return experimentId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Experiments);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Experiments other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!experimentId_.Equals(other.experimentId_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= experimentId_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      experimentId_.WriteTo(output, _repeated_experimentId_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += experimentId_.CalculateSize(_repeated_experimentId_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Experiments other) {
      if (other == null) {
        return;
      }
      experimentId_.Add(other.experimentId_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            experimentId_.AddEntriesFrom(input, _repeated_experimentId_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SelfUpdateConfig : pb::IMessage<SelfUpdateConfig> {
    private static readonly pb::MessageParser<SelfUpdateConfig> _parser = new pb::MessageParser<SelfUpdateConfig>(() => new SelfUpdateConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SelfUpdateConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[113]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelfUpdateConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelfUpdateConfig(SelfUpdateConfig other) : this() {
      latestClientVersionCode_ = other.latestClientVersionCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelfUpdateConfig Clone() {
      return new SelfUpdateConfig(this);
    }

    /// <summary>Field number for the "latestClientVersionCode" field.</summary>
    public const int LatestClientVersionCodeFieldNumber = 1;
    private int latestClientVersionCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LatestClientVersionCode {
      get { return latestClientVersionCode_; }
      set {
        latestClientVersionCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SelfUpdateConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SelfUpdateConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LatestClientVersionCode != other.LatestClientVersionCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LatestClientVersionCode != 0) hash ^= LatestClientVersionCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LatestClientVersionCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LatestClientVersionCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LatestClientVersionCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LatestClientVersionCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SelfUpdateConfig other) {
      if (other == null) {
        return;
      }
      if (other.LatestClientVersionCode != 0) {
        LatestClientVersionCode = other.LatestClientVersionCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            LatestClientVersionCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TocResponse : pb::IMessage<TocResponse> {
    private static readonly pb::MessageParser<TocResponse> _parser = new pb::MessageParser<TocResponse>(() => new TocResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TocResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[114]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TocResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TocResponse(TocResponse other) : this() {
      corpus_ = other.corpus_.Clone();
      tosVersionDeprecated_ = other.tosVersionDeprecated_;
      tosContent_ = other.tosContent_;
      homeUrl_ = other.homeUrl_;
      Experiments = other.experiments_ != null ? other.Experiments.Clone() : null;
      tosCheckboxTextMarketingEmails_ = other.tosCheckboxTextMarketingEmails_;
      tosToken_ = other.tosToken_;
      iconOverrideUrl_ = other.iconOverrideUrl_;
      SelfUpdateConfig = other.selfUpdateConfig_ != null ? other.SelfUpdateConfig.Clone() : null;
      requiresUploadDeviceConfig_ = other.requiresUploadDeviceConfig_;
      BillingConfig = other.billingConfig_ != null ? other.BillingConfig.Clone() : null;
      recsWidgetUrl_ = other.recsWidgetUrl_;
      socialHomeUrl_ = other.socialHomeUrl_;
      ageVerificationRequired_ = other.ageVerificationRequired_;
      gplusSignupEnabled_ = other.gplusSignupEnabled_;
      redeemEnabled_ = other.redeemEnabled_;
      helpUrl_ = other.helpUrl_;
      themeId_ = other.themeId_;
      entertainmentHomeUrl_ = other.entertainmentHomeUrl_;
      cookie_ = other.cookie_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TocResponse Clone() {
      return new TocResponse(this);
    }

    /// <summary>Field number for the "corpus" field.</summary>
    public const int CorpusFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GooglePlayStore.CorpusMetadata> _repeated_corpus_codec
        = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.CorpusMetadata.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.CorpusMetadata> corpus_ = new pbc::RepeatedField<global::GooglePlayStore.CorpusMetadata>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.CorpusMetadata> Corpus {
      get { return corpus_; }
    }

    /// <summary>Field number for the "tosVersionDeprecated" field.</summary>
    public const int TosVersionDeprecatedFieldNumber = 2;
    private int tosVersionDeprecated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TosVersionDeprecated {
      get { return tosVersionDeprecated_; }
      set {
        tosVersionDeprecated_ = value;
      }
    }

    /// <summary>Field number for the "tosContent" field.</summary>
    public const int TosContentFieldNumber = 3;
    private string tosContent_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TosContent {
      get { return tosContent_; }
      set {
        tosContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "homeUrl" field.</summary>
    public const int HomeUrlFieldNumber = 4;
    private string homeUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HomeUrl {
      get { return homeUrl_; }
      set {
        homeUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "experiments" field.</summary>
    public const int ExperimentsFieldNumber = 5;
    private global::GooglePlayStore.Experiments experiments_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Experiments Experiments {
      get { return experiments_; }
      set {
        experiments_ = value;
      }
    }

    /// <summary>Field number for the "tosCheckboxTextMarketingEmails" field.</summary>
    public const int TosCheckboxTextMarketingEmailsFieldNumber = 6;
    private string tosCheckboxTextMarketingEmails_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TosCheckboxTextMarketingEmails {
      get { return tosCheckboxTextMarketingEmails_; }
      set {
        tosCheckboxTextMarketingEmails_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tosToken" field.</summary>
    public const int TosTokenFieldNumber = 7;
    private string tosToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TosToken {
      get { return tosToken_; }
      set {
        tosToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iconOverrideUrl" field.</summary>
    public const int IconOverrideUrlFieldNumber = 9;
    private string iconOverrideUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IconOverrideUrl {
      get { return iconOverrideUrl_; }
      set {
        iconOverrideUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "selfUpdateConfig" field.</summary>
    public const int SelfUpdateConfigFieldNumber = 10;
    private global::GooglePlayStore.SelfUpdateConfig selfUpdateConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SelfUpdateConfig SelfUpdateConfig {
      get { return selfUpdateConfig_; }
      set {
        selfUpdateConfig_ = value;
      }
    }

    /// <summary>Field number for the "requiresUploadDeviceConfig" field.</summary>
    public const int RequiresUploadDeviceConfigFieldNumber = 11;
    private bool requiresUploadDeviceConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RequiresUploadDeviceConfig {
      get { return requiresUploadDeviceConfig_; }
      set {
        requiresUploadDeviceConfig_ = value;
      }
    }

    /// <summary>Field number for the "billingConfig" field.</summary>
    public const int BillingConfigFieldNumber = 12;
    private global::GooglePlayStore.BillingConfig billingConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.BillingConfig BillingConfig {
      get { return billingConfig_; }
      set {
        billingConfig_ = value;
      }
    }

    /// <summary>Field number for the "recsWidgetUrl" field.</summary>
    public const int RecsWidgetUrlFieldNumber = 13;
    private string recsWidgetUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RecsWidgetUrl {
      get { return recsWidgetUrl_; }
      set {
        recsWidgetUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "socialHomeUrl" field.</summary>
    public const int SocialHomeUrlFieldNumber = 15;
    private string socialHomeUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SocialHomeUrl {
      get { return socialHomeUrl_; }
      set {
        socialHomeUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ageVerificationRequired" field.</summary>
    public const int AgeVerificationRequiredFieldNumber = 16;
    private bool ageVerificationRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AgeVerificationRequired {
      get { return ageVerificationRequired_; }
      set {
        ageVerificationRequired_ = value;
      }
    }

    /// <summary>Field number for the "gplusSignupEnabled" field.</summary>
    public const int GplusSignupEnabledFieldNumber = 17;
    private bool gplusSignupEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool GplusSignupEnabled {
      get { return gplusSignupEnabled_; }
      set {
        gplusSignupEnabled_ = value;
      }
    }

    /// <summary>Field number for the "redeemEnabled" field.</summary>
    public const int RedeemEnabledFieldNumber = 18;
    private bool redeemEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RedeemEnabled {
      get { return redeemEnabled_; }
      set {
        redeemEnabled_ = value;
      }
    }

    /// <summary>Field number for the "helpUrl" field.</summary>
    public const int HelpUrlFieldNumber = 19;
    private string helpUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HelpUrl {
      get { return helpUrl_; }
      set {
        helpUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "themeId" field.</summary>
    public const int ThemeIdFieldNumber = 20;
    private int themeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ThemeId {
      get { return themeId_; }
      set {
        themeId_ = value;
      }
    }

    /// <summary>Field number for the "entertainmentHomeUrl" field.</summary>
    public const int EntertainmentHomeUrlFieldNumber = 21;
    private string entertainmentHomeUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EntertainmentHomeUrl {
      get { return entertainmentHomeUrl_; }
      set {
        entertainmentHomeUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cookie" field.</summary>
    public const int CookieFieldNumber = 22;
    private string cookie_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cookie {
      get { return cookie_; }
      set {
        cookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TocResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TocResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!corpus_.Equals(other.corpus_)) return false;
      if (TosVersionDeprecated != other.TosVersionDeprecated) return false;
      if (TosContent != other.TosContent) return false;
      if (HomeUrl != other.HomeUrl) return false;
      if (!object.Equals(Experiments, other.Experiments)) return false;
      if (TosCheckboxTextMarketingEmails != other.TosCheckboxTextMarketingEmails) return false;
      if (TosToken != other.TosToken) return false;
      if (IconOverrideUrl != other.IconOverrideUrl) return false;
      if (!object.Equals(SelfUpdateConfig, other.SelfUpdateConfig)) return false;
      if (RequiresUploadDeviceConfig != other.RequiresUploadDeviceConfig) return false;
      if (!object.Equals(BillingConfig, other.BillingConfig)) return false;
      if (RecsWidgetUrl != other.RecsWidgetUrl) return false;
      if (SocialHomeUrl != other.SocialHomeUrl) return false;
      if (AgeVerificationRequired != other.AgeVerificationRequired) return false;
      if (GplusSignupEnabled != other.GplusSignupEnabled) return false;
      if (RedeemEnabled != other.RedeemEnabled) return false;
      if (HelpUrl != other.HelpUrl) return false;
      if (ThemeId != other.ThemeId) return false;
      if (EntertainmentHomeUrl != other.EntertainmentHomeUrl) return false;
      if (Cookie != other.Cookie) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= corpus_.GetHashCode();
      if (TosVersionDeprecated != 0) hash ^= TosVersionDeprecated.GetHashCode();
      if (TosContent.Length != 0) hash ^= TosContent.GetHashCode();
      if (HomeUrl.Length != 0) hash ^= HomeUrl.GetHashCode();
      if (experiments_ != null) hash ^= Experiments.GetHashCode();
      if (TosCheckboxTextMarketingEmails.Length != 0) hash ^= TosCheckboxTextMarketingEmails.GetHashCode();
      if (TosToken.Length != 0) hash ^= TosToken.GetHashCode();
      if (IconOverrideUrl.Length != 0) hash ^= IconOverrideUrl.GetHashCode();
      if (selfUpdateConfig_ != null) hash ^= SelfUpdateConfig.GetHashCode();
      if (RequiresUploadDeviceConfig != false) hash ^= RequiresUploadDeviceConfig.GetHashCode();
      if (billingConfig_ != null) hash ^= BillingConfig.GetHashCode();
      if (RecsWidgetUrl.Length != 0) hash ^= RecsWidgetUrl.GetHashCode();
      if (SocialHomeUrl.Length != 0) hash ^= SocialHomeUrl.GetHashCode();
      if (AgeVerificationRequired != false) hash ^= AgeVerificationRequired.GetHashCode();
      if (GplusSignupEnabled != false) hash ^= GplusSignupEnabled.GetHashCode();
      if (RedeemEnabled != false) hash ^= RedeemEnabled.GetHashCode();
      if (HelpUrl.Length != 0) hash ^= HelpUrl.GetHashCode();
      if (ThemeId != 0) hash ^= ThemeId.GetHashCode();
      if (EntertainmentHomeUrl.Length != 0) hash ^= EntertainmentHomeUrl.GetHashCode();
      if (Cookie.Length != 0) hash ^= Cookie.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      corpus_.WriteTo(output, _repeated_corpus_codec);
      if (TosVersionDeprecated != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TosVersionDeprecated);
      }
      if (TosContent.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TosContent);
      }
      if (HomeUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(HomeUrl);
      }
      if (experiments_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Experiments);
      }
      if (TosCheckboxTextMarketingEmails.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TosCheckboxTextMarketingEmails);
      }
      if (TosToken.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TosToken);
      }
      if (IconOverrideUrl.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(IconOverrideUrl);
      }
      if (selfUpdateConfig_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(SelfUpdateConfig);
      }
      if (RequiresUploadDeviceConfig != false) {
        output.WriteRawTag(88);
        output.WriteBool(RequiresUploadDeviceConfig);
      }
      if (billingConfig_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(BillingConfig);
      }
      if (RecsWidgetUrl.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(RecsWidgetUrl);
      }
      if (SocialHomeUrl.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(SocialHomeUrl);
      }
      if (AgeVerificationRequired != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(AgeVerificationRequired);
      }
      if (GplusSignupEnabled != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(GplusSignupEnabled);
      }
      if (RedeemEnabled != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(RedeemEnabled);
      }
      if (HelpUrl.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(HelpUrl);
      }
      if (ThemeId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(ThemeId);
      }
      if (EntertainmentHomeUrl.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(EntertainmentHomeUrl);
      }
      if (Cookie.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(Cookie);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += corpus_.CalculateSize(_repeated_corpus_codec);
      if (TosVersionDeprecated != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TosVersionDeprecated);
      }
      if (TosContent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TosContent);
      }
      if (HomeUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeUrl);
      }
      if (experiments_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Experiments);
      }
      if (TosCheckboxTextMarketingEmails.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TosCheckboxTextMarketingEmails);
      }
      if (TosToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TosToken);
      }
      if (IconOverrideUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconOverrideUrl);
      }
      if (selfUpdateConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelfUpdateConfig);
      }
      if (RequiresUploadDeviceConfig != false) {
        size += 1 + 1;
      }
      if (billingConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BillingConfig);
      }
      if (RecsWidgetUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RecsWidgetUrl);
      }
      if (SocialHomeUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SocialHomeUrl);
      }
      if (AgeVerificationRequired != false) {
        size += 2 + 1;
      }
      if (GplusSignupEnabled != false) {
        size += 2 + 1;
      }
      if (RedeemEnabled != false) {
        size += 2 + 1;
      }
      if (HelpUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HelpUrl);
      }
      if (ThemeId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ThemeId);
      }
      if (EntertainmentHomeUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EntertainmentHomeUrl);
      }
      if (Cookie.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Cookie);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TocResponse other) {
      if (other == null) {
        return;
      }
      corpus_.Add(other.corpus_);
      if (other.TosVersionDeprecated != 0) {
        TosVersionDeprecated = other.TosVersionDeprecated;
      }
      if (other.TosContent.Length != 0) {
        TosContent = other.TosContent;
      }
      if (other.HomeUrl.Length != 0) {
        HomeUrl = other.HomeUrl;
      }
      if (other.experiments_ != null) {
        if (experiments_ == null) {
          experiments_ = new global::GooglePlayStore.Experiments();
        }
        Experiments.MergeFrom(other.Experiments);
      }
      if (other.TosCheckboxTextMarketingEmails.Length != 0) {
        TosCheckboxTextMarketingEmails = other.TosCheckboxTextMarketingEmails;
      }
      if (other.TosToken.Length != 0) {
        TosToken = other.TosToken;
      }
      if (other.IconOverrideUrl.Length != 0) {
        IconOverrideUrl = other.IconOverrideUrl;
      }
      if (other.selfUpdateConfig_ != null) {
        if (selfUpdateConfig_ == null) {
          selfUpdateConfig_ = new global::GooglePlayStore.SelfUpdateConfig();
        }
        SelfUpdateConfig.MergeFrom(other.SelfUpdateConfig);
      }
      if (other.RequiresUploadDeviceConfig != false) {
        RequiresUploadDeviceConfig = other.RequiresUploadDeviceConfig;
      }
      if (other.billingConfig_ != null) {
        if (billingConfig_ == null) {
          billingConfig_ = new global::GooglePlayStore.BillingConfig();
        }
        BillingConfig.MergeFrom(other.BillingConfig);
      }
      if (other.RecsWidgetUrl.Length != 0) {
        RecsWidgetUrl = other.RecsWidgetUrl;
      }
      if (other.SocialHomeUrl.Length != 0) {
        SocialHomeUrl = other.SocialHomeUrl;
      }
      if (other.AgeVerificationRequired != false) {
        AgeVerificationRequired = other.AgeVerificationRequired;
      }
      if (other.GplusSignupEnabled != false) {
        GplusSignupEnabled = other.GplusSignupEnabled;
      }
      if (other.RedeemEnabled != false) {
        RedeemEnabled = other.RedeemEnabled;
      }
      if (other.HelpUrl.Length != 0) {
        HelpUrl = other.HelpUrl;
      }
      if (other.ThemeId != 0) {
        ThemeId = other.ThemeId;
      }
      if (other.EntertainmentHomeUrl.Length != 0) {
        EntertainmentHomeUrl = other.EntertainmentHomeUrl;
      }
      if (other.Cookie.Length != 0) {
        Cookie = other.Cookie;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            corpus_.AddEntriesFrom(input, _repeated_corpus_codec);
            break;
          }
          case 16: {
            TosVersionDeprecated = input.ReadInt32();
            break;
          }
          case 26: {
            TosContent = input.ReadString();
            break;
          }
          case 34: {
            HomeUrl = input.ReadString();
            break;
          }
          case 42: {
            if (experiments_ == null) {
              experiments_ = new global::GooglePlayStore.Experiments();
            }
            input.ReadMessage(experiments_);
            break;
          }
          case 50: {
            TosCheckboxTextMarketingEmails = input.ReadString();
            break;
          }
          case 58: {
            TosToken = input.ReadString();
            break;
          }
          case 74: {
            IconOverrideUrl = input.ReadString();
            break;
          }
          case 82: {
            if (selfUpdateConfig_ == null) {
              selfUpdateConfig_ = new global::GooglePlayStore.SelfUpdateConfig();
            }
            input.ReadMessage(selfUpdateConfig_);
            break;
          }
          case 88: {
            RequiresUploadDeviceConfig = input.ReadBool();
            break;
          }
          case 98: {
            if (billingConfig_ == null) {
              billingConfig_ = new global::GooglePlayStore.BillingConfig();
            }
            input.ReadMessage(billingConfig_);
            break;
          }
          case 106: {
            RecsWidgetUrl = input.ReadString();
            break;
          }
          case 122: {
            SocialHomeUrl = input.ReadString();
            break;
          }
          case 128: {
            AgeVerificationRequired = input.ReadBool();
            break;
          }
          case 136: {
            GplusSignupEnabled = input.ReadBool();
            break;
          }
          case 144: {
            RedeemEnabled = input.ReadBool();
            break;
          }
          case 154: {
            HelpUrl = input.ReadString();
            break;
          }
          case 160: {
            ThemeId = input.ReadInt32();
            break;
          }
          case 170: {
            EntertainmentHomeUrl = input.ReadString();
            break;
          }
          case 178: {
            Cookie = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Payload : pb::IMessage<Payload> {
    private static readonly pb::MessageParser<Payload> _parser = new pb::MessageParser<Payload>(() => new Payload());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Payload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[115]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payload(Payload other) : this() {
      ListResponse = other.listResponse_ != null ? other.ListResponse.Clone() : null;
      DetailsResponse = other.detailsResponse_ != null ? other.DetailsResponse.Clone() : null;
      ReviewResponse = other.reviewResponse_ != null ? other.ReviewResponse.Clone() : null;
      BuyResponse = other.buyResponse_ != null ? other.BuyResponse.Clone() : null;
      SearchResponse = other.searchResponse_ != null ? other.SearchResponse.Clone() : null;
      TocResponse = other.tocResponse_ != null ? other.TocResponse.Clone() : null;
      BrowseResponse = other.browseResponse_ != null ? other.BrowseResponse.Clone() : null;
      PurchaseStatusResponse = other.purchaseStatusResponse_ != null ? other.PurchaseStatusResponse.Clone() : null;
      logResponse_ = other.logResponse_;
      flagContentResponse_ = other.flagContentResponse_;
      BulkDetailsResponse = other.bulkDetailsResponse_ != null ? other.BulkDetailsResponse.Clone() : null;
      DeliveryResponse = other.deliveryResponse_ != null ? other.DeliveryResponse.Clone() : null;
      AcceptTosResponse = other.acceptTosResponse_ != null ? other.AcceptTosResponse.Clone() : null;
      AndroidCheckinResponse = other.androidCheckinResponse_ != null ? other.AndroidCheckinResponse.Clone() : null;
      UploadDeviceConfigResponse = other.uploadDeviceConfigResponse_ != null ? other.UploadDeviceConfigResponse.Clone() : null;
      SearchSuggestResponse = other.searchSuggestResponse_ != null ? other.SearchSuggestResponse.Clone() : null;
      TestingProgramResponse = other.testingProgramResponse_ != null ? other.TestingProgramResponse.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payload Clone() {
      return new Payload(this);
    }

    /// <summary>Field number for the "listResponse" field.</summary>
    public const int ListResponseFieldNumber = 1;
    private global::GooglePlayStore.ListResponse listResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ListResponse ListResponse {
      get { return listResponse_; }
      set {
        listResponse_ = value;
      }
    }

    /// <summary>Field number for the "detailsResponse" field.</summary>
    public const int DetailsResponseFieldNumber = 2;
    private global::GooglePlayStore.DetailsResponse detailsResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DetailsResponse DetailsResponse {
      get { return detailsResponse_; }
      set {
        detailsResponse_ = value;
      }
    }

    /// <summary>Field number for the "reviewResponse" field.</summary>
    public const int ReviewResponseFieldNumber = 3;
    private global::GooglePlayStore.ReviewResponse reviewResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ReviewResponse ReviewResponse {
      get { return reviewResponse_; }
      set {
        reviewResponse_ = value;
      }
    }

    /// <summary>Field number for the "buyResponse" field.</summary>
    public const int BuyResponseFieldNumber = 4;
    private global::GooglePlayStore.BuyResponse buyResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.BuyResponse BuyResponse {
      get { return buyResponse_; }
      set {
        buyResponse_ = value;
      }
    }

    /// <summary>Field number for the "searchResponse" field.</summary>
    public const int SearchResponseFieldNumber = 5;
    private global::GooglePlayStore.SearchResponse searchResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SearchResponse SearchResponse {
      get { return searchResponse_; }
      set {
        searchResponse_ = value;
      }
    }

    /// <summary>Field number for the "tocResponse" field.</summary>
    public const int TocResponseFieldNumber = 6;
    private global::GooglePlayStore.TocResponse tocResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TocResponse TocResponse {
      get { return tocResponse_; }
      set {
        tocResponse_ = value;
      }
    }

    /// <summary>Field number for the "browseResponse" field.</summary>
    public const int BrowseResponseFieldNumber = 7;
    private global::GooglePlayStore.BrowseResponse browseResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.BrowseResponse BrowseResponse {
      get { return browseResponse_; }
      set {
        browseResponse_ = value;
      }
    }

    /// <summary>Field number for the "purchaseStatusResponse" field.</summary>
    public const int PurchaseStatusResponseFieldNumber = 8;
    private global::GooglePlayStore.PurchaseStatusResponse purchaseStatusResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.PurchaseStatusResponse PurchaseStatusResponse {
      get { return purchaseStatusResponse_; }
      set {
        purchaseStatusResponse_ = value;
      }
    }

    /// <summary>Field number for the "logResponse" field.</summary>
    public const int LogResponseFieldNumber = 10;
    private string logResponse_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LogResponse {
      get { return logResponse_; }
      set {
        logResponse_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "flagContentResponse" field.</summary>
    public const int FlagContentResponseFieldNumber = 13;
    private string flagContentResponse_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FlagContentResponse {
      get { return flagContentResponse_; }
      set {
        flagContentResponse_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bulkDetailsResponse" field.</summary>
    public const int BulkDetailsResponseFieldNumber = 19;
    private global::GooglePlayStore.BulkDetailsResponse bulkDetailsResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.BulkDetailsResponse BulkDetailsResponse {
      get { return bulkDetailsResponse_; }
      set {
        bulkDetailsResponse_ = value;
      }
    }

    /// <summary>Field number for the "deliveryResponse" field.</summary>
    public const int DeliveryResponseFieldNumber = 21;
    private global::GooglePlayStore.DeliveryResponse deliveryResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DeliveryResponse DeliveryResponse {
      get { return deliveryResponse_; }
      set {
        deliveryResponse_ = value;
      }
    }

    /// <summary>Field number for the "acceptTosResponse" field.</summary>
    public const int AcceptTosResponseFieldNumber = 22;
    private global::GooglePlayStore.AcceptTosResponse acceptTosResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AcceptTosResponse AcceptTosResponse {
      get { return acceptTosResponse_; }
      set {
        acceptTosResponse_ = value;
      }
    }

    /// <summary>Field number for the "androidCheckinResponse" field.</summary>
    public const int AndroidCheckinResponseFieldNumber = 26;
    private global::GooglePlayStore.AndroidCheckinResponse androidCheckinResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AndroidCheckinResponse AndroidCheckinResponse {
      get { return androidCheckinResponse_; }
      set {
        androidCheckinResponse_ = value;
      }
    }

    /// <summary>Field number for the "uploadDeviceConfigResponse" field.</summary>
    public const int UploadDeviceConfigResponseFieldNumber = 28;
    private global::GooglePlayStore.UploadDeviceConfigResponse uploadDeviceConfigResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.UploadDeviceConfigResponse UploadDeviceConfigResponse {
      get { return uploadDeviceConfigResponse_; }
      set {
        uploadDeviceConfigResponse_ = value;
      }
    }

    /// <summary>Field number for the "searchSuggestResponse" field.</summary>
    public const int SearchSuggestResponseFieldNumber = 40;
    private global::GooglePlayStore.SearchSuggestResponse searchSuggestResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SearchSuggestResponse SearchSuggestResponse {
      get { return searchSuggestResponse_; }
      set {
        searchSuggestResponse_ = value;
      }
    }

    /// <summary>Field number for the "testingProgramResponse" field.</summary>
    public const int TestingProgramResponseFieldNumber = 80;
    private global::GooglePlayStore.TestingProgramResponse testingProgramResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TestingProgramResponse TestingProgramResponse {
      get { return testingProgramResponse_; }
      set {
        testingProgramResponse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Payload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Payload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ListResponse, other.ListResponse)) return false;
      if (!object.Equals(DetailsResponse, other.DetailsResponse)) return false;
      if (!object.Equals(ReviewResponse, other.ReviewResponse)) return false;
      if (!object.Equals(BuyResponse, other.BuyResponse)) return false;
      if (!object.Equals(SearchResponse, other.SearchResponse)) return false;
      if (!object.Equals(TocResponse, other.TocResponse)) return false;
      if (!object.Equals(BrowseResponse, other.BrowseResponse)) return false;
      if (!object.Equals(PurchaseStatusResponse, other.PurchaseStatusResponse)) return false;
      if (LogResponse != other.LogResponse) return false;
      if (FlagContentResponse != other.FlagContentResponse) return false;
      if (!object.Equals(BulkDetailsResponse, other.BulkDetailsResponse)) return false;
      if (!object.Equals(DeliveryResponse, other.DeliveryResponse)) return false;
      if (!object.Equals(AcceptTosResponse, other.AcceptTosResponse)) return false;
      if (!object.Equals(AndroidCheckinResponse, other.AndroidCheckinResponse)) return false;
      if (!object.Equals(UploadDeviceConfigResponse, other.UploadDeviceConfigResponse)) return false;
      if (!object.Equals(SearchSuggestResponse, other.SearchSuggestResponse)) return false;
      if (!object.Equals(TestingProgramResponse, other.TestingProgramResponse)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (listResponse_ != null) hash ^= ListResponse.GetHashCode();
      if (detailsResponse_ != null) hash ^= DetailsResponse.GetHashCode();
      if (reviewResponse_ != null) hash ^= ReviewResponse.GetHashCode();
      if (buyResponse_ != null) hash ^= BuyResponse.GetHashCode();
      if (searchResponse_ != null) hash ^= SearchResponse.GetHashCode();
      if (tocResponse_ != null) hash ^= TocResponse.GetHashCode();
      if (browseResponse_ != null) hash ^= BrowseResponse.GetHashCode();
      if (purchaseStatusResponse_ != null) hash ^= PurchaseStatusResponse.GetHashCode();
      if (LogResponse.Length != 0) hash ^= LogResponse.GetHashCode();
      if (FlagContentResponse.Length != 0) hash ^= FlagContentResponse.GetHashCode();
      if (bulkDetailsResponse_ != null) hash ^= BulkDetailsResponse.GetHashCode();
      if (deliveryResponse_ != null) hash ^= DeliveryResponse.GetHashCode();
      if (acceptTosResponse_ != null) hash ^= AcceptTosResponse.GetHashCode();
      if (androidCheckinResponse_ != null) hash ^= AndroidCheckinResponse.GetHashCode();
      if (uploadDeviceConfigResponse_ != null) hash ^= UploadDeviceConfigResponse.GetHashCode();
      if (searchSuggestResponse_ != null) hash ^= SearchSuggestResponse.GetHashCode();
      if (testingProgramResponse_ != null) hash ^= TestingProgramResponse.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (listResponse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ListResponse);
      }
      if (detailsResponse_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DetailsResponse);
      }
      if (reviewResponse_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ReviewResponse);
      }
      if (buyResponse_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(BuyResponse);
      }
      if (searchResponse_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SearchResponse);
      }
      if (tocResponse_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TocResponse);
      }
      if (browseResponse_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(BrowseResponse);
      }
      if (purchaseStatusResponse_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PurchaseStatusResponse);
      }
      if (LogResponse.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(LogResponse);
      }
      if (FlagContentResponse.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(FlagContentResponse);
      }
      if (bulkDetailsResponse_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(BulkDetailsResponse);
      }
      if (deliveryResponse_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(DeliveryResponse);
      }
      if (acceptTosResponse_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(AcceptTosResponse);
      }
      if (androidCheckinResponse_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(AndroidCheckinResponse);
      }
      if (uploadDeviceConfigResponse_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(UploadDeviceConfigResponse);
      }
      if (searchSuggestResponse_ != null) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(SearchSuggestResponse);
      }
      if (testingProgramResponse_ != null) {
        output.WriteRawTag(130, 5);
        output.WriteMessage(TestingProgramResponse);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (listResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ListResponse);
      }
      if (detailsResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DetailsResponse);
      }
      if (reviewResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReviewResponse);
      }
      if (buyResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BuyResponse);
      }
      if (searchResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SearchResponse);
      }
      if (tocResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TocResponse);
      }
      if (browseResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BrowseResponse);
      }
      if (purchaseStatusResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PurchaseStatusResponse);
      }
      if (LogResponse.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogResponse);
      }
      if (FlagContentResponse.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FlagContentResponse);
      }
      if (bulkDetailsResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BulkDetailsResponse);
      }
      if (deliveryResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeliveryResponse);
      }
      if (acceptTosResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AcceptTosResponse);
      }
      if (androidCheckinResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AndroidCheckinResponse);
      }
      if (uploadDeviceConfigResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UploadDeviceConfigResponse);
      }
      if (searchSuggestResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SearchSuggestResponse);
      }
      if (testingProgramResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TestingProgramResponse);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Payload other) {
      if (other == null) {
        return;
      }
      if (other.listResponse_ != null) {
        if (listResponse_ == null) {
          listResponse_ = new global::GooglePlayStore.ListResponse();
        }
        ListResponse.MergeFrom(other.ListResponse);
      }
      if (other.detailsResponse_ != null) {
        if (detailsResponse_ == null) {
          detailsResponse_ = new global::GooglePlayStore.DetailsResponse();
        }
        DetailsResponse.MergeFrom(other.DetailsResponse);
      }
      if (other.reviewResponse_ != null) {
        if (reviewResponse_ == null) {
          reviewResponse_ = new global::GooglePlayStore.ReviewResponse();
        }
        ReviewResponse.MergeFrom(other.ReviewResponse);
      }
      if (other.buyResponse_ != null) {
        if (buyResponse_ == null) {
          buyResponse_ = new global::GooglePlayStore.BuyResponse();
        }
        BuyResponse.MergeFrom(other.BuyResponse);
      }
      if (other.searchResponse_ != null) {
        if (searchResponse_ == null) {
          searchResponse_ = new global::GooglePlayStore.SearchResponse();
        }
        SearchResponse.MergeFrom(other.SearchResponse);
      }
      if (other.tocResponse_ != null) {
        if (tocResponse_ == null) {
          tocResponse_ = new global::GooglePlayStore.TocResponse();
        }
        TocResponse.MergeFrom(other.TocResponse);
      }
      if (other.browseResponse_ != null) {
        if (browseResponse_ == null) {
          browseResponse_ = new global::GooglePlayStore.BrowseResponse();
        }
        BrowseResponse.MergeFrom(other.BrowseResponse);
      }
      if (other.purchaseStatusResponse_ != null) {
        if (purchaseStatusResponse_ == null) {
          purchaseStatusResponse_ = new global::GooglePlayStore.PurchaseStatusResponse();
        }
        PurchaseStatusResponse.MergeFrom(other.PurchaseStatusResponse);
      }
      if (other.LogResponse.Length != 0) {
        LogResponse = other.LogResponse;
      }
      if (other.FlagContentResponse.Length != 0) {
        FlagContentResponse = other.FlagContentResponse;
      }
      if (other.bulkDetailsResponse_ != null) {
        if (bulkDetailsResponse_ == null) {
          bulkDetailsResponse_ = new global::GooglePlayStore.BulkDetailsResponse();
        }
        BulkDetailsResponse.MergeFrom(other.BulkDetailsResponse);
      }
      if (other.deliveryResponse_ != null) {
        if (deliveryResponse_ == null) {
          deliveryResponse_ = new global::GooglePlayStore.DeliveryResponse();
        }
        DeliveryResponse.MergeFrom(other.DeliveryResponse);
      }
      if (other.acceptTosResponse_ != null) {
        if (acceptTosResponse_ == null) {
          acceptTosResponse_ = new global::GooglePlayStore.AcceptTosResponse();
        }
        AcceptTosResponse.MergeFrom(other.AcceptTosResponse);
      }
      if (other.androidCheckinResponse_ != null) {
        if (androidCheckinResponse_ == null) {
          androidCheckinResponse_ = new global::GooglePlayStore.AndroidCheckinResponse();
        }
        AndroidCheckinResponse.MergeFrom(other.AndroidCheckinResponse);
      }
      if (other.uploadDeviceConfigResponse_ != null) {
        if (uploadDeviceConfigResponse_ == null) {
          uploadDeviceConfigResponse_ = new global::GooglePlayStore.UploadDeviceConfigResponse();
        }
        UploadDeviceConfigResponse.MergeFrom(other.UploadDeviceConfigResponse);
      }
      if (other.searchSuggestResponse_ != null) {
        if (searchSuggestResponse_ == null) {
          searchSuggestResponse_ = new global::GooglePlayStore.SearchSuggestResponse();
        }
        SearchSuggestResponse.MergeFrom(other.SearchSuggestResponse);
      }
      if (other.testingProgramResponse_ != null) {
        if (testingProgramResponse_ == null) {
          testingProgramResponse_ = new global::GooglePlayStore.TestingProgramResponse();
        }
        TestingProgramResponse.MergeFrom(other.TestingProgramResponse);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (listResponse_ == null) {
              listResponse_ = new global::GooglePlayStore.ListResponse();
            }
            input.ReadMessage(listResponse_);
            break;
          }
          case 18: {
            if (detailsResponse_ == null) {
              detailsResponse_ = new global::GooglePlayStore.DetailsResponse();
            }
            input.ReadMessage(detailsResponse_);
            break;
          }
          case 26: {
            if (reviewResponse_ == null) {
              reviewResponse_ = new global::GooglePlayStore.ReviewResponse();
            }
            input.ReadMessage(reviewResponse_);
            break;
          }
          case 34: {
            if (buyResponse_ == null) {
              buyResponse_ = new global::GooglePlayStore.BuyResponse();
            }
            input.ReadMessage(buyResponse_);
            break;
          }
          case 42: {
            if (searchResponse_ == null) {
              searchResponse_ = new global::GooglePlayStore.SearchResponse();
            }
            input.ReadMessage(searchResponse_);
            break;
          }
          case 50: {
            if (tocResponse_ == null) {
              tocResponse_ = new global::GooglePlayStore.TocResponse();
            }
            input.ReadMessage(tocResponse_);
            break;
          }
          case 58: {
            if (browseResponse_ == null) {
              browseResponse_ = new global::GooglePlayStore.BrowseResponse();
            }
            input.ReadMessage(browseResponse_);
            break;
          }
          case 66: {
            if (purchaseStatusResponse_ == null) {
              purchaseStatusResponse_ = new global::GooglePlayStore.PurchaseStatusResponse();
            }
            input.ReadMessage(purchaseStatusResponse_);
            break;
          }
          case 82: {
            LogResponse = input.ReadString();
            break;
          }
          case 106: {
            FlagContentResponse = input.ReadString();
            break;
          }
          case 154: {
            if (bulkDetailsResponse_ == null) {
              bulkDetailsResponse_ = new global::GooglePlayStore.BulkDetailsResponse();
            }
            input.ReadMessage(bulkDetailsResponse_);
            break;
          }
          case 170: {
            if (deliveryResponse_ == null) {
              deliveryResponse_ = new global::GooglePlayStore.DeliveryResponse();
            }
            input.ReadMessage(deliveryResponse_);
            break;
          }
          case 178: {
            if (acceptTosResponse_ == null) {
              acceptTosResponse_ = new global::GooglePlayStore.AcceptTosResponse();
            }
            input.ReadMessage(acceptTosResponse_);
            break;
          }
          case 210: {
            if (androidCheckinResponse_ == null) {
              androidCheckinResponse_ = new global::GooglePlayStore.AndroidCheckinResponse();
            }
            input.ReadMessage(androidCheckinResponse_);
            break;
          }
          case 226: {
            if (uploadDeviceConfigResponse_ == null) {
              uploadDeviceConfigResponse_ = new global::GooglePlayStore.UploadDeviceConfigResponse();
            }
            input.ReadMessage(uploadDeviceConfigResponse_);
            break;
          }
          case 322: {
            if (searchSuggestResponse_ == null) {
              searchSuggestResponse_ = new global::GooglePlayStore.SearchSuggestResponse();
            }
            input.ReadMessage(searchSuggestResponse_);
            break;
          }
          case 642: {
            if (testingProgramResponse_ == null) {
              testingProgramResponse_ = new global::GooglePlayStore.TestingProgramResponse();
            }
            input.ReadMessage(testingProgramResponse_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PreFetch : pb::IMessage<PreFetch> {
    private static readonly pb::MessageParser<PreFetch> _parser = new pb::MessageParser<PreFetch>(() => new PreFetch());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PreFetch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[116]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreFetch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreFetch(PreFetch other) : this() {
      url_ = other.url_;
      Response = other.response_ != null ? other.Response.Clone() : null;
      etag_ = other.etag_;
      ttl_ = other.ttl_;
      softTtl_ = other.softTtl_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreFetch Clone() {
      return new PreFetch(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 2;
    private global::GooglePlayStore.ResponseWrapper response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ResponseWrapper Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "etag" field.</summary>
    public const int EtagFieldNumber = 3;
    private string etag_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Etag {
      get { return etag_; }
      set {
        etag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ttl" field.</summary>
    public const int TtlFieldNumber = 4;
    private long ttl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Ttl {
      get { return ttl_; }
      set {
        ttl_ = value;
      }
    }

    /// <summary>Field number for the "softTtl" field.</summary>
    public const int SoftTtlFieldNumber = 5;
    private long softTtl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SoftTtl {
      get { return softTtl_; }
      set {
        softTtl_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PreFetch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PreFetch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (!object.Equals(Response, other.Response)) return false;
      if (Etag != other.Etag) return false;
      if (Ttl != other.Ttl) return false;
      if (SoftTtl != other.SoftTtl) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (response_ != null) hash ^= Response.GetHashCode();
      if (Etag.Length != 0) hash ^= Etag.GetHashCode();
      if (Ttl != 0L) hash ^= Ttl.GetHashCode();
      if (SoftTtl != 0L) hash ^= SoftTtl.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (response_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Response);
      }
      if (Etag.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Etag);
      }
      if (Ttl != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Ttl);
      }
      if (SoftTtl != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(SoftTtl);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (Etag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Etag);
      }
      if (Ttl != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Ttl);
      }
      if (SoftTtl != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SoftTtl);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PreFetch other) {
      if (other == null) {
        return;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          response_ = new global::GooglePlayStore.ResponseWrapper();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.Etag.Length != 0) {
        Etag = other.Etag;
      }
      if (other.Ttl != 0L) {
        Ttl = other.Ttl;
      }
      if (other.SoftTtl != 0L) {
        SoftTtl = other.SoftTtl;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            if (response_ == null) {
              response_ = new global::GooglePlayStore.ResponseWrapper();
            }
            input.ReadMessage(response_);
            break;
          }
          case 26: {
            Etag = input.ReadString();
            break;
          }
          case 32: {
            Ttl = input.ReadInt64();
            break;
          }
          case 40: {
            SoftTtl = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerMetadata : pb::IMessage<ServerMetadata> {
    private static readonly pb::MessageParser<ServerMetadata> _parser = new pb::MessageParser<ServerMetadata>(() => new ServerMetadata());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[117]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerMetadata(ServerMetadata other) : this() {
      latencyMillis_ = other.latencyMillis_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerMetadata Clone() {
      return new ServerMetadata(this);
    }

    /// <summary>Field number for the "latencyMillis" field.</summary>
    public const int LatencyMillisFieldNumber = 1;
    private long latencyMillis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LatencyMillis {
      get { return latencyMillis_; }
      set {
        latencyMillis_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LatencyMillis != other.LatencyMillis) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LatencyMillis != 0L) hash ^= LatencyMillis.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LatencyMillis != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(LatencyMillis);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LatencyMillis != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LatencyMillis);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerMetadata other) {
      if (other == null) {
        return;
      }
      if (other.LatencyMillis != 0L) {
        LatencyMillis = other.LatencyMillis;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            LatencyMillis = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Targets : pb::IMessage<Targets> {
    private static readonly pb::MessageParser<Targets> _parser = new pb::MessageParser<Targets>(() => new Targets());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Targets> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[118]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Targets() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Targets(Targets other) : this() {
      targetId_ = other.targetId_.Clone();
      signature_ = other.signature_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Targets Clone() {
      return new Targets(this);
    }

    /// <summary>Field number for the "targetId" field.</summary>
    public const int TargetIdFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_targetId_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> targetId_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> TargetId {
      get { return targetId_; }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private pb::ByteString signature_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Targets);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Targets other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!targetId_.Equals(other.targetId_)) return false;
      if (Signature != other.Signature) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= targetId_.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      targetId_.WriteTo(output, _repeated_targetId_codec);
      if (Signature.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Signature);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += targetId_.CalculateSize(_repeated_targetId_codec);
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Targets other) {
      if (other == null) {
        return;
      }
      targetId_.Add(other.targetId_);
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            targetId_.AddEntriesFrom(input, _repeated_targetId_codec);
            break;
          }
          case 18: {
            Signature = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerCookie : pb::IMessage<ServerCookie> {
    private static readonly pb::MessageParser<ServerCookie> _parser = new pb::MessageParser<ServerCookie>(() => new ServerCookie());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerCookie> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[119]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerCookie() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerCookie(ServerCookie other) : this() {
      type_ = other.type_;
      token_ = other.token_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerCookie Clone() {
      return new ServerCookie(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private pb::ByteString token_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerCookie);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerCookie other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Token != other.Token) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Token);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Token);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerCookie other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            Token = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerCookies : pb::IMessage<ServerCookies> {
    private static readonly pb::MessageParser<ServerCookies> _parser = new pb::MessageParser<ServerCookies>(() => new ServerCookies());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerCookies> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[120]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerCookies() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerCookies(ServerCookies other) : this() {
      serverCookie_ = other.serverCookie_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerCookies Clone() {
      return new ServerCookies(this);
    }

    /// <summary>Field number for the "serverCookie" field.</summary>
    public const int ServerCookieFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GooglePlayStore.ServerCookie> _repeated_serverCookie_codec
        = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.ServerCookie.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.ServerCookie> serverCookie_ = new pbc::RepeatedField<global::GooglePlayStore.ServerCookie>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.ServerCookie> ServerCookie {
      get { return serverCookie_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerCookies);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerCookies other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!serverCookie_.Equals(other.serverCookie_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= serverCookie_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      serverCookie_.WriteTo(output, _repeated_serverCookie_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += serverCookie_.CalculateSize(_repeated_serverCookie_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerCookies other) {
      if (other == null) {
        return;
      }
      serverCookie_.Add(other.serverCookie_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            serverCookie_.AddEntriesFrom(input, _repeated_serverCookie_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResponseWrapper : pb::IMessage<ResponseWrapper> {
    private static readonly pb::MessageParser<ResponseWrapper> _parser = new pb::MessageParser<ResponseWrapper>(() => new ResponseWrapper());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseWrapper> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[121]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseWrapper() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseWrapper(ResponseWrapper other) : this() {
      Payload = other.payload_ != null ? other.Payload.Clone() : null;
      Commands = other.commands_ != null ? other.Commands.Clone() : null;
      preFetch_ = other.preFetch_.Clone();
      notification_ = other.notification_.Clone();
      ServerMetadata = other.serverMetadata_ != null ? other.ServerMetadata.Clone() : null;
      Targets = other.targets_ != null ? other.Targets.Clone() : null;
      ServerCookies = other.serverCookies_ != null ? other.ServerCookies.Clone() : null;
      serverLogsCookie_ = other.serverLogsCookie_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseWrapper Clone() {
      return new ResponseWrapper(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    private global::GooglePlayStore.Payload payload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Payload Payload {
      get { return payload_; }
      set {
        payload_ = value;
      }
    }

    /// <summary>Field number for the "commands" field.</summary>
    public const int CommandsFieldNumber = 2;
    private global::GooglePlayStore.ServerCommands commands_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ServerCommands Commands {
      get { return commands_; }
      set {
        commands_ = value;
      }
    }

    /// <summary>Field number for the "preFetch" field.</summary>
    public const int PreFetchFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.PreFetch> _repeated_preFetch_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.PreFetch.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.PreFetch> preFetch_ = new pbc::RepeatedField<global::GooglePlayStore.PreFetch>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.PreFetch> PreFetch {
      get { return preFetch_; }
    }

    /// <summary>Field number for the "notification" field.</summary>
    public const int NotificationFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Notification> _repeated_notification_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.Notification.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Notification> notification_ = new pbc::RepeatedField<global::GooglePlayStore.Notification>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Notification> Notification {
      get { return notification_; }
    }

    /// <summary>Field number for the "serverMetadata" field.</summary>
    public const int ServerMetadataFieldNumber = 5;
    private global::GooglePlayStore.ServerMetadata serverMetadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ServerMetadata ServerMetadata {
      get { return serverMetadata_; }
      set {
        serverMetadata_ = value;
      }
    }

    /// <summary>Field number for the "targets" field.</summary>
    public const int TargetsFieldNumber = 6;
    private global::GooglePlayStore.Targets targets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Targets Targets {
      get { return targets_; }
      set {
        targets_ = value;
      }
    }

    /// <summary>Field number for the "serverCookies" field.</summary>
    public const int ServerCookiesFieldNumber = 7;
    private global::GooglePlayStore.ServerCookies serverCookies_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.ServerCookies ServerCookies {
      get { return serverCookies_; }
      set {
        serverCookies_ = value;
      }
    }

    /// <summary>Field number for the "serverLogsCookie" field.</summary>
    public const int ServerLogsCookieFieldNumber = 9;
    private pb::ByteString serverLogsCookie_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ServerLogsCookie {
      get { return serverLogsCookie_; }
      set {
        serverLogsCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseWrapper);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseWrapper other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Payload, other.Payload)) return false;
      if (!object.Equals(Commands, other.Commands)) return false;
      if(!preFetch_.Equals(other.preFetch_)) return false;
      if(!notification_.Equals(other.notification_)) return false;
      if (!object.Equals(ServerMetadata, other.ServerMetadata)) return false;
      if (!object.Equals(Targets, other.Targets)) return false;
      if (!object.Equals(ServerCookies, other.ServerCookies)) return false;
      if (ServerLogsCookie != other.ServerLogsCookie) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (payload_ != null) hash ^= Payload.GetHashCode();
      if (commands_ != null) hash ^= Commands.GetHashCode();
      hash ^= preFetch_.GetHashCode();
      hash ^= notification_.GetHashCode();
      if (serverMetadata_ != null) hash ^= ServerMetadata.GetHashCode();
      if (targets_ != null) hash ^= Targets.GetHashCode();
      if (serverCookies_ != null) hash ^= ServerCookies.GetHashCode();
      if (ServerLogsCookie.Length != 0) hash ^= ServerLogsCookie.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (payload_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Payload);
      }
      if (commands_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Commands);
      }
      preFetch_.WriteTo(output, _repeated_preFetch_codec);
      notification_.WriteTo(output, _repeated_notification_codec);
      if (serverMetadata_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ServerMetadata);
      }
      if (targets_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Targets);
      }
      if (serverCookies_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ServerCookies);
      }
      if (ServerLogsCookie.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(ServerLogsCookie);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (payload_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (commands_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Commands);
      }
      size += preFetch_.CalculateSize(_repeated_preFetch_codec);
      size += notification_.CalculateSize(_repeated_notification_codec);
      if (serverMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServerMetadata);
      }
      if (targets_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Targets);
      }
      if (serverCookies_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServerCookies);
      }
      if (ServerLogsCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ServerLogsCookie);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseWrapper other) {
      if (other == null) {
        return;
      }
      if (other.payload_ != null) {
        if (payload_ == null) {
          payload_ = new global::GooglePlayStore.Payload();
        }
        Payload.MergeFrom(other.Payload);
      }
      if (other.commands_ != null) {
        if (commands_ == null) {
          commands_ = new global::GooglePlayStore.ServerCommands();
        }
        Commands.MergeFrom(other.Commands);
      }
      preFetch_.Add(other.preFetch_);
      notification_.Add(other.notification_);
      if (other.serverMetadata_ != null) {
        if (serverMetadata_ == null) {
          serverMetadata_ = new global::GooglePlayStore.ServerMetadata();
        }
        ServerMetadata.MergeFrom(other.ServerMetadata);
      }
      if (other.targets_ != null) {
        if (targets_ == null) {
          targets_ = new global::GooglePlayStore.Targets();
        }
        Targets.MergeFrom(other.Targets);
      }
      if (other.serverCookies_ != null) {
        if (serverCookies_ == null) {
          serverCookies_ = new global::GooglePlayStore.ServerCookies();
        }
        ServerCookies.MergeFrom(other.ServerCookies);
      }
      if (other.ServerLogsCookie.Length != 0) {
        ServerLogsCookie = other.ServerLogsCookie;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (payload_ == null) {
              payload_ = new global::GooglePlayStore.Payload();
            }
            input.ReadMessage(payload_);
            break;
          }
          case 18: {
            if (commands_ == null) {
              commands_ = new global::GooglePlayStore.ServerCommands();
            }
            input.ReadMessage(commands_);
            break;
          }
          case 26: {
            preFetch_.AddEntriesFrom(input, _repeated_preFetch_codec);
            break;
          }
          case 34: {
            notification_.AddEntriesFrom(input, _repeated_notification_codec);
            break;
          }
          case 42: {
            if (serverMetadata_ == null) {
              serverMetadata_ = new global::GooglePlayStore.ServerMetadata();
            }
            input.ReadMessage(serverMetadata_);
            break;
          }
          case 50: {
            if (targets_ == null) {
              targets_ = new global::GooglePlayStore.Targets();
            }
            input.ReadMessage(targets_);
            break;
          }
          case 58: {
            if (serverCookies_ == null) {
              serverCookies_ = new global::GooglePlayStore.ServerCookies();
            }
            input.ReadMessage(serverCookies_);
            break;
          }
          case 74: {
            ServerLogsCookie = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerCommands : pb::IMessage<ServerCommands> {
    private static readonly pb::MessageParser<ServerCommands> _parser = new pb::MessageParser<ServerCommands>(() => new ServerCommands());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerCommands> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[122]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerCommands() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerCommands(ServerCommands other) : this() {
      clearCache_ = other.clearCache_;
      displayErrorMessage_ = other.displayErrorMessage_;
      logErrorStacktrace_ = other.logErrorStacktrace_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerCommands Clone() {
      return new ServerCommands(this);
    }

    /// <summary>Field number for the "clearCache" field.</summary>
    public const int ClearCacheFieldNumber = 1;
    private bool clearCache_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ClearCache {
      get { return clearCache_; }
      set {
        clearCache_ = value;
      }
    }

    /// <summary>Field number for the "displayErrorMessage" field.</summary>
    public const int DisplayErrorMessageFieldNumber = 2;
    private string displayErrorMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayErrorMessage {
      get { return displayErrorMessage_; }
      set {
        displayErrorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "logErrorStacktrace" field.</summary>
    public const int LogErrorStacktraceFieldNumber = 3;
    private string logErrorStacktrace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LogErrorStacktrace {
      get { return logErrorStacktrace_; }
      set {
        logErrorStacktrace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerCommands);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerCommands other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClearCache != other.ClearCache) return false;
      if (DisplayErrorMessage != other.DisplayErrorMessage) return false;
      if (LogErrorStacktrace != other.LogErrorStacktrace) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClearCache != false) hash ^= ClearCache.GetHashCode();
      if (DisplayErrorMessage.Length != 0) hash ^= DisplayErrorMessage.GetHashCode();
      if (LogErrorStacktrace.Length != 0) hash ^= LogErrorStacktrace.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClearCache != false) {
        output.WriteRawTag(8);
        output.WriteBool(ClearCache);
      }
      if (DisplayErrorMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayErrorMessage);
      }
      if (LogErrorStacktrace.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LogErrorStacktrace);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClearCache != false) {
        size += 1 + 1;
      }
      if (DisplayErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayErrorMessage);
      }
      if (LogErrorStacktrace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogErrorStacktrace);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerCommands other) {
      if (other == null) {
        return;
      }
      if (other.ClearCache != false) {
        ClearCache = other.ClearCache;
      }
      if (other.DisplayErrorMessage.Length != 0) {
        DisplayErrorMessage = other.DisplayErrorMessage;
      }
      if (other.LogErrorStacktrace.Length != 0) {
        LogErrorStacktrace = other.LogErrorStacktrace;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ClearCache = input.ReadBool();
            break;
          }
          case 18: {
            DisplayErrorMessage = input.ReadString();
            break;
          }
          case 26: {
            LogErrorStacktrace = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetReviewsResponse : pb::IMessage<GetReviewsResponse> {
    private static readonly pb::MessageParser<GetReviewsResponse> _parser = new pb::MessageParser<GetReviewsResponse>(() => new GetReviewsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetReviewsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[123]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReviewsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReviewsResponse(GetReviewsResponse other) : this() {
      review_ = other.review_.Clone();
      matchingCount_ = other.matchingCount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReviewsResponse Clone() {
      return new GetReviewsResponse(this);
    }

    /// <summary>Field number for the "review" field.</summary>
    public const int ReviewFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Review> _repeated_review_codec
        = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.Review.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Review> review_ = new pbc::RepeatedField<global::GooglePlayStore.Review>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Review> Review {
      get { return review_; }
    }

    /// <summary>Field number for the "matchingCount" field.</summary>
    public const int MatchingCountFieldNumber = 2;
    private long matchingCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MatchingCount {
      get { return matchingCount_; }
      set {
        matchingCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetReviewsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetReviewsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!review_.Equals(other.review_)) return false;
      if (MatchingCount != other.MatchingCount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= review_.GetHashCode();
      if (MatchingCount != 0L) hash ^= MatchingCount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      review_.WriteTo(output, _repeated_review_codec);
      if (MatchingCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MatchingCount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += review_.CalculateSize(_repeated_review_codec);
      if (MatchingCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MatchingCount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetReviewsResponse other) {
      if (other == null) {
        return;
      }
      review_.Add(other.review_);
      if (other.MatchingCount != 0L) {
        MatchingCount = other.MatchingCount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            review_.AddEntriesFrom(input, _repeated_review_codec);
            break;
          }
          case 16: {
            MatchingCount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Review : pb::IMessage<Review> {
    private static readonly pb::MessageParser<Review> _parser = new pb::MessageParser<Review>(() => new Review());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Review> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[124]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Review() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Review(Review other) : this() {
      authorName_ = other.authorName_;
      url_ = other.url_;
      source_ = other.source_;
      documentVersion_ = other.documentVersion_;
      timestampMsec_ = other.timestampMsec_;
      starRating_ = other.starRating_;
      title_ = other.title_;
      comment_ = other.comment_;
      commentId_ = other.commentId_;
      deviceName_ = other.deviceName_;
      replyText_ = other.replyText_;
      replyTimestampMsec_ = other.replyTimestampMsec_;
      Author = other.author_ != null ? other.Author.Clone() : null;
      Author2 = other.author2_ != null ? other.Author2.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Review Clone() {
      return new Review(this);
    }

    /// <summary>Field number for the "authorName" field.</summary>
    public const int AuthorNameFieldNumber = 1;
    private string authorName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthorName {
      get { return authorName_; }
      set {
        authorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 3;
    private string source_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Source {
      get { return source_; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "documentVersion" field.</summary>
    public const int DocumentVersionFieldNumber = 4;
    private string documentVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DocumentVersion {
      get { return documentVersion_; }
      set {
        documentVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestampMsec" field.</summary>
    public const int TimestampMsecFieldNumber = 5;
    private long timestampMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TimestampMsec {
      get { return timestampMsec_; }
      set {
        timestampMsec_ = value;
      }
    }

    /// <summary>Field number for the "starRating" field.</summary>
    public const int StarRatingFieldNumber = 6;
    private int starRating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StarRating {
      get { return starRating_; }
      set {
        starRating_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 7;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 8;
    private string comment_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "commentId" field.</summary>
    public const int CommentIdFieldNumber = 9;
    private string commentId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CommentId {
      get { return commentId_; }
      set {
        commentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deviceName" field.</summary>
    public const int DeviceNameFieldNumber = 19;
    private string deviceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceName {
      get { return deviceName_; }
      set {
        deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "replyText" field.</summary>
    public const int ReplyTextFieldNumber = 29;
    private string replyText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReplyText {
      get { return replyText_; }
      set {
        replyText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "replyTimestampMsec" field.</summary>
    public const int ReplyTimestampMsecFieldNumber = 30;
    private long replyTimestampMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ReplyTimestampMsec {
      get { return replyTimestampMsec_; }
      set {
        replyTimestampMsec_ = value;
      }
    }

    /// <summary>Field number for the "author" field.</summary>
    public const int AuthorFieldNumber = 31;
    private global::GooglePlayStore.Author author_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Author Author {
      get { return author_; }
      set {
        author_ = value;
      }
    }

    /// <summary>Field number for the "author2" field.</summary>
    public const int Author2FieldNumber = 33;
    private global::GooglePlayStore.Author2 author2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Author2 Author2 {
      get { return author2_; }
      set {
        author2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Review);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Review other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AuthorName != other.AuthorName) return false;
      if (Url != other.Url) return false;
      if (Source != other.Source) return false;
      if (DocumentVersion != other.DocumentVersion) return false;
      if (TimestampMsec != other.TimestampMsec) return false;
      if (StarRating != other.StarRating) return false;
      if (Title != other.Title) return false;
      if (Comment != other.Comment) return false;
      if (CommentId != other.CommentId) return false;
      if (DeviceName != other.DeviceName) return false;
      if (ReplyText != other.ReplyText) return false;
      if (ReplyTimestampMsec != other.ReplyTimestampMsec) return false;
      if (!object.Equals(Author, other.Author)) return false;
      if (!object.Equals(Author2, other.Author2)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AuthorName.Length != 0) hash ^= AuthorName.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (Source.Length != 0) hash ^= Source.GetHashCode();
      if (DocumentVersion.Length != 0) hash ^= DocumentVersion.GetHashCode();
      if (TimestampMsec != 0L) hash ^= TimestampMsec.GetHashCode();
      if (StarRating != 0) hash ^= StarRating.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (CommentId.Length != 0) hash ^= CommentId.GetHashCode();
      if (DeviceName.Length != 0) hash ^= DeviceName.GetHashCode();
      if (ReplyText.Length != 0) hash ^= ReplyText.GetHashCode();
      if (ReplyTimestampMsec != 0L) hash ^= ReplyTimestampMsec.GetHashCode();
      if (author_ != null) hash ^= Author.GetHashCode();
      if (author2_ != null) hash ^= Author2.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AuthorName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AuthorName);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (Source.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Source);
      }
      if (DocumentVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DocumentVersion);
      }
      if (TimestampMsec != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TimestampMsec);
      }
      if (StarRating != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(StarRating);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Title);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Comment);
      }
      if (CommentId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CommentId);
      }
      if (DeviceName.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(DeviceName);
      }
      if (ReplyText.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(ReplyText);
      }
      if (ReplyTimestampMsec != 0L) {
        output.WriteRawTag(240, 1);
        output.WriteInt64(ReplyTimestampMsec);
      }
      if (author_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(Author);
      }
      if (author2_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(Author2);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AuthorName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthorName);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (Source.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (DocumentVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DocumentVersion);
      }
      if (TimestampMsec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimestampMsec);
      }
      if (StarRating != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StarRating);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (CommentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CommentId);
      }
      if (DeviceName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
      }
      if (ReplyText.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ReplyText);
      }
      if (ReplyTimestampMsec != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ReplyTimestampMsec);
      }
      if (author_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Author);
      }
      if (author2_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Author2);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Review other) {
      if (other == null) {
        return;
      }
      if (other.AuthorName.Length != 0) {
        AuthorName = other.AuthorName;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.Source.Length != 0) {
        Source = other.Source;
      }
      if (other.DocumentVersion.Length != 0) {
        DocumentVersion = other.DocumentVersion;
      }
      if (other.TimestampMsec != 0L) {
        TimestampMsec = other.TimestampMsec;
      }
      if (other.StarRating != 0) {
        StarRating = other.StarRating;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      if (other.CommentId.Length != 0) {
        CommentId = other.CommentId;
      }
      if (other.DeviceName.Length != 0) {
        DeviceName = other.DeviceName;
      }
      if (other.ReplyText.Length != 0) {
        ReplyText = other.ReplyText;
      }
      if (other.ReplyTimestampMsec != 0L) {
        ReplyTimestampMsec = other.ReplyTimestampMsec;
      }
      if (other.author_ != null) {
        if (author_ == null) {
          author_ = new global::GooglePlayStore.Author();
        }
        Author.MergeFrom(other.Author);
      }
      if (other.author2_ != null) {
        if (author2_ == null) {
          author2_ = new global::GooglePlayStore.Author2();
        }
        Author2.MergeFrom(other.Author2);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            AuthorName = input.ReadString();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            Source = input.ReadString();
            break;
          }
          case 34: {
            DocumentVersion = input.ReadString();
            break;
          }
          case 40: {
            TimestampMsec = input.ReadInt64();
            break;
          }
          case 48: {
            StarRating = input.ReadInt32();
            break;
          }
          case 58: {
            Title = input.ReadString();
            break;
          }
          case 66: {
            Comment = input.ReadString();
            break;
          }
          case 74: {
            CommentId = input.ReadString();
            break;
          }
          case 154: {
            DeviceName = input.ReadString();
            break;
          }
          case 234: {
            ReplyText = input.ReadString();
            break;
          }
          case 240: {
            ReplyTimestampMsec = input.ReadInt64();
            break;
          }
          case 250: {
            if (author_ == null) {
              author_ = new global::GooglePlayStore.Author();
            }
            input.ReadMessage(author_);
            break;
          }
          case 266: {
            if (author2_ == null) {
              author2_ = new global::GooglePlayStore.Author2();
            }
            input.ReadMessage(author2_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Author : pb::IMessage<Author> {
    private static readonly pb::MessageParser<Author> _parser = new pb::MessageParser<Author>(() => new Author());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Author> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[125]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Author() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Author(Author other) : this() {
      name_ = other.name_;
      Urls = other.urls_ != null ? other.Urls.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Author Clone() {
      return new Author(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "urls" field.</summary>
    public const int UrlsFieldNumber = 5;
    private global::GooglePlayStore.Avatar urls_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Avatar Urls {
      get { return urls_; }
      set {
        urls_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Author);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Author other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Urls, other.Urls)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (urls_ != null) hash ^= Urls.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (urls_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Urls);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (urls_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Urls);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Author other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.urls_ != null) {
        if (urls_ == null) {
          urls_ = new global::GooglePlayStore.Avatar();
        }
        Urls.MergeFrom(other.Urls);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            if (urls_ == null) {
              urls_ = new global::GooglePlayStore.Avatar();
            }
            input.ReadMessage(urls_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Author2 : pb::IMessage<Author2> {
    private static readonly pb::MessageParser<Author2> _parser = new pb::MessageParser<Author2>(() => new Author2());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Author2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[126]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Author2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Author2(Author2 other) : this() {
      personIdString_ = other.personIdString_;
      personId_ = other.personId_;
      unknown1_ = other.unknown1_;
      unknown2_ = other.unknown2_;
      name_ = other.name_;
      Urls = other.urls_ != null ? other.Urls.Clone() : null;
      googlePlusUrl_ = other.googlePlusUrl_;
      googlePlusTagline_ = other.googlePlusTagline_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Author2 Clone() {
      return new Author2(this);
    }

    /// <summary>Field number for the "personIdString" field.</summary>
    public const int PersonIdStringFieldNumber = 1;
    private string personIdString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonIdString {
      get { return personIdString_; }
      set {
        personIdString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "personId" field.</summary>
    public const int PersonIdFieldNumber = 2;
    private string personId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonId {
      get { return personId_; }
      set {
        personId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unknown1" field.</summary>
    public const int Unknown1FieldNumber = 3;
    private int unknown1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Unknown1 {
      get { return unknown1_; }
      set {
        unknown1_ = value;
      }
    }

    /// <summary>Field number for the "unknown2" field.</summary>
    public const int Unknown2FieldNumber = 4;
    private int unknown2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Unknown2 {
      get { return unknown2_; }
      set {
        unknown2_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "urls" field.</summary>
    public const int UrlsFieldNumber = 10;
    private global::GooglePlayStore.Avatar urls_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Avatar Urls {
      get { return urls_; }
      set {
        urls_ = value;
      }
    }

    /// <summary>Field number for the "googlePlusUrl" field.</summary>
    public const int GooglePlusUrlFieldNumber = 19;
    private string googlePlusUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GooglePlusUrl {
      get { return googlePlusUrl_; }
      set {
        googlePlusUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "googlePlusTagline" field.</summary>
    public const int GooglePlusTaglineFieldNumber = 22;
    private string googlePlusTagline_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GooglePlusTagline {
      get { return googlePlusTagline_; }
      set {
        googlePlusTagline_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Author2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Author2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PersonIdString != other.PersonIdString) return false;
      if (PersonId != other.PersonId) return false;
      if (Unknown1 != other.Unknown1) return false;
      if (Unknown2 != other.Unknown2) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(Urls, other.Urls)) return false;
      if (GooglePlusUrl != other.GooglePlusUrl) return false;
      if (GooglePlusTagline != other.GooglePlusTagline) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PersonIdString.Length != 0) hash ^= PersonIdString.GetHashCode();
      if (PersonId.Length != 0) hash ^= PersonId.GetHashCode();
      if (Unknown1 != 0) hash ^= Unknown1.GetHashCode();
      if (Unknown2 != 0) hash ^= Unknown2.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (urls_ != null) hash ^= Urls.GetHashCode();
      if (GooglePlusUrl.Length != 0) hash ^= GooglePlusUrl.GetHashCode();
      if (GooglePlusTagline.Length != 0) hash ^= GooglePlusTagline.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PersonIdString.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PersonIdString);
      }
      if (PersonId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PersonId);
      }
      if (Unknown1 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Unknown1);
      }
      if (Unknown2 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Unknown2);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (urls_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Urls);
      }
      if (GooglePlusUrl.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(GooglePlusUrl);
      }
      if (GooglePlusTagline.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(GooglePlusTagline);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PersonIdString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonIdString);
      }
      if (PersonId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonId);
      }
      if (Unknown1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unknown1);
      }
      if (Unknown2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unknown2);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (urls_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Urls);
      }
      if (GooglePlusUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(GooglePlusUrl);
      }
      if (GooglePlusTagline.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(GooglePlusTagline);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Author2 other) {
      if (other == null) {
        return;
      }
      if (other.PersonIdString.Length != 0) {
        PersonIdString = other.PersonIdString;
      }
      if (other.PersonId.Length != 0) {
        PersonId = other.PersonId;
      }
      if (other.Unknown1 != 0) {
        Unknown1 = other.Unknown1;
      }
      if (other.Unknown2 != 0) {
        Unknown2 = other.Unknown2;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.urls_ != null) {
        if (urls_ == null) {
          urls_ = new global::GooglePlayStore.Avatar();
        }
        Urls.MergeFrom(other.Urls);
      }
      if (other.GooglePlusUrl.Length != 0) {
        GooglePlusUrl = other.GooglePlusUrl;
      }
      if (other.GooglePlusTagline.Length != 0) {
        GooglePlusTagline = other.GooglePlusTagline;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            PersonIdString = input.ReadString();
            break;
          }
          case 18: {
            PersonId = input.ReadString();
            break;
          }
          case 24: {
            Unknown1 = input.ReadInt32();
            break;
          }
          case 32: {
            Unknown2 = input.ReadInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 82: {
            if (urls_ == null) {
              urls_ = new global::GooglePlayStore.Avatar();
            }
            input.ReadMessage(urls_);
            break;
          }
          case 154: {
            GooglePlusUrl = input.ReadString();
            break;
          }
          case 178: {
            GooglePlusTagline = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Avatar : pb::IMessage<Avatar> {
    private static readonly pb::MessageParser<Avatar> _parser = new pb::MessageParser<Avatar>(() => new Avatar());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Avatar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[127]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Avatar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Avatar(Avatar other) : this() {
      unknown1_ = other.unknown1_;
      url_ = other.url_;
      secureUrl_ = other.secureUrl_;
      unknown2_ = other.unknown2_;
      unknown3_ = other.unknown3_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Avatar Clone() {
      return new Avatar(this);
    }

    /// <summary>Field number for the "unknown1" field.</summary>
    public const int Unknown1FieldNumber = 1;
    private int unknown1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Unknown1 {
      get { return unknown1_; }
      set {
        unknown1_ = value;
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 5;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secureUrl" field.</summary>
    public const int SecureUrlFieldNumber = 7;
    private string secureUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SecureUrl {
      get { return secureUrl_; }
      set {
        secureUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unknown2" field.</summary>
    public const int Unknown2FieldNumber = 9;
    private bool unknown2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Unknown2 {
      get { return unknown2_; }
      set {
        unknown2_ = value;
      }
    }

    /// <summary>Field number for the "unknown3" field.</summary>
    public const int Unknown3FieldNumber = 22;
    private bool unknown3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Unknown3 {
      get { return unknown3_; }
      set {
        unknown3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Avatar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Avatar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Unknown1 != other.Unknown1) return false;
      if (Url != other.Url) return false;
      if (SecureUrl != other.SecureUrl) return false;
      if (Unknown2 != other.Unknown2) return false;
      if (Unknown3 != other.Unknown3) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Unknown1 != 0) hash ^= Unknown1.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (SecureUrl.Length != 0) hash ^= SecureUrl.GetHashCode();
      if (Unknown2 != false) hash ^= Unknown2.GetHashCode();
      if (Unknown3 != false) hash ^= Unknown3.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Unknown1 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Unknown1);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Url);
      }
      if (SecureUrl.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SecureUrl);
      }
      if (Unknown2 != false) {
        output.WriteRawTag(72);
        output.WriteBool(Unknown2);
      }
      if (Unknown3 != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(Unknown3);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Unknown1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unknown1);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (SecureUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecureUrl);
      }
      if (Unknown2 != false) {
        size += 1 + 1;
      }
      if (Unknown3 != false) {
        size += 2 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Avatar other) {
      if (other == null) {
        return;
      }
      if (other.Unknown1 != 0) {
        Unknown1 = other.Unknown1;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.SecureUrl.Length != 0) {
        SecureUrl = other.SecureUrl;
      }
      if (other.Unknown2 != false) {
        Unknown2 = other.Unknown2;
      }
      if (other.Unknown3 != false) {
        Unknown3 = other.Unknown3;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Unknown1 = input.ReadInt32();
            break;
          }
          case 42: {
            Url = input.ReadString();
            break;
          }
          case 58: {
            SecureUrl = input.ReadString();
            break;
          }
          case 72: {
            Unknown2 = input.ReadBool();
            break;
          }
          case 176: {
            Unknown3 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReviewResponse : pb::IMessage<ReviewResponse> {
    private static readonly pb::MessageParser<ReviewResponse> _parser = new pb::MessageParser<ReviewResponse>(() => new ReviewResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReviewResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[128]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReviewResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReviewResponse(ReviewResponse other) : this() {
      GetResponse = other.getResponse_ != null ? other.GetResponse.Clone() : null;
      nextPageUrl_ = other.nextPageUrl_;
      UserReview = other.userReview_ != null ? other.UserReview.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReviewResponse Clone() {
      return new ReviewResponse(this);
    }

    /// <summary>Field number for the "getResponse" field.</summary>
    public const int GetResponseFieldNumber = 1;
    private global::GooglePlayStore.GetReviewsResponse getResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.GetReviewsResponse GetResponse {
      get { return getResponse_; }
      set {
        getResponse_ = value;
      }
    }

    /// <summary>Field number for the "nextPageUrl" field.</summary>
    public const int NextPageUrlFieldNumber = 2;
    private string nextPageUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageUrl {
      get { return nextPageUrl_; }
      set {
        nextPageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userReview" field.</summary>
    public const int UserReviewFieldNumber = 3;
    private global::GooglePlayStore.Review userReview_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.Review UserReview {
      get { return userReview_; }
      set {
        userReview_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReviewResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReviewResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GetResponse, other.GetResponse)) return false;
      if (NextPageUrl != other.NextPageUrl) return false;
      if (!object.Equals(UserReview, other.UserReview)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (getResponse_ != null) hash ^= GetResponse.GetHashCode();
      if (NextPageUrl.Length != 0) hash ^= NextPageUrl.GetHashCode();
      if (userReview_ != null) hash ^= UserReview.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (getResponse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GetResponse);
      }
      if (NextPageUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageUrl);
      }
      if (userReview_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserReview);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (getResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetResponse);
      }
      if (NextPageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageUrl);
      }
      if (userReview_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserReview);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReviewResponse other) {
      if (other == null) {
        return;
      }
      if (other.getResponse_ != null) {
        if (getResponse_ == null) {
          getResponse_ = new global::GooglePlayStore.GetReviewsResponse();
        }
        GetResponse.MergeFrom(other.GetResponse);
      }
      if (other.NextPageUrl.Length != 0) {
        NextPageUrl = other.NextPageUrl;
      }
      if (other.userReview_ != null) {
        if (userReview_ == null) {
          userReview_ = new global::GooglePlayStore.Review();
        }
        UserReview.MergeFrom(other.UserReview);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (getResponse_ == null) {
              getResponse_ = new global::GooglePlayStore.GetReviewsResponse();
            }
            input.ReadMessage(getResponse_);
            break;
          }
          case 18: {
            NextPageUrl = input.ReadString();
            break;
          }
          case 26: {
            if (userReview_ == null) {
              userReview_ = new global::GooglePlayStore.Review();
            }
            input.ReadMessage(userReview_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RelatedSearch : pb::IMessage<RelatedSearch> {
    private static readonly pb::MessageParser<RelatedSearch> _parser = new pb::MessageParser<RelatedSearch>(() => new RelatedSearch());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RelatedSearch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[129]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedSearch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedSearch(RelatedSearch other) : this() {
      searchUrl_ = other.searchUrl_;
      header_ = other.header_;
      backendId_ = other.backendId_;
      docType_ = other.docType_;
      current_ = other.current_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedSearch Clone() {
      return new RelatedSearch(this);
    }

    /// <summary>Field number for the "searchUrl" field.</summary>
    public const int SearchUrlFieldNumber = 1;
    private string searchUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SearchUrl {
      get { return searchUrl_; }
      set {
        searchUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 2;
    private string header_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Header {
      get { return header_; }
      set {
        header_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "backendId" field.</summary>
    public const int BackendIdFieldNumber = 3;
    private int backendId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BackendId {
      get { return backendId_; }
      set {
        backendId_ = value;
      }
    }

    /// <summary>Field number for the "docType" field.</summary>
    public const int DocTypeFieldNumber = 4;
    private int docType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DocType {
      get { return docType_; }
      set {
        docType_ = value;
      }
    }

    /// <summary>Field number for the "current" field.</summary>
    public const int CurrentFieldNumber = 5;
    private bool current_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Current {
      get { return current_; }
      set {
        current_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RelatedSearch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RelatedSearch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SearchUrl != other.SearchUrl) return false;
      if (Header != other.Header) return false;
      if (BackendId != other.BackendId) return false;
      if (DocType != other.DocType) return false;
      if (Current != other.Current) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SearchUrl.Length != 0) hash ^= SearchUrl.GetHashCode();
      if (Header.Length != 0) hash ^= Header.GetHashCode();
      if (BackendId != 0) hash ^= BackendId.GetHashCode();
      if (DocType != 0) hash ^= DocType.GetHashCode();
      if (Current != false) hash ^= Current.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SearchUrl.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SearchUrl);
      }
      if (Header.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Header);
      }
      if (BackendId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BackendId);
      }
      if (DocType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DocType);
      }
      if (Current != false) {
        output.WriteRawTag(40);
        output.WriteBool(Current);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SearchUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SearchUrl);
      }
      if (Header.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Header);
      }
      if (BackendId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BackendId);
      }
      if (DocType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DocType);
      }
      if (Current != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RelatedSearch other) {
      if (other == null) {
        return;
      }
      if (other.SearchUrl.Length != 0) {
        SearchUrl = other.SearchUrl;
      }
      if (other.Header.Length != 0) {
        Header = other.Header;
      }
      if (other.BackendId != 0) {
        BackendId = other.BackendId;
      }
      if (other.DocType != 0) {
        DocType = other.DocType;
      }
      if (other.Current != false) {
        Current = other.Current;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SearchUrl = input.ReadString();
            break;
          }
          case 18: {
            Header = input.ReadString();
            break;
          }
          case 24: {
            BackendId = input.ReadInt32();
            break;
          }
          case 32: {
            DocType = input.ReadInt32();
            break;
          }
          case 40: {
            Current = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchResponse : pb::IMessage<SearchResponse> {
    private static readonly pb::MessageParser<SearchResponse> _parser = new pb::MessageParser<SearchResponse>(() => new SearchResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[130]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchResponse(SearchResponse other) : this() {
      originalQuery_ = other.originalQuery_;
      suggestedQuery_ = other.suggestedQuery_;
      aggregateQuery_ = other.aggregateQuery_;
      bucket_ = other.bucket_.Clone();
      doc_ = other.doc_.Clone();
      relatedSearch_ = other.relatedSearch_.Clone();
      nextPageUrl_ = other.nextPageUrl_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchResponse Clone() {
      return new SearchResponse(this);
    }

    /// <summary>Field number for the "originalQuery" field.</summary>
    public const int OriginalQueryFieldNumber = 1;
    private string originalQuery_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalQuery {
      get { return originalQuery_; }
      set {
        originalQuery_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "suggestedQuery" field.</summary>
    public const int SuggestedQueryFieldNumber = 2;
    private string suggestedQuery_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SuggestedQuery {
      get { return suggestedQuery_; }
      set {
        suggestedQuery_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aggregateQuery" field.</summary>
    public const int AggregateQueryFieldNumber = 3;
    private bool aggregateQuery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AggregateQuery {
      get { return aggregateQuery_; }
      set {
        aggregateQuery_ = value;
      }
    }

    /// <summary>Field number for the "bucket" field.</summary>
    public const int BucketFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.Bucket> _repeated_bucket_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.Bucket.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.Bucket> bucket_ = new pbc::RepeatedField<global::GooglePlayStore.Bucket>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.Bucket> Bucket {
      get { return bucket_; }
    }

    /// <summary>Field number for the "doc" field.</summary>
    public const int DocFieldNumber = 5;
    private static readonly pb::FieldCodec<global::GooglePlayStore.DocV2> _repeated_doc_codec
        = pb::FieldCodec.ForMessage(42, global::GooglePlayStore.DocV2.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.DocV2> doc_ = new pbc::RepeatedField<global::GooglePlayStore.DocV2>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.DocV2> Doc {
      get { return doc_; }
    }

    /// <summary>Field number for the "relatedSearch" field.</summary>
    public const int RelatedSearchFieldNumber = 6;
    private static readonly pb::FieldCodec<global::GooglePlayStore.RelatedSearch> _repeated_relatedSearch_codec
        = pb::FieldCodec.ForMessage(50, global::GooglePlayStore.RelatedSearch.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.RelatedSearch> relatedSearch_ = new pbc::RepeatedField<global::GooglePlayStore.RelatedSearch>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.RelatedSearch> RelatedSearch {
      get { return relatedSearch_; }
    }

    /// <summary>Field number for the "nextPageUrl" field.</summary>
    public const int NextPageUrlFieldNumber = 10;
    private string nextPageUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageUrl {
      get { return nextPageUrl_; }
      set {
        nextPageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OriginalQuery != other.OriginalQuery) return false;
      if (SuggestedQuery != other.SuggestedQuery) return false;
      if (AggregateQuery != other.AggregateQuery) return false;
      if(!bucket_.Equals(other.bucket_)) return false;
      if(!doc_.Equals(other.doc_)) return false;
      if(!relatedSearch_.Equals(other.relatedSearch_)) return false;
      if (NextPageUrl != other.NextPageUrl) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OriginalQuery.Length != 0) hash ^= OriginalQuery.GetHashCode();
      if (SuggestedQuery.Length != 0) hash ^= SuggestedQuery.GetHashCode();
      if (AggregateQuery != false) hash ^= AggregateQuery.GetHashCode();
      hash ^= bucket_.GetHashCode();
      hash ^= doc_.GetHashCode();
      hash ^= relatedSearch_.GetHashCode();
      if (NextPageUrl.Length != 0) hash ^= NextPageUrl.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OriginalQuery.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OriginalQuery);
      }
      if (SuggestedQuery.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SuggestedQuery);
      }
      if (AggregateQuery != false) {
        output.WriteRawTag(24);
        output.WriteBool(AggregateQuery);
      }
      bucket_.WriteTo(output, _repeated_bucket_codec);
      doc_.WriteTo(output, _repeated_doc_codec);
      relatedSearch_.WriteTo(output, _repeated_relatedSearch_codec);
      if (NextPageUrl.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(NextPageUrl);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OriginalQuery.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalQuery);
      }
      if (SuggestedQuery.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SuggestedQuery);
      }
      if (AggregateQuery != false) {
        size += 1 + 1;
      }
      size += bucket_.CalculateSize(_repeated_bucket_codec);
      size += doc_.CalculateSize(_repeated_doc_codec);
      size += relatedSearch_.CalculateSize(_repeated_relatedSearch_codec);
      if (NextPageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageUrl);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchResponse other) {
      if (other == null) {
        return;
      }
      if (other.OriginalQuery.Length != 0) {
        OriginalQuery = other.OriginalQuery;
      }
      if (other.SuggestedQuery.Length != 0) {
        SuggestedQuery = other.SuggestedQuery;
      }
      if (other.AggregateQuery != false) {
        AggregateQuery = other.AggregateQuery;
      }
      bucket_.Add(other.bucket_);
      doc_.Add(other.doc_);
      relatedSearch_.Add(other.relatedSearch_);
      if (other.NextPageUrl.Length != 0) {
        NextPageUrl = other.NextPageUrl;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            OriginalQuery = input.ReadString();
            break;
          }
          case 18: {
            SuggestedQuery = input.ReadString();
            break;
          }
          case 24: {
            AggregateQuery = input.ReadBool();
            break;
          }
          case 34: {
            bucket_.AddEntriesFrom(input, _repeated_bucket_codec);
            break;
          }
          case 42: {
            doc_.AddEntriesFrom(input, _repeated_doc_codec);
            break;
          }
          case 50: {
            relatedSearch_.AddEntriesFrom(input, _repeated_relatedSearch_codec);
            break;
          }
          case 82: {
            NextPageUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchSuggestResponse : pb::IMessage<SearchSuggestResponse> {
    private static readonly pb::MessageParser<SearchSuggestResponse> _parser = new pb::MessageParser<SearchSuggestResponse>(() => new SearchSuggestResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchSuggestResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[131]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchSuggestResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchSuggestResponse(SearchSuggestResponse other) : this() {
      entry_ = other.entry_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchSuggestResponse Clone() {
      return new SearchSuggestResponse(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GooglePlayStore.SearchSuggestEntry> _repeated_entry_codec
        = pb::FieldCodec.ForMessage(10, global::GooglePlayStore.SearchSuggestEntry.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.SearchSuggestEntry> entry_ = new pbc::RepeatedField<global::GooglePlayStore.SearchSuggestEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.SearchSuggestEntry> Entry {
      get { return entry_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchSuggestResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchSuggestResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entry_.Equals(other.entry_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entry_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entry_.WriteTo(output, _repeated_entry_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entry_.CalculateSize(_repeated_entry_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchSuggestResponse other) {
      if (other == null) {
        return;
      }
      entry_.Add(other.entry_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            entry_.AddEntriesFrom(input, _repeated_entry_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchSuggestEntry : pb::IMessage<SearchSuggestEntry> {
    private static readonly pb::MessageParser<SearchSuggestEntry> _parser = new pb::MessageParser<SearchSuggestEntry>(() => new SearchSuggestEntry());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchSuggestEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[132]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchSuggestEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchSuggestEntry(SearchSuggestEntry other) : this() {
      type_ = other.type_;
      suggestedQuery_ = other.suggestedQuery_;
      ImageContainer = other.imageContainer_ != null ? other.ImageContainer.Clone() : null;
      title_ = other.title_;
      PackageNameContainer = other.packageNameContainer_ != null ? other.PackageNameContainer.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchSuggestEntry Clone() {
      return new SearchSuggestEntry(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "suggestedQuery" field.</summary>
    public const int SuggestedQueryFieldNumber = 2;
    private string suggestedQuery_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SuggestedQuery {
      get { return suggestedQuery_; }
      set {
        suggestedQuery_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "imageContainer" field.</summary>
    public const int ImageContainerFieldNumber = 5;
    private global::GooglePlayStore.SearchSuggestEntry.Types.ImageContainer imageContainer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SearchSuggestEntry.Types.ImageContainer ImageContainer {
      get { return imageContainer_; }
      set {
        imageContainer_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 6;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "packageNameContainer" field.</summary>
    public const int PackageNameContainerFieldNumber = 8;
    private global::GooglePlayStore.SearchSuggestEntry.Types.PackageNameContainer packageNameContainer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.SearchSuggestEntry.Types.PackageNameContainer PackageNameContainer {
      get { return packageNameContainer_; }
      set {
        packageNameContainer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchSuggestEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchSuggestEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (SuggestedQuery != other.SuggestedQuery) return false;
      if (!object.Equals(ImageContainer, other.ImageContainer)) return false;
      if (Title != other.Title) return false;
      if (!object.Equals(PackageNameContainer, other.PackageNameContainer)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (SuggestedQuery.Length != 0) hash ^= SuggestedQuery.GetHashCode();
      if (imageContainer_ != null) hash ^= ImageContainer.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (packageNameContainer_ != null) hash ^= PackageNameContainer.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (SuggestedQuery.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SuggestedQuery);
      }
      if (imageContainer_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ImageContainer);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Title);
      }
      if (packageNameContainer_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PackageNameContainer);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (SuggestedQuery.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SuggestedQuery);
      }
      if (imageContainer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImageContainer);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (packageNameContainer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PackageNameContainer);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchSuggestEntry other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.SuggestedQuery.Length != 0) {
        SuggestedQuery = other.SuggestedQuery;
      }
      if (other.imageContainer_ != null) {
        if (imageContainer_ == null) {
          imageContainer_ = new global::GooglePlayStore.SearchSuggestEntry.Types.ImageContainer();
        }
        ImageContainer.MergeFrom(other.ImageContainer);
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.packageNameContainer_ != null) {
        if (packageNameContainer_ == null) {
          packageNameContainer_ = new global::GooglePlayStore.SearchSuggestEntry.Types.PackageNameContainer();
        }
        PackageNameContainer.MergeFrom(other.PackageNameContainer);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            SuggestedQuery = input.ReadString();
            break;
          }
          case 42: {
            if (imageContainer_ == null) {
              imageContainer_ = new global::GooglePlayStore.SearchSuggestEntry.Types.ImageContainer();
            }
            input.ReadMessage(imageContainer_);
            break;
          }
          case 50: {
            Title = input.ReadString();
            break;
          }
          case 66: {
            if (packageNameContainer_ == null) {
              packageNameContainer_ = new global::GooglePlayStore.SearchSuggestEntry.Types.PackageNameContainer();
            }
            input.ReadMessage(packageNameContainer_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SearchSuggestEntry message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ImageContainer : pb::IMessage<ImageContainer> {
        private static readonly pb::MessageParser<ImageContainer> _parser = new pb::MessageParser<ImageContainer>(() => new ImageContainer());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ImageContainer> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GooglePlayStore.SearchSuggestEntry.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImageContainer() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImageContainer(ImageContainer other) : this() {
          imageUrl_ = other.imageUrl_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImageContainer Clone() {
          return new ImageContainer(this);
        }

        /// <summary>Field number for the "imageUrl" field.</summary>
        public const int ImageUrlFieldNumber = 5;
        private string imageUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ImageUrl {
          get { return imageUrl_; }
          set {
            imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ImageContainer);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ImageContainer other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ImageUrl != other.ImageUrl) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ImageUrl.Length != 0) hash ^= ImageUrl.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ImageUrl.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(ImageUrl);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ImageUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ImageContainer other) {
          if (other == null) {
            return;
          }
          if (other.ImageUrl.Length != 0) {
            ImageUrl = other.ImageUrl;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 42: {
                ImageUrl = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class PackageNameContainer : pb::IMessage<PackageNameContainer> {
        private static readonly pb::MessageParser<PackageNameContainer> _parser = new pb::MessageParser<PackageNameContainer>(() => new PackageNameContainer());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PackageNameContainer> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GooglePlayStore.SearchSuggestEntry.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PackageNameContainer() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PackageNameContainer(PackageNameContainer other) : this() {
          packageName_ = other.packageName_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PackageNameContainer Clone() {
          return new PackageNameContainer(this);
        }

        /// <summary>Field number for the "packageName" field.</summary>
        public const int PackageNameFieldNumber = 1;
        private string packageName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string PackageName {
          get { return packageName_; }
          set {
            packageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PackageNameContainer);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PackageNameContainer other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PackageName != other.PackageName) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (PackageName.Length != 0) hash ^= PackageName.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (PackageName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(PackageName);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (PackageName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageName);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PackageNameContainer other) {
          if (other == null) {
            return;
          }
          if (other.PackageName.Length != 0) {
            PackageName = other.PackageName;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                PackageName = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class TestingProgramResponse : pb::IMessage<TestingProgramResponse> {
    private static readonly pb::MessageParser<TestingProgramResponse> _parser = new pb::MessageParser<TestingProgramResponse>(() => new TestingProgramResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestingProgramResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[133]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramResponse(TestingProgramResponse other) : this() {
      Result = other.result_ != null ? other.Result.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramResponse Clone() {
      return new TestingProgramResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::GooglePlayStore.TestingProgramResult result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TestingProgramResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestingProgramResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestingProgramResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Result, other.Result)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (result_ != null) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (result_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestingProgramResponse other) {
      if (other == null) {
        return;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          result_ = new global::GooglePlayStore.TestingProgramResult();
        }
        Result.MergeFrom(other.Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            if (result_ == null) {
              result_ = new global::GooglePlayStore.TestingProgramResult();
            }
            input.ReadMessage(result_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestingProgramResult : pb::IMessage<TestingProgramResult> {
    private static readonly pb::MessageParser<TestingProgramResult> _parser = new pb::MessageParser<TestingProgramResult>(() => new TestingProgramResult());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestingProgramResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[134]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramResult(TestingProgramResult other) : this() {
      Details = other.details_ != null ? other.Details.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramResult Clone() {
      return new TestingProgramResult(this);
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 4;
    private global::GooglePlayStore.TestingProgramDetails details_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.TestingProgramDetails Details {
      get { return details_; }
      set {
        details_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestingProgramResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestingProgramResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Details, other.Details)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (details_ != null) hash ^= Details.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (details_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Details);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (details_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Details);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestingProgramResult other) {
      if (other == null) {
        return;
      }
      if (other.details_ != null) {
        if (details_ == null) {
          details_ = new global::GooglePlayStore.TestingProgramDetails();
        }
        Details.MergeFrom(other.Details);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 34: {
            if (details_ == null) {
              details_ = new global::GooglePlayStore.TestingProgramDetails();
            }
            input.ReadMessage(details_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestingProgramDetails : pb::IMessage<TestingProgramDetails> {
    private static readonly pb::MessageParser<TestingProgramDetails> _parser = new pb::MessageParser<TestingProgramDetails>(() => new TestingProgramDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestingProgramDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[135]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramDetails(TestingProgramDetails other) : this() {
      flag1_ = other.flag1_;
      id_ = other.id_;
      unsubscribed_ = other.unsubscribed_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramDetails Clone() {
      return new TestingProgramDetails(this);
    }

    /// <summary>Field number for the "flag1" field.</summary>
    public const int Flag1FieldNumber = 2;
    private bool flag1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Flag1 {
      get { return flag1_; }
      set {
        flag1_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "unsubscribed" field.</summary>
    public const int UnsubscribedFieldNumber = 4;
    private bool unsubscribed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Unsubscribed {
      get { return unsubscribed_; }
      set {
        unsubscribed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestingProgramDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestingProgramDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Flag1 != other.Flag1) return false;
      if (Id != other.Id) return false;
      if (Unsubscribed != other.Unsubscribed) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Flag1 != false) hash ^= Flag1.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Unsubscribed != false) hash ^= Unsubscribed.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Flag1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Flag1);
      }
      if (Id != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Id);
      }
      if (Unsubscribed != false) {
        output.WriteRawTag(32);
        output.WriteBool(Unsubscribed);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Flag1 != false) {
        size += 1 + 1;
      }
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Unsubscribed != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestingProgramDetails other) {
      if (other == null) {
        return;
      }
      if (other.Flag1 != false) {
        Flag1 = other.Flag1;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Unsubscribed != false) {
        Unsubscribed = other.Unsubscribed;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 16: {
            Flag1 = input.ReadBool();
            break;
          }
          case 24: {
            Id = input.ReadInt64();
            break;
          }
          case 32: {
            Unsubscribed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LogRequest : pb::IMessage<LogRequest> {
    private static readonly pb::MessageParser<LogRequest> _parser = new pb::MessageParser<LogRequest>(() => new LogRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[136]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogRequest(LogRequest other) : this() {
      timestamp_ = other.timestamp_;
      downloadConfirmationQuery_ = other.downloadConfirmationQuery_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogRequest Clone() {
      return new LogRequest(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "downloadConfirmationQuery" field.</summary>
    public const int DownloadConfirmationQueryFieldNumber = 2;
    private string downloadConfirmationQuery_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DownloadConfirmationQuery {
      get { return downloadConfirmationQuery_; }
      set {
        downloadConfirmationQuery_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (DownloadConfirmationQuery != other.DownloadConfirmationQuery) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (DownloadConfirmationQuery.Length != 0) hash ^= DownloadConfirmationQuery.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Timestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Timestamp);
      }
      if (DownloadConfirmationQuery.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DownloadConfirmationQuery);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (DownloadConfirmationQuery.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DownloadConfirmationQuery);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogRequest other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.DownloadConfirmationQuery.Length != 0) {
        DownloadConfirmationQuery = other.DownloadConfirmationQuery;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 18: {
            DownloadConfirmationQuery = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestingProgramRequest : pb::IMessage<TestingProgramRequest> {
    private static readonly pb::MessageParser<TestingProgramRequest> _parser = new pb::MessageParser<TestingProgramRequest>(() => new TestingProgramRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestingProgramRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[137]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramRequest(TestingProgramRequest other) : this() {
      packageName_ = other.packageName_;
      subscribe_ = other.subscribe_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestingProgramRequest Clone() {
      return new TestingProgramRequest(this);
    }

    /// <summary>Field number for the "packageName" field.</summary>
    public const int PackageNameFieldNumber = 1;
    private string packageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackageName {
      get { return packageName_; }
      set {
        packageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subscribe" field.</summary>
    public const int SubscribeFieldNumber = 2;
    private bool subscribe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Subscribe {
      get { return subscribe_; }
      set {
        subscribe_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestingProgramRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestingProgramRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PackageName != other.PackageName) return false;
      if (Subscribe != other.Subscribe) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PackageName.Length != 0) hash ^= PackageName.GetHashCode();
      if (Subscribe != false) hash ^= Subscribe.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PackageName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PackageName);
      }
      if (Subscribe != false) {
        output.WriteRawTag(16);
        output.WriteBool(Subscribe);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PackageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageName);
      }
      if (Subscribe != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestingProgramRequest other) {
      if (other == null) {
        return;
      }
      if (other.PackageName.Length != 0) {
        PackageName = other.PackageName;
      }
      if (other.Subscribe != false) {
        Subscribe = other.Subscribe;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            PackageName = input.ReadString();
            break;
          }
          case 16: {
            Subscribe = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UploadDeviceConfigRequest : pb::IMessage<UploadDeviceConfigRequest> {
    private static readonly pb::MessageParser<UploadDeviceConfigRequest> _parser = new pb::MessageParser<UploadDeviceConfigRequest>(() => new UploadDeviceConfigRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadDeviceConfigRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[138]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadDeviceConfigRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadDeviceConfigRequest(UploadDeviceConfigRequest other) : this() {
      DeviceConfiguration = other.deviceConfiguration_ != null ? other.DeviceConfiguration.Clone() : null;
      manufacturer_ = other.manufacturer_;
      gcmRegistrationId_ = other.gcmRegistrationId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadDeviceConfigRequest Clone() {
      return new UploadDeviceConfigRequest(this);
    }

    /// <summary>Field number for the "deviceConfiguration" field.</summary>
    public const int DeviceConfigurationFieldNumber = 1;
    private global::GooglePlayStore.DeviceConfigurationProto deviceConfiguration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DeviceConfigurationProto DeviceConfiguration {
      get { return deviceConfiguration_; }
      set {
        deviceConfiguration_ = value;
      }
    }

    /// <summary>Field number for the "manufacturer" field.</summary>
    public const int ManufacturerFieldNumber = 2;
    private string manufacturer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Manufacturer {
      get { return manufacturer_; }
      set {
        manufacturer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gcmRegistrationId" field.</summary>
    public const int GcmRegistrationIdFieldNumber = 3;
    private string gcmRegistrationId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GcmRegistrationId {
      get { return gcmRegistrationId_; }
      set {
        gcmRegistrationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadDeviceConfigRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadDeviceConfigRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DeviceConfiguration, other.DeviceConfiguration)) return false;
      if (Manufacturer != other.Manufacturer) return false;
      if (GcmRegistrationId != other.GcmRegistrationId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (deviceConfiguration_ != null) hash ^= DeviceConfiguration.GetHashCode();
      if (Manufacturer.Length != 0) hash ^= Manufacturer.GetHashCode();
      if (GcmRegistrationId.Length != 0) hash ^= GcmRegistrationId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (deviceConfiguration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DeviceConfiguration);
      }
      if (Manufacturer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Manufacturer);
      }
      if (GcmRegistrationId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GcmRegistrationId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (deviceConfiguration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceConfiguration);
      }
      if (Manufacturer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Manufacturer);
      }
      if (GcmRegistrationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GcmRegistrationId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadDeviceConfigRequest other) {
      if (other == null) {
        return;
      }
      if (other.deviceConfiguration_ != null) {
        if (deviceConfiguration_ == null) {
          deviceConfiguration_ = new global::GooglePlayStore.DeviceConfigurationProto();
        }
        DeviceConfiguration.MergeFrom(other.DeviceConfiguration);
      }
      if (other.Manufacturer.Length != 0) {
        Manufacturer = other.Manufacturer;
      }
      if (other.GcmRegistrationId.Length != 0) {
        GcmRegistrationId = other.GcmRegistrationId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (deviceConfiguration_ == null) {
              deviceConfiguration_ = new global::GooglePlayStore.DeviceConfigurationProto();
            }
            input.ReadMessage(deviceConfiguration_);
            break;
          }
          case 18: {
            Manufacturer = input.ReadString();
            break;
          }
          case 26: {
            GcmRegistrationId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UploadDeviceConfigResponse : pb::IMessage<UploadDeviceConfigResponse> {
    private static readonly pb::MessageParser<UploadDeviceConfigResponse> _parser = new pb::MessageParser<UploadDeviceConfigResponse>(() => new UploadDeviceConfigResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadDeviceConfigResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[139]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadDeviceConfigResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadDeviceConfigResponse(UploadDeviceConfigResponse other) : this() {
      uploadDeviceConfigToken_ = other.uploadDeviceConfigToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadDeviceConfigResponse Clone() {
      return new UploadDeviceConfigResponse(this);
    }

    /// <summary>Field number for the "uploadDeviceConfigToken" field.</summary>
    public const int UploadDeviceConfigTokenFieldNumber = 1;
    private string uploadDeviceConfigToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UploadDeviceConfigToken {
      get { return uploadDeviceConfigToken_; }
      set {
        uploadDeviceConfigToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadDeviceConfigResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadDeviceConfigResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UploadDeviceConfigToken != other.UploadDeviceConfigToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UploadDeviceConfigToken.Length != 0) hash ^= UploadDeviceConfigToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UploadDeviceConfigToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UploadDeviceConfigToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UploadDeviceConfigToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UploadDeviceConfigToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadDeviceConfigResponse other) {
      if (other == null) {
        return;
      }
      if (other.UploadDeviceConfigToken.Length != 0) {
        UploadDeviceConfigToken = other.UploadDeviceConfigToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            UploadDeviceConfigToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AndroidCheckinRequest : pb::IMessage<AndroidCheckinRequest> {
    private static readonly pb::MessageParser<AndroidCheckinRequest> _parser = new pb::MessageParser<AndroidCheckinRequest>(() => new AndroidCheckinRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidCheckinRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[140]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidCheckinRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidCheckinRequest(AndroidCheckinRequest other) : this() {
      imei_ = other.imei_;
      id_ = other.id_;
      digest_ = other.digest_;
      Checkin = other.checkin_ != null ? other.Checkin.Clone() : null;
      desiredBuild_ = other.desiredBuild_;
      locale_ = other.locale_;
      loggingId_ = other.loggingId_;
      marketCheckin_ = other.marketCheckin_;
      macAddr_ = other.macAddr_.Clone();
      meid_ = other.meid_;
      accountCookie_ = other.accountCookie_.Clone();
      timeZone_ = other.timeZone_;
      securityToken_ = other.securityToken_;
      version_ = other.version_;
      otaCert_ = other.otaCert_.Clone();
      serialNumber_ = other.serialNumber_;
      esn_ = other.esn_;
      DeviceConfiguration = other.deviceConfiguration_ != null ? other.DeviceConfiguration.Clone() : null;
      macAddrType_ = other.macAddrType_.Clone();
      fragment_ = other.fragment_;
      userName_ = other.userName_;
      userSerialNumber_ = other.userSerialNumber_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidCheckinRequest Clone() {
      return new AndroidCheckinRequest(this);
    }

    /// <summary>Field number for the "imei" field.</summary>
    public const int ImeiFieldNumber = 1;
    private string imei_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Imei {
      get { return imei_; }
      set {
        imei_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "digest" field.</summary>
    public const int DigestFieldNumber = 3;
    private string digest_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Digest {
      get { return digest_; }
      set {
        digest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "checkin" field.</summary>
    public const int CheckinFieldNumber = 4;
    private global::GooglePlayStore.AndroidCheckinProto checkin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AndroidCheckinProto Checkin {
      get { return checkin_; }
      set {
        checkin_ = value;
      }
    }

    /// <summary>Field number for the "desiredBuild" field.</summary>
    public const int DesiredBuildFieldNumber = 5;
    private string desiredBuild_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DesiredBuild {
      get { return desiredBuild_; }
      set {
        desiredBuild_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "locale" field.</summary>
    public const int LocaleFieldNumber = 6;
    private string locale_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Locale {
      get { return locale_; }
      set {
        locale_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "loggingId" field.</summary>
    public const int LoggingIdFieldNumber = 7;
    private long loggingId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LoggingId {
      get { return loggingId_; }
      set {
        loggingId_ = value;
      }
    }

    /// <summary>Field number for the "marketCheckin" field.</summary>
    public const int MarketCheckinFieldNumber = 8;
    private string marketCheckin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MarketCheckin {
      get { return marketCheckin_; }
      set {
        marketCheckin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "macAddr" field.</summary>
    public const int MacAddrFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_macAddr_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> macAddr_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MacAddr {
      get { return macAddr_; }
    }

    /// <summary>Field number for the "meid" field.</summary>
    public const int MeidFieldNumber = 10;
    private string meid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Meid {
      get { return meid_; }
      set {
        meid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "accountCookie" field.</summary>
    public const int AccountCookieFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _repeated_accountCookie_codec
        = pb::FieldCodec.ForString(90);
    private readonly pbc::RepeatedField<string> accountCookie_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AccountCookie {
      get { return accountCookie_; }
    }

    /// <summary>Field number for the "timeZone" field.</summary>
    public const int TimeZoneFieldNumber = 12;
    private string timeZone_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TimeZone {
      get { return timeZone_; }
      set {
        timeZone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "securityToken" field.</summary>
    public const int SecurityTokenFieldNumber = 13;
    private ulong securityToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SecurityToken {
      get { return securityToken_; }
      set {
        securityToken_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 14;
    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "otaCert" field.</summary>
    public const int OtaCertFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _repeated_otaCert_codec
        = pb::FieldCodec.ForString(122);
    private readonly pbc::RepeatedField<string> otaCert_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OtaCert {
      get { return otaCert_; }
    }

    /// <summary>Field number for the "serialNumber" field.</summary>
    public const int SerialNumberFieldNumber = 16;
    private string serialNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SerialNumber {
      get { return serialNumber_; }
      set {
        serialNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "esn" field.</summary>
    public const int EsnFieldNumber = 17;
    private string esn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Esn {
      get { return esn_; }
      set {
        esn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deviceConfiguration" field.</summary>
    public const int DeviceConfigurationFieldNumber = 18;
    private global::GooglePlayStore.DeviceConfigurationProto deviceConfiguration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.DeviceConfigurationProto DeviceConfiguration {
      get { return deviceConfiguration_; }
      set {
        deviceConfiguration_ = value;
      }
    }

    /// <summary>Field number for the "macAddrType" field.</summary>
    public const int MacAddrTypeFieldNumber = 19;
    private static readonly pb::FieldCodec<string> _repeated_macAddrType_codec
        = pb::FieldCodec.ForString(154);
    private readonly pbc::RepeatedField<string> macAddrType_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MacAddrType {
      get { return macAddrType_; }
    }

    /// <summary>Field number for the "fragment" field.</summary>
    public const int FragmentFieldNumber = 20;
    private int fragment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Fragment {
      get { return fragment_; }
      set {
        fragment_ = value;
      }
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 21;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userSerialNumber" field.</summary>
    public const int UserSerialNumberFieldNumber = 22;
    private int userSerialNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserSerialNumber {
      get { return userSerialNumber_; }
      set {
        userSerialNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidCheckinRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidCheckinRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Imei != other.Imei) return false;
      if (Id != other.Id) return false;
      if (Digest != other.Digest) return false;
      if (!object.Equals(Checkin, other.Checkin)) return false;
      if (DesiredBuild != other.DesiredBuild) return false;
      if (Locale != other.Locale) return false;
      if (LoggingId != other.LoggingId) return false;
      if (MarketCheckin != other.MarketCheckin) return false;
      if(!macAddr_.Equals(other.macAddr_)) return false;
      if (Meid != other.Meid) return false;
      if(!accountCookie_.Equals(other.accountCookie_)) return false;
      if (TimeZone != other.TimeZone) return false;
      if (SecurityToken != other.SecurityToken) return false;
      if (Version != other.Version) return false;
      if(!otaCert_.Equals(other.otaCert_)) return false;
      if (SerialNumber != other.SerialNumber) return false;
      if (Esn != other.Esn) return false;
      if (!object.Equals(DeviceConfiguration, other.DeviceConfiguration)) return false;
      if(!macAddrType_.Equals(other.macAddrType_)) return false;
      if (Fragment != other.Fragment) return false;
      if (UserName != other.UserName) return false;
      if (UserSerialNumber != other.UserSerialNumber) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Imei.Length != 0) hash ^= Imei.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Digest.Length != 0) hash ^= Digest.GetHashCode();
      if (checkin_ != null) hash ^= Checkin.GetHashCode();
      if (DesiredBuild.Length != 0) hash ^= DesiredBuild.GetHashCode();
      if (Locale.Length != 0) hash ^= Locale.GetHashCode();
      if (LoggingId != 0L) hash ^= LoggingId.GetHashCode();
      if (MarketCheckin.Length != 0) hash ^= MarketCheckin.GetHashCode();
      hash ^= macAddr_.GetHashCode();
      if (Meid.Length != 0) hash ^= Meid.GetHashCode();
      hash ^= accountCookie_.GetHashCode();
      if (TimeZone.Length != 0) hash ^= TimeZone.GetHashCode();
      if (SecurityToken != 0UL) hash ^= SecurityToken.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      hash ^= otaCert_.GetHashCode();
      if (SerialNumber.Length != 0) hash ^= SerialNumber.GetHashCode();
      if (Esn.Length != 0) hash ^= Esn.GetHashCode();
      if (deviceConfiguration_ != null) hash ^= DeviceConfiguration.GetHashCode();
      hash ^= macAddrType_.GetHashCode();
      if (Fragment != 0) hash ^= Fragment.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (UserSerialNumber != 0) hash ^= UserSerialNumber.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Imei.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Imei);
      }
      if (Id != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Id);
      }
      if (Digest.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Digest);
      }
      if (checkin_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Checkin);
      }
      if (DesiredBuild.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DesiredBuild);
      }
      if (Locale.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Locale);
      }
      if (LoggingId != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(LoggingId);
      }
      if (MarketCheckin.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(MarketCheckin);
      }
      macAddr_.WriteTo(output, _repeated_macAddr_codec);
      if (Meid.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Meid);
      }
      accountCookie_.WriteTo(output, _repeated_accountCookie_codec);
      if (TimeZone.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(TimeZone);
      }
      if (SecurityToken != 0UL) {
        output.WriteRawTag(105);
        output.WriteFixed64(SecurityToken);
      }
      if (Version != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Version);
      }
      otaCert_.WriteTo(output, _repeated_otaCert_codec);
      if (SerialNumber.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(SerialNumber);
      }
      if (Esn.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Esn);
      }
      if (deviceConfiguration_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(DeviceConfiguration);
      }
      macAddrType_.WriteTo(output, _repeated_macAddrType_codec);
      if (Fragment != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(Fragment);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(UserName);
      }
      if (UserSerialNumber != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(UserSerialNumber);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Imei.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Imei);
      }
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Digest.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Digest);
      }
      if (checkin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Checkin);
      }
      if (DesiredBuild.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DesiredBuild);
      }
      if (Locale.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Locale);
      }
      if (LoggingId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LoggingId);
      }
      if (MarketCheckin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketCheckin);
      }
      size += macAddr_.CalculateSize(_repeated_macAddr_codec);
      if (Meid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Meid);
      }
      size += accountCookie_.CalculateSize(_repeated_accountCookie_codec);
      if (TimeZone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeZone);
      }
      if (SecurityToken != 0UL) {
        size += 1 + 8;
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      size += otaCert_.CalculateSize(_repeated_otaCert_codec);
      if (SerialNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SerialNumber);
      }
      if (Esn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Esn);
      }
      if (deviceConfiguration_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeviceConfiguration);
      }
      size += macAddrType_.CalculateSize(_repeated_macAddrType_codec);
      if (Fragment != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Fragment);
      }
      if (UserName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (UserSerialNumber != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UserSerialNumber);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidCheckinRequest other) {
      if (other == null) {
        return;
      }
      if (other.Imei.Length != 0) {
        Imei = other.Imei;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Digest.Length != 0) {
        Digest = other.Digest;
      }
      if (other.checkin_ != null) {
        if (checkin_ == null) {
          checkin_ = new global::GooglePlayStore.AndroidCheckinProto();
        }
        Checkin.MergeFrom(other.Checkin);
      }
      if (other.DesiredBuild.Length != 0) {
        DesiredBuild = other.DesiredBuild;
      }
      if (other.Locale.Length != 0) {
        Locale = other.Locale;
      }
      if (other.LoggingId != 0L) {
        LoggingId = other.LoggingId;
      }
      if (other.MarketCheckin.Length != 0) {
        MarketCheckin = other.MarketCheckin;
      }
      macAddr_.Add(other.macAddr_);
      if (other.Meid.Length != 0) {
        Meid = other.Meid;
      }
      accountCookie_.Add(other.accountCookie_);
      if (other.TimeZone.Length != 0) {
        TimeZone = other.TimeZone;
      }
      if (other.SecurityToken != 0UL) {
        SecurityToken = other.SecurityToken;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      otaCert_.Add(other.otaCert_);
      if (other.SerialNumber.Length != 0) {
        SerialNumber = other.SerialNumber;
      }
      if (other.Esn.Length != 0) {
        Esn = other.Esn;
      }
      if (other.deviceConfiguration_ != null) {
        if (deviceConfiguration_ == null) {
          deviceConfiguration_ = new global::GooglePlayStore.DeviceConfigurationProto();
        }
        DeviceConfiguration.MergeFrom(other.DeviceConfiguration);
      }
      macAddrType_.Add(other.macAddrType_);
      if (other.Fragment != 0) {
        Fragment = other.Fragment;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.UserSerialNumber != 0) {
        UserSerialNumber = other.UserSerialNumber;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Imei = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadInt64();
            break;
          }
          case 26: {
            Digest = input.ReadString();
            break;
          }
          case 34: {
            if (checkin_ == null) {
              checkin_ = new global::GooglePlayStore.AndroidCheckinProto();
            }
            input.ReadMessage(checkin_);
            break;
          }
          case 42: {
            DesiredBuild = input.ReadString();
            break;
          }
          case 50: {
            Locale = input.ReadString();
            break;
          }
          case 56: {
            LoggingId = input.ReadInt64();
            break;
          }
          case 66: {
            MarketCheckin = input.ReadString();
            break;
          }
          case 74: {
            macAddr_.AddEntriesFrom(input, _repeated_macAddr_codec);
            break;
          }
          case 82: {
            Meid = input.ReadString();
            break;
          }
          case 90: {
            accountCookie_.AddEntriesFrom(input, _repeated_accountCookie_codec);
            break;
          }
          case 98: {
            TimeZone = input.ReadString();
            break;
          }
          case 105: {
            SecurityToken = input.ReadFixed64();
            break;
          }
          case 112: {
            Version = input.ReadInt32();
            break;
          }
          case 122: {
            otaCert_.AddEntriesFrom(input, _repeated_otaCert_codec);
            break;
          }
          case 130: {
            SerialNumber = input.ReadString();
            break;
          }
          case 138: {
            Esn = input.ReadString();
            break;
          }
          case 146: {
            if (deviceConfiguration_ == null) {
              deviceConfiguration_ = new global::GooglePlayStore.DeviceConfigurationProto();
            }
            input.ReadMessage(deviceConfiguration_);
            break;
          }
          case 154: {
            macAddrType_.AddEntriesFrom(input, _repeated_macAddrType_codec);
            break;
          }
          case 160: {
            Fragment = input.ReadInt32();
            break;
          }
          case 170: {
            UserName = input.ReadString();
            break;
          }
          case 176: {
            UserSerialNumber = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AndroidCheckinResponse : pb::IMessage<AndroidCheckinResponse> {
    private static readonly pb::MessageParser<AndroidCheckinResponse> _parser = new pb::MessageParser<AndroidCheckinResponse>(() => new AndroidCheckinResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidCheckinResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[141]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidCheckinResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidCheckinResponse(AndroidCheckinResponse other) : this() {
      statsOk_ = other.statsOk_;
      intent_ = other.intent_.Clone();
      timeMsec_ = other.timeMsec_;
      digest_ = other.digest_;
      setting_ = other.setting_.Clone();
      marketOk_ = other.marketOk_;
      androidId_ = other.androidId_;
      securityToken_ = other.securityToken_;
      settingsDiff_ = other.settingsDiff_;
      deleteSetting_ = other.deleteSetting_.Clone();
      deviceCheckinConsistencyToken_ = other.deviceCheckinConsistencyToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidCheckinResponse Clone() {
      return new AndroidCheckinResponse(this);
    }

    /// <summary>Field number for the "statsOk" field.</summary>
    public const int StatsOkFieldNumber = 1;
    private bool statsOk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool StatsOk {
      get { return statsOk_; }
      set {
        statsOk_ = value;
      }
    }

    /// <summary>Field number for the "intent" field.</summary>
    public const int IntentFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GooglePlayStore.AndroidIntentProto> _repeated_intent_codec
        = pb::FieldCodec.ForMessage(18, global::GooglePlayStore.AndroidIntentProto.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.AndroidIntentProto> intent_ = new pbc::RepeatedField<global::GooglePlayStore.AndroidIntentProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.AndroidIntentProto> Intent {
      get { return intent_; }
    }

    /// <summary>Field number for the "timeMsec" field.</summary>
    public const int TimeMsecFieldNumber = 3;
    private long timeMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TimeMsec {
      get { return timeMsec_; }
      set {
        timeMsec_ = value;
      }
    }

    /// <summary>Field number for the "digest" field.</summary>
    public const int DigestFieldNumber = 4;
    private string digest_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Digest {
      get { return digest_; }
      set {
        digest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "setting" field.</summary>
    public const int SettingFieldNumber = 5;
    private static readonly pb::FieldCodec<global::GooglePlayStore.GservicesSetting> _repeated_setting_codec
        = pb::FieldCodec.ForMessage(42, global::GooglePlayStore.GservicesSetting.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.GservicesSetting> setting_ = new pbc::RepeatedField<global::GooglePlayStore.GservicesSetting>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.GservicesSetting> Setting {
      get { return setting_; }
    }

    /// <summary>Field number for the "marketOk" field.</summary>
    public const int MarketOkFieldNumber = 6;
    private bool marketOk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MarketOk {
      get { return marketOk_; }
      set {
        marketOk_ = value;
      }
    }

    /// <summary>Field number for the "androidId" field.</summary>
    public const int AndroidIdFieldNumber = 7;
    private ulong androidId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AndroidId {
      get { return androidId_; }
      set {
        androidId_ = value;
      }
    }

    /// <summary>Field number for the "securityToken" field.</summary>
    public const int SecurityTokenFieldNumber = 8;
    private ulong securityToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SecurityToken {
      get { return securityToken_; }
      set {
        securityToken_ = value;
      }
    }

    /// <summary>Field number for the "settingsDiff" field.</summary>
    public const int SettingsDiffFieldNumber = 9;
    private bool settingsDiff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SettingsDiff {
      get { return settingsDiff_; }
      set {
        settingsDiff_ = value;
      }
    }

    /// <summary>Field number for the "deleteSetting" field.</summary>
    public const int DeleteSettingFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_deleteSetting_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> deleteSetting_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> DeleteSetting {
      get { return deleteSetting_; }
    }

    /// <summary>Field number for the "deviceCheckinConsistencyToken" field.</summary>
    public const int DeviceCheckinConsistencyTokenFieldNumber = 12;
    private string deviceCheckinConsistencyToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceCheckinConsistencyToken {
      get { return deviceCheckinConsistencyToken_; }
      set {
        deviceCheckinConsistencyToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidCheckinResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidCheckinResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatsOk != other.StatsOk) return false;
      if(!intent_.Equals(other.intent_)) return false;
      if (TimeMsec != other.TimeMsec) return false;
      if (Digest != other.Digest) return false;
      if(!setting_.Equals(other.setting_)) return false;
      if (MarketOk != other.MarketOk) return false;
      if (AndroidId != other.AndroidId) return false;
      if (SecurityToken != other.SecurityToken) return false;
      if (SettingsDiff != other.SettingsDiff) return false;
      if(!deleteSetting_.Equals(other.deleteSetting_)) return false;
      if (DeviceCheckinConsistencyToken != other.DeviceCheckinConsistencyToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatsOk != false) hash ^= StatsOk.GetHashCode();
      hash ^= intent_.GetHashCode();
      if (TimeMsec != 0L) hash ^= TimeMsec.GetHashCode();
      if (Digest.Length != 0) hash ^= Digest.GetHashCode();
      hash ^= setting_.GetHashCode();
      if (MarketOk != false) hash ^= MarketOk.GetHashCode();
      if (AndroidId != 0UL) hash ^= AndroidId.GetHashCode();
      if (SecurityToken != 0UL) hash ^= SecurityToken.GetHashCode();
      if (SettingsDiff != false) hash ^= SettingsDiff.GetHashCode();
      hash ^= deleteSetting_.GetHashCode();
      if (DeviceCheckinConsistencyToken.Length != 0) hash ^= DeviceCheckinConsistencyToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatsOk != false) {
        output.WriteRawTag(8);
        output.WriteBool(StatsOk);
      }
      intent_.WriteTo(output, _repeated_intent_codec);
      if (TimeMsec != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TimeMsec);
      }
      if (Digest.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Digest);
      }
      setting_.WriteTo(output, _repeated_setting_codec);
      if (MarketOk != false) {
        output.WriteRawTag(48);
        output.WriteBool(MarketOk);
      }
      if (AndroidId != 0UL) {
        output.WriteRawTag(57);
        output.WriteFixed64(AndroidId);
      }
      if (SecurityToken != 0UL) {
        output.WriteRawTag(65);
        output.WriteFixed64(SecurityToken);
      }
      if (SettingsDiff != false) {
        output.WriteRawTag(72);
        output.WriteBool(SettingsDiff);
      }
      deleteSetting_.WriteTo(output, _repeated_deleteSetting_codec);
      if (DeviceCheckinConsistencyToken.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DeviceCheckinConsistencyToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatsOk != false) {
        size += 1 + 1;
      }
      size += intent_.CalculateSize(_repeated_intent_codec);
      if (TimeMsec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeMsec);
      }
      if (Digest.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Digest);
      }
      size += setting_.CalculateSize(_repeated_setting_codec);
      if (MarketOk != false) {
        size += 1 + 1;
      }
      if (AndroidId != 0UL) {
        size += 1 + 8;
      }
      if (SecurityToken != 0UL) {
        size += 1 + 8;
      }
      if (SettingsDiff != false) {
        size += 1 + 1;
      }
      size += deleteSetting_.CalculateSize(_repeated_deleteSetting_codec);
      if (DeviceCheckinConsistencyToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceCheckinConsistencyToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidCheckinResponse other) {
      if (other == null) {
        return;
      }
      if (other.StatsOk != false) {
        StatsOk = other.StatsOk;
      }
      intent_.Add(other.intent_);
      if (other.TimeMsec != 0L) {
        TimeMsec = other.TimeMsec;
      }
      if (other.Digest.Length != 0) {
        Digest = other.Digest;
      }
      setting_.Add(other.setting_);
      if (other.MarketOk != false) {
        MarketOk = other.MarketOk;
      }
      if (other.AndroidId != 0UL) {
        AndroidId = other.AndroidId;
      }
      if (other.SecurityToken != 0UL) {
        SecurityToken = other.SecurityToken;
      }
      if (other.SettingsDiff != false) {
        SettingsDiff = other.SettingsDiff;
      }
      deleteSetting_.Add(other.deleteSetting_);
      if (other.DeviceCheckinConsistencyToken.Length != 0) {
        DeviceCheckinConsistencyToken = other.DeviceCheckinConsistencyToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            StatsOk = input.ReadBool();
            break;
          }
          case 18: {
            intent_.AddEntriesFrom(input, _repeated_intent_codec);
            break;
          }
          case 24: {
            TimeMsec = input.ReadInt64();
            break;
          }
          case 34: {
            Digest = input.ReadString();
            break;
          }
          case 42: {
            setting_.AddEntriesFrom(input, _repeated_setting_codec);
            break;
          }
          case 48: {
            MarketOk = input.ReadBool();
            break;
          }
          case 57: {
            AndroidId = input.ReadFixed64();
            break;
          }
          case 65: {
            SecurityToken = input.ReadFixed64();
            break;
          }
          case 72: {
            SettingsDiff = input.ReadBool();
            break;
          }
          case 82: {
            deleteSetting_.AddEntriesFrom(input, _repeated_deleteSetting_codec);
            break;
          }
          case 98: {
            DeviceCheckinConsistencyToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GservicesSetting : pb::IMessage<GservicesSetting> {
    private static readonly pb::MessageParser<GservicesSetting> _parser = new pb::MessageParser<GservicesSetting>(() => new GservicesSetting());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GservicesSetting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[142]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GservicesSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GservicesSetting(GservicesSetting other) : this() {
      name_ = other.name_;
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GservicesSetting Clone() {
      return new GservicesSetting(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private pb::ByteString name_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GservicesSetting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GservicesSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Name);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GservicesSetting other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadBytes();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AndroidBuildProto : pb::IMessage<AndroidBuildProto> {
    private static readonly pb::MessageParser<AndroidBuildProto> _parser = new pb::MessageParser<AndroidBuildProto>(() => new AndroidBuildProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidBuildProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[143]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidBuildProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidBuildProto(AndroidBuildProto other) : this() {
      id_ = other.id_;
      product_ = other.product_;
      carrier_ = other.carrier_;
      radio_ = other.radio_;
      bootloader_ = other.bootloader_;
      client_ = other.client_;
      timestamp_ = other.timestamp_;
      googleServices_ = other.googleServices_;
      device_ = other.device_;
      sdkVersion_ = other.sdkVersion_;
      model_ = other.model_;
      manufacturer_ = other.manufacturer_;
      buildProduct_ = other.buildProduct_;
      otaInstalled_ = other.otaInstalled_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidBuildProto Clone() {
      return new AndroidBuildProto(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "product" field.</summary>
    public const int ProductFieldNumber = 2;
    private string product_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Product {
      get { return product_; }
      set {
        product_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "carrier" field.</summary>
    public const int CarrierFieldNumber = 3;
    private string carrier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Carrier {
      get { return carrier_; }
      set {
        carrier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "radio" field.</summary>
    public const int RadioFieldNumber = 4;
    private string radio_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Radio {
      get { return radio_; }
      set {
        radio_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bootloader" field.</summary>
    public const int BootloaderFieldNumber = 5;
    private string bootloader_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Bootloader {
      get { return bootloader_; }
      set {
        bootloader_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client" field.</summary>
    public const int ClientFieldNumber = 6;
    private string client_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Client {
      get { return client_; }
      set {
        client_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 7;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "googleServices" field.</summary>
    public const int GoogleServicesFieldNumber = 8;
    private int googleServices_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoogleServices {
      get { return googleServices_; }
      set {
        googleServices_ = value;
      }
    }

    /// <summary>Field number for the "device" field.</summary>
    public const int DeviceFieldNumber = 9;
    private string device_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Device {
      get { return device_; }
      set {
        device_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sdkVersion" field.</summary>
    public const int SdkVersionFieldNumber = 10;
    private int sdkVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SdkVersion {
      get { return sdkVersion_; }
      set {
        sdkVersion_ = value;
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 11;
    private string model_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "manufacturer" field.</summary>
    public const int ManufacturerFieldNumber = 12;
    private string manufacturer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Manufacturer {
      get { return manufacturer_; }
      set {
        manufacturer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "buildProduct" field.</summary>
    public const int BuildProductFieldNumber = 13;
    private string buildProduct_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BuildProduct {
      get { return buildProduct_; }
      set {
        buildProduct_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "otaInstalled" field.</summary>
    public const int OtaInstalledFieldNumber = 14;
    private bool otaInstalled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OtaInstalled {
      get { return otaInstalled_; }
      set {
        otaInstalled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidBuildProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidBuildProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Product != other.Product) return false;
      if (Carrier != other.Carrier) return false;
      if (Radio != other.Radio) return false;
      if (Bootloader != other.Bootloader) return false;
      if (Client != other.Client) return false;
      if (Timestamp != other.Timestamp) return false;
      if (GoogleServices != other.GoogleServices) return false;
      if (Device != other.Device) return false;
      if (SdkVersion != other.SdkVersion) return false;
      if (Model != other.Model) return false;
      if (Manufacturer != other.Manufacturer) return false;
      if (BuildProduct != other.BuildProduct) return false;
      if (OtaInstalled != other.OtaInstalled) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Product.Length != 0) hash ^= Product.GetHashCode();
      if (Carrier.Length != 0) hash ^= Carrier.GetHashCode();
      if (Radio.Length != 0) hash ^= Radio.GetHashCode();
      if (Bootloader.Length != 0) hash ^= Bootloader.GetHashCode();
      if (Client.Length != 0) hash ^= Client.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (GoogleServices != 0) hash ^= GoogleServices.GetHashCode();
      if (Device.Length != 0) hash ^= Device.GetHashCode();
      if (SdkVersion != 0) hash ^= SdkVersion.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (Manufacturer.Length != 0) hash ^= Manufacturer.GetHashCode();
      if (BuildProduct.Length != 0) hash ^= BuildProduct.GetHashCode();
      if (OtaInstalled != false) hash ^= OtaInstalled.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Product.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Product);
      }
      if (Carrier.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Carrier);
      }
      if (Radio.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Radio);
      }
      if (Bootloader.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Bootloader);
      }
      if (Client.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Client);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(Timestamp);
      }
      if (GoogleServices != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(GoogleServices);
      }
      if (Device.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Device);
      }
      if (SdkVersion != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(SdkVersion);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Model);
      }
      if (Manufacturer.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Manufacturer);
      }
      if (BuildProduct.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(BuildProduct);
      }
      if (OtaInstalled != false) {
        output.WriteRawTag(112);
        output.WriteBool(OtaInstalled);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Product.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Product);
      }
      if (Carrier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Carrier);
      }
      if (Radio.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Radio);
      }
      if (Bootloader.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bootloader);
      }
      if (Client.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Client);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (GoogleServices != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoogleServices);
      }
      if (Device.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Device);
      }
      if (SdkVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SdkVersion);
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (Manufacturer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Manufacturer);
      }
      if (BuildProduct.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BuildProduct);
      }
      if (OtaInstalled != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidBuildProto other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Product.Length != 0) {
        Product = other.Product;
      }
      if (other.Carrier.Length != 0) {
        Carrier = other.Carrier;
      }
      if (other.Radio.Length != 0) {
        Radio = other.Radio;
      }
      if (other.Bootloader.Length != 0) {
        Bootloader = other.Bootloader;
      }
      if (other.Client.Length != 0) {
        Client = other.Client;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.GoogleServices != 0) {
        GoogleServices = other.GoogleServices;
      }
      if (other.Device.Length != 0) {
        Device = other.Device;
      }
      if (other.SdkVersion != 0) {
        SdkVersion = other.SdkVersion;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      if (other.Manufacturer.Length != 0) {
        Manufacturer = other.Manufacturer;
      }
      if (other.BuildProduct.Length != 0) {
        BuildProduct = other.BuildProduct;
      }
      if (other.OtaInstalled != false) {
        OtaInstalled = other.OtaInstalled;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Product = input.ReadString();
            break;
          }
          case 26: {
            Carrier = input.ReadString();
            break;
          }
          case 34: {
            Radio = input.ReadString();
            break;
          }
          case 42: {
            Bootloader = input.ReadString();
            break;
          }
          case 50: {
            Client = input.ReadString();
            break;
          }
          case 56: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 64: {
            GoogleServices = input.ReadInt32();
            break;
          }
          case 74: {
            Device = input.ReadString();
            break;
          }
          case 80: {
            SdkVersion = input.ReadInt32();
            break;
          }
          case 90: {
            Model = input.ReadString();
            break;
          }
          case 98: {
            Manufacturer = input.ReadString();
            break;
          }
          case 106: {
            BuildProduct = input.ReadString();
            break;
          }
          case 112: {
            OtaInstalled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AndroidCheckinProto : pb::IMessage<AndroidCheckinProto> {
    private static readonly pb::MessageParser<AndroidCheckinProto> _parser = new pb::MessageParser<AndroidCheckinProto>(() => new AndroidCheckinProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidCheckinProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[144]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidCheckinProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidCheckinProto(AndroidCheckinProto other) : this() {
      Build = other.build_ != null ? other.Build.Clone() : null;
      lastCheckinMsec_ = other.lastCheckinMsec_;
      event_ = other.event_.Clone();
      stat_ = other.stat_.Clone();
      requestedGroup_ = other.requestedGroup_.Clone();
      cellOperator_ = other.cellOperator_;
      simOperator_ = other.simOperator_;
      roaming_ = other.roaming_;
      userNumber_ = other.userNumber_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidCheckinProto Clone() {
      return new AndroidCheckinProto(this);
    }

    /// <summary>Field number for the "build" field.</summary>
    public const int BuildFieldNumber = 1;
    private global::GooglePlayStore.AndroidBuildProto build_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AndroidBuildProto Build {
      get { return build_; }
      set {
        build_ = value;
      }
    }

    /// <summary>Field number for the "lastCheckinMsec" field.</summary>
    public const int LastCheckinMsecFieldNumber = 2;
    private long lastCheckinMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastCheckinMsec {
      get { return lastCheckinMsec_; }
      set {
        lastCheckinMsec_ = value;
      }
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.AndroidEventProto> _repeated_event_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.AndroidEventProto.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.AndroidEventProto> event_ = new pbc::RepeatedField<global::GooglePlayStore.AndroidEventProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.AndroidEventProto> Event {
      get { return event_; }
    }

    /// <summary>Field number for the "stat" field.</summary>
    public const int StatFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.AndroidStatisticProto> _repeated_stat_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.AndroidStatisticProto.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.AndroidStatisticProto> stat_ = new pbc::RepeatedField<global::GooglePlayStore.AndroidStatisticProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.AndroidStatisticProto> Stat {
      get { return stat_; }
    }

    /// <summary>Field number for the "requestedGroup" field.</summary>
    public const int RequestedGroupFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_requestedGroup_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> requestedGroup_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RequestedGroup {
      get { return requestedGroup_; }
    }

    /// <summary>Field number for the "cellOperator" field.</summary>
    public const int CellOperatorFieldNumber = 6;
    private string cellOperator_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CellOperator {
      get { return cellOperator_; }
      set {
        cellOperator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "simOperator" field.</summary>
    public const int SimOperatorFieldNumber = 7;
    private string simOperator_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SimOperator {
      get { return simOperator_; }
      set {
        simOperator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roaming" field.</summary>
    public const int RoamingFieldNumber = 8;
    private string roaming_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Roaming {
      get { return roaming_; }
      set {
        roaming_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userNumber" field.</summary>
    public const int UserNumberFieldNumber = 9;
    private int userNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserNumber {
      get { return userNumber_; }
      set {
        userNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidCheckinProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidCheckinProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Build, other.Build)) return false;
      if (LastCheckinMsec != other.LastCheckinMsec) return false;
      if(!event_.Equals(other.event_)) return false;
      if(!stat_.Equals(other.stat_)) return false;
      if(!requestedGroup_.Equals(other.requestedGroup_)) return false;
      if (CellOperator != other.CellOperator) return false;
      if (SimOperator != other.SimOperator) return false;
      if (Roaming != other.Roaming) return false;
      if (UserNumber != other.UserNumber) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (build_ != null) hash ^= Build.GetHashCode();
      if (LastCheckinMsec != 0L) hash ^= LastCheckinMsec.GetHashCode();
      hash ^= event_.GetHashCode();
      hash ^= stat_.GetHashCode();
      hash ^= requestedGroup_.GetHashCode();
      if (CellOperator.Length != 0) hash ^= CellOperator.GetHashCode();
      if (SimOperator.Length != 0) hash ^= SimOperator.GetHashCode();
      if (Roaming.Length != 0) hash ^= Roaming.GetHashCode();
      if (UserNumber != 0) hash ^= UserNumber.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (build_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Build);
      }
      if (LastCheckinMsec != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LastCheckinMsec);
      }
      event_.WriteTo(output, _repeated_event_codec);
      stat_.WriteTo(output, _repeated_stat_codec);
      requestedGroup_.WriteTo(output, _repeated_requestedGroup_codec);
      if (CellOperator.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CellOperator);
      }
      if (SimOperator.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SimOperator);
      }
      if (Roaming.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Roaming);
      }
      if (UserNumber != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(UserNumber);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (build_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Build);
      }
      if (LastCheckinMsec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastCheckinMsec);
      }
      size += event_.CalculateSize(_repeated_event_codec);
      size += stat_.CalculateSize(_repeated_stat_codec);
      size += requestedGroup_.CalculateSize(_repeated_requestedGroup_codec);
      if (CellOperator.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CellOperator);
      }
      if (SimOperator.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SimOperator);
      }
      if (Roaming.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roaming);
      }
      if (UserNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserNumber);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidCheckinProto other) {
      if (other == null) {
        return;
      }
      if (other.build_ != null) {
        if (build_ == null) {
          build_ = new global::GooglePlayStore.AndroidBuildProto();
        }
        Build.MergeFrom(other.Build);
      }
      if (other.LastCheckinMsec != 0L) {
        LastCheckinMsec = other.LastCheckinMsec;
      }
      event_.Add(other.event_);
      stat_.Add(other.stat_);
      requestedGroup_.Add(other.requestedGroup_);
      if (other.CellOperator.Length != 0) {
        CellOperator = other.CellOperator;
      }
      if (other.SimOperator.Length != 0) {
        SimOperator = other.SimOperator;
      }
      if (other.Roaming.Length != 0) {
        Roaming = other.Roaming;
      }
      if (other.UserNumber != 0) {
        UserNumber = other.UserNumber;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (build_ == null) {
              build_ = new global::GooglePlayStore.AndroidBuildProto();
            }
            input.ReadMessage(build_);
            break;
          }
          case 16: {
            LastCheckinMsec = input.ReadInt64();
            break;
          }
          case 26: {
            event_.AddEntriesFrom(input, _repeated_event_codec);
            break;
          }
          case 34: {
            stat_.AddEntriesFrom(input, _repeated_stat_codec);
            break;
          }
          case 42: {
            requestedGroup_.AddEntriesFrom(input, _repeated_requestedGroup_codec);
            break;
          }
          case 50: {
            CellOperator = input.ReadString();
            break;
          }
          case 58: {
            SimOperator = input.ReadString();
            break;
          }
          case 66: {
            Roaming = input.ReadString();
            break;
          }
          case 72: {
            UserNumber = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AndroidEventProto : pb::IMessage<AndroidEventProto> {
    private static readonly pb::MessageParser<AndroidEventProto> _parser = new pb::MessageParser<AndroidEventProto>(() => new AndroidEventProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidEventProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[145]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidEventProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidEventProto(AndroidEventProto other) : this() {
      tag_ = other.tag_;
      value_ = other.value_;
      timeMsec_ = other.timeMsec_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidEventProto Clone() {
      return new AndroidEventProto(this);
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 1;
    private string tag_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tag {
      get { return tag_; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timeMsec" field.</summary>
    public const int TimeMsecFieldNumber = 3;
    private long timeMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TimeMsec {
      get { return timeMsec_; }
      set {
        timeMsec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidEventProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidEventProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tag != other.Tag) return false;
      if (Value != other.Value) return false;
      if (TimeMsec != other.TimeMsec) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tag.Length != 0) hash ^= Tag.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (TimeMsec != 0L) hash ^= TimeMsec.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tag.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tag);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (TimeMsec != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TimeMsec);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tag);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (TimeMsec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeMsec);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidEventProto other) {
      if (other == null) {
        return;
      }
      if (other.Tag.Length != 0) {
        Tag = other.Tag;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.TimeMsec != 0L) {
        TimeMsec = other.TimeMsec;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Tag = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
          case 24: {
            TimeMsec = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AndroidIntentProto : pb::IMessage<AndroidIntentProto> {
    private static readonly pb::MessageParser<AndroidIntentProto> _parser = new pb::MessageParser<AndroidIntentProto>(() => new AndroidIntentProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidIntentProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[146]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidIntentProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidIntentProto(AndroidIntentProto other) : this() {
      action_ = other.action_;
      dataUri_ = other.dataUri_;
      mimeType_ = other.mimeType_;
      javaClass_ = other.javaClass_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidIntentProto Clone() {
      return new AndroidIntentProto(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private string action_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Action {
      get { return action_; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dataUri" field.</summary>
    public const int DataUriFieldNumber = 2;
    private string dataUri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DataUri {
      get { return dataUri_; }
      set {
        dataUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mimeType" field.</summary>
    public const int MimeTypeFieldNumber = 3;
    private string mimeType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MimeType {
      get { return mimeType_; }
      set {
        mimeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "javaClass" field.</summary>
    public const int JavaClassFieldNumber = 4;
    private string javaClass_ = "";
    /// <summary>
    ///
    ///repeated group Extra = 5 {
    ///string name = 6;
    ///string value = 7;
    ///}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JavaClass {
      get { return javaClass_; }
      set {
        javaClass_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidIntentProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidIntentProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (DataUri != other.DataUri) return false;
      if (MimeType != other.MimeType) return false;
      if (JavaClass != other.JavaClass) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Action.Length != 0) hash ^= Action.GetHashCode();
      if (DataUri.Length != 0) hash ^= DataUri.GetHashCode();
      if (MimeType.Length != 0) hash ^= MimeType.GetHashCode();
      if (JavaClass.Length != 0) hash ^= JavaClass.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Action.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Action);
      }
      if (DataUri.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DataUri);
      }
      if (MimeType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MimeType);
      }
      if (JavaClass.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(JavaClass);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Action.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (DataUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DataUri);
      }
      if (MimeType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MimeType);
      }
      if (JavaClass.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JavaClass);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidIntentProto other) {
      if (other == null) {
        return;
      }
      if (other.Action.Length != 0) {
        Action = other.Action;
      }
      if (other.DataUri.Length != 0) {
        DataUri = other.DataUri;
      }
      if (other.MimeType.Length != 0) {
        MimeType = other.MimeType;
      }
      if (other.JavaClass.Length != 0) {
        JavaClass = other.JavaClass;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Action = input.ReadString();
            break;
          }
          case 18: {
            DataUri = input.ReadString();
            break;
          }
          case 26: {
            MimeType = input.ReadString();
            break;
          }
          case 34: {
            JavaClass = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AndroidStatisticProto : pb::IMessage<AndroidStatisticProto> {
    private static readonly pb::MessageParser<AndroidStatisticProto> _parser = new pb::MessageParser<AndroidStatisticProto>(() => new AndroidStatisticProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidStatisticProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[147]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidStatisticProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidStatisticProto(AndroidStatisticProto other) : this() {
      tag_ = other.tag_;
      count_ = other.count_;
      sum_ = other.sum_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidStatisticProto Clone() {
      return new AndroidStatisticProto(this);
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 1;
    private string tag_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tag {
      get { return tag_; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "sum" field.</summary>
    public const int SumFieldNumber = 3;
    private float sum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Sum {
      get { return sum_; }
      set {
        sum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidStatisticProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidStatisticProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tag != other.Tag) return false;
      if (Count != other.Count) return false;
      if (Sum != other.Sum) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tag.Length != 0) hash ^= Tag.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (Sum != 0F) hash ^= Sum.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tag.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tag);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (Sum != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Sum);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tag);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (Sum != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidStatisticProto other) {
      if (other == null) {
        return;
      }
      if (other.Tag.Length != 0) {
        Tag = other.Tag;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.Sum != 0F) {
        Sum = other.Sum;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Tag = input.ReadString();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 29: {
            Sum = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClientLibraryState : pb::IMessage<ClientLibraryState> {
    private static readonly pb::MessageParser<ClientLibraryState> _parser = new pb::MessageParser<ClientLibraryState>(() => new ClientLibraryState());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientLibraryState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[148]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientLibraryState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientLibraryState(ClientLibraryState other) : this() {
      corpus_ = other.corpus_;
      serverToken_ = other.serverToken_;
      hashCodeSum_ = other.hashCodeSum_;
      librarySize_ = other.librarySize_;
      libraryId_ = other.libraryId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientLibraryState Clone() {
      return new ClientLibraryState(this);
    }

    /// <summary>Field number for the "corpus" field.</summary>
    public const int CorpusFieldNumber = 1;
    private int corpus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Corpus {
      get { return corpus_; }
      set {
        corpus_ = value;
      }
    }

    /// <summary>Field number for the "serverToken" field.</summary>
    public const int ServerTokenFieldNumber = 2;
    private pb::ByteString serverToken_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ServerToken {
      get { return serverToken_; }
      set {
        serverToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hashCodeSum" field.</summary>
    public const int HashCodeSumFieldNumber = 3;
    private long hashCodeSum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HashCodeSum {
      get { return hashCodeSum_; }
      set {
        hashCodeSum_ = value;
      }
    }

    /// <summary>Field number for the "librarySize" field.</summary>
    public const int LibrarySizeFieldNumber = 4;
    private int librarySize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LibrarySize {
      get { return librarySize_; }
      set {
        librarySize_ = value;
      }
    }

    /// <summary>Field number for the "libraryId" field.</summary>
    public const int LibraryIdFieldNumber = 5;
    private string libraryId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LibraryId {
      get { return libraryId_; }
      set {
        libraryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientLibraryState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientLibraryState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Corpus != other.Corpus) return false;
      if (ServerToken != other.ServerToken) return false;
      if (HashCodeSum != other.HashCodeSum) return false;
      if (LibrarySize != other.LibrarySize) return false;
      if (LibraryId != other.LibraryId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Corpus != 0) hash ^= Corpus.GetHashCode();
      if (ServerToken.Length != 0) hash ^= ServerToken.GetHashCode();
      if (HashCodeSum != 0L) hash ^= HashCodeSum.GetHashCode();
      if (LibrarySize != 0) hash ^= LibrarySize.GetHashCode();
      if (LibraryId.Length != 0) hash ^= LibraryId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Corpus != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Corpus);
      }
      if (ServerToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ServerToken);
      }
      if (HashCodeSum != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(HashCodeSum);
      }
      if (LibrarySize != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LibrarySize);
      }
      if (LibraryId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LibraryId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Corpus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Corpus);
      }
      if (ServerToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ServerToken);
      }
      if (HashCodeSum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HashCodeSum);
      }
      if (LibrarySize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LibrarySize);
      }
      if (LibraryId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LibraryId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientLibraryState other) {
      if (other == null) {
        return;
      }
      if (other.Corpus != 0) {
        Corpus = other.Corpus;
      }
      if (other.ServerToken.Length != 0) {
        ServerToken = other.ServerToken;
      }
      if (other.HashCodeSum != 0L) {
        HashCodeSum = other.HashCodeSum;
      }
      if (other.LibrarySize != 0) {
        LibrarySize = other.LibrarySize;
      }
      if (other.LibraryId.Length != 0) {
        LibraryId = other.LibraryId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Corpus = input.ReadInt32();
            break;
          }
          case 18: {
            ServerToken = input.ReadBytes();
            break;
          }
          case 24: {
            HashCodeSum = input.ReadInt64();
            break;
          }
          case 32: {
            LibrarySize = input.ReadInt32();
            break;
          }
          case 42: {
            LibraryId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AndroidDataUsageProto : pb::IMessage<AndroidDataUsageProto> {
    private static readonly pb::MessageParser<AndroidDataUsageProto> _parser = new pb::MessageParser<AndroidDataUsageProto>(() => new AndroidDataUsageProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidDataUsageProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[149]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidDataUsageProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidDataUsageProto(AndroidDataUsageProto other) : this() {
      version_ = other.version_;
      currentReportMsec_ = other.currentReportMsec_;
      keyToPackageNameMapping_ = other.keyToPackageNameMapping_.Clone();
      payloadLevelAppStat_ = other.payloadLevelAppStat_.Clone();
      ipLayerNetworkStat_ = other.ipLayerNetworkStat_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidDataUsageProto Clone() {
      return new AndroidDataUsageProto(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "currentReportMsec" field.</summary>
    public const int CurrentReportMsecFieldNumber = 2;
    private long currentReportMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CurrentReportMsec {
      get { return currentReportMsec_; }
      set {
        currentReportMsec_ = value;
      }
    }

    /// <summary>Field number for the "keyToPackageNameMapping" field.</summary>
    public const int KeyToPackageNameMappingFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.KeyToPackageNameMapping> _repeated_keyToPackageNameMapping_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.KeyToPackageNameMapping.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.KeyToPackageNameMapping> keyToPackageNameMapping_ = new pbc::RepeatedField<global::GooglePlayStore.KeyToPackageNameMapping>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.KeyToPackageNameMapping> KeyToPackageNameMapping {
      get { return keyToPackageNameMapping_; }
    }

    /// <summary>Field number for the "payloadLevelAppStat" field.</summary>
    public const int PayloadLevelAppStatFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.PayloadLevelAppStat> _repeated_payloadLevelAppStat_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.PayloadLevelAppStat.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.PayloadLevelAppStat> payloadLevelAppStat_ = new pbc::RepeatedField<global::GooglePlayStore.PayloadLevelAppStat>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.PayloadLevelAppStat> PayloadLevelAppStat {
      get { return payloadLevelAppStat_; }
    }

    /// <summary>Field number for the "ipLayerNetworkStat" field.</summary>
    public const int IpLayerNetworkStatFieldNumber = 5;
    private static readonly pb::FieldCodec<global::GooglePlayStore.IpLayerNetworkStat> _repeated_ipLayerNetworkStat_codec
        = pb::FieldCodec.ForMessage(42, global::GooglePlayStore.IpLayerNetworkStat.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.IpLayerNetworkStat> ipLayerNetworkStat_ = new pbc::RepeatedField<global::GooglePlayStore.IpLayerNetworkStat>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.IpLayerNetworkStat> IpLayerNetworkStat {
      get { return ipLayerNetworkStat_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidDataUsageProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidDataUsageProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (CurrentReportMsec != other.CurrentReportMsec) return false;
      if(!keyToPackageNameMapping_.Equals(other.keyToPackageNameMapping_)) return false;
      if(!payloadLevelAppStat_.Equals(other.payloadLevelAppStat_)) return false;
      if(!ipLayerNetworkStat_.Equals(other.ipLayerNetworkStat_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      if (CurrentReportMsec != 0L) hash ^= CurrentReportMsec.GetHashCode();
      hash ^= keyToPackageNameMapping_.GetHashCode();
      hash ^= payloadLevelAppStat_.GetHashCode();
      hash ^= ipLayerNetworkStat_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Version);
      }
      if (CurrentReportMsec != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(CurrentReportMsec);
      }
      keyToPackageNameMapping_.WriteTo(output, _repeated_keyToPackageNameMapping_codec);
      payloadLevelAppStat_.WriteTo(output, _repeated_payloadLevelAppStat_codec);
      ipLayerNetworkStat_.WriteTo(output, _repeated_ipLayerNetworkStat_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (CurrentReportMsec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrentReportMsec);
      }
      size += keyToPackageNameMapping_.CalculateSize(_repeated_keyToPackageNameMapping_codec);
      size += payloadLevelAppStat_.CalculateSize(_repeated_payloadLevelAppStat_codec);
      size += ipLayerNetworkStat_.CalculateSize(_repeated_ipLayerNetworkStat_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidDataUsageProto other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.CurrentReportMsec != 0L) {
        CurrentReportMsec = other.CurrentReportMsec;
      }
      keyToPackageNameMapping_.Add(other.keyToPackageNameMapping_);
      payloadLevelAppStat_.Add(other.payloadLevelAppStat_);
      ipLayerNetworkStat_.Add(other.ipLayerNetworkStat_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Version = input.ReadInt32();
            break;
          }
          case 16: {
            CurrentReportMsec = input.ReadInt64();
            break;
          }
          case 26: {
            keyToPackageNameMapping_.AddEntriesFrom(input, _repeated_keyToPackageNameMapping_codec);
            break;
          }
          case 34: {
            payloadLevelAppStat_.AddEntriesFrom(input, _repeated_payloadLevelAppStat_codec);
            break;
          }
          case 42: {
            ipLayerNetworkStat_.AddEntriesFrom(input, _repeated_ipLayerNetworkStat_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AndroidUsageStatsReport : pb::IMessage<AndroidUsageStatsReport> {
    private static readonly pb::MessageParser<AndroidUsageStatsReport> _parser = new pb::MessageParser<AndroidUsageStatsReport>(() => new AndroidUsageStatsReport());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AndroidUsageStatsReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[150]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidUsageStatsReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidUsageStatsReport(AndroidUsageStatsReport other) : this() {
      androidId_ = other.androidId_;
      loggingId_ = other.loggingId_;
      UsageStats = other.usageStats_ != null ? other.UsageStats.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AndroidUsageStatsReport Clone() {
      return new AndroidUsageStatsReport(this);
    }

    /// <summary>Field number for the "androidId" field.</summary>
    public const int AndroidIdFieldNumber = 1;
    private long androidId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AndroidId {
      get { return androidId_; }
      set {
        androidId_ = value;
      }
    }

    /// <summary>Field number for the "loggingId" field.</summary>
    public const int LoggingIdFieldNumber = 2;
    private long loggingId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LoggingId {
      get { return loggingId_; }
      set {
        loggingId_ = value;
      }
    }

    /// <summary>Field number for the "usageStats" field.</summary>
    public const int UsageStatsFieldNumber = 3;
    private global::GooglePlayStore.UsageStatsExtensionProto usageStats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.UsageStatsExtensionProto UsageStats {
      get { return usageStats_; }
      set {
        usageStats_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AndroidUsageStatsReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AndroidUsageStatsReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AndroidId != other.AndroidId) return false;
      if (LoggingId != other.LoggingId) return false;
      if (!object.Equals(UsageStats, other.UsageStats)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AndroidId != 0L) hash ^= AndroidId.GetHashCode();
      if (LoggingId != 0L) hash ^= LoggingId.GetHashCode();
      if (usageStats_ != null) hash ^= UsageStats.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AndroidId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AndroidId);
      }
      if (LoggingId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LoggingId);
      }
      if (usageStats_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UsageStats);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AndroidId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AndroidId);
      }
      if (LoggingId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LoggingId);
      }
      if (usageStats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UsageStats);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AndroidUsageStatsReport other) {
      if (other == null) {
        return;
      }
      if (other.AndroidId != 0L) {
        AndroidId = other.AndroidId;
      }
      if (other.LoggingId != 0L) {
        LoggingId = other.LoggingId;
      }
      if (other.usageStats_ != null) {
        if (usageStats_ == null) {
          usageStats_ = new global::GooglePlayStore.UsageStatsExtensionProto();
        }
        UsageStats.MergeFrom(other.UsageStats);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            AndroidId = input.ReadInt64();
            break;
          }
          case 16: {
            LoggingId = input.ReadInt64();
            break;
          }
          case 26: {
            if (usageStats_ == null) {
              usageStats_ = new global::GooglePlayStore.UsageStatsExtensionProto();
            }
            input.ReadMessage(usageStats_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppBucket : pb::IMessage<AppBucket> {
    private static readonly pb::MessageParser<AppBucket> _parser = new pb::MessageParser<AppBucket>(() => new AppBucket());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppBucket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[151]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppBucket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppBucket(AppBucket other) : this() {
      bucketStartMsec_ = other.bucketStartMsec_;
      bucketDurationMsec_ = other.bucketDurationMsec_;
      statCounters_ = other.statCounters_.Clone();
      operationCount_ = other.operationCount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppBucket Clone() {
      return new AppBucket(this);
    }

    /// <summary>Field number for the "bucketStartMsec" field.</summary>
    public const int BucketStartMsecFieldNumber = 1;
    private long bucketStartMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BucketStartMsec {
      get { return bucketStartMsec_; }
      set {
        bucketStartMsec_ = value;
      }
    }

    /// <summary>Field number for the "bucketDurationMsec" field.</summary>
    public const int BucketDurationMsecFieldNumber = 2;
    private long bucketDurationMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BucketDurationMsec {
      get { return bucketDurationMsec_; }
      set {
        bucketDurationMsec_ = value;
      }
    }

    /// <summary>Field number for the "statCounters" field.</summary>
    public const int StatCountersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.StatCounters> _repeated_statCounters_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.StatCounters.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.StatCounters> statCounters_ = new pbc::RepeatedField<global::GooglePlayStore.StatCounters>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.StatCounters> StatCounters {
      get { return statCounters_; }
    }

    /// <summary>Field number for the "operationCount" field.</summary>
    public const int OperationCountFieldNumber = 4;
    private long operationCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OperationCount {
      get { return operationCount_; }
      set {
        operationCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppBucket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppBucket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BucketStartMsec != other.BucketStartMsec) return false;
      if (BucketDurationMsec != other.BucketDurationMsec) return false;
      if(!statCounters_.Equals(other.statCounters_)) return false;
      if (OperationCount != other.OperationCount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BucketStartMsec != 0L) hash ^= BucketStartMsec.GetHashCode();
      if (BucketDurationMsec != 0L) hash ^= BucketDurationMsec.GetHashCode();
      hash ^= statCounters_.GetHashCode();
      if (OperationCount != 0L) hash ^= OperationCount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BucketStartMsec != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BucketStartMsec);
      }
      if (BucketDurationMsec != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(BucketDurationMsec);
      }
      statCounters_.WriteTo(output, _repeated_statCounters_codec);
      if (OperationCount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(OperationCount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BucketStartMsec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BucketStartMsec);
      }
      if (BucketDurationMsec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BucketDurationMsec);
      }
      size += statCounters_.CalculateSize(_repeated_statCounters_codec);
      if (OperationCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OperationCount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppBucket other) {
      if (other == null) {
        return;
      }
      if (other.BucketStartMsec != 0L) {
        BucketStartMsec = other.BucketStartMsec;
      }
      if (other.BucketDurationMsec != 0L) {
        BucketDurationMsec = other.BucketDurationMsec;
      }
      statCounters_.Add(other.statCounters_);
      if (other.OperationCount != 0L) {
        OperationCount = other.OperationCount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            BucketStartMsec = input.ReadInt64();
            break;
          }
          case 16: {
            BucketDurationMsec = input.ReadInt64();
            break;
          }
          case 26: {
            statCounters_.AddEntriesFrom(input, _repeated_statCounters_codec);
            break;
          }
          case 32: {
            OperationCount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CounterData : pb::IMessage<CounterData> {
    private static readonly pb::MessageParser<CounterData> _parser = new pb::MessageParser<CounterData>(() => new CounterData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CounterData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[152]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CounterData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CounterData(CounterData other) : this() {
      bytes_ = other.bytes_;
      packets_ = other.packets_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CounterData Clone() {
      return new CounterData(this);
    }

    /// <summary>Field number for the "bytes" field.</summary>
    public const int BytesFieldNumber = 1;
    private long bytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Bytes {
      get { return bytes_; }
      set {
        bytes_ = value;
      }
    }

    /// <summary>Field number for the "packets" field.</summary>
    public const int PacketsFieldNumber = 2;
    private long packets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Packets {
      get { return packets_; }
      set {
        packets_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CounterData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CounterData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bytes != other.Bytes) return false;
      if (Packets != other.Packets) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bytes != 0L) hash ^= Bytes.GetHashCode();
      if (Packets != 0L) hash ^= Packets.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Bytes != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Bytes);
      }
      if (Packets != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Packets);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bytes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Bytes);
      }
      if (Packets != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Packets);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CounterData other) {
      if (other == null) {
        return;
      }
      if (other.Bytes != 0L) {
        Bytes = other.Bytes;
      }
      if (other.Packets != 0L) {
        Packets = other.Packets;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Bytes = input.ReadInt64();
            break;
          }
          case 16: {
            Packets = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IpLayerAppStat : pb::IMessage<IpLayerAppStat> {
    private static readonly pb::MessageParser<IpLayerAppStat> _parser = new pb::MessageParser<IpLayerAppStat>(() => new IpLayerAppStat());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IpLayerAppStat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[153]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpLayerAppStat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpLayerAppStat(IpLayerAppStat other) : this() {
      packageKey_ = other.packageKey_;
      applicationTag_ = other.applicationTag_;
      ipLayerAppBucket_ = other.ipLayerAppBucket_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpLayerAppStat Clone() {
      return new IpLayerAppStat(this);
    }

    /// <summary>Field number for the "packageKey" field.</summary>
    public const int PackageKeyFieldNumber = 1;
    private int packageKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackageKey {
      get { return packageKey_; }
      set {
        packageKey_ = value;
      }
    }

    /// <summary>Field number for the "applicationTag" field.</summary>
    public const int ApplicationTagFieldNumber = 2;
    private int applicationTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationTag {
      get { return applicationTag_; }
      set {
        applicationTag_ = value;
      }
    }

    /// <summary>Field number for the "ipLayerAppBucket" field.</summary>
    public const int IpLayerAppBucketFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.AppBucket> _repeated_ipLayerAppBucket_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.AppBucket.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.AppBucket> ipLayerAppBucket_ = new pbc::RepeatedField<global::GooglePlayStore.AppBucket>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.AppBucket> IpLayerAppBucket {
      get { return ipLayerAppBucket_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IpLayerAppStat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IpLayerAppStat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PackageKey != other.PackageKey) return false;
      if (ApplicationTag != other.ApplicationTag) return false;
      if(!ipLayerAppBucket_.Equals(other.ipLayerAppBucket_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PackageKey != 0) hash ^= PackageKey.GetHashCode();
      if (ApplicationTag != 0) hash ^= ApplicationTag.GetHashCode();
      hash ^= ipLayerAppBucket_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PackageKey != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PackageKey);
      }
      if (ApplicationTag != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ApplicationTag);
      }
      ipLayerAppBucket_.WriteTo(output, _repeated_ipLayerAppBucket_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PackageKey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackageKey);
      }
      if (ApplicationTag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationTag);
      }
      size += ipLayerAppBucket_.CalculateSize(_repeated_ipLayerAppBucket_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IpLayerAppStat other) {
      if (other == null) {
        return;
      }
      if (other.PackageKey != 0) {
        PackageKey = other.PackageKey;
      }
      if (other.ApplicationTag != 0) {
        ApplicationTag = other.ApplicationTag;
      }
      ipLayerAppBucket_.Add(other.ipLayerAppBucket_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            PackageKey = input.ReadInt32();
            break;
          }
          case 16: {
            ApplicationTag = input.ReadInt32();
            break;
          }
          case 26: {
            ipLayerAppBucket_.AddEntriesFrom(input, _repeated_ipLayerAppBucket_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class IpLayerNetworkBucket : pb::IMessage<IpLayerNetworkBucket> {
    private static readonly pb::MessageParser<IpLayerNetworkBucket> _parser = new pb::MessageParser<IpLayerNetworkBucket>(() => new IpLayerNetworkBucket());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IpLayerNetworkBucket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[154]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpLayerNetworkBucket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpLayerNetworkBucket(IpLayerNetworkBucket other) : this() {
      bucketStartMsec_ = other.bucketStartMsec_;
      bucketDurationMsec_ = other.bucketDurationMsec_;
      statCounters_ = other.statCounters_.Clone();
      networkActiveDuration_ = other.networkActiveDuration_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpLayerNetworkBucket Clone() {
      return new IpLayerNetworkBucket(this);
    }

    /// <summary>Field number for the "bucketStartMsec" field.</summary>
    public const int BucketStartMsecFieldNumber = 1;
    private long bucketStartMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BucketStartMsec {
      get { return bucketStartMsec_; }
      set {
        bucketStartMsec_ = value;
      }
    }

    /// <summary>Field number for the "bucketDurationMsec" field.</summary>
    public const int BucketDurationMsecFieldNumber = 2;
    private long bucketDurationMsec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BucketDurationMsec {
      get { return bucketDurationMsec_; }
      set {
        bucketDurationMsec_ = value;
      }
    }

    /// <summary>Field number for the "statCounters" field.</summary>
    public const int StatCountersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.StatCounters> _repeated_statCounters_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.StatCounters.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.StatCounters> statCounters_ = new pbc::RepeatedField<global::GooglePlayStore.StatCounters>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.StatCounters> StatCounters {
      get { return statCounters_; }
    }

    /// <summary>Field number for the "networkActiveDuration" field.</summary>
    public const int NetworkActiveDurationFieldNumber = 4;
    private long networkActiveDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetworkActiveDuration {
      get { return networkActiveDuration_; }
      set {
        networkActiveDuration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IpLayerNetworkBucket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IpLayerNetworkBucket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BucketStartMsec != other.BucketStartMsec) return false;
      if (BucketDurationMsec != other.BucketDurationMsec) return false;
      if(!statCounters_.Equals(other.statCounters_)) return false;
      if (NetworkActiveDuration != other.NetworkActiveDuration) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BucketStartMsec != 0L) hash ^= BucketStartMsec.GetHashCode();
      if (BucketDurationMsec != 0L) hash ^= BucketDurationMsec.GetHashCode();
      hash ^= statCounters_.GetHashCode();
      if (NetworkActiveDuration != 0L) hash ^= NetworkActiveDuration.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BucketStartMsec != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BucketStartMsec);
      }
      if (BucketDurationMsec != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(BucketDurationMsec);
      }
      statCounters_.WriteTo(output, _repeated_statCounters_codec);
      if (NetworkActiveDuration != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NetworkActiveDuration);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BucketStartMsec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BucketStartMsec);
      }
      if (BucketDurationMsec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BucketDurationMsec);
      }
      size += statCounters_.CalculateSize(_repeated_statCounters_codec);
      if (NetworkActiveDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetworkActiveDuration);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IpLayerNetworkBucket other) {
      if (other == null) {
        return;
      }
      if (other.BucketStartMsec != 0L) {
        BucketStartMsec = other.BucketStartMsec;
      }
      if (other.BucketDurationMsec != 0L) {
        BucketDurationMsec = other.BucketDurationMsec;
      }
      statCounters_.Add(other.statCounters_);
      if (other.NetworkActiveDuration != 0L) {
        NetworkActiveDuration = other.NetworkActiveDuration;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            BucketStartMsec = input.ReadInt64();
            break;
          }
          case 16: {
            BucketDurationMsec = input.ReadInt64();
            break;
          }
          case 26: {
            statCounters_.AddEntriesFrom(input, _repeated_statCounters_codec);
            break;
          }
          case 32: {
            NetworkActiveDuration = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IpLayerNetworkStat : pb::IMessage<IpLayerNetworkStat> {
    private static readonly pb::MessageParser<IpLayerNetworkStat> _parser = new pb::MessageParser<IpLayerNetworkStat>(() => new IpLayerNetworkStat());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IpLayerNetworkStat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[155]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpLayerNetworkStat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpLayerNetworkStat(IpLayerNetworkStat other) : this() {
      networkDetails_ = other.networkDetails_;
      type_ = other.type_;
      ipLayerNetworkBucket_ = other.ipLayerNetworkBucket_.Clone();
      ipLayerAppStat_ = other.ipLayerAppStat_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IpLayerNetworkStat Clone() {
      return new IpLayerNetworkStat(this);
    }

    /// <summary>Field number for the "networkDetails" field.</summary>
    public const int NetworkDetailsFieldNumber = 1;
    private string networkDetails_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkDetails {
      get { return networkDetails_; }
      set {
        networkDetails_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "ipLayerNetworkBucket" field.</summary>
    public const int IpLayerNetworkBucketFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.IpLayerNetworkBucket> _repeated_ipLayerNetworkBucket_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.IpLayerNetworkBucket.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.IpLayerNetworkBucket> ipLayerNetworkBucket_ = new pbc::RepeatedField<global::GooglePlayStore.IpLayerNetworkBucket>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.IpLayerNetworkBucket> IpLayerNetworkBucket {
      get { return ipLayerNetworkBucket_; }
    }

    /// <summary>Field number for the "ipLayerAppStat" field.</summary>
    public const int IpLayerAppStatFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GooglePlayStore.IpLayerAppStat> _repeated_ipLayerAppStat_codec
        = pb::FieldCodec.ForMessage(34, global::GooglePlayStore.IpLayerAppStat.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.IpLayerAppStat> ipLayerAppStat_ = new pbc::RepeatedField<global::GooglePlayStore.IpLayerAppStat>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.IpLayerAppStat> IpLayerAppStat {
      get { return ipLayerAppStat_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IpLayerNetworkStat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IpLayerNetworkStat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkDetails != other.NetworkDetails) return false;
      if (Type != other.Type) return false;
      if(!ipLayerNetworkBucket_.Equals(other.ipLayerNetworkBucket_)) return false;
      if(!ipLayerAppStat_.Equals(other.ipLayerAppStat_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkDetails.Length != 0) hash ^= NetworkDetails.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      hash ^= ipLayerNetworkBucket_.GetHashCode();
      hash ^= ipLayerAppStat_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkDetails.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetworkDetails);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      ipLayerNetworkBucket_.WriteTo(output, _repeated_ipLayerNetworkBucket_codec);
      ipLayerAppStat_.WriteTo(output, _repeated_ipLayerAppStat_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkDetails.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkDetails);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      size += ipLayerNetworkBucket_.CalculateSize(_repeated_ipLayerNetworkBucket_codec);
      size += ipLayerAppStat_.CalculateSize(_repeated_ipLayerAppStat_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IpLayerNetworkStat other) {
      if (other == null) {
        return;
      }
      if (other.NetworkDetails.Length != 0) {
        NetworkDetails = other.NetworkDetails;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      ipLayerNetworkBucket_.Add(other.ipLayerNetworkBucket_);
      ipLayerAppStat_.Add(other.ipLayerAppStat_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            NetworkDetails = input.ReadString();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 26: {
            ipLayerNetworkBucket_.AddEntriesFrom(input, _repeated_ipLayerNetworkBucket_codec);
            break;
          }
          case 34: {
            ipLayerAppStat_.AddEntriesFrom(input, _repeated_ipLayerAppStat_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class KeyToPackageNameMapping : pb::IMessage<KeyToPackageNameMapping> {
    private static readonly pb::MessageParser<KeyToPackageNameMapping> _parser = new pb::MessageParser<KeyToPackageNameMapping>(() => new KeyToPackageNameMapping());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyToPackageNameMapping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[156]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyToPackageNameMapping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyToPackageNameMapping(KeyToPackageNameMapping other) : this() {
      packageKey_ = other.packageKey_;
      uidName_ = other.uidName_;
      sharedPackageList_ = other.sharedPackageList_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyToPackageNameMapping Clone() {
      return new KeyToPackageNameMapping(this);
    }

    /// <summary>Field number for the "packageKey" field.</summary>
    public const int PackageKeyFieldNumber = 1;
    private int packageKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackageKey {
      get { return packageKey_; }
      set {
        packageKey_ = value;
      }
    }

    /// <summary>Field number for the "uidName" field.</summary>
    public const int UidNameFieldNumber = 2;
    private string uidName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UidName {
      get { return uidName_; }
      set {
        uidName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sharedPackageList" field.</summary>
    public const int SharedPackageListFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.PackageInfo> _repeated_sharedPackageList_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.PackageInfo.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.PackageInfo> sharedPackageList_ = new pbc::RepeatedField<global::GooglePlayStore.PackageInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.PackageInfo> SharedPackageList {
      get { return sharedPackageList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyToPackageNameMapping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyToPackageNameMapping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PackageKey != other.PackageKey) return false;
      if (UidName != other.UidName) return false;
      if(!sharedPackageList_.Equals(other.sharedPackageList_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PackageKey != 0) hash ^= PackageKey.GetHashCode();
      if (UidName.Length != 0) hash ^= UidName.GetHashCode();
      hash ^= sharedPackageList_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PackageKey != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PackageKey);
      }
      if (UidName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UidName);
      }
      sharedPackageList_.WriteTo(output, _repeated_sharedPackageList_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PackageKey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackageKey);
      }
      if (UidName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UidName);
      }
      size += sharedPackageList_.CalculateSize(_repeated_sharedPackageList_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyToPackageNameMapping other) {
      if (other == null) {
        return;
      }
      if (other.PackageKey != 0) {
        PackageKey = other.PackageKey;
      }
      if (other.UidName.Length != 0) {
        UidName = other.UidName;
      }
      sharedPackageList_.Add(other.sharedPackageList_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            PackageKey = input.ReadInt32();
            break;
          }
          case 18: {
            UidName = input.ReadString();
            break;
          }
          case 26: {
            sharedPackageList_.AddEntriesFrom(input, _repeated_sharedPackageList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PackageInfo : pb::IMessage<PackageInfo> {
    private static readonly pb::MessageParser<PackageInfo> _parser = new pb::MessageParser<PackageInfo>(() => new PackageInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PackageInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[157]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageInfo(PackageInfo other) : this() {
      pkgName_ = other.pkgName_;
      versionCode_ = other.versionCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageInfo Clone() {
      return new PackageInfo(this);
    }

    /// <summary>Field number for the "pkgName" field.</summary>
    public const int PkgNameFieldNumber = 1;
    private string pkgName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PkgName {
      get { return pkgName_; }
      set {
        pkgName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "versionCode" field.</summary>
    public const int VersionCodeFieldNumber = 2;
    private int versionCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VersionCode {
      get { return versionCode_; }
      set {
        versionCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PackageInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PackageInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PkgName != other.PkgName) return false;
      if (VersionCode != other.VersionCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PkgName.Length != 0) hash ^= PkgName.GetHashCode();
      if (VersionCode != 0) hash ^= VersionCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PkgName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PkgName);
      }
      if (VersionCode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(VersionCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PkgName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PkgName);
      }
      if (VersionCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VersionCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PackageInfo other) {
      if (other == null) {
        return;
      }
      if (other.PkgName.Length != 0) {
        PkgName = other.PkgName;
      }
      if (other.VersionCode != 0) {
        VersionCode = other.VersionCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            PkgName = input.ReadString();
            break;
          }
          case 16: {
            VersionCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PayloadLevelAppStat : pb::IMessage<PayloadLevelAppStat> {
    private static readonly pb::MessageParser<PayloadLevelAppStat> _parser = new pb::MessageParser<PayloadLevelAppStat>(() => new PayloadLevelAppStat());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PayloadLevelAppStat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[158]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadLevelAppStat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadLevelAppStat(PayloadLevelAppStat other) : this() {
      packageKey_ = other.packageKey_;
      applicationTag_ = other.applicationTag_;
      payloadLevelAppBucket_ = other.payloadLevelAppBucket_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadLevelAppStat Clone() {
      return new PayloadLevelAppStat(this);
    }

    /// <summary>Field number for the "packageKey" field.</summary>
    public const int PackageKeyFieldNumber = 1;
    private int packageKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackageKey {
      get { return packageKey_; }
      set {
        packageKey_ = value;
      }
    }

    /// <summary>Field number for the "applicationTag" field.</summary>
    public const int ApplicationTagFieldNumber = 2;
    private int applicationTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationTag {
      get { return applicationTag_; }
      set {
        applicationTag_ = value;
      }
    }

    /// <summary>Field number for the "payloadLevelAppBucket" field.</summary>
    public const int PayloadLevelAppBucketFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GooglePlayStore.AppBucket> _repeated_payloadLevelAppBucket_codec
        = pb::FieldCodec.ForMessage(26, global::GooglePlayStore.AppBucket.Parser);
    private readonly pbc::RepeatedField<global::GooglePlayStore.AppBucket> payloadLevelAppBucket_ = new pbc::RepeatedField<global::GooglePlayStore.AppBucket>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GooglePlayStore.AppBucket> PayloadLevelAppBucket {
      get { return payloadLevelAppBucket_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PayloadLevelAppStat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PayloadLevelAppStat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PackageKey != other.PackageKey) return false;
      if (ApplicationTag != other.ApplicationTag) return false;
      if(!payloadLevelAppBucket_.Equals(other.payloadLevelAppBucket_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PackageKey != 0) hash ^= PackageKey.GetHashCode();
      if (ApplicationTag != 0) hash ^= ApplicationTag.GetHashCode();
      hash ^= payloadLevelAppBucket_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PackageKey != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PackageKey);
      }
      if (ApplicationTag != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ApplicationTag);
      }
      payloadLevelAppBucket_.WriteTo(output, _repeated_payloadLevelAppBucket_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PackageKey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackageKey);
      }
      if (ApplicationTag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationTag);
      }
      size += payloadLevelAppBucket_.CalculateSize(_repeated_payloadLevelAppBucket_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PayloadLevelAppStat other) {
      if (other == null) {
        return;
      }
      if (other.PackageKey != 0) {
        PackageKey = other.PackageKey;
      }
      if (other.ApplicationTag != 0) {
        ApplicationTag = other.ApplicationTag;
      }
      payloadLevelAppBucket_.Add(other.payloadLevelAppBucket_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            PackageKey = input.ReadInt32();
            break;
          }
          case 16: {
            ApplicationTag = input.ReadInt32();
            break;
          }
          case 26: {
            payloadLevelAppBucket_.AddEntriesFrom(input, _repeated_payloadLevelAppBucket_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StatCounters : pb::IMessage<StatCounters> {
    private static readonly pb::MessageParser<StatCounters> _parser = new pb::MessageParser<StatCounters>(() => new StatCounters());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatCounters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[159]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatCounters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatCounters(StatCounters other) : this() {
      networkProto_ = other.networkProto_;
      direction_ = other.direction_;
      CounterData = other.counterData_ != null ? other.CounterData.Clone() : null;
      fgBg_ = other.fgBg_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatCounters Clone() {
      return new StatCounters(this);
    }

    /// <summary>Field number for the "networkProto" field.</summary>
    public const int NetworkProtoFieldNumber = 1;
    private int networkProto_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NetworkProto {
      get { return networkProto_; }
      set {
        networkProto_ = value;
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 2;
    private int direction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    /// <summary>Field number for the "counterData" field.</summary>
    public const int CounterDataFieldNumber = 3;
    private global::GooglePlayStore.CounterData counterData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.CounterData CounterData {
      get { return counterData_; }
      set {
        counterData_ = value;
      }
    }

    /// <summary>Field number for the "fgBg" field.</summary>
    public const int FgBgFieldNumber = 4;
    private int fgBg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FgBg {
      get { return fgBg_; }
      set {
        fgBg_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatCounters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatCounters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkProto != other.NetworkProto) return false;
      if (Direction != other.Direction) return false;
      if (!object.Equals(CounterData, other.CounterData)) return false;
      if (FgBg != other.FgBg) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkProto != 0) hash ^= NetworkProto.GetHashCode();
      if (Direction != 0) hash ^= Direction.GetHashCode();
      if (counterData_ != null) hash ^= CounterData.GetHashCode();
      if (FgBg != 0) hash ^= FgBg.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkProto != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NetworkProto);
      }
      if (Direction != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Direction);
      }
      if (counterData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CounterData);
      }
      if (FgBg != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FgBg);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkProto != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NetworkProto);
      }
      if (Direction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Direction);
      }
      if (counterData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CounterData);
      }
      if (FgBg != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FgBg);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatCounters other) {
      if (other == null) {
        return;
      }
      if (other.NetworkProto != 0) {
        NetworkProto = other.NetworkProto;
      }
      if (other.Direction != 0) {
        Direction = other.Direction;
      }
      if (other.counterData_ != null) {
        if (counterData_ == null) {
          counterData_ = new global::GooglePlayStore.CounterData();
        }
        CounterData.MergeFrom(other.CounterData);
      }
      if (other.FgBg != 0) {
        FgBg = other.FgBg;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            NetworkProto = input.ReadInt32();
            break;
          }
          case 16: {
            Direction = input.ReadInt32();
            break;
          }
          case 26: {
            if (counterData_ == null) {
              counterData_ = new global::GooglePlayStore.CounterData();
            }
            input.ReadMessage(counterData_);
            break;
          }
          case 32: {
            FgBg = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UsageStatsExtensionProto : pb::IMessage<UsageStatsExtensionProto> {
    private static readonly pb::MessageParser<UsageStatsExtensionProto> _parser = new pb::MessageParser<UsageStatsExtensionProto>(() => new UsageStatsExtensionProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UsageStatsExtensionProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GooglePlayStore.GooglePlayReflection.Descriptor.MessageTypes[160]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsageStatsExtensionProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsageStatsExtensionProto(UsageStatsExtensionProto other) : this() {
      DataUsage = other.dataUsage_ != null ? other.DataUsage.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsageStatsExtensionProto Clone() {
      return new UsageStatsExtensionProto(this);
    }

    /// <summary>Field number for the "dataUsage" field.</summary>
    public const int DataUsageFieldNumber = 1;
    private global::GooglePlayStore.AndroidDataUsageProto dataUsage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GooglePlayStore.AndroidDataUsageProto DataUsage {
      get { return dataUsage_; }
      set {
        dataUsage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UsageStatsExtensionProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UsageStatsExtensionProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DataUsage, other.DataUsage)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dataUsage_ != null) hash ^= DataUsage.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dataUsage_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DataUsage);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dataUsage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataUsage);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UsageStatsExtensionProto other) {
      if (other == null) {
        return;
      }
      if (other.dataUsage_ != null) {
        if (dataUsage_ == null) {
          dataUsage_ = new global::GooglePlayStore.AndroidDataUsageProto();
        }
        DataUsage.MergeFrom(other.DataUsage);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (dataUsage_ == null) {
              dataUsage_ = new global::GooglePlayStore.AndroidDataUsageProto();
            }
            input.ReadMessage(dataUsage_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
